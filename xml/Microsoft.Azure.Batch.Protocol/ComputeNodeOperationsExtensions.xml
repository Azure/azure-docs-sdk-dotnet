<Type Name="ComputeNodeOperationsExtensions" FullName="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class ComputeNodeOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ComputeNodeOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ComputeNodeOperationsExtensions" />
  <TypeSignature Language="F#" Value="type ComputeNodeOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for ComputeNodeOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddUser">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders AddUser (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders AddUser(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddUser (operations As IComputeNodeOperations, poolId As String, nodeId As String, user As ComputeNodeUser, Optional computeNodeAddUserOptions As ComputeNodeAddUserOptions = Nothing) As ComputeNodeAddUserHeaders" />
      <MemberSignature Language="F#" Value="static member AddUser : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser (operations, poolId, nodeId, user, computeNodeAddUserOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="user" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser" />
        <Parameter Name="computeNodeAddUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the machine on which you want to create a user Account.
            </param>
        <param name="user">
            The user Account to be created.
            </param>
        <param name="computeNodeAddUserOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Adds a user Account to the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can add a user Account to a Compute Node only when it is in the idle or
            running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt; AddUserAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt; AddUserAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddUserAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, user As ComputeNodeUser, Optional computeNodeAddUserOptions As ComputeNodeAddUserOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeAddUserHeaders)" />
      <MemberSignature Language="F#" Value="static member AddUserAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync (operations, poolId, nodeId, user, computeNodeAddUserOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="user" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser" />
        <Parameter Name="computeNodeAddUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the machine on which you want to create a user Account.
            </param>
        <param name="user">
            The user Account to be created.
            </param>
        <param name="computeNodeAddUserOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Adds a user Account to the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can add a user Account to a Compute Node only when it is in the idle or
            running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders DeleteUser (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders DeleteUser(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DeleteUser (operations As IComputeNodeOperations, poolId As String, nodeId As String, userName As String, Optional computeNodeDeleteUserOptions As ComputeNodeDeleteUserOptions = Nothing) As ComputeNodeDeleteUserHeaders" />
      <MemberSignature Language="F#" Value="static member DeleteUser : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser (operations, poolId, nodeId, userName, computeNodeDeleteUserOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="computeNodeDeleteUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the machine on which you want to delete a user Account.
            </param>
        <param name="userName">
            The name of the user Account to delete.
            </param>
        <param name="computeNodeDeleteUserOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Deletes a user Account from the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can delete a user Account to a Compute Node only when it is in the idle
            or running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt; DeleteUserAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt; DeleteUserAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DeleteUserAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, userName As String, Optional computeNodeDeleteUserOptions As ComputeNodeDeleteUserOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeDeleteUserHeaders)" />
      <MemberSignature Language="F#" Value="static member DeleteUserAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync (operations, poolId, nodeId, userName, computeNodeDeleteUserOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="computeNodeDeleteUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the machine on which you want to delete a user Account.
            </param>
        <param name="userName">
            The name of the user Account to delete.
            </param>
        <param name="computeNodeDeleteUserOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes a user Account from the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can delete a user Account to a Compute Node only when it is in the idle
            or running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableScheduling">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders DisableScheduling (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption? nodeDisableSchedulingOption = default, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders DisableScheduling(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; nodeDisableSchedulingOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisableScheduling (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional nodeDisableSchedulingOption As Nullable(Of DisableComputeNodeSchedulingOption) = Nothing, Optional computeNodeDisableSchedulingOptions As ComputeNodeDisableSchedulingOptions = Nothing) As ComputeNodeDisableSchedulingHeaders" />
      <MemberSignature Language="F#" Value="static member DisableScheduling : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableScheduling (operations, poolId, nodeId, nodeDisableSchedulingOption, computeNodeDisableSchedulingOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="nodeDisableSchedulingOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt;" />
        <Parameter Name="computeNodeDisableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node on which you want to disable Task scheduling.
            </param>
        <param name="nodeDisableSchedulingOption">
            What to do with currently running Tasks when disabling Task scheduling on
            the Compute Node. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskCompletion'
            </param>
        <param name="computeNodeDisableSchedulingOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Disables Task scheduling on the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can disable Task scheduling on a Compute Node only if its current
            scheduling state is enabled.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableSchedulingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt; DisableSchedulingAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption? nodeDisableSchedulingOption = default, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt; DisableSchedulingAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; nodeDisableSchedulingOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisableSchedulingAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional nodeDisableSchedulingOption As Nullable(Of DisableComputeNodeSchedulingOption) = Nothing, Optional computeNodeDisableSchedulingOptions As ComputeNodeDisableSchedulingOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeDisableSchedulingHeaders)" />
      <MemberSignature Language="F#" Value="static member DisableSchedulingAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableSchedulingAsync (operations, poolId, nodeId, nodeDisableSchedulingOption, computeNodeDisableSchedulingOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="nodeDisableSchedulingOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt;" />
        <Parameter Name="computeNodeDisableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node on which you want to disable Task scheduling.
            </param>
        <param name="nodeDisableSchedulingOption">
            What to do with currently running Tasks when disabling Task scheduling on
            the Compute Node. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskCompletion'
            </param>
        <param name="computeNodeDisableSchedulingOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Disables Task scheduling on the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can disable Task scheduling on a Compute Node only if its current
            scheduling state is enabled.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableScheduling">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders EnableScheduling (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders EnableScheduling(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnableScheduling (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeEnableSchedulingOptions As ComputeNodeEnableSchedulingOptions = Nothing) As ComputeNodeEnableSchedulingHeaders" />
      <MemberSignature Language="F#" Value="static member EnableScheduling : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableScheduling (operations, poolId, nodeId, computeNodeEnableSchedulingOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeEnableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node on which you want to enable Task scheduling.
            </param>
        <param name="computeNodeEnableSchedulingOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Enables Task scheduling on the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can enable Task scheduling on a Compute Node only if its current
            scheduling state is disabled
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSchedulingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt; EnableSchedulingAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt; EnableSchedulingAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnableSchedulingAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeEnableSchedulingOptions As ComputeNodeEnableSchedulingOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeEnableSchedulingHeaders)" />
      <MemberSignature Language="F#" Value="static member EnableSchedulingAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableSchedulingAsync (operations, poolId, nodeId, computeNodeEnableSchedulingOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeEnableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node on which you want to enable Task scheduling.
            </param>
        <param name="computeNodeEnableSchedulingOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Enables Task scheduling on the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can enable Task scheduling on a Compute Node only if its current
            scheduling state is disabled
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNode Get (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNode Get(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeGetOptions As ComputeNodeGetOptions = Nothing) As ComputeNode" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNode" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get (operations, poolId, nodeId, computeNodeGetOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node that you want to get information about.
            </param>
        <param name="computeNodeGetOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Gets information about the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeGetOptions As ComputeNodeGetOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNode)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync (operations, poolId, nodeId, computeNodeGetOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node that you want to get information about.
            </param>
        <param name="computeNodeGetOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets information about the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteDesktop">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetRemoteDesktop (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetRemoteDesktop(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRemoteDesktop (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeGetRemoteDesktopOptions As ComputeNodeGetRemoteDesktopOptions = Nothing) As Stream" />
      <MemberSignature Language="F#" Value="static member GetRemoteDesktop : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions -&gt; System.IO.Stream" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop (operations, poolId, nodeId, computeNodeGetRemoteDesktopOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeGetRemoteDesktopOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node for which you want to get the Remote Desktop
            Protocol file.
            </param>
        <param name="computeNodeGetRemoteDesktopOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Gets the Remote Desktop Protocol file for the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Before you can access a Compute Node by using the RDP file, you must create
            a user Account on the Compute Node. This API can only be invoked on Pools
            created with a cloud service configuration. For Pools created with a
            virtual machine configuration, see the GetRemoteLoginSettings API.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteDesktopAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRemoteDesktopAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRemoteDesktopAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRemoteDesktopAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeGetRemoteDesktopOptions As ComputeNodeGetRemoteDesktopOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="static member GetRemoteDesktopAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync (operations, poolId, nodeId, computeNodeGetRemoteDesktopOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeGetRemoteDesktopOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node for which you want to get the Remote Desktop
            Protocol file.
            </param>
        <param name="computeNodeGetRemoteDesktopOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the Remote Desktop Protocol file for the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Before you can access a Compute Node by using the RDP file, you must create
            a user Account on the Compute Node. This API can only be invoked on Pools
            created with a cloud service configuration. For Pools created with a
            virtual machine configuration, see the GetRemoteLoginSettings API.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteLoginSettings">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult GetRemoteLoginSettings (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult GetRemoteLoginSettings(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettings(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRemoteLoginSettings (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeGetRemoteLoginSettingsOptions As ComputeNodeGetRemoteLoginSettingsOptions = Nothing) As ComputeNodeGetRemoteLoginSettingsResult" />
      <MemberSignature Language="F#" Value="static member GetRemoteLoginSettings : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettings (operations, poolId, nodeId, computeNodeGetRemoteLoginSettingsOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeGetRemoteLoginSettingsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node for which to obtain the remote login settings.
            </param>
        <param name="computeNodeGetRemoteLoginSettingsOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Gets the settings required for remote login to a Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Before you can remotely login to a Compute Node using the remote login
            settings, you must create a user Account on the Compute Node. This API can
            be invoked only on Pools created with the virtual machine configuration
            property. For Pools created with a cloud service configuration, see the
            GetRemoteDesktop API.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteLoginSettingsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt; GetRemoteLoginSettingsAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt; GetRemoteLoginSettingsAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettingsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRemoteLoginSettingsAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional computeNodeGetRemoteLoginSettingsOptions As ComputeNodeGetRemoteLoginSettingsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeGetRemoteLoginSettingsResult)" />
      <MemberSignature Language="F#" Value="static member GetRemoteLoginSettingsAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettingsAsync (operations, poolId, nodeId, computeNodeGetRemoteLoginSettingsOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="computeNodeGetRemoteLoginSettingsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node for which to obtain the remote login settings.
            </param>
        <param name="computeNodeGetRemoteLoginSettingsOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the settings required for remote login to a Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Before you can remotely login to a Compute Node using the remote login
            settings, you must create a user Account on the Compute Node. This API can
            be invoked only on Pools created with the virtual machine configuration
            property. For Pools created with a cloud service configuration, see the
            GetRemoteDesktop API.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; List (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; List(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function List (operations As IComputeNodeOperations, poolId As String, Optional computeNodeListOptions As ComputeNodeListOptions = Nothing) As IPage(Of ComputeNode)" />
      <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List (operations, poolId, computeNodeListOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="computeNodeListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool from which you want to list Compute Nodes.
            </param>
        <param name="computeNodeListOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Lists the Compute Nodes in the specified Pool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListAsync (operations As IComputeNodeOperations, poolId As String, Optional computeNodeListOptions As ComputeNodeListOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of ComputeNode))" />
      <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync (operations, poolId, computeNodeListOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="computeNodeListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool from which you want to list Compute Nodes.
            </param>
        <param name="computeNodeListOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists the Compute Nodes in the specified Pool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNext">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; ListNext (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; ListNext(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListNext (operations As IComputeNodeOperations, nextPageLink As String, Optional computeNodeListNextOptions As ComputeNodeListNextOptions = Nothing) As IPage(Of ComputeNode)" />
      <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext (operations, nextPageLink, computeNodeListNextOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="computeNodeListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="computeNodeListNextOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Lists the Compute Nodes in the specified Pool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListNextAsync (operations As IComputeNodeOperations, nextPageLink As String, Optional computeNodeListNextOptions As ComputeNodeListNextOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of ComputeNode))" />
      <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync (operations, nextPageLink, computeNodeListNextOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="computeNodeListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="computeNodeListNextOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists the Compute Nodes in the specified Pool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reboot">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders Reboot (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption? nodeRebootOption = default, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders Reboot(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; nodeRebootOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reboot (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional nodeRebootOption As Nullable(Of ComputeNodeRebootOption) = Nothing, Optional computeNodeRebootOptions As ComputeNodeRebootOptions = Nothing) As ComputeNodeRebootHeaders" />
      <MemberSignature Language="F#" Value="static member Reboot : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot (operations, poolId, nodeId, nodeRebootOption, computeNodeRebootOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="nodeRebootOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt;" />
        <Parameter Name="computeNodeRebootOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node that you want to restart.
            </param>
        <param name="nodeRebootOption">
            When to reboot the Compute Node and what to do with currently running
            Tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
        <param name="computeNodeRebootOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Restarts the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can restart a Compute Node only if it is in an idle or running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RebootAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt; RebootAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption? nodeRebootOption = default, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt; RebootAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; nodeRebootOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RebootAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional nodeRebootOption As Nullable(Of ComputeNodeRebootOption) = Nothing, Optional computeNodeRebootOptions As ComputeNodeRebootOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeRebootHeaders)" />
      <MemberSignature Language="F#" Value="static member RebootAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync (operations, poolId, nodeId, nodeRebootOption, computeNodeRebootOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="nodeRebootOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt;" />
        <Parameter Name="computeNodeRebootOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node that you want to restart.
            </param>
        <param name="nodeRebootOption">
            When to reboot the Compute Node and what to do with currently running
            Tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
        <param name="computeNodeRebootOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Restarts the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can restart a Compute Node only if it is in an idle or running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reimage">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders Reimage (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption? nodeReimageOption = default, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders Reimage(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reimage (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional nodeReimageOption As Nullable(Of ComputeNodeReimageOption) = Nothing, Optional computeNodeReimageOptions As ComputeNodeReimageOptions = Nothing) As ComputeNodeReimageHeaders" />
      <MemberSignature Language="F#" Value="static member Reimage : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage (operations, poolId, nodeId, nodeReimageOption, computeNodeReimageOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="nodeReimageOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt;" />
        <Parameter Name="computeNodeReimageOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node that you want to restart.
            </param>
        <param name="nodeReimageOption">
            When to reimage the Compute Node and what to do with currently running
            Tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
        <param name="computeNodeReimageOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Reinstalls the operating system on the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can reinstall the operating system on a Compute Node only if it is in
            an idle or running state. This API can be invoked only on Pools created
            with the cloud service configuration property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReimageAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt; ReimageAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption? nodeReimageOption = default, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt; ReimageAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReimageAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, Optional nodeReimageOption As Nullable(Of ComputeNodeReimageOption) = Nothing, Optional computeNodeReimageOptions As ComputeNodeReimageOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeReimageHeaders)" />
      <MemberSignature Language="F#" Value="static member ReimageAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync (operations, poolId, nodeId, nodeReimageOption, computeNodeReimageOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="nodeReimageOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt;" />
        <Parameter Name="computeNodeReimageOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node that you want to restart.
            </param>
        <param name="nodeReimageOption">
            When to reimage the Compute Node and what to do with currently running
            Tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
        <param name="computeNodeReimageOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Reinstalls the operating system on the specified Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            You can reinstall the operating system on a Compute Node only if it is in
            an idle or running state. This API can be invoked only on Pools created
            with the cloud service configuration property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders UpdateUser (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders UpdateUser(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UpdateUser (operations As IComputeNodeOperations, poolId As String, nodeId As String, userName As String, nodeUpdateUserParameter As NodeUpdateUserParameter, Optional computeNodeUpdateUserOptions As ComputeNodeUpdateUserOptions = Nothing) As ComputeNodeUpdateUserHeaders" />
      <MemberSignature Language="F#" Value="static member UpdateUser : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser (operations, poolId, nodeId, userName, nodeUpdateUserParameter, computeNodeUpdateUserOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="nodeUpdateUserParameter" Type="Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter" />
        <Parameter Name="computeNodeUpdateUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the machine on which you want to update a user Account.
            </param>
        <param name="userName">
            The name of the user Account to update.
            </param>
        <param name="nodeUpdateUserParameter">
            The parameters for the request.
            </param>
        <param name="computeNodeUpdateUserOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Updates the password and expiration time of a user Account on the specified
            Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation replaces of all the updatable properties of the Account. For
            example, if the expiryTime element is not specified, the current value is
            replaced with the default value, not left unmodified. You can update a user
            Account on a Compute Node only when it is in the idle or running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUserAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt; UpdateUserAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt; UpdateUserAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UpdateUserAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, userName As String, nodeUpdateUserParameter As NodeUpdateUserParameter, Optional computeNodeUpdateUserOptions As ComputeNodeUpdateUserOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNodeUpdateUserHeaders)" />
      <MemberSignature Language="F#" Value="static member UpdateUserAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync (operations, poolId, nodeId, userName, nodeUpdateUserParameter, computeNodeUpdateUserOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="nodeUpdateUserParameter" Type="Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter" />
        <Parameter Name="computeNodeUpdateUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the machine on which you want to update a user Account.
            </param>
        <param name="userName">
            The name of the user Account to update.
            </param>
        <param name="nodeUpdateUserParameter">
            The parameters for the request.
            </param>
        <param name="computeNodeUpdateUserOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Updates the password and expiration time of a user Account on the specified
            Compute Node.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation replaces of all the updatable properties of the Account. For
            example, if the expiryTime element is not specified, the current value is
            replaced with the default value, not left unmodified. You can update a user
            Account on a Compute Node only when it is in the idle or running state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadBatchServiceLogs">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult UploadBatchServiceLogs (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult UploadBatchServiceLogs(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogs(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UploadBatchServiceLogs (operations As IComputeNodeOperations, poolId As String, nodeId As String, uploadBatchServiceLogsConfiguration As UploadBatchServiceLogsConfiguration, Optional computeNodeUploadBatchServiceLogsOptions As ComputeNodeUploadBatchServiceLogsOptions = Nothing) As UploadBatchServiceLogsResult" />
      <MemberSignature Language="F#" Value="static member UploadBatchServiceLogs : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogs (operations, poolId, nodeId, uploadBatchServiceLogsConfiguration, computeNodeUploadBatchServiceLogsOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="uploadBatchServiceLogsConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration" />
        <Parameter Name="computeNodeUploadBatchServiceLogsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node from which you want to upload the Azure Batch
            service log files.
            </param>
        <param name="uploadBatchServiceLogsConfiguration">
            The Azure Batch service log files upload configuration.
            </param>
        <param name="computeNodeUploadBatchServiceLogsOptions">
            Additional parameters for the operation
            </param>
        <summary>
            Upload Azure Batch service log files from the specified Compute Node to
            Azure Blob Storage.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This is for gathering Azure Batch service log files in an automated fashion
            from Compute Nodes if you are experiencing an error and wish to escalate to
            Azure support. The Azure Batch service log files should be shared with
            Azure support to aid in debugging issues with the Batch service.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadBatchServiceLogsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt; UploadBatchServiceLogsAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt; UploadBatchServiceLogsAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UploadBatchServiceLogsAsync (operations As IComputeNodeOperations, poolId As String, nodeId As String, uploadBatchServiceLogsConfiguration As UploadBatchServiceLogsConfiguration, Optional computeNodeUploadBatchServiceLogsOptions As ComputeNodeUploadBatchServiceLogsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of UploadBatchServiceLogsResult)" />
      <MemberSignature Language="F#" Value="static member UploadBatchServiceLogsAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogsAsync (operations, poolId, nodeId, uploadBatchServiceLogsConfiguration, computeNodeUploadBatchServiceLogsOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
        <Parameter Name="poolId" Type="System.String" />
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="uploadBatchServiceLogsConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration" />
        <Parameter Name="computeNodeUploadBatchServiceLogsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="poolId">
            The ID of the Pool that contains the Compute Node.
            </param>
        <param name="nodeId">
            The ID of the Compute Node from which you want to upload the Azure Batch
            service log files.
            </param>
        <param name="uploadBatchServiceLogsConfiguration">
            The Azure Batch service log files upload configuration.
            </param>
        <param name="computeNodeUploadBatchServiceLogsOptions">
            Additional parameters for the operation
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Upload Azure Batch service log files from the specified Compute Node to
            Azure Blob Storage.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This is for gathering Azure Batch service log files in an automated fashion
            from Compute Nodes if you are experiencing an error and wish to escalate to
            Azure support. The Azure Batch service log files should be shared with
            Azure support to aid in debugging issues with the Batch service.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
