<Type Name="MockableOracleDatabaseArmClient" FullName="Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient">
  <TypeSignature Language="C#" Value="public class MockableOracleDatabaseArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableOracleDatabaseArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableOracleDatabaseArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableOracleDatabaseArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableOracleDatabaseArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDatabaseBackupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource GetAutonomousDatabaseBackupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource GetAutonomousDatabaseBackupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetAutonomousDatabaseBackupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDatabaseBackupResource (id As ResourceIdentifier) As AutonomousDatabaseBackupResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDatabaseBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource&#xA;override this.GetAutonomousDatabaseBackupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource" Usage="mockableOracleDatabaseArmClient.GetAutonomousDatabaseBackupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseBackupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDatabaseCharacterSetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource GetAutonomousDatabaseCharacterSetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource GetAutonomousDatabaseCharacterSetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetAutonomousDatabaseCharacterSetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDatabaseCharacterSetResource (id As ResourceIdentifier) As AutonomousDatabaseCharacterSetResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDatabaseCharacterSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource&#xA;override this.GetAutonomousDatabaseCharacterSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource" Usage="mockableOracleDatabaseArmClient.GetAutonomousDatabaseCharacterSetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCharacterSetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDatabaseNationalCharacterSetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource GetAutonomousDatabaseNationalCharacterSetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource GetAutonomousDatabaseNationalCharacterSetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetAutonomousDatabaseNationalCharacterSetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDatabaseNationalCharacterSetResource (id As ResourceIdentifier) As AutonomousDatabaseNationalCharacterSetResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDatabaseNationalCharacterSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource&#xA;override this.GetAutonomousDatabaseNationalCharacterSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource" Usage="mockableOracleDatabaseArmClient.GetAutonomousDatabaseNationalCharacterSetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseNationalCharacterSetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource GetAutonomousDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource GetAutonomousDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetAutonomousDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDatabaseResource (id As ResourceIdentifier) As AutonomousDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&#xA;override this.GetAutonomousDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource" Usage="mockableOracleDatabaseArmClient.GetAutonomousDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDbVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource GetAutonomousDbVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource GetAutonomousDbVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetAutonomousDbVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDbVersionResource (id As ResourceIdentifier) As AutonomousDbVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDbVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource&#xA;override this.GetAutonomousDbVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource" Usage="mockableOracleDatabaseArmClient.GetAutonomousDbVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDbVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDBVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource GetAutonomousDBVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource GetAutonomousDBVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetAutonomousDBVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDBVersionResource (id As ResourceIdentifier) As AutonomousDBVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDBVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource&#xA;override this.GetAutonomousDBVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource" Usage="mockableOracleDatabaseArmClient.GetAutonomousDBVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDBVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudExadataInfrastructureResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource GetCloudExadataInfrastructureResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource GetCloudExadataInfrastructureResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetCloudExadataInfrastructureResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudExadataInfrastructureResource (id As ResourceIdentifier) As CloudExadataInfrastructureResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudExadataInfrastructureResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&#xA;override this.GetCloudExadataInfrastructureResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource" Usage="mockableOracleDatabaseArmClient.GetCloudExadataInfrastructureResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterDBNodeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource GetCloudVmClusterDBNodeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource GetCloudVmClusterDBNodeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetCloudVmClusterDBNodeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterDBNodeResource (id As ResourceIdentifier) As CloudVmClusterDBNodeResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterDBNodeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource&#xA;override this.GetCloudVmClusterDBNodeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource" Usage="mockableOracleDatabaseArmClient.GetCloudVmClusterDBNodeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterDBNodeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudVmClusterResource GetCloudVmClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource GetCloudVmClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetCloudVmClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterResource (id As ResourceIdentifier) As CloudVmClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&#xA;override this.GetCloudVmClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" Usage="mockableOracleDatabaseArmClient.GetCloudVmClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterVirtualNetworkAddressResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource GetCloudVmClusterVirtualNetworkAddressResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource GetCloudVmClusterVirtualNetworkAddressResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetCloudVmClusterVirtualNetworkAddressResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterVirtualNetworkAddressResource (id As ResourceIdentifier) As CloudVmClusterVirtualNetworkAddressResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterVirtualNetworkAddressResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource&#xA;override this.GetCloudVmClusterVirtualNetworkAddressResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource" Usage="mockableOracleDatabaseArmClient.GetCloudVmClusterVirtualNetworkAddressResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterVirtualNetworkAddressResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbNodeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.DbNodeResource GetDbNodeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.DbNodeResource GetDbNodeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetDbNodeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDbNodeResource (id As ResourceIdentifier) As DbNodeResource" />
      <MemberSignature Language="F#" Value="abstract member GetDbNodeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DbNodeResource&#xA;override this.GetDbNodeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DbNodeResource" Usage="mockableOracleDatabaseArmClient.GetDbNodeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.DbNodeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.DbNodeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.DbNodeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.DbNodeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.DbNodeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.DbServerResource GetDbServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.DbServerResource GetDbServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetDbServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDbServerResource (id As ResourceIdentifier) As DbServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetDbServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DbServerResource&#xA;override this.GetDbServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DbServerResource" Usage="mockableOracleDatabaseArmClient.GetDbServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.DbServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.DbServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.DbServerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.DbServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.DbServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbSystemShapeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.DbSystemShapeResource GetDbSystemShapeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.DbSystemShapeResource GetDbSystemShapeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetDbSystemShapeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDbSystemShapeResource (id As ResourceIdentifier) As DbSystemShapeResource" />
      <MemberSignature Language="F#" Value="abstract member GetDbSystemShapeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DbSystemShapeResource&#xA;override this.GetDbSystemShapeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DbSystemShapeResource" Usage="mockableOracleDatabaseArmClient.GetDbSystemShapeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.DbSystemShapeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.DbSystemShapeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.DbSystemShapeResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.DbSystemShapeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.DbSystemShapeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsPrivateViewResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource GetDnsPrivateViewResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource GetDnsPrivateViewResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetDnsPrivateViewResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsPrivateViewResource (id As ResourceIdentifier) As DnsPrivateViewResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsPrivateViewResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource&#xA;override this.GetDnsPrivateViewResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource" Usage="mockableOracleDatabaseArmClient.GetDnsPrivateViewResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.DnsPrivateViewResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsPrivateZoneResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource GetDnsPrivateZoneResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource GetDnsPrivateZoneResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetDnsPrivateZoneResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsPrivateZoneResource (id As ResourceIdentifier) As DnsPrivateZoneResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsPrivateZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource&#xA;override this.GetDnsPrivateZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource" Usage="mockableOracleDatabaseArmClient.GetDnsPrivateZoneResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.DnsPrivateZoneResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGiVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.GiVersionResource GetGiVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.GiVersionResource GetGiVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetGiVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGiVersionResource (id As ResourceIdentifier) As GiVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetGiVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.GiVersionResource&#xA;override this.GetGiVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.GiVersionResource" Usage="mockableOracleDatabaseArmClient.GetGiVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.GiVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.GiVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.GiVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.GiVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.GiVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDBServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.OracleDBServerResource GetOracleDBServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.OracleDBServerResource GetOracleDBServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetOracleDBServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOracleDBServerResource (id As ResourceIdentifier) As OracleDBServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetOracleDBServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDBServerResource&#xA;override this.GetOracleDBServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDBServerResource" Usage="mockableOracleDatabaseArmClient.GetOracleDBServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.OracleDBServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDBServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.OracleDBServerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDBServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDBServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDBSystemShapeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource GetOracleDBSystemShapeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource GetOracleDBSystemShapeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetOracleDBSystemShapeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOracleDBSystemShapeResource (id As ResourceIdentifier) As OracleDBSystemShapeResource" />
      <MemberSignature Language="F#" Value="abstract member GetOracleDBSystemShapeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource&#xA;override this.GetOracleDBSystemShapeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource" Usage="mockableOracleDatabaseArmClient.GetOracleDBSystemShapeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDBSystemShapeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDnsPrivateViewResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource GetOracleDnsPrivateViewResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource GetOracleDnsPrivateViewResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetOracleDnsPrivateViewResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOracleDnsPrivateViewResource (id As ResourceIdentifier) As OracleDnsPrivateViewResource" />
      <MemberSignature Language="F#" Value="abstract member GetOracleDnsPrivateViewResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource&#xA;override this.GetOracleDnsPrivateViewResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource" Usage="mockableOracleDatabaseArmClient.GetOracleDnsPrivateViewResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateViewResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDnsPrivateZoneResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource GetOracleDnsPrivateZoneResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource GetOracleDnsPrivateZoneResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetOracleDnsPrivateZoneResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOracleDnsPrivateZoneResource (id As ResourceIdentifier) As OracleDnsPrivateZoneResource" />
      <MemberSignature Language="F#" Value="abstract member GetOracleDnsPrivateZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource&#xA;override this.GetOracleDnsPrivateZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource" Usage="mockableOracleDatabaseArmClient.GetOracleDnsPrivateZoneResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.OracleDnsPrivateZoneResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleGIVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.OracleGIVersionResource GetOracleGIVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.OracleGIVersionResource GetOracleGIVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetOracleGIVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOracleGIVersionResource (id As ResourceIdentifier) As OracleGIVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetOracleGIVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleGIVersionResource&#xA;override this.GetOracleGIVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleGIVersionResource" Usage="mockableOracleDatabaseArmClient.GetOracleGIVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.OracleGIVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleGIVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.OracleGIVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleGIVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.OracleGIVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleSubscriptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource GetOracleSubscriptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource GetOracleSubscriptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetOracleSubscriptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOracleSubscriptionResource (id As ResourceIdentifier) As OracleSubscriptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetOracleSubscriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource&#xA;override this.GetOracleSubscriptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource" Usage="mockableOracleDatabaseArmClient.GetOracleSubscriptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource.CreateResourceIdentifier(System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.OracleSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleSystemVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource GetOracleSystemVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource GetOracleSystemVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetOracleSystemVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOracleSystemVersionResource (id As ResourceIdentifier) As OracleSystemVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetOracleSystemVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource&#xA;override this.GetOracleSystemVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource" Usage="mockableOracleDatabaseArmClient.GetOracleSystemVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.OracleSystemVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.SystemVersionResource GetSystemVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.SystemVersionResource GetSystemVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetSystemVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemVersionResource (id As ResourceIdentifier) As SystemVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSystemVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.SystemVersionResource&#xA;override this.GetSystemVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.SystemVersionResource" Usage="mockableOracleDatabaseArmClient.GetSystemVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.SystemVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.SystemVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.SystemVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.SystemVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.SystemVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkAddressResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource GetVirtualNetworkAddressResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource GetVirtualNetworkAddressResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseArmClient.GetVirtualNetworkAddressResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkAddressResource (id As ResourceIdentifier) As VirtualNetworkAddressResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkAddressResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource&#xA;override this.GetVirtualNetworkAddressResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource" Usage="mockableOracleDatabaseArmClient.GetVirtualNetworkAddressResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.OracleDatabase.VirtualNetworkAddressResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
