<Type Name="SelfHelpExtensions" FullName="Azure.ResourceManager.SelfHelp.SelfHelpExtensions">
  <TypeSignature Language="C#" Value="public static class SelfHelpExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SelfHelpExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SelfHelp.SelfHelpExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SelfHelpExtensions" />
  <TypeSignature Language="F#" Value="type SelfHelpExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.SelfHelp. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckSelfHelpNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt; CheckSelfHelpNameAvailability (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt; CheckSelfHelpNameAvailability(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailability(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckSelfHelpNameAvailability (client As ArmClient, scope As ResourceIdentifier, Optional content As SelfHelpNameAvailabilityContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckSelfHelpNameAvailability : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailability (client, scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> The required parameters for availability check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API is used to check the uniqueness of a resource name used for a diagnostic check.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/checkNameAvailability</description></item><item><term>Operation Id</term><description>Diagnostics_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSelfHelpNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt; CheckSelfHelpNameAvailabilityAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt; CheckSelfHelpNameAvailabilityAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailabilityAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckSelfHelpNameAvailabilityAsync (client As ArmClient, scope As ResourceIdentifier, Optional content As SelfHelpNameAvailabilityContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckSelfHelpNameAvailabilityAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailabilityAsync (client, scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> The required parameters for availability check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API is used to check the uniqueness of a resource name used for a diagnostic check.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/checkNameAvailability</description></item><item><term>Operation Id</term><description>Diagnostics_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnostic">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt; GetSelfHelpDiagnostic (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt; GetSelfHelpDiagnostic(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostic(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnostic (client As ArmClient, scope As ResourceIdentifier, diagnosticsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpDiagnosticResource)" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnostic : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostic (client, scope, diagnosticsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="diagnosticsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="diagnosticsResourceName"> Unique resource name for insight resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}</description></item><item><term>Operation Id</term><description>Diagnostics_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticsResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnosticAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt; GetSelfHelpDiagnosticAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt; GetSelfHelpDiagnosticAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnosticAsync (client As ArmClient, scope As ResourceIdentifier, diagnosticsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpDiagnosticResource))" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnosticAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticAsync (client, scope, diagnosticsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="diagnosticsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="diagnosticsResourceName"> Unique resource name for insight resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}</description></item><item><term>Operation Id</term><description>Diagnostics_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticsResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnosticResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource GetSelfHelpDiagnosticResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource GetSelfHelpDiagnosticResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnosticResource (client As ArmClient, id As ResourceIdentifier) As SelfHelpDiagnosticResource" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnosticResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnostics">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection GetSelfHelpDiagnostics (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection GetSelfHelpDiagnostics(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostics(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnostics (client As ArmClient, scope As ResourceIdentifier) As SelfHelpDiagnosticCollection" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnostics : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostics (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SelfHelpDiagnosticResources in the ArmResource. </summary>
        <returns> An object representing collection of SelfHelpDiagnosticResources and their operations over a SelfHelpDiagnosticResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiscoverySolutions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutions (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutions(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutions(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiscoverySolutions (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiscoverySolutions : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutions (client, scope, filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> Can be used to filter solutionIds by 'ProblemClassificationId'. The filter supports only 'and' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e' and ProblemClassificationId eq '0a9673c2-7af6-4e19-90d3-4ee2461076d9'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Solutions Discovery is the initial point of entry within Help API, which helps you identify the relevant solutions for your Azure issue.&lt;br/&gt;&lt;br/&gt; You can discover solutions using resourceUri OR resourceUri + problemClassificationId.&lt;br/&gt;&lt;br/&gt;We will do our best in returning relevant diagnostics for your Azure issue.&lt;br/&gt;&lt;br/&gt; Get the problemClassificationId(s) using this [reference](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP).&lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt; ‘requiredParameterSets’ from Solutions Discovery API response must be passed via ‘additionalParameters’ as an input to Diagnostics API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiscoverySolutionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutionsAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutionsAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutionsAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiscoverySolutionsAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiscoverySolutionsAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutionsAsync (client, scope, filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> Can be used to filter solutionIds by 'ProblemClassificationId'. The filter supports only 'and' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e' and ProblemClassificationId eq '0a9673c2-7af6-4e19-90d3-4ee2461076d9'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Solutions Discovery is the initial point of entry within Help API, which helps you identify the relevant solutions for your Azure issue.&lt;br/&gt;&lt;br/&gt; You can discover solutions using resourceUri OR resourceUri + problemClassificationId.&lt;br/&gt;&lt;br/&gt;We will do our best in returning relevant diagnostics for your Azure issue.&lt;br/&gt;&lt;br/&gt; Get the problemClassificationId(s) using this [reference](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP).&lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt; ‘requiredParameterSets’ from Solutions Discovery API response must be passed via ‘additionalParameters’ as an input to Diagnostics API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
