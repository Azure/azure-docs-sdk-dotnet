<Type Name="SelfHelpSolutionCollection" FullName="Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection">
  <TypeSignature Language="C#" Value="public class SelfHelpSolutionCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelfHelpSolutionCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SelfHelpSolutionCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type SelfHelpSolutionCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection" /> instance call the GetSelfHelpSolutions method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SelfHelpSolutionCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string solutionResourceName, Azure.ResourceManager.SelfHelp.SelfHelpSolutionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string solutionResourceName, class Azure.ResourceManager.SelfHelp.SelfHelpSolutionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.SelfHelp.SelfHelpSolutionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, solutionResourceName As String, data As SelfHelpSolutionData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SelfHelpSolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.SelfHelp.SelfHelpSolutionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.SelfHelp.SelfHelpSolutionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;" Usage="selfHelpSolutionCollection.CreateOrUpdate (waitUntil, solutionResourceName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.SelfHelp.SelfHelpSolutionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="data"> The required request body for this solution resource creation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a solution for the specific Azure resource or subscription using the inputs ‘solutionId and requiredInputs’ from discovery solutions. &lt;br/&gt; Azure solutions comprise a comprehensive library of self-help resources that have been thoughtfully curated by Azure engineers to aid customers in resolving typical troubleshooting issues. These solutions encompass: &lt;br/&gt; (1.) Dynamic and context-aware diagnostics, guided troubleshooting wizards, and data visualizations. &lt;br/&gt; (2.) Rich instructional video tutorials and illustrative diagrams and images. &lt;br/&gt; (3.) Thoughtfully assembled textual troubleshooting instructions. &lt;br/&gt; All these components are seamlessly converged into unified solutions tailored to address a specific support problem area.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Create</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string solutionResourceName, Azure.ResourceManager.SelfHelp.SelfHelpSolutionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string solutionResourceName, class Azure.ResourceManager.SelfHelp.SelfHelpSolutionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.SelfHelp.SelfHelpSolutionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, solutionResourceName As String, data As SelfHelpSolutionData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SelfHelpSolutionResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.SelfHelp.SelfHelpSolutionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.SelfHelp.SelfHelpSolutionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;" Usage="selfHelpSolutionCollection.CreateOrUpdateAsync (waitUntil, solutionResourceName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.SelfHelp.SelfHelpSolutionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="data"> The required request body for this solution resource creation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a solution for the specific Azure resource or subscription using the inputs ‘solutionId and requiredInputs’ from discovery solutions. &lt;br/&gt; Azure solutions comprise a comprehensive library of self-help resources that have been thoughtfully curated by Azure engineers to aid customers in resolving typical troubleshooting issues. These solutions encompass: &lt;br/&gt; (1.) Dynamic and context-aware diagnostics, guided troubleshooting wizards, and data visualizations. &lt;br/&gt; (2.) Rich instructional video tutorials and illustrative diagrams and images. &lt;br/&gt; (3.) Thoughtfully assembled textual troubleshooting instructions. &lt;br/&gt; All these components are seamlessly converged into unified solutions tailored to address a specific support problem area.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Create</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.Exists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="selfHelpSolutionCollection.Exists (solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="selfHelpSolutionCollection.ExistsAsync (solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; Get (string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; Get(string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpSolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;" Usage="selfHelpSolutionCollection.Get (solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the solution using the applicable solutionResourceName while creating the solution.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; GetAsync (string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; GetAsync(string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpSolutionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;" Usage="selfHelpSolutionCollection.GetAsync (solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the solution using the applicable solutionResourceName while creating the solution.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; GetIfExists (string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.NullableResponse`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt; GetIfExists(string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.GetIfExists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As NullableResponse(Of SelfHelpSolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : string * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&#xA;override this.GetIfExists : string * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;" Usage="selfHelpSolutionCollection.GetIfExists (solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; GetIfExistsAsync (string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.NullableResponse`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt; GetIfExistsAsync(string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpSolutionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NullableResponse(Of SelfHelpSolutionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;&#xA;override this.GetIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;" Usage="selfHelpSolutionCollection.GetIfExistsAsync (solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item><item><term>Default Api Version</term><description>2024-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpSolutionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
