<Type Name="AutomationSourceControlResource" FullName="Azure.ResourceManager.Automation.AutomationSourceControlResource">
  <TypeSignature Language="C#" Value="public class AutomationSourceControlResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationSourceControlResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Automation.AutomationSourceControlResource" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationSourceControlResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type AutomationSourceControlResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an AutomationSourceControl along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Automation.AutomationSourceControlResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAutomationSourceControlResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Automation.AutomationAccountResource" /> using the GetAutomationSourceControl method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AutomationSourceControlResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Automation.AutomationSourceControlResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string automationAccountName, string sourceControlName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string automationAccountName, string sourceControlName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, automationAccountName As String, sourceControlName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Automation.AutomationSourceControlResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, automationAccountName, sourceControlName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="automationAccountName" Type="System.String" />
        <Parameter Name="sourceControlName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="automationAccountName"> The automationAccountName. </param>
        <param name="sourceControlName"> The sourceControlName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Automation.AutomationSourceControlResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceControlSyncJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt; CreateSourceControlSyncJob (Guid sourceControlSyncJobId, Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt; CreateSourceControlSyncJob(valuetype System.Guid sourceControlSyncJobId, class Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.CreateSourceControlSyncJob(System.Guid,Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSourceControlSyncJob (sourceControlSyncJobId As Guid, content As SourceControlSyncJobCreateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SourceControlSyncJob)" />
      <MemberSignature Language="F#" Value="abstract member CreateSourceControlSyncJob : Guid * Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&#xA;override this.CreateSourceControlSyncJob : Guid * Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;" Usage="automationSourceControlResource.CreateSourceControlSyncJob (sourceControlSyncJobId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="content" Type="Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="content"> The parameters supplied to the create source control sync job operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates the sync job for a source control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}</description></item><item><term>Operation Id</term><description>SourceControlSyncJob_Create</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceControlSyncJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&gt; CreateSourceControlSyncJobAsync (Guid sourceControlSyncJobId, Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&gt; CreateSourceControlSyncJobAsync(valuetype System.Guid sourceControlSyncJobId, class Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.CreateSourceControlSyncJobAsync(System.Guid,Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSourceControlSyncJobAsync (sourceControlSyncJobId As Guid, content As SourceControlSyncJobCreateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SourceControlSyncJob))" />
      <MemberSignature Language="F#" Value="abstract member CreateSourceControlSyncJobAsync : Guid * Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&gt;&#xA;override this.CreateSourceControlSyncJobAsync : Guid * Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&gt;" Usage="automationSourceControlResource.CreateSourceControlSyncJobAsync (sourceControlSyncJobId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="content" Type="Azure.ResourceManager.Automation.Models.SourceControlSyncJobCreateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="content"> The parameters supplied to the create source control sync job operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates the sync job for a source control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}</description></item><item><term>Operation Id</term><description>SourceControlSyncJob_Create</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationSourceControlData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Automation.AutomationSourceControlData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Automation.AutomationSourceControlResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As AutomationSourceControlData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Automation.AutomationSourceControlData" Usage="Azure.ResourceManager.Automation.AutomationSourceControlResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationSourceControlData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="automationSourceControlResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete the source control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}</description></item><item><term>Operation Id</term><description>SourceControl_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="automationSourceControlResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete the source control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}</description></item><item><term>Operation Id</term><description>SourceControl_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationSourceControlResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationSourceControlResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;" Usage="automationSourceControlResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control identified by source control name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}</description></item><item><term>Operation Id</term><description>SourceControl_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationSourceControlResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;" Usage="automationSourceControlResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control identified by source control name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}</description></item><item><term>Operation Id</term><description>SourceControl_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt; GetSourceControlSyncJob (Guid sourceControlSyncJobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt; GetSourceControlSyncJob(valuetype System.Guid sourceControlSyncJobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJob(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJob (sourceControlSyncJobId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SourceControlSyncJobResult)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJob : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;&#xA;override this.GetSourceControlSyncJob : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJob (sourceControlSyncJobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control sync job identified by job id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}</description></item><item><term>Operation Id</term><description>SourceControlSyncJob_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;&gt; GetSourceControlSyncJobAsync (Guid sourceControlSyncJobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;&gt; GetSourceControlSyncJobAsync(valuetype System.Guid sourceControlSyncJobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJobAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJobAsync (sourceControlSyncJobId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SourceControlSyncJobResult))" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJobAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;&gt;&#xA;override this.GetSourceControlSyncJobAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJobAsync (sourceControlSyncJobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control sync job identified by job id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}</description></item><item><term>Operation Id</term><description>SourceControlSyncJob_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt; GetSourceControlSyncJobs (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt; GetSourceControlSyncJobs(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJobs(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJobs (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SourceControlSyncJob)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&#xA;override this.GetSourceControlSyncJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJobs (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of source control sync jobs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs</description></item><item><term>Operation Id</term><description>SourceControlSyncJob_ListByAutomationAccount</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.SourceControlSyncJob" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt; GetSourceControlSyncJobsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt; GetSourceControlSyncJobsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJobsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJobsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SourceControlSyncJob)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;&#xA;override this.GetSourceControlSyncJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJobsAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of source control sync jobs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs</description></item><item><term>Operation Id</term><description>SourceControlSyncJob_ListByAutomationAccount</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.SourceControlSyncJob" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJobStream">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt; GetSourceControlSyncJobStream (Guid sourceControlSyncJobId, string streamId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt; GetSourceControlSyncJobStream(valuetype System.Guid sourceControlSyncJobId, string streamId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJobStream(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJobStream (sourceControlSyncJobId As Guid, streamId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SourceControlSyncJobStreamResult)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJobStream : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;&#xA;override this.GetSourceControlSyncJobStream : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJobStream (sourceControlSyncJobId, streamId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="streamId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="streamId"> The id of the sync job stream. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a sync job stream identified by stream id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams/{streamId}</description></item><item><term>Operation Id</term><description>SourceControlSyncJobStreams_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="streamId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="streamId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJobStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;&gt; GetSourceControlSyncJobStreamAsync (Guid sourceControlSyncJobId, string streamId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;&gt; GetSourceControlSyncJobStreamAsync(valuetype System.Guid sourceControlSyncJobId, string streamId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJobStreamAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJobStreamAsync (sourceControlSyncJobId As Guid, streamId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SourceControlSyncJobStreamResult))" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJobStreamAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;&gt;&#xA;override this.GetSourceControlSyncJobStreamAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJobStreamAsync (sourceControlSyncJobId, streamId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStreamResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="streamId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="streamId"> The id of the sync job stream. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a sync job stream identified by stream id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams/{streamId}</description></item><item><term>Operation Id</term><description>SourceControlSyncJobStreams_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="streamId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="streamId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJobStreams">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt; GetSourceControlSyncJobStreams (Guid sourceControlSyncJobId, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt; GetSourceControlSyncJobStreams(valuetype System.Guid sourceControlSyncJobId, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJobStreams(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJobStreams (sourceControlSyncJobId As Guid, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SourceControlSyncJobStream)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJobStreams : Guid * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt;&#xA;override this.GetSourceControlSyncJobStreams : Guid * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJobStreams (sourceControlSyncJobId, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of sync job streams identified by sync job id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams</description></item><item><term>Operation Id</term><description>SourceControlSyncJobStreams_ListBySyncJob</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlSyncJobStreamsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt; GetSourceControlSyncJobStreamsAsync (Guid sourceControlSyncJobId, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt; GetSourceControlSyncJobStreamsAsync(valuetype System.Guid sourceControlSyncJobId, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.GetSourceControlSyncJobStreamsAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlSyncJobStreamsAsync (sourceControlSyncJobId As Guid, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SourceControlSyncJobStream)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlSyncJobStreamsAsync : Guid * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt;&#xA;override this.GetSourceControlSyncJobStreamsAsync : Guid * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt;" Usage="automationSourceControlResource.GetSourceControlSyncJobStreamsAsync (sourceControlSyncJobId, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlSyncJobId" Type="System.Guid" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceControlSyncJobId"> The source control sync job id. </param>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of sync job streams identified by sync job id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams</description></item><item><term>Operation Id</term><description>SourceControlSyncJobStreams_ListBySyncJob</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.SourceControlSyncJobStream" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Automation.AutomationSourceControlResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Automation.AutomationSourceControlResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Automation.AutomationSourceControlResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Automation.AutomationSourceControlResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt; Update (Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationSourceControlResource&gt; Update(class Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.Update(Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As AutomationSourceControlPatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationSourceControlResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&#xA;override this.Update : Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;" Usage="automationSourceControlResource.Update (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The parameters supplied to the update source control operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a source control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}</description></item><item><term>Operation Id</term><description>SourceControl_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt; UpdateAsync (Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationSourceControlResource.UpdateAsync(Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As AutomationSourceControlPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationSourceControlResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;" Usage="automationSourceControlResource.UpdateAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.Automation.Models.AutomationSourceControlPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The parameters supplied to the update source control operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a source control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}</description></item><item><term>Operation Id</term><description>SourceControl_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
