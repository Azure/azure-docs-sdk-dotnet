<Type Name="SignalRUpstreamTemplate" FullName="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate">
  <TypeSignature Language="C#" Value="public class SignalRUpstreamTemplate : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignalRUpstreamTemplate extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class SignalRUpstreamTemplate&#xA;Implements IJsonModel(Of SignalRUpstreamTemplate), IPersistableModel(Of SignalRUpstreamTemplate)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type SignalRUpstreamTemplate = class&#xA;    interface IJsonModel&lt;SignalRUpstreamTemplate&gt;&#xA;    interface IPersistableModel&lt;SignalRUpstreamTemplate&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class SignalRUpstreamTemplate" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignalRUpstreamTemplate extends System.Object" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class SignalRUpstreamTemplate" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type SignalRUpstreamTemplate = class" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Upstream template item settings. It defines the Upstream URL of the incoming requests.
            The template defines the pattern of the event, the hub or the category of the incoming request that matches current URL template.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignalRUpstreamTemplate (string urlTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string urlTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (urlTemplate As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate : string -&gt; Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate" Usage="new Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate urlTemplate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="urlTemplate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlTemplate">
            Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.
            For example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat` connects, it will first POST to this URL: `http://example.com/chat/api/connect`.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="urlTemplate" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Auth">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.SignalR.Models.SignalRUpstreamAuthSettings Auth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.SignalR.Models.SignalRUpstreamAuthSettings Auth" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.Auth" />
      <MemberSignature Language="VB.NET" Value="Public Property Auth As SignalRUpstreamAuthSettings" />
      <MemberSignature Language="F#" Value="member this.Auth : Azure.ResourceManager.SignalR.Models.SignalRUpstreamAuthSettings with get, set" Usage="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.Auth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SignalR.Models.SignalRUpstreamAuthSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Upstream auth settings. If not set, no auth is used for upstream messages. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryPattern">
      <MemberSignature Language="C#" Value="public string CategoryPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryPattern" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.CategoryPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryPattern As String" />
      <MemberSignature Language="F#" Value="member this.CategoryPattern : string with get, set" Usage="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.CategoryPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the matching pattern for category names. If not set, it matches any category.
            There are 3 kind of patterns supported:
                1. "*", it to matches any category name.
                2. Combine multiple categories with ",", for example "connections,messages", it matches category "connections" and "messages".
                3. The single category name, for example, "connections", it matches the category "connections".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventPattern">
      <MemberSignature Language="C#" Value="public string EventPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventPattern" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.EventPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property EventPattern As String" />
      <MemberSignature Language="F#" Value="member this.EventPattern : string with get, set" Usage="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.EventPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the matching pattern for event names. If not set, it matches any event.
            There are 3 kind of patterns supported:
                1. "*", it to matches any event name.
                2. Combine multiple events with ",", for example "connect,disconnect", it matches event "connect" and "disconnect".
                3. The single event name, for example, "connect", it matches "connect".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HubPattern">
      <MemberSignature Language="C#" Value="public string HubPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HubPattern" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.HubPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property HubPattern As String" />
      <MemberSignature Language="F#" Value="member this.HubPattern : string with get, set" Usage="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.HubPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the matching pattern for hub names. If not set, it matches any hub.
            There are 3 kind of patterns supported:
                1. "*", it to matches any hub name.
                2. Combine multiple hubs with ",", for example "hub1,hub2", it matches "hub1" and "hub2".
                3. The single hub name, for example, "hub1", it matches "hub1".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate IJsonModel&lt;SignalRUpstreamTemplate&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#SignalR#Models#SignalRUpstreamTemplate&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As SignalRUpstreamTemplate Implements IJsonModel(Of SignalRUpstreamTemplate).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate" Usage="signalRUpstreamTemplate.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;SignalRUpstreamTemplate&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#SignalR#Models#SignalRUpstreamTemplate&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of SignalRUpstreamTemplate).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="signalRUpstreamTemplate.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate IPersistableModel&lt;SignalRUpstreamTemplate&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#SignalR#Models#SignalRUpstreamTemplate&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As SignalRUpstreamTemplate Implements IPersistableModel(Of SignalRUpstreamTemplate).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate" Usage="signalRUpstreamTemplate.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;SignalRUpstreamTemplate&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#SignalR#Models#SignalRUpstreamTemplate&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of SignalRUpstreamTemplate).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="signalRUpstreamTemplate.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;SignalRUpstreamTemplate&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#SignalR#Models#SignalRUpstreamTemplate&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of SignalRUpstreamTemplate).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="signalRUpstreamTemplate.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlTemplate">
      <MemberSignature Language="C#" Value="public string UrlTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UrlTemplate" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.UrlTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UrlTemplate As String" />
      <MemberSignature Language="F#" Value="member this.UrlTemplate : string with get, set" Usage="Azure.ResourceManager.SignalR.Models.SignalRUpstreamTemplate.UrlTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SignalR</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.
            For example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat` connects, it will first POST to this URL: `http://example.com/chat/api/connect`.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
