<Type Name="ConverterBase" FullName="Microsoft.Azure.Search.Serialization.ConverterBase">
  <TypeSignature Language="C#" Value="public abstract class ConverterBase : Newtonsoft.Json.JsonConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConverterBase extends Newtonsoft.Json.JsonConverter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Serialization.ConverterBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Newtonsoft.Json.JsonConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Base class for custom JsonConverters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConverterBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.ConverterBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="protected void Advance (Newtonsoft.Json.JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Advance(class Newtonsoft.Json.JsonReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.ConverterBase.Advance(Newtonsoft.Json.JsonReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" />
      </Parameters>
      <Docs>
        <param name="reader">The JSON reader to advance.</param>
        <summary>
            Advances the given JSON reader, or throws a JsonSerializationException if it cannot be advanced.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect">
      <MemberSignature Language="C#" Value="protected void Expect (Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Expect(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.ConverterBase.Expect(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type. Optionally asserts
            that the value of the token matches a given expected value. If any of the assertions fail, this method
            throws a JsonSerializationException.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="protected TValue Expect&lt;TValue&gt; (Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !!TValue Expect&lt;TValue&gt;(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.ConverterBase.Expect``1(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The expected type of the value of the current JSON token.</typeparam>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type and retrieves the value
            of the token, if any. Optionally asserts that the value of the token matches a given expected value. If
            any of the assertions fail, this method throws a JsonSerializationException.
            </summary>
        <returns>
            The value of the current JSON token, or default(TValue) if the current token has no value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectAndAdvance">
      <MemberSignature Language="C#" Value="protected void ExpectAndAdvance (Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ExpectAndAdvance(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.ConverterBase.ExpectAndAdvance(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type. Optionally asserts
            that the value of the token matches a given expected value. If any of the assertions fail, this method
            throws a JsonSerializationException. Otherwise, this method attempts to advance the JSON reader to the
            next position.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectAndAdvance&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="protected TValue ExpectAndAdvance&lt;TValue&gt; (Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !!TValue ExpectAndAdvance&lt;TValue&gt;(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.ConverterBase.ExpectAndAdvance``1(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Search</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The expected type of the value of the current JSON token.</typeparam>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type and retrieves the value
            of the token, if any. Optionally asserts that the value of the token matches a given expected value. If
            any of the assertions fail, this method throws a JsonSerializationException. Otherwise, this method
            attempts to advance the JSON reader to the next position.
            </summary>
        <returns>
            The value of the JSON token before advancing the reader, or default(TValue) if the token has no value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>