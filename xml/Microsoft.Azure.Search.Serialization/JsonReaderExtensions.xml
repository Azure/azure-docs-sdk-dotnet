<Type Name="JsonReaderExtensions" FullName="Microsoft.Azure.Search.Serialization.JsonReaderExtensions">
  <TypeSignature Language="C#" Value="public static class JsonReaderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Serialization.JsonReaderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module JsonReaderExtensions" />
  <TypeSignature Language="F#" Value="type JsonReaderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search.Common</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines extension methods for JsonReader that make it easier to implement a custom JsonConverter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public static void Advance (this Newtonsoft.Json.JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Advance(class Newtonsoft.Json.JsonReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.JsonReaderExtensions.Advance(Newtonsoft.Json.JsonReader)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Advance (reader As JsonReader)" />
      <MemberSignature Language="F#" Value="static member Advance : Newtonsoft.Json.JsonReader -&gt; unit" Usage="Microsoft.Azure.Search.Serialization.JsonReaderExtensions.Advance reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Common</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" RefType="this" />
      </Parameters>
      <Docs>
        <param name="reader">The JSON reader to advance.</param>
        <summary>
            Advances the given JSON reader, or throws a JsonSerializationException if it cannot be advanced.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect">
      <MemberSignature Language="C#" Value="public static void Expect (this Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Expect(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.JsonReaderExtensions.Expect(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Expect (reader As JsonReader, expectedToken As JsonToken, Optional expectedValue As Object = null)" />
      <MemberSignature Language="F#" Value="static member Expect : Newtonsoft.Json.JsonReader * Newtonsoft.Json.JsonToken * obj -&gt; unit" Usage="Microsoft.Azure.Search.Serialization.JsonReaderExtensions.Expect (reader, expectedToken, expectedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Common</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" RefType="this" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type. Optionally asserts
            that the value of the token matches a given expected value. If any of the assertions fail, this method
            throws a JsonSerializationException.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue Expect&lt;TValue&gt; (this Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue Expect&lt;TValue&gt;(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.JsonReaderExtensions.Expect``1(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Expect(Of TValue) (reader As JsonReader, expectedToken As JsonToken, Optional expectedValue As Object = null) As TValue" />
      <MemberSignature Language="F#" Value="static member Expect : Newtonsoft.Json.JsonReader * Newtonsoft.Json.JsonToken * obj -&gt; 'Value" Usage="Microsoft.Azure.Search.Serialization.JsonReaderExtensions.Expect (reader, expectedToken, expectedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Common</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" RefType="this" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The expected type of the value of the current JSON token.</typeparam>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type and retrieves the
            value of the token, if any. Optionally asserts that the value of the token matches a given expected
            value. If any of the assertions fail, this method throws a JsonSerializationException.
            </summary>
        <returns>
            The value of the current JSON token, or default(TValue) if the current token has no value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectAndAdvance">
      <MemberSignature Language="C#" Value="public static void ExpectAndAdvance (this Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExpectAndAdvance(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.JsonReaderExtensions.ExpectAndAdvance(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExpectAndAdvance (reader As JsonReader, expectedToken As JsonToken, Optional expectedValue As Object = null)" />
      <MemberSignature Language="F#" Value="static member ExpectAndAdvance : Newtonsoft.Json.JsonReader * Newtonsoft.Json.JsonToken * obj -&gt; unit" Usage="Microsoft.Azure.Search.Serialization.JsonReaderExtensions.ExpectAndAdvance (reader, expectedToken, expectedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Common</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" RefType="this" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type. Optionally asserts
            that the value of the token matches a given expected value. If any of the assertions fail, this method
            throws a JsonSerializationException. Otherwise, this method attempts to advance the JSON reader to the
            next position.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectAndAdvance&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue ExpectAndAdvance&lt;TValue&gt; (this Newtonsoft.Json.JsonReader reader, Newtonsoft.Json.JsonToken expectedToken, object expectedValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue ExpectAndAdvance&lt;TValue&gt;(class Newtonsoft.Json.JsonReader reader, valuetype Newtonsoft.Json.JsonToken expectedToken, object expectedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Serialization.JsonReaderExtensions.ExpectAndAdvance``1(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonToken,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExpectAndAdvance(Of TValue) (reader As JsonReader, expectedToken As JsonToken, Optional expectedValue As Object = null) As TValue" />
      <MemberSignature Language="F#" Value="static member ExpectAndAdvance : Newtonsoft.Json.JsonReader * Newtonsoft.Json.JsonToken * obj -&gt; 'Value" Usage="Microsoft.Azure.Search.Serialization.JsonReaderExtensions.ExpectAndAdvance (reader, expectedToken, expectedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Common</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" RefType="this" />
        <Parameter Name="expectedToken" Type="Newtonsoft.Json.JsonToken" />
        <Parameter Name="expectedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The expected type of the value of the current JSON token.</typeparam>
        <param name="reader">The JSON reader.</param>
        <param name="expectedToken">The JSON token on which the reader is expected to be positioned.</param>
        <param name="expectedValue">Optional; The expected value of the current JSON token.</param>
        <summary>
            Asserts that the given JSON reader is positioned on a token with the expected type and retrieves the
            value of the token, if any. Optionally asserts that the value of the token matches a given expected
            value. If any of the assertions fail, this method throws a JsonSerializationException. Otherwise, this
            method attempts to advance the JSON reader to the next position.
            </summary>
        <returns>
            The value of the JSON token before advancing the reader, or default(TValue) if the token has no value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>