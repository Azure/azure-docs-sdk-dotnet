<Type Name="DisposableHttpPipeline" FullName="Azure.Core.Pipeline.DisposableHttpPipeline">
  <TypeSignature Language="C#" Value="public sealed class DisposableHttpPipeline : Azure.Core.Pipeline.HttpPipeline, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DisposableHttpPipeline extends Azure.Core.Pipeline.HttpPipeline implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.Pipeline.DisposableHttpPipeline" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DisposableHttpPipeline&#xA;Inherits HttpPipeline&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type DisposableHttpPipeline = class&#xA;    inherit HttpPipeline&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core</AssemblyName>
    <AssemblyVersion>1.22.0.0</AssemblyVersion>
    <AssemblyVersion>1.23.0.0</AssemblyVersion>
    <AssemblyVersion>1.24.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.Pipeline.HttpPipeline</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An implementation of <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> that may contain resources that require disposal.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.DisposableHttpPipeline.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="disposableHttpPipeline.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.22.0.0</AssemblyVersion>
        <AssemblyVersion>1.23.0.0</AssemblyVersion>
        <AssemblyVersion>1.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes the underlying transport if it is owned by the client, i.e. it was created via the Build method on <see cref="T:Azure.Core.Pipeline.HttpPipelineBuilder" />. If the underlying transport is not owned by the client, i.e. it was supplied as a custom transport on <see cref="T:Azure.Core.ClientOptions" />, it will not be disposed.
            <remarks>
            The reason not to dispose a transport owned outside the client, i.e. one that was provided via <see cref="T:Azure.Core.ClientOptions" /> is to account for scenarios
            where the custom transport may be shared across clients. In this case, it is possible to dispose of a transport
            still in use by other clients. When the transport is created internally, it can properly determine if a shared instance is in use.
            </remarks></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
