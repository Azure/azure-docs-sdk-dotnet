<Type Name="MockableIotHubSubscriptionResource" FullName="Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableIotHubSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableIotHubSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableIotHubSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableIotHubSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableIotHubSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIotHubNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt; CheckIotHubNameAvailability (Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt; CheckIotHubNameAvailability(class Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource.CheckIotHubNameAvailability(Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckIotHubNameAvailability (content As IotHubNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotHubNameAvailabilityResponse)" />
      <MemberSignature Language="F#" Value="abstract member CheckIotHubNameAvailability : Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;&#xA;override this.CheckIotHubNameAvailability : Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;" Usage="mockableIotHubSubscriptionResource.CheckIotHubNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Set the name parameter in the OperationInputs structure to the name of the IoT hub to check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if an IoT hub name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability</description></item><item><term>Operation Id</term><description>IotHubResource_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-06-30</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckIotHubNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;&gt; CheckIotHubNameAvailabilityAsync (Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;&gt; CheckIotHubNameAvailabilityAsync(class Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource.CheckIotHubNameAvailabilityAsync(Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckIotHubNameAvailabilityAsync (content As IotHubNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotHubNameAvailabilityResponse))" />
      <MemberSignature Language="F#" Value="abstract member CheckIotHubNameAvailabilityAsync : Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;&gt;&#xA;override this.CheckIotHubNameAvailabilityAsync : Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;&gt;" Usage="mockableIotHubSubscriptionResource.CheckIotHubNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.IotHub.Models.IotHubNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Set the name parameter in the OperationInputs structure to the name of the IoT hub to check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if an IoT hub name is available.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability</description></item><item><term>Operation Id</term><description>IotHubResource_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-06-30</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubDescriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; GetIotHubDescriptions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; GetIotHubDescriptions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource.GetIotHubDescriptions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubDescriptions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubDescriptions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.GetIotHubDescriptions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="mockableIotHubSubscriptionResource.GetIotHubDescriptions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all the IoT hubs in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs</description></item><item><term>Operation Id</term><description>IotHubResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-06-30</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubDescriptionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; GetIotHubDescriptionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt; GetIotHubDescriptionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource.GetIotHubDescriptionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubDescriptionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IotHubDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubDescriptionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;&#xA;override this.GetIotHubDescriptionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;" Usage="mockableIotHubSubscriptionResource.GetIotHubDescriptionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.IotHubDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all the IoT hubs in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs</description></item><item><term>Operation Id</term><description>IotHubResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-06-30</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.IotHub.IotHubDescriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubUserSubscriptionQuota">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt; GetIotHubUserSubscriptionQuota (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt; GetIotHubUserSubscriptionQuota(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource.GetIotHubUserSubscriptionQuota(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubUserSubscriptionQuota (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IotHubUserSubscriptionQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubUserSubscriptionQuota : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt;&#xA;override this.GetIotHubUserSubscriptionQuota : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt;" Usage="mockableIotHubSubscriptionResource.GetIotHubUserSubscriptionQuota cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the number of free and paid iot hubs in the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages</description></item><item><term>Operation Id</term><description>ResourceProviderCommon_GetSubscriptionQuota</description></item><item><term>Default Api Version</term><description>2023-06-30</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotHubUserSubscriptionQuotaAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt; GetIotHubUserSubscriptionQuotaAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt; GetIotHubUserSubscriptionQuotaAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotHub.Mocking.MockableIotHubSubscriptionResource.GetIotHubUserSubscriptionQuotaAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotHubUserSubscriptionQuotaAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IotHubUserSubscriptionQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetIotHubUserSubscriptionQuotaAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt;&#xA;override this.GetIotHubUserSubscriptionQuotaAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt;" Usage="mockableIotHubSubscriptionResource.GetIotHubUserSubscriptionQuotaAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotHub</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the number of free and paid iot hubs in the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages</description></item><item><term>Operation Id</term><description>ResourceProviderCommon_GetSubscriptionQuota</description></item><item><term>Default Api Version</term><description>2023-06-30</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.IotHub.Models.IotHubUserSubscriptionQuota" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
