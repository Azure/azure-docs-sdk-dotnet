<Type Name="DevTestLabResource" FullName="Azure.ResourceManager.DevTestLabs.DevTestLabResource">
  <TypeSignature Language="C#" Value="public class DevTestLabResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DevTestLabResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevTestLabs.DevTestLabResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DevTestLabResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DevTestLabResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DevTestLab along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DevTestLabs.DevTestLabResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDevTestLabResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetDevTestLab method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DevTestLabResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DevTestLabs.DevTestLabResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;" Usage="devTestLabResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;" Usage="devTestLabResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimAnyVm">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ClaimAnyVm (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ClaimAnyVm(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.ClaimAnyVm(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClaimAnyVm (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ClaimAnyVm : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ClaimAnyVm : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="devTestLabResource.ClaimAnyVm (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Claim a random claimable virtual machine in the lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm</description></item><item><term>Operation Id</term><description>Labs_ClaimAnyVm</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimAnyVmAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ClaimAnyVmAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ClaimAnyVmAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.ClaimAnyVmAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClaimAnyVmAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ClaimAnyVmAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ClaimAnyVmAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="devTestLabResource.ClaimAnyVmAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Claim a random claimable virtual machine in the lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm</description></item><item><term>Operation Id</term><description>Labs_ClaimAnyVm</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEnvironment">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CreateEnvironment (Azure.WaitUntil waitUntil, Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CreateEnvironment(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.CreateEnvironment(Azure.WaitUntil,Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEnvironment (waitUntil As WaitUntil, content As DevTestLabVmCreationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateEnvironment : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CreateEnvironment : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="devTestLabResource.CreateEnvironment (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Properties for creating a virtual machine. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create virtual machines in a lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment</description></item><item><term>Operation Id</term><description>Labs_CreateEnvironment</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CreateEnvironmentAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CreateEnvironmentAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.CreateEnvironmentAsync(Azure.WaitUntil,Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEnvironmentAsync (waitUntil As WaitUntil, content As DevTestLabVmCreationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateEnvironmentAsync : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CreateEnvironmentAsync : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="devTestLabResource.CreateEnvironmentAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabVmCreationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Properties for creating a virtual machine. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create virtual machines in a lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment</description></item><item><term>Operation Id</term><description>Labs_CreateEnvironment</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, name As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="name"> The name. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DevTestLabs.DevTestLabResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DevTestLabs.DevTestLabData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DevTestLabs.DevTestLabResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DevTestLabData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DevTestLabs.DevTestLabData" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="devTestLabResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="devTestLabResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatePolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt; EvaluatePolicies (string name, Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt; EvaluatePolicies(string name, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.EvaluatePolicies(System.String,Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluatePolicies (name As String, content As DevTestLabEvaluatePoliciesContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabEvaluatePoliciesResult)" />
      <MemberSignature Language="F#" Value="abstract member EvaluatePolicies : string * Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;&#xA;override this.EvaluatePolicies : string * Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;" Usage="devTestLabResource.EvaluatePolicies (name, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the policy set. </param>
        <param name="content"> Request body for evaluating a policy set. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Evaluates lab policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{name}/evaluatePolicies</description></item><item><term>Operation Id</term><description>PolicySets_EvaluatePolicies</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EvaluatePoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;&gt; EvaluatePoliciesAsync (string name, Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;&gt; EvaluatePoliciesAsync(string name, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.EvaluatePoliciesAsync(System.String,Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluatePoliciesAsync (name As String, content As DevTestLabEvaluatePoliciesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabEvaluatePoliciesResult))" />
      <MemberSignature Language="F#" Value="abstract member EvaluatePoliciesAsync : string * Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;&gt;&#xA;override this.EvaluatePoliciesAsync : string * Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;&gt;" Usage="devTestLabResource.EvaluatePoliciesAsync (name, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabEvaluatePoliciesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the policy set. </param>
        <param name="content"> Request body for evaluating a policy set. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Evaluates lab policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{name}/evaluatePolicies</description></item><item><term>Operation Id</term><description>PolicySets_EvaluatePolicies</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportResourceUsage">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ExportResourceUsage (Azure.WaitUntil waitUntil, Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ExportResourceUsage(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.ExportResourceUsage(Azure.WaitUntil,Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportResourceUsage (waitUntil As WaitUntil, content As DevTestLabExportResourceUsageContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ExportResourceUsage : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ExportResourceUsage : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="devTestLabResource.ExportResourceUsage (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The parameters of the export operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Exports the lab resource usage into a storage account This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage</description></item><item><term>Operation Id</term><description>Labs_ExportResourceUsage</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportResourceUsageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ExportResourceUsageAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ExportResourceUsageAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.ExportResourceUsageAsync(Azure.WaitUntil,Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportResourceUsageAsync (waitUntil As WaitUntil, content As DevTestLabExportResourceUsageContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ExportResourceUsageAsync : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ExportResourceUsageAsync : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="devTestLabResource.ExportResourceUsageAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabExportResourceUsageContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The parameters of the export operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Exports the lab resource usage into a storage account This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage</description></item><item><term>Operation Id</term><description>Labs_ExportResourceUsage</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateUploadUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt; GenerateUploadUri (Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt; GenerateUploadUri(class Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GenerateUploadUri(Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateUploadUri (content As DevTestLabGenerateUploadUriContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabGenerateUploadUriResult)" />
      <MemberSignature Language="F#" Value="abstract member GenerateUploadUri : Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;&#xA;override this.GenerateUploadUri : Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;" Usage="devTestLabResource.GenerateUploadUri (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Properties for generating an upload URI. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generate a URI for uploading custom disk images to a Lab.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/generateUploadUri</description></item><item><term>Operation Id</term><description>Labs_GenerateUploadUri</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateUploadUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;&gt; GenerateUploadUriAsync (Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;&gt; GenerateUploadUriAsync(class Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GenerateUploadUriAsync(Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateUploadUriAsync (content As DevTestLabGenerateUploadUriContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabGenerateUploadUriResult))" />
      <MemberSignature Language="F#" Value="abstract member GenerateUploadUriAsync : Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;&gt;&#xA;override this.GenerateUploadUriAsync : Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;&gt;" Usage="devTestLabResource.GenerateUploadUriAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabGenerateUploadUriContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Properties for generating an upload URI. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generate a URI for uploading custom disk images to a Lab.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/generateUploadUri</description></item><item><term>Operation Id</term><description>Labs_GenerateUploadUri</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; Get (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; Get(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;" Usage="devTestLabResource.Get (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get lab.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; GetAsync (string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; GetAsync(string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;" Usage="devTestLabResource.GetAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get lab.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabArtifactSource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt; GetDevTestLabArtifactSource (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt; GetDevTestLabArtifactSource(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabArtifactSource(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabArtifactSource (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabArtifactSourceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabArtifactSource : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;&#xA;override this.GetDevTestLabArtifactSource : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;" Usage="devTestLabResource.GetDevTestLabArtifactSource (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the artifact source. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=displayName)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get artifact source.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}</description></item><item><term>Operation Id</term><description>ArtifactSources_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabArtifactSourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;&gt; GetDevTestLabArtifactSourceAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;&gt; GetDevTestLabArtifactSourceAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabArtifactSourceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabArtifactSourceAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabArtifactSourceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabArtifactSourceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;&gt;&#xA;override this.GetDevTestLabArtifactSourceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabArtifactSourceAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the artifact source. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=displayName)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get artifact source.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}</description></item><item><term>Operation Id</term><description>ArtifactSources_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabArtifactSources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceCollection GetDevTestLabArtifactSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceCollection GetDevTestLabArtifactSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabArtifactSources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabArtifactSources () As DevTestLabArtifactSourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabArtifactSources : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceCollection&#xA;override this.GetDevTestLabArtifactSources : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceCollection" Usage="devTestLabResource.GetDevTestLabArtifactSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabArtifactSourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabArtifactSourceResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabArtifactSourceResources and their operations over a DevTestLabArtifactSourceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabCost">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt; GetDevTestLabCost (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt; GetDevTestLabCost(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabCost(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabCost (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabCostResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabCost : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;&#xA;override this.GetDevTestLabCost : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;" Usage="devTestLabResource.GetDevTestLabCost (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the cost. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($expand=labCostDetails)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get cost.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}</description></item><item><term>Operation Id</term><description>Costs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabCostAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;&gt; GetDevTestLabCostAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;&gt; GetDevTestLabCostAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabCostAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabCostAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabCostResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabCostAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;&gt;&#xA;override this.GetDevTestLabCostAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabCostAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCostResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the cost. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($expand=labCostDetails)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get cost.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}</description></item><item><term>Operation Id</term><description>Costs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabCosts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabCostCollection GetDevTestLabCosts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabCostCollection GetDevTestLabCosts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabCosts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabCosts () As DevTestLabCostCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabCosts : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabCostCollection&#xA;override this.GetDevTestLabCosts : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabCostCollection" Usage="devTestLabResource.GetDevTestLabCosts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabCostCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabCostResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabCostResources and their operations over a DevTestLabCostResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabCustomImage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt; GetDevTestLabCustomImage (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt; GetDevTestLabCustomImage(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabCustomImage(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabCustomImage (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabCustomImageResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabCustomImage : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;&#xA;override this.GetDevTestLabCustomImage : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;" Usage="devTestLabResource.GetDevTestLabCustomImage (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the custom image. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=vm)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get custom image.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}</description></item><item><term>Operation Id</term><description>CustomImages_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabCustomImageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;&gt; GetDevTestLabCustomImageAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;&gt; GetDevTestLabCustomImageAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabCustomImageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabCustomImageAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabCustomImageResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabCustomImageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;&gt;&#xA;override this.GetDevTestLabCustomImageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabCustomImageAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the custom image. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=vm)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get custom image.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}</description></item><item><term>Operation Id</term><description>CustomImages_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabCustomImages">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageCollection GetDevTestLabCustomImages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageCollection GetDevTestLabCustomImages() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabCustomImages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabCustomImages () As DevTestLabCustomImageCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabCustomImages : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageCollection&#xA;override this.GetDevTestLabCustomImages : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageCollection" Usage="devTestLabResource.GetDevTestLabCustomImages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabCustomImageCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabCustomImageResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabCustomImageResources and their operations over a DevTestLabCustomImageResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabFormula">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt; GetDevTestLabFormula (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt; GetDevTestLabFormula(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabFormula(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabFormula (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabFormulaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabFormula : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;&#xA;override this.GetDevTestLabFormula : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;" Usage="devTestLabResource.GetDevTestLabFormula (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the formula. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=description)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get formula.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}</description></item><item><term>Operation Id</term><description>Formulas_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabFormulaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;&gt; GetDevTestLabFormulaAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;&gt; GetDevTestLabFormulaAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabFormulaAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabFormulaAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabFormulaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabFormulaAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;&gt;&#xA;override this.GetDevTestLabFormulaAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabFormulaAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabFormulaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the formula. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=description)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get formula.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}</description></item><item><term>Operation Id</term><description>Formulas_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabFormulas">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabFormulaCollection GetDevTestLabFormulas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabFormulaCollection GetDevTestLabFormulas() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabFormulas () As DevTestLabFormulaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabFormulas : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabFormulaCollection&#xA;override this.GetDevTestLabFormulas : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabFormulaCollection" Usage="devTestLabResource.GetDevTestLabFormulas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabFormulaCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabFormulaResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabFormulaResources and their operations over a DevTestLabFormulaResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabNotificationChannel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt; GetDevTestLabNotificationChannel (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt; GetDevTestLabNotificationChannel(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabNotificationChannel(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabNotificationChannel (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabNotificationChannelResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabNotificationChannel : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;&#xA;override this.GetDevTestLabNotificationChannel : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;" Usage="devTestLabResource.GetDevTestLabNotificationChannel (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the notification channel. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=webHookUrl)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get notification channel.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}</description></item><item><term>Operation Id</term><description>NotificationChannels_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabNotificationChannelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;&gt; GetDevTestLabNotificationChannelAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;&gt; GetDevTestLabNotificationChannelAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabNotificationChannelAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabNotificationChannelAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabNotificationChannelResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabNotificationChannelAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;&gt;&#xA;override this.GetDevTestLabNotificationChannelAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabNotificationChannelAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the notification channel. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=webHookUrl)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get notification channel.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}</description></item><item><term>Operation Id</term><description>NotificationChannels_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabNotificationChannels">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelCollection GetDevTestLabNotificationChannels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelCollection GetDevTestLabNotificationChannels() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabNotificationChannels" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabNotificationChannels () As DevTestLabNotificationChannelCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabNotificationChannels : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelCollection&#xA;override this.GetDevTestLabNotificationChannels : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelCollection" Usage="devTestLabResource.GetDevTestLabNotificationChannels " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabNotificationChannelCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabNotificationChannelResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabNotificationChannelResources and their operations over a DevTestLabNotificationChannelResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabPolicyCollection GetDevTestLabPolicies (string policySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabPolicyCollection GetDevTestLabPolicies(string policySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabPolicies(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabPolicies (policySetName As String) As DevTestLabPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabPolicies : string -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabPolicyCollection&#xA;override this.GetDevTestLabPolicies : string -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabPolicyCollection" Usage="devTestLabResource.GetDevTestLabPolicies policySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="policySetName"> The name of the policy set. </param>
        <summary> Gets a collection of DevTestLabPolicyResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabPolicyResources and their operations over a DevTestLabPolicyResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policySetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="policySetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt; GetDevTestLabPolicy (string policySetName, string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt; GetDevTestLabPolicy(string policySetName, string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabPolicy(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabPolicy (policySetName As String, name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabPolicy : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;&#xA;override this.GetDevTestLabPolicy : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;" Usage="devTestLabResource.GetDevTestLabPolicy (policySetName, name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policySetName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policySetName"> The name of the policy set. </param>
        <param name="name"> The name of the policy. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=description)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}</description></item><item><term>Operation Id</term><description>Policies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policySetName" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="policySetName" /> or <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;&gt; GetDevTestLabPolicyAsync (string policySetName, string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;&gt; GetDevTestLabPolicyAsync(string policySetName, string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabPolicyAsync (policySetName As String, name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabPolicyAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;&gt;&#xA;override this.GetDevTestLabPolicyAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabPolicyAsync (policySetName, name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policySetName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policySetName"> The name of the policy set. </param>
        <param name="name"> The name of the policy. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=description)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}</description></item><item><term>Operation Id</term><description>Policies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policySetName" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="policySetName" /> or <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabSchedule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt; GetDevTestLabSchedule (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt; GetDevTestLabSchedule(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabSchedule(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabSchedule (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabScheduleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabSchedule : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;&#xA;override this.GetDevTestLabSchedule : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;" Usage="devTestLabResource.GetDevTestLabSchedule (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the schedule. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=status)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get schedule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}</description></item><item><term>Operation Id</term><description>Schedules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabScheduleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;&gt; GetDevTestLabScheduleAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;&gt; GetDevTestLabScheduleAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabScheduleAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabScheduleAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabScheduleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabScheduleAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;&gt;&#xA;override this.GetDevTestLabScheduleAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabScheduleAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the schedule. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=status)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get schedule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}</description></item><item><term>Operation Id</term><description>Schedules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabSchedules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabScheduleCollection GetDevTestLabSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabScheduleCollection GetDevTestLabSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabSchedules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabSchedules () As DevTestLabScheduleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabSchedules : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabScheduleCollection&#xA;override this.GetDevTestLabSchedules : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabScheduleCollection" Usage="devTestLabResource.GetDevTestLabSchedules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabScheduleResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabScheduleResources and their operations over a DevTestLabScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabServiceRunner">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt; GetDevTestLabServiceRunner (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt; GetDevTestLabServiceRunner(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabServiceRunner(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabServiceRunner (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabServiceRunnerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabServiceRunner : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;&#xA;override this.GetDevTestLabServiceRunner : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;" Usage="devTestLabResource.GetDevTestLabServiceRunner (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the service runner. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get service runner.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}</description></item><item><term>Operation Id</term><description>ServiceRunners_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabServiceRunnerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;&gt; GetDevTestLabServiceRunnerAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;&gt; GetDevTestLabServiceRunnerAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabServiceRunnerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabServiceRunnerAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabServiceRunnerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabServiceRunnerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;&gt;&#xA;override this.GetDevTestLabServiceRunnerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabServiceRunnerAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the service runner. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get service runner.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}</description></item><item><term>Operation Id</term><description>ServiceRunners_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabServiceRunners">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerCollection GetDevTestLabServiceRunners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerCollection GetDevTestLabServiceRunners() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabServiceRunners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabServiceRunners () As DevTestLabServiceRunnerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabServiceRunners : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerCollection&#xA;override this.GetDevTestLabServiceRunners : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerCollection" Usage="devTestLabResource.GetDevTestLabServiceRunners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabServiceRunnerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabServiceRunnerResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabServiceRunnerResources and their operations over a DevTestLabServiceRunnerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt; GetDevTestLabUser (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt; GetDevTestLabUser(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabUser(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabUser (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabUserResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabUser : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;&#xA;override this.GetDevTestLabUser : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;" Usage="devTestLabResource.GetDevTestLabUser (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the user profile. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=identity)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get user profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}</description></item><item><term>Operation Id</term><description>Users_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;&gt; GetDevTestLabUserAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;&gt; GetDevTestLabUserAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabUserAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabUserAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabUserResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabUserAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;&gt;&#xA;override this.GetDevTestLabUserAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabUserAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabUserResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the user profile. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=identity)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get user profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}</description></item><item><term>Operation Id</term><description>Users_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabUsers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabUserCollection GetDevTestLabUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabUserCollection GetDevTestLabUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabUsers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabUsers () As DevTestLabUserCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabUsers : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabUserCollection&#xA;override this.GetDevTestLabUsers : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabUserCollection" Usage="devTestLabResource.GetDevTestLabUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabUserResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabUserResources and their operations over a DevTestLabUserResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabVirtualNetwork">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt; GetDevTestLabVirtualNetwork (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt; GetDevTestLabVirtualNetwork(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabVirtualNetwork(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabVirtualNetwork (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabVirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabVirtualNetwork : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;&#xA;override this.GetDevTestLabVirtualNetwork : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;" Usage="devTestLabResource.GetDevTestLabVirtualNetwork (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the virtual network. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($expand=externalSubnets)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual network.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;&gt; GetDevTestLabVirtualNetworkAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;&gt; GetDevTestLabVirtualNetworkAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabVirtualNetworkAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabVirtualNetworkAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabVirtualNetworkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabVirtualNetworkAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;&gt;&#xA;override this.GetDevTestLabVirtualNetworkAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabVirtualNetworkAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the virtual network. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($expand=externalSubnets)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual network.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabVirtualNetworks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkCollection GetDevTestLabVirtualNetworks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkCollection GetDevTestLabVirtualNetworks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabVirtualNetworks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabVirtualNetworks () As DevTestLabVirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabVirtualNetworks : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkCollection&#xA;override this.GetDevTestLabVirtualNetworks : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkCollection" Usage="devTestLabResource.GetDevTestLabVirtualNetworks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabVirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabVirtualNetworkResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabVirtualNetworkResources and their operations over a DevTestLabVirtualNetworkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabVm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt; GetDevTestLabVm (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt; GetDevTestLabVm(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabVm(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabVm (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabVmResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabVm : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;&#xA;override this.GetDevTestLabVm : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;" Usage="devTestLabResource.GetDevTestLabVm (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the virtual machine. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual machine.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}</description></item><item><term>Operation Id</term><description>VirtualMachines_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabVmAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;&gt; GetDevTestLabVmAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;&gt; GetDevTestLabVmAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabVmAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabVmAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabVmResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabVmAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;&gt;&#xA;override this.GetDevTestLabVmAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;&gt;" Usage="devTestLabResource.GetDevTestLabVmAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabVmResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the virtual machine. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual machine.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}</description></item><item><term>Operation Id</term><description>VirtualMachines_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevTestLabVms">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevTestLabs.DevTestLabVmCollection GetDevTestLabVms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevTestLabs.DevTestLabVmCollection GetDevTestLabVms() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetDevTestLabVms" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevTestLabVms () As DevTestLabVmCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDevTestLabVms : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabVmCollection&#xA;override this.GetDevTestLabVms : unit -&gt; Azure.ResourceManager.DevTestLabs.DevTestLabVmCollection" Usage="devTestLabResource.GetDevTestLabVms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DevTestLabVmCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DevTestLabVmResources in the DevTestLab. </summary>
        <returns> An object representing collection of DevTestLabVmResources and their operations over a DevTestLabVmResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryImages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt; GetGalleryImages (string expand = default, string filter = default, int? top = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt; GetGalleryImages(string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetGalleryImages(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryImages (Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevTestLabGalleryImage)" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryImages : string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt;&#xA;override this.GetGalleryImages : string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt;" Usage="devTestLabResource.GetGalleryImages (expand, filter, top, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=author)'. </param>
        <param name="filter"> The filter to apply to the operation. Example: '$filter=contains(name,'myName'). </param>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="orderby"> The ordering expression for the results, using OData notation. Example: '$orderby=name desc'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List gallery images in a given lab.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/galleryimages</description></item><item><term>Operation Id</term><description>GalleryImages_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryImagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt; GetGalleryImagesAsync (string expand = default, string filter = default, int? top = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt; GetGalleryImagesAsync(string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetGalleryImagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryImagesAsync (Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevTestLabGalleryImage)" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryImagesAsync : string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt;&#xA;override this.GetGalleryImagesAsync : string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt;" Usage="devTestLabResource.GetGalleryImagesAsync (expand, filter, top, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=author)'. </param>
        <param name="filter"> The filter to apply to the operation. Example: '$filter=contains(name,'myName'). </param>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="orderby"> The ordering expression for the results, using OData notation. Example: '$orderby=name desc'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List gallery images in a given lab.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/galleryimages</description></item><item><term>Operation Id</term><description>GalleryImages_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevTestLabs.Models.DevTestLabGalleryImage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVhds">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; GetVhds (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; GetVhds(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetVhds(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVhds (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVhds : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;&#xA;override this.GetVhds : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Usage="devTestLabResource.GetVhds cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List disk images available for custom image creation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/listVhds</description></item><item><term>Operation Id</term><description>Labs_ListVhds</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.Models.SubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVhdsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; GetVhdsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; GetVhdsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.GetVhdsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVhdsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVhdsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;&#xA;override this.GetVhdsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Usage="devTestLabResource.GetVhdsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List disk images available for custom image creation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/listVhds</description></item><item><term>Operation Id</term><description>Labs_ListVhds</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.Models.SubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DevTestLabs.DevTestLabResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportVm">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ImportVm (Azure.WaitUntil waitUntil, Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ImportVm(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.ImportVm(Azure.WaitUntil,Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportVm (waitUntil As WaitUntil, content As DevTestLabImportVmContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ImportVm : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ImportVm : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="devTestLabResource.ImportVm (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> This represents the payload required to import a virtual machine from a different lab into the current one. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Import a virtual machine into a different lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/importVirtualMachine</description></item><item><term>Operation Id</term><description>Labs_ImportVirtualMachine</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportVmAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ImportVmAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ImportVmAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.ImportVmAsync(Azure.WaitUntil,Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportVmAsync (waitUntil As WaitUntil, content As DevTestLabImportVmContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ImportVmAsync : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ImportVmAsync : Azure.WaitUntil * Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="devTestLabResource.ImportVmAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabImportVmContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> This represents the payload required to import a virtual machine from a different lab into the current one. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Import a virtual machine into a different lab. This operation can take a while to complete.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/importVirtualMachine</description></item><item><term>Operation Id</term><description>Labs_ImportVirtualMachine</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;" Usage="devTestLabResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;" Usage="devTestLabResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DevTestLabs.DevTestLabResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;" Usage="devTestLabResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;" Usage="devTestLabResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; Update (Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt; Update(class Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.Update(Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As DevTestLabPatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevTestLabResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&#xA;override this.Update : Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;" Usage="devTestLabResource.Update (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> A lab. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Allows modifying tags of labs. All other properties will be ignored.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; UpdateAsync (Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabResource.UpdateAsync(Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As DevTestLabPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevTestLabResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;" Usage="devTestLabResource.UpdateAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.DevTestLabResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DevTestLabs.Models.DevTestLabPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> A lab. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Allows modifying tags of labs. All other properties will be ignored.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}</description></item><item><term>Operation Id</term><description>Labs_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
