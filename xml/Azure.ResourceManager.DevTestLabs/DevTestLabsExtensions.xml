<Type Name="DevTestLabsExtensions" FullName="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions">
  <TypeSignature Language="C#" Value="public static class DevTestLabsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DevTestLabsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DevTestLabsExtensions" />
  <TypeSignature Language="F#" Value="type DevTestLabsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.DevTestLabs. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetArmTemplateResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.ArmTemplateResource GetArmTemplateResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.ArmTemplateResource GetArmTemplateResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetArmTemplateResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetArmTemplateResource (client As ArmClient, id As ResourceIdentifier) As ArmTemplateResource" />
      <MemberSignature Language="F#" Value="static member GetArmTemplateResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.ArmTemplateResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetArmTemplateResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.ArmTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DevTestLabs.ArmTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.ArmTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DevTestLabs.ArmTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.ArmTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.ArtifactResource GetArtifactResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.ArtifactResource GetArtifactResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetArtifactResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetArtifactResource (client As ArmClient, id As ResourceIdentifier) As ArtifactResource" />
      <MemberSignature Language="F#" Value="static member GetArtifactResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.ArtifactResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetArtifactResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.ArtifactResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DevTestLabs.ArtifactResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.ArtifactResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DevTestLabs.ArtifactResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.ArtifactResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactSourceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.ArtifactSourceResource GetArtifactSourceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.ArtifactSourceResource GetArtifactSourceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetArtifactSourceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetArtifactSourceResource (client As ArmClient, id As ResourceIdentifier) As ArtifactSourceResource" />
      <MemberSignature Language="F#" Value="static member GetArtifactSourceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.ArtifactSourceResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetArtifactSourceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.ArtifactSourceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DevTestLabs.ArtifactSourceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.ArtifactSourceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DevTestLabs.ArtifactSourceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.ArtifactSourceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomImageResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.CustomImageResource GetCustomImageResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.CustomImageResource GetCustomImageResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetCustomImageResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomImageResource (client As ArmClient, id As ResourceIdentifier) As CustomImageResource" />
      <MemberSignature Language="F#" Value="static member GetCustomImageResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.CustomImageResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetCustomImageResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.CustomImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.CustomImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.CustomImageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.CustomImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.CustomImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiskResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.DiskResource GetDiskResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.DiskResource GetDiskResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetDiskResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiskResource (client As ArmClient, id As ResourceIdentifier) As DiskResource" />
      <MemberSignature Language="F#" Value="static member GetDiskResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.DiskResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetDiskResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DiskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.DiskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.DiskResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.DiskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.DiskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDtlEnvironmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource GetDtlEnvironmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource GetDtlEnvironmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetDtlEnvironmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDtlEnvironmentResource (client As ArmClient, id As ResourceIdentifier) As DtlEnvironmentResource" />
      <MemberSignature Language="F#" Value="static member GetDtlEnvironmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetDtlEnvironmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.DtlEnvironmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormulaResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.FormulaResource GetFormulaResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.FormulaResource GetFormulaResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetFormulaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFormulaResource (client As ArmClient, id As ResourceIdentifier) As FormulaResource" />
      <MemberSignature Language="F#" Value="static member GetFormulaResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.FormulaResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetFormulaResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.FormulaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.FormulaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.FormulaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.FormulaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.FormulaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLab">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt; GetLab (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.LabResource&gt; GetLab(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLab(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLab (resourceGroupResource As ResourceGroupResource, name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LabResource)" />
      <MemberSignature Language="F#" Value="static member GetLab : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLab (resourceGroupResource, name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="name"> The name of the lab. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get lab.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}
            Operation Id: Labs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLabAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;&gt; GetLabAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.LabResource&gt;&gt; GetLabAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabAsync (resourceGroupResource As ResourceGroupResource, name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LabResource))" />
      <MemberSignature Language="F#" Value="static member GetLabAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabAsync (resourceGroupResource, name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="name"> The name of the lab. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get lab.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}
            Operation Id: Labs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLabCostResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.LabCostResource GetLabCostResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.LabCostResource GetLabCostResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabCostResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabCostResource (client As ArmClient, id As ResourceIdentifier) As LabCostResource" />
      <MemberSignature Language="F#" Value="static member GetLabCostResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.LabCostResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabCostResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.LabCostResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.LabCostResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.LabCostResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.LabCostResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.LabCostResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.LabResource GetLabResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.LabResource GetLabResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabResource (client As ArmClient, id As ResourceIdentifier) As LabResource" />
      <MemberSignature Language="F#" Value="static member GetLabResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.LabResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.LabResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.LabResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.LabResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.LabResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.LabResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabs">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.LabCollection GetLabs (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.LabCollection GetLabs(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabs(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabs (resourceGroupResource As ResourceGroupResource) As LabCollection" />
      <MemberSignature Language="F#" Value="static member GetLabs : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DevTestLabs.LabCollection" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabs resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.LabCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of LabResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of LabResources and their operations over a LabResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabs">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt; GetLabs (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, string filter = default, int? top = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DevTestLabs.LabResource&gt; GetLabs(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabs(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabs (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LabResource)" />
      <MemberSignature Language="F#" Value="static member GetLabs : Azure.ResourceManager.Resources.SubscriptionResource * string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabs (subscriptionResource, expand, filter, top, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'. </param>
        <param name="filter"> The filter to apply to the operation. Example: '$filter=contains(name,'myName'). </param>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="orderby"> The ordering expression for the results, using OData notation. Example: '$orderby=name desc'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List labs in a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs
            Operation Id: Labs_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevTestLabs.LabResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt; GetLabsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, string filter = default, int? top = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevTestLabs.LabResource&gt; GetLabsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabsAsync (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LabResource)" />
      <MemberSignature Language="F#" Value="static member GetLabsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabsAsync (subscriptionResource, expand, filter, top, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.LabResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'. </param>
        <param name="filter"> The filter to apply to the operation. Example: '$filter=contains(name,'myName'). </param>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="orderby"> The ordering expression for the results, using OData notation. Example: '$orderby=name desc'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List labs in a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs
            Operation Id: Labs_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevTestLabs.LabResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabScheduleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.LabScheduleResource GetLabScheduleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.LabScheduleResource GetLabScheduleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabScheduleResource (client As ArmClient, id As ResourceIdentifier) As LabScheduleResource" />
      <MemberSignature Language="F#" Value="static member GetLabScheduleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.LabScheduleResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabScheduleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.LabScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.LabScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.LabScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.LabScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.LabScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabUserServicefabricScheduleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource GetLabUserServicefabricScheduleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource GetLabUserServicefabricScheduleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabUserServicefabricScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabUserServicefabricScheduleResource (client As ArmClient, id As ResourceIdentifier) As LabUserServicefabricScheduleResource" />
      <MemberSignature Language="F#" Value="static member GetLabUserServicefabricScheduleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabUserServicefabricScheduleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.LabUserServicefabricScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabVirtualMachineResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource GetLabVirtualMachineResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource GetLabVirtualMachineResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabVirtualMachineResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabVirtualMachineResource (client As ArmClient, id As ResourceIdentifier) As LabVirtualMachineResource" />
      <MemberSignature Language="F#" Value="static member GetLabVirtualMachineResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabVirtualMachineResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.LabVirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabVirtualmachineScheduleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource GetLabVirtualmachineScheduleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource GetLabVirtualmachineScheduleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabVirtualmachineScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLabVirtualmachineScheduleResource (client As ArmClient, id As ResourceIdentifier) As LabVirtualmachineScheduleResource" />
      <MemberSignature Language="F#" Value="static member GetLabVirtualmachineScheduleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetLabVirtualmachineScheduleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.LabVirtualmachineScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationChannelResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.NotificationChannelResource GetNotificationChannelResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.NotificationChannelResource GetNotificationChannelResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetNotificationChannelResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationChannelResource (client As ArmClient, id As ResourceIdentifier) As NotificationChannelResource" />
      <MemberSignature Language="F#" Value="static member GetNotificationChannelResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.NotificationChannelResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetNotificationChannelResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.NotificationChannelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.NotificationChannelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.NotificationChannelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.NotificationChannelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.NotificationChannelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.PolicyResource GetPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.PolicyResource GetPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPolicyResource (client As ArmClient, id As ResourceIdentifier) As PolicyResource" />
      <MemberSignature Language="F#" Value="static member GetPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.PolicyResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.PolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.PolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.PolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.PolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.PolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderOperations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt; GetProviderOperations (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt; GetProviderOperations(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetProviderOperations(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderOperations (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OperationMetadata)" />
      <MemberSignature Language="F#" Value="static member GetProviderOperations : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetProviderOperations (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Result of the request to list REST API operations
            Request Path: /providers/Microsoft.DevTestLab/operations
            Operation Id: ProviderOperations_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevTestLabs.Models.OperationMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderOperationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt; GetProviderOperationsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt; GetProviderOperationsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetProviderOperationsAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderOperationsAsync (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OperationMetadata)" />
      <MemberSignature Language="F#" Value="static member GetProviderOperationsAsync : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetProviderOperationsAsync (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.Models.OperationMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Result of the request to list REST API operations
            Request Path: /providers/Microsoft.DevTestLab/operations
            Operation Id: ProviderOperations_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevTestLabs.Models.OperationMetadata" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchedule">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt; GetSchedule (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.ScheduleResource&gt; GetSchedule(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedule(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedule (resourceGroupResource As ResourceGroupResource, name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScheduleResource)" />
      <MemberSignature Language="F#" Value="static member GetSchedule : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedule (resourceGroupResource, name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="name"> The name of the schedule. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=status)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get schedule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}
            Operation Id: GlobalSchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduleAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;&gt; GetScheduleAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;&gt; GetScheduleAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetScheduleAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduleAsync (resourceGroupResource As ResourceGroupResource, name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScheduleResource))" />
      <MemberSignature Language="F#" Value="static member GetScheduleAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetScheduleAsync (resourceGroupResource, name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="name"> The name of the schedule. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=status)'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get schedule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}
            Operation Id: GlobalSchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.ScheduleResource GetScheduleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.ScheduleResource GetScheduleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduleResource (client As ArmClient, id As ResourceIdentifier) As ScheduleResource" />
      <MemberSignature Language="F#" Value="static member GetScheduleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.ScheduleResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetScheduleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.ScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.ScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.ScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.ScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.ScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchedules">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.ScheduleCollection GetSchedules (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.ScheduleCollection GetSchedules(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedules(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedules (resourceGroupResource As ResourceGroupResource) As ScheduleCollection" />
      <MemberSignature Language="F#" Value="static member GetSchedules : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DevTestLabs.ScheduleCollection" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedules resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.ScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of ScheduleResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ScheduleResources and their operations over a ScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchedules">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt; GetSchedules (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, string filter = default, int? top = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DevTestLabs.ScheduleResource&gt; GetSchedules(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedules(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedules (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ScheduleResource)" />
      <MemberSignature Language="F#" Value="static member GetSchedules : Azure.ResourceManager.Resources.SubscriptionResource * string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedules (subscriptionResource, expand, filter, top, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=status)'. </param>
        <param name="filter"> The filter to apply to the operation. Example: '$filter=contains(name,'myName'). </param>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="orderby"> The ordering expression for the results, using OData notation. Example: '$orderby=name desc'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List schedules in a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules
            Operation Id: GlobalSchedules_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevTestLabs.ScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchedulesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt; GetSchedulesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand = default, string filter = default, int? top = default, string orderby = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevTestLabs.ScheduleResource&gt; GetSchedulesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedulesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchedulesAsync (subscriptionResource As SubscriptionResource, Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ScheduleResource)" />
      <MemberSignature Language="F#" Value="static member GetSchedulesAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSchedulesAsync (subscriptionResource, expand, filter, top, orderby, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevTestLabs.ScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="expand"> Specify the $expand query. Example: 'properties($select=status)'. </param>
        <param name="filter"> The filter to apply to the operation. Example: '$filter=contains(name,'myName'). </param>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="orderby"> The ordering expression for the results, using OData notation. Example: '$orderby=name desc'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List schedules in a subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules
            Operation Id: GlobalSchedules_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevTestLabs.ScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecretResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.SecretResource GetSecretResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.SecretResource GetSecretResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSecretResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSecretResource (client As ArmClient, id As ResourceIdentifier) As SecretResource" />
      <MemberSignature Language="F#" Value="static member GetSecretResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.SecretResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetSecretResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.SecretResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.SecretResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.SecretResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.SecretResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.SecretResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.ServiceFabricResource GetServiceFabricResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.ServiceFabricResource GetServiceFabricResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetServiceFabricResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricResource (client As ArmClient, id As ResourceIdentifier) As ServiceFabricResource" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.ServiceFabricResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetServiceFabricResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.ServiceFabricResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.ServiceFabricResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.ServiceFabricResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.ServiceFabricResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.ServiceFabricResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceRunnerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.ServiceRunnerResource GetServiceRunnerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.ServiceRunnerResource GetServiceRunnerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetServiceRunnerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceRunnerResource (client As ArmClient, id As ResourceIdentifier) As ServiceRunnerResource" />
      <MemberSignature Language="F#" Value="static member GetServiceRunnerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.ServiceRunnerResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetServiceRunnerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.ServiceRunnerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.ServiceRunnerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.ServiceRunnerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.ServiceRunnerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.ServiceRunnerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.UserResource GetUserResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.UserResource GetUserResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetUserResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUserResource (client As ArmClient, id As ResourceIdentifier) As UserResource" />
      <MemberSignature Language="F#" Value="static member GetUserResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.UserResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetUserResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.UserResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DevTestLabs.UserResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.UserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DevTestLabs.UserResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.UserResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DevTestLabs.VirtualNetworkResource GetVirtualNetworkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DevTestLabs.VirtualNetworkResource GetVirtualNetworkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetVirtualNetworkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualNetworkResource (client As ArmClient, id As ResourceIdentifier) As VirtualNetworkResource" />
      <MemberSignature Language="F#" Value="static member GetVirtualNetworkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevTestLabs.VirtualNetworkResource" Usage="Azure.ResourceManager.DevTestLabs.DevTestLabsExtensions.GetVirtualNetworkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevTestLabs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevTestLabs.VirtualNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevTestLabs.VirtualNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevTestLabs.VirtualNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevTestLabs.VirtualNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevTestLabs.VirtualNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
