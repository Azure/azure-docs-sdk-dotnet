<Type Name="FunctionsController" FullName="Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController">
  <TypeSignature Language="C#" Value="public class FunctionsController : System.Web.Http.ApiController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FunctionsController extends System.Web.Http.ApiController" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController" />
  <TypeSignature Language="VB.NET" Value="Public Class FunctionsController&#xA;Inherits ApiController" />
  <TypeSignature Language="F#" Value="type FunctionsController = class&#xA;    inherit ApiController" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Script.WebHost</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Http.ApiController</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FunctionsController (Microsoft.Azure.WebJobs.Script.WebHost.WebScriptHostManager scriptHostManager, Microsoft.Azure.WebJobs.Script.WebHost.WebHooks.WebHookReceiverManager webHookReceiverManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.WebJobs.Script.WebHost.WebScriptHostManager scriptHostManager, class Microsoft.Azure.WebJobs.Script.WebHost.WebHooks.WebHookReceiverManager webHookReceiverManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController.#ctor(Microsoft.Azure.WebJobs.Script.WebHost.WebScriptHostManager,Microsoft.Azure.WebJobs.Script.WebHost.WebHooks.WebHookReceiverManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scriptHostManager As WebScriptHostManager, webHookReceiverManager As WebHookReceiverManager)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController : Microsoft.Azure.WebJobs.Script.WebHost.WebScriptHostManager * Microsoft.Azure.WebJobs.Script.WebHost.WebHooks.WebHookReceiverManager -&gt; Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController" Usage="new Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController (scriptHostManager, webHookReceiverManager)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Script.WebHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scriptHostManager" Type="Microsoft.Azure.WebJobs.Script.WebHost.WebScriptHostManager" />
        <Parameter Name="webHookReceiverManager" Type="Microsoft.Azure.WebJobs.Script.WebHost.WebHooks.WebHookReceiverManager" />
      </Parameters>
      <Docs>
        <param name="scriptHostManager">To be added.</param>
        <param name="webHookReceiverManager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineAuthorizationLevelAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.Http.AuthorizationLevel&gt; DetermineAuthorizationLevelAsync (System.Net.Http.HttpRequestMessage request, Microsoft.Azure.WebJobs.Script.Description.FunctionDescriptor function, System.Web.Http.Dependencies.IDependencyResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.Azure.WebJobs.Extensions.Http.AuthorizationLevel&gt; DetermineAuthorizationLevelAsync(class System.Net.Http.HttpRequestMessage request, class Microsoft.Azure.WebJobs.Script.Description.FunctionDescriptor function, class System.Web.Http.Dependencies.IDependencyResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController.DetermineAuthorizationLevelAsync(System.Net.Http.HttpRequestMessage,Microsoft.Azure.WebJobs.Script.Description.FunctionDescriptor,System.Web.Http.Dependencies.IDependencyResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DetermineAuthorizationLevelAsync (request As HttpRequestMessage, function As FunctionDescriptor, resolver As IDependencyResolver) As Task(Of AuthorizationLevel)" />
      <MemberSignature Language="F#" Value="static member DetermineAuthorizationLevelAsync : System.Net.Http.HttpRequestMessage * Microsoft.Azure.WebJobs.Script.Description.FunctionDescriptor * System.Web.Http.Dependencies.IDependencyResolver -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.Http.AuthorizationLevel&gt;" Usage="Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController.DetermineAuthorizationLevelAsync (request, function, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Script.WebHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.Http.AuthorizationLevel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="function" Type="Microsoft.Azure.WebJobs.Script.Description.FunctionDescriptor" />
        <Parameter Name="resolver" Type="System.Web.Http.Dependencies.IDependencyResolver" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="function">To be added.</param>
        <param name="resolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; ExecuteAsync (System.Web.Http.Controllers.HttpControllerContext controllerContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; ExecuteAsync(class System.Web.Http.Controllers.HttpControllerContext controllerContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Script.WebHost.Controllers.FunctionsController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteAsync (controllerContext As HttpControllerContext, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="override this.ExecuteAsync : System.Web.Http.Controllers.HttpControllerContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="functionsController.ExecuteAsync (controllerContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Script.WebHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerContext" Type="System.Web.Http.Controllers.HttpControllerContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="controllerContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
