<Type Name="DataLakeFileFlushOptions" FullName="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions">
  <TypeSignature Language="C#" Value="public class DataLakeFileFlushOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataLakeFileFlushOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class DataLakeFileFlushOptions" />
  <TypeSignature Language="F#" Value="type DataLakeFileFlushOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
    <AssemblyVersion>12.13.0.0</AssemblyVersion>
    <AssemblyVersion>12.13.1.0</AssemblyVersion>
    <AssemblyVersion>12.14.0.0</AssemblyVersion>
    <AssemblyVersion>12.15.0.0</AssemblyVersion>
    <AssemblyVersion>12.16.0.0</AssemblyVersion>
    <AssemblyVersion>12.17.0.0</AssemblyVersion>
    <AssemblyVersion>12.17.1.0</AssemblyVersion>
    <AssemblyVersion>12.18.0.0</AssemblyVersion>
    <AssemblyVersion>12.19.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Optional parameters for appending data to a file with DataLakeFileClient.Flush() and .FlushAsync().
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileFlushOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool? Close { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Close" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.Close" />
      <MemberSignature Language="VB.NET" Value="Public Property Close As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Close : Nullable&lt;bool&gt; with get, set" Usage="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.Close" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled,
            a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the
            difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter
            is valid only when the action is "flush" and change notifications are enabled. If the value of close is "true" and the
            flush operation completes successfully, the service raises a file change notification with a property indicating that
            this is the final update (the file stream has been closed). If "false" a change notification is raised indicating the
            file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that
            the file stream has been closed."
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions Conditions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions Conditions" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public Property Conditions As DataLakeRequestConditions" />
      <MemberSignature Language="F#" Value="member this.Conditions : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions with get, set" Usage="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
            conditions on the flush of this file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHeaders">
      <MemberSignature Language="C#" Value="public Azure.Storage.Files.DataLake.Models.PathHttpHeaders HttpHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Storage.Files.DataLake.Models.PathHttpHeaders HttpHeaders" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.HttpHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHeaders As PathHttpHeaders" />
      <MemberSignature Language="F#" Value="member this.HttpHeaders : Azure.Storage.Files.DataLake.Models.PathHttpHeaders with get, set" Usage="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.HttpHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.DataLake.Models.PathHttpHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional standard HTTP header properties that can be set for the file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseAction">
      <MemberSignature Language="C#" Value="public Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction? LeaseAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction&gt; LeaseAction" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.LeaseAction" />
      <MemberSignature Language="VB.NET" Value="Public Property LeaseAction As Nullable(Of DataLakeLeaseAction)" />
      <MemberSignature Language="F#" Value="member this.LeaseAction : Nullable&lt;Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction&gt; with get, set" Usage="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.LeaseAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Lease action.
            <see cref="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction.Acquire" /> will attempt to aquire a new lease on the file, with <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.ProposedLeaseId" /> as the lease ID.
            <see cref="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction.AcquireRelease" /> will attempt to aquire a new lease on the file, with <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.ProposedLeaseId" /> as the lease ID.  The lease will be released once the Append operation is complete.
            <see cref="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction.AutoRenew" /> will attempt to renew the lease specified by <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions.LeaseId" />.
            <see cref="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction.Release" /> will attempt to release the least speified by <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions.LeaseId" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseDuration">
      <MemberSignature Language="C#" Value="public TimeSpan? LeaseDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; LeaseDuration" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.LeaseDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property LeaseDuration As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.LeaseDuration : Nullable&lt;TimeSpan&gt; with get, set" Usage="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.LeaseDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the duration of the lease, in seconds, or specify
            <see cref="F:Azure.Storage.Files.DataLake.DataLakeLeaseClient.InfiniteLeaseDuration" /> for a lease that never expires.
            A non-infinite lease can be between 15 and 60 seconds.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProposedLeaseId">
      <MemberSignature Language="C#" Value="public string ProposedLeaseId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProposedLeaseId" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.ProposedLeaseId" />
      <MemberSignature Language="VB.NET" Value="Public Property ProposedLeaseId As String" />
      <MemberSignature Language="F#" Value="member this.ProposedLeaseId : string with get, set" Usage="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.ProposedLeaseId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Proposed lease ID. Valid with <see cref="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction.Acquire" /> and <see cref="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseAction.AcquireRelease" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetainUncommittedData">
      <MemberSignature Language="C#" Value="public bool? RetainUncommittedData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RetainUncommittedData" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.RetainUncommittedData" />
      <MemberSignature Language="VB.NET" Value="Public Property RetainUncommittedData As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RetainUncommittedData : Nullable&lt;bool&gt; with get, set" Usage="Azure.Storage.Files.DataLake.Models.DataLakeFileFlushOptions.RetainUncommittedData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.19.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If "true", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted
            after the flush operation. The default is false. Data at offsets less than the specified position are written to the
            file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future
            flush operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
