<Type Name="EventHubBufferedProducerClient" FullName="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient">
  <TypeSignature Language="C#" Value="public class EventHubBufferedProducerClient : IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventHubBufferedProducerClient extends System.Object implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" />
  <TypeSignature Language="VB.NET" Value="Public Class EventHubBufferedProducerClient&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type EventHubBufferedProducerClient = class&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.7.1.0</AssemblyVersion>
    <AssemblyVersion>5.7.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
               A client responsible for publishing instances of <see cref="T:Azure.Messaging.EventHubs.EventData" /> to a specific
               Event Hub.  Depending on the options specified when events are enqueued, they may be
               automatically assigned to a partition, grouped according to the specified partition
               key, or assigned a specifically requested partition.
            
               The <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> does not publish immediately, instead using
               a deferred model where events are collected into a buffer so that they may be efficiently batched
               and published when the batch is full or the <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions.MaximumWaitTime" />
               has elapsed with no new events enqueued.
            
               This model is intended to shift the burden of batch management from callers, at the cost of non-deterministic
               timing, for when events will be published. There are additional trade-offs to consider, as well:
               <list type="bullet"><item><description>If the application crashes, events in the buffer will not have been published.  To prevent data loss, callers are encouraged to track publishing progress using the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handlers.</description></item><item><description>Events specifying a partition key may be assigned a different partition than those using the same key with other producers.</description></item><item><description>In the unlikely event that a partition becomes temporarily unavailable, the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> may take longer to recover than other producers.</description></item></list>
            
               In scenarios where it is important to have events published immediately with a deterministic outcome, ensure
               that partition keys are assigned to a partition consistent with other publishers, or where maximizing availability
               is a requirement, using the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" /> is recommended.
             </summary>
    <remarks>
               The <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> is safe to cache and use as a singleton for the lifetime of an
               application, which is the recommended approach.  The producer is responsible for ensuring efficient network,
               CPU, and memory use. Calling either <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync" />
               when no more events will be enqueued or as the application is shutting down is required so that the buffer can be flushed
               and resources cleaned up properly.
             </remarks>
    <altmember cref="T:Azure.Messaging.EventHubs.Producer.EventHubProducerClient" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventHubBufferedProducerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
               Used for mocking the producer for testing purposes.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : string -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (Azure.Messaging.EventHubs.EventHubConnection connection, Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.EventHubs.EventHubConnection connection, class Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(Azure.Messaging.EventHubs.EventHubConnection,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As EventHubConnection, Optional clientOptions As EventHubBufferedProducerClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : Azure.Messaging.EventHubs.EventHubConnection * Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient (connection, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="Azure.Messaging.EventHubs.EventHubConnection" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" />
      </Parameters>
      <Docs>
        <param name="connection">The <see cref="T:Azure.Messaging.EventHubs.EventHubConnection" /> connection to use for communication with the Event Hubs service.</param>
        <param name="clientOptions">A set of <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" /> to apply when configuring the producer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (string connectionString, Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, clientOptions As EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : string * Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient (connectionString, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <param name="clientOptions">A set of <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" /> to apply when configuring the buffered producer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (string connectionString, string eventHubName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, eventHubName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : string * string -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient (connectionString, eventHubName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the producer with.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (string connectionString, string eventHubName, Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string eventHubName, class Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, eventHubName As String, clientOptions As EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : string * string * Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient (connectionString, eventHubName, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the producer with.</param>
        <param name="clientOptions">A set of <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" /> to apply when configuring the buffered producer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (string fullyQualifiedNamespace, string eventHubName, Azure.AzureNamedKeyCredential credential, Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fullyQualifiedNamespace, string eventHubName, class Azure.AzureNamedKeyCredential credential, class Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.AzureNamedKeyCredential,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullyQualifiedNamespace As String, eventHubName As String, credential As AzureNamedKeyCredential, Optional clientOptions As EventHubBufferedProducerClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : string * string * Azure.AzureNamedKeyCredential * Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient (fullyQualifiedNamespace, eventHubName, credential, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.AzureNamedKeyCredential" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" />
      </Parameters>
      <Docs>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the producer with.</param>
        <param name="credential">The shared access key credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="clientOptions">A set of <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" /> to apply when configuring the producer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (string fullyQualifiedNamespace, string eventHubName, Azure.AzureSasCredential credential, Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fullyQualifiedNamespace, string eventHubName, class Azure.AzureSasCredential credential, class Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.AzureSasCredential,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullyQualifiedNamespace As String, eventHubName As String, credential As AzureSasCredential, Optional clientOptions As EventHubBufferedProducerClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : string * string * Azure.AzureSasCredential * Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient (fullyQualifiedNamespace, eventHubName, credential, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" />
      </Parameters>
      <Docs>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the producer with.</param>
        <param name="credential">The shared access key credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="clientOptions">A set of <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" /> to apply when configuring the producer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubBufferedProducerClient (string fullyQualifiedNamespace, string eventHubName, Azure.Core.TokenCredential credential, Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fullyQualifiedNamespace, string eventHubName, class Azure.Core.TokenCredential credential, class Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullyQualifiedNamespace As String, eventHubName As String, credential As TokenCredential, Optional clientOptions As EventHubBufferedProducerClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient : string * string * Azure.Core.TokenCredential * Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions -&gt; Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" Usage="new Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient (fullyQualifiedNamespace, eventHubName, credential, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" />
      </Parameters>
      <Docs>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the producer with.</param>
        <param name="credential">The shared access key credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="clientOptions">A set of <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions" /> to apply when configuring the producer.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync (bool flush = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(bool flush, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAsync (Optional flush As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubBufferedProducerClient.CloseAsync (flush, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="flush">
          <c>true</c> if all buffered events that are pending should be published before closing; <c>false</c> to abandon all events and close immediately.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Closes the producer and performs the tasks needed to clean up all the resources used by the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" />.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
               This method will automatically unregister the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handlers.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="eventHubBufferedProducerClient.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Closes the producer and performs the tasks needed to clean up all the resources used by the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" />.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
               Calling this method will also invoke <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.FlushInternalAsync(System.Threading.CancellationToken)" />, which will attempt to publish any events that are still pending,
               and finish any active sending.  It will also automatically unregister the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" />
               handlers.
            
               This method is identical to <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" /> and either can be used to send pending events and clean up resources.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnqueueEventAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; EnqueueEventAsync (Azure.Messaging.EventHubs.EventData eventData, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; EnqueueEventAsync(class Azure.Messaging.EventHubs.EventData eventData, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnqueueEventAsync (eventData As EventData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member EnqueueEventAsync : Azure.Messaging.EventHubs.EventData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.EnqueueEventAsync : Azure.Messaging.EventHubs.EventData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="eventHubBufferedProducerClient.EnqueueEventAsync (eventData, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="Azure.Messaging.EventHubs.EventData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventData">The event to be enqueued into the buffer and, later, published.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Enqueues an <see cref="T:Azure.Messaging.EventHubs.EventData" /> into the buffer to be published to the Event Hub.  If there is no capacity in
               the buffer when this method is invoked, it will wait for space to become available and ensure that the <paramref name="eventData" />
               has been enqueued.
            
               When this call returns, the <paramref name="eventData" /> has been accepted into the buffer, but it may not have been published yet.
               Publishing will take place at a nondeterministic point in the future as the buffer is processed.
             </summary>
        <returns>The total number of events that are currently buffered and waiting to be published, across all partitions.</returns>
        <remarks>
               Upon the first attempt to enqueue an event, the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handlers
               can no longer be changed.
             </remarks>
        <exception cref="T:System.InvalidOperationException">Occurs when no <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handler is currently registered.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueEventAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; EnqueueEventAsync (Azure.Messaging.EventHubs.EventData eventData, Azure.Messaging.EventHubs.Producer.EnqueueEventOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; EnqueueEventAsync(class Azure.Messaging.EventHubs.EventData eventData, class Azure.Messaging.EventHubs.Producer.EnqueueEventOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnqueueEventAsync (eventData As EventData, options As EnqueueEventOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member EnqueueEventAsync : Azure.Messaging.EventHubs.EventData * Azure.Messaging.EventHubs.Producer.EnqueueEventOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.EnqueueEventAsync : Azure.Messaging.EventHubs.EventData * Azure.Messaging.EventHubs.Producer.EnqueueEventOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="eventHubBufferedProducerClient.EnqueueEventAsync (eventData, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="Azure.Messaging.EventHubs.EventData" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Producer.EnqueueEventOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventData">The event to be enqueued into the buffer and, later, published.</param>
        <param name="options">The set of options to apply when publishing this event.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Enqueues an <see cref="T:Azure.Messaging.EventHubs.EventData" /> into the buffer to be published to the Event Hub.  If there is no capacity in
               the buffer when this method is invoked, it will wait for space to become available and ensure that the <paramref name="eventData" />
               has been enqueued.
            
               When this call returns, the <paramref name="eventData" /> has been accepted into the buffer, but it may not have been published yet.
               Publishing will take place at a nondeterministic point in the future as the buffer is processed.
             </summary>
        <returns>The total number of events that are currently buffered and waiting to be published, across all partitions.</returns>
        <remarks>
               Upon the first attempt to enqueue an event, the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handlers
               can no longer be changed.
             </remarks>
        <exception cref="T:System.InvalidOperationException">Occurs when an invalid partition identifier has been specified in the <paramref name="options" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; EnqueueEventsAsync (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt; events, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; EnqueueEventsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.EventData&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnqueueEventsAsync (events As IEnumerable(Of EventData), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member EnqueueEventsAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.EnqueueEventsAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="eventHubBufferedProducerClient.EnqueueEventsAsync (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events">The set of events to be enqueued into the buffer and, later, published.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Enqueues a set of <see cref="T:Azure.Messaging.EventHubs.EventData" /> into the buffer to be published to the Event Hub.  If there is insufficient capacity in
               the buffer when this method is invoked, it will wait for space to become available and ensure that all <paramref name="events" />
               in the <paramref name="events" /> set have been enqueued.
            
               When this call returns, the <paramref name="events" /> have been accepted into the buffer, but it may not have been published yet.
               Publishing will take place at a nondeterministic point in the future as the buffer is processed.
             </summary>
        <returns>The total number of events that are currently buffered and waiting to be published, across all partitions.</returns>
        <remarks>
               Should cancellation or an unexpected exception occur, it is possible for calls to this method to result in a partial failure where some, but not all,
               of the <paramref name="events" /> have enqueued.  For scenarios where it is important to understand whether each individual event has been
               enqueued, it is recommended to call the see <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)" /> or
               <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" /> overloads instead of this method.
            
               Upon the first attempt to enqueue events, the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handlers
               can no longer be changed.
             </remarks>
        <exception cref="T:System.InvalidOperationException">Occurs when no <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handler is currently registered.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; EnqueueEventsAsync (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt; events, Azure.Messaging.EventHubs.Producer.EnqueueEventOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; EnqueueEventsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.EventData&gt; events, class Azure.Messaging.EventHubs.Producer.EnqueueEventOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnqueueEventsAsync (events As IEnumerable(Of EventData), options As EnqueueEventOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member EnqueueEventsAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * Azure.Messaging.EventHubs.Producer.EnqueueEventOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.EnqueueEventsAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * Azure.Messaging.EventHubs.Producer.EnqueueEventOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="eventHubBufferedProducerClient.EnqueueEventsAsync (events, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt;" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Producer.EnqueueEventOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events">The set of events to be enqueued into the buffer and, later, published.</param>
        <param name="options">The set of options to apply when publishing these events.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Enqueues a set of <see cref="T:Azure.Messaging.EventHubs.EventData" /> into the buffer to be published to the Event Hub.  If there is insufficient capacity in
               the buffer when this method is invoked, it will wait for space to become available and ensure that all <paramref name="events" />
               in the <paramref name="events" /> set have been enqueued.
            
               When this call returns, the <paramref name="events" /> have been accepted into the buffer, but it may not have been published yet.
               Publishing will take place at a nondeterministic point in the future as the buffer is processed.
             </summary>
        <returns>The total number of events that are currently buffered and waiting to be published, across all partitions.</returns>
        <remarks>
               Should cancellation or an unexpected exception occur, it is possible for calls to this method to result in a partial failure where some, but not all,
               of the <paramref name="events" /> have enqueued.  For scenarios where it is important to understand whether each individual event has been
               enqueued, it is recommended to call the see <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)" /> or
               <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" /> overloads instead of this method.
            
               Upon the first attempt to enqueue events, the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handlers
               can no longer be changed.
             </remarks>
        <exception cref="T:System.InvalidOperationException">Occurs when an invalid partition identifier has been specified in the <paramref name="options" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="eventHubBufferedProducerClient.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
        <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHubName">
      <MemberSignature Language="C#" Value="public string EventHubName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventHubName" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EventHubName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventHubName As String" />
      <MemberSignature Language="F#" Value="member this.EventHubName : string" Usage="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EventHubName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The name of the Event Hub that this producer is connected to, specific to the Event Hubs namespace that contains it.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubBufferedProducerClient.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Attempts to publish all events in the buffer immediately.  This may result in multiple batches being published,
               the outcome of each of which will be individually reported by the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> and
               <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> handlers.
            
               Upon completion of this method, the buffer will be empty.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedNamespace">
      <MemberSignature Language="C#" Value="public string FullyQualifiedNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedNamespace" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.FullyQualifiedNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifiedNamespace As String" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedNamespace : string" Usage="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.FullyQualifiedNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The fully qualified Event Hubs namespace that this producer is currently associated with, which will likely be similar
               to <c>{yournamespace}.servicebus.windows.net</c>.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferedEventCount">
      <MemberSignature Language="C#" Value="public virtual int GetBufferedEventCount (string partitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBufferedEventCount(string partitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetBufferedEventCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBufferedEventCount (partitionId As String) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetBufferedEventCount : string -&gt; int&#xA;override this.GetBufferedEventCount : string -&gt; int" Usage="eventHubBufferedProducerClient.GetBufferedEventCount partitionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partitionId">The identifier of the partition.</param>
        <summary>
               The number of events that are buffered and waiting to be published for a given partition.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt; GetEventHubPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.EventHubProperties&gt; GetEventHubPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventHubPropertiesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of EventHubProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetEventHubPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt;&#xA;override this.GetEventHubPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt;" Usage="eventHubBufferedProducerClient.GetEventHubPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventHubProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves information about the Event Hub that the connection is associated with, including
               the number of partitions present and their identifiers.
             </summary>
        <returns>The set of information for the Event Hub that this client is associated with.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="eventHubBufferedProducerClient.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Returns a hash code for this instance.
             </summary>
        <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string[]&gt; GetPartitionIdsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string[]&gt; GetPartitionIdsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetPartitionIdsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartitionIdsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of String())" />
      <MemberSignature Language="F#" Value="abstract member GetPartitionIdsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;&#xA;override this.GetPartitionIdsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="eventHubBufferedProducerClient.GetPartitionIdsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves the set of identifiers for the partitions of an Event Hub.
             </summary>
        <returns>The set of identifiers for the partitions within the Event Hub that this client is associated with.</returns>
        <remarks>
               This method is synonymous with invoking <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetEventHubPropertiesAsync(System.Threading.CancellationToken)" /> and reading the <see cref="P:Azure.Messaging.EventHubs.EventHubProperties.PartitionIds" />
               property that is returned. It is offered as a convenience for quick access to the set of partition identifiers for the associated Event Hub.
               No new or extended information is presented.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt; GetPartitionPropertiesAsync (string partitionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.PartitionProperties&gt; GetPartitionPropertiesAsync(string partitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.GetPartitionPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartitionPropertiesAsync (partitionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of PartitionProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPartitionPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt;&#xA;override this.GetPartitionPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt;" Usage="eventHubBufferedProducerClient.GetPartitionPropertiesAsync (partitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.PartitionProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves information about a specific partition for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
        <returns>The set of information for the requested partition under the Event Hub this client is associated with.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public string Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.Identifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identifier As String" />
      <MemberSignature Language="F#" Value="member this.Identifier : string" Usage="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               A unique name to identify the buffered producer.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               Indicates whether or not this <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> has been closed.
             </summary>
        <value>
          <c>true</c> if the client is closed; otherwise, <c>false</c>.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublishing">
      <MemberSignature Language="C#" Value="public virtual bool IsPublishing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublishing" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsPublishing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPublishing As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPublishing : bool" Usage="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsPublishing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               Indicates whether or not this <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> is currently
               active and publishing queued events.
             </summary>
        <value>
          <c>true</c> if the client is publishing; otherwise, <c>false</c>.
             </value>
        <remarks>
               The producer will begin publishing when an event is enqueued and should remain active until
               either <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync" /> is called.
            
               If any events were enqueued, <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsClosed" /> is <c>false</c>, and <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.IsPublishing" />
               is <c>false</c>, this likely indicates an unrecoverable state for the client.  It is recommended to
               close the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> and create a new instance.
            
               In this state, exceptions will be reported by the Event Hubs client library logs, which can be captured
               using the <see cref="T:Azure.Core.Diagnostics.AzureEventSourceListener" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListPartitionIdsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;string[]&gt; ListPartitionIdsAsync (Azure.Messaging.EventHubs.Producer.EventHubProducerClient producer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string[]&gt; ListPartitionIdsAsync(class Azure.Messaging.EventHubs.Producer.EventHubProducerClient producer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.ListPartitionIdsAsync(Azure.Messaging.EventHubs.Producer.EventHubProducerClient,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ListPartitionIdsAsync (producer As EventHubProducerClient, cancellationToken As CancellationToken) As Task(Of String())" />
      <MemberSignature Language="F#" Value="abstract member ListPartitionIdsAsync : Azure.Messaging.EventHubs.Producer.EventHubProducerClient * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;&#xA;override this.ListPartitionIdsAsync : Azure.Messaging.EventHubs.Producer.EventHubProducerClient * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="eventHubBufferedProducerClient.ListPartitionIdsAsync (producer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="producer" Type="Azure.Messaging.EventHubs.Producer.EventHubProducerClient" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="producer">The producer client instance to use for querying.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the query.</param>
        <summary>
               Queries for the identifiers of the Event Hub partitions.
             </summary>
        <returns>The set of identifiers for the Event Hub partitions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendFailedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnSendFailedAsync (System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt; events, Exception exception, string partitionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnSendFailedAsync(class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Messaging.EventHubs.EventData&gt; events, class System.Exception exception, string partitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.OnSendFailedAsync(System.Collections.Generic.IReadOnlyList{Azure.Messaging.EventHubs.EventData},System.Exception,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSendFailedAsync (events As IReadOnlyList(Of EventData), exception As Exception, partitionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnSendFailedAsync : System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt; * Exception * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnSendFailedAsync : System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt; * Exception * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubBufferedProducerClient.OnSendFailedAsync (events, exception, partitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt;" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events">The set of events belonging to the batch that failed to be published.</param>
        <param name="exception">The <see cref="T:System.Exception" /> that was raised when the events failed to publish.</param>
        <param name="partitionId">The identifier of the partition that the batch of events was published to.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel publishing.</param>
        <summary>
               Responsible for raising the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" /> event upon the failed publishing of a
               batch of events, after all eligible retries are exhausted.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendSucceededAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnSendSucceededAsync (System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt; events, string partitionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnSendSucceededAsync(class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Messaging.EventHubs.EventData&gt; events, string partitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.OnSendSucceededAsync(System.Collections.Generic.IReadOnlyList{Azure.Messaging.EventHubs.EventData},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSendSucceededAsync (events As IReadOnlyList(Of EventData), partitionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnSendSucceededAsync : System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnSendSucceededAsync : System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubBufferedProducerClient.OnSendSucceededAsync (events, partitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.EventHubs.EventData&gt;" />
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events">The set of events belonging to the batch that was successfully published.</param>
        <param name="partitionId">The identifier of the partition that the batch of events was published to.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel publishing.</param>
        <summary>
               Responsible for raising the <see cref="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" /> event upon the successful publishing
               of a batch of events.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEventBatchFailedAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchFailedEventArgs,System.Threading.Tasks.Task&gt; SendEventBatchFailedAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Azure.Messaging.EventHubs.Producer.SendEventBatchFailedEventArgs, class System.Threading.Tasks.Task&gt; SendEventBatchFailedAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchFailedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendEventBatchFailedAsync As Func(Of SendEventBatchFailedEventArgs, Task) " />
      <MemberSignature Language="F#" Value="member this.SendEventBatchFailedAsync : Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchFailedEventArgs, System.Threading.Tasks.Task&gt; " Usage="member this.SendEventBatchFailedAsync : System.Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchFailedEventArgs, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchFailedEventArgs,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               Invoked for any batch of events that failed to be published to the Event Hub, this handler must be
               provided before events may be enqueued.  If this producer was not configured with <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions.MaximumConcurrentSends" />
               and <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions.MaximumConcurrentSendsPerPartition" /> both set to 1, the handler will be invoked
               concurrently.
            
               It is safe to attempt resending the events by calling <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)" /> or
               <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.EnqueueEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.Producer.EnqueueEventOptions,System.Threading.CancellationToken)" /> from within this handler.  It is important
               to note that doing so will place them at the end of the buffer; the original order will not be maintained.
            
               This handler will be awaited after failure to publish the batch; the publishing operation is not considered complete until the
               handler call returns.  It is advised that no long-running operations be performed in the handler to avoid negatively impacting throughput.
            
               It is not recommended to invoke <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync" /> from this handler; doing so may result
               in a deadlock scenario if those calls are awaited.
             </summary>
        <remarks>
               Should a transient failure occur during publishing, this handler will not be invoked immediately; it is only
               invoked after applying the retry policy and all eligible retries have been exhausted.  Should publishing succeed
               during a retry attempt, this handler is not invoked.
            
               Since applications do not have deterministic control over failed batches, it is recommended that the application
               set a generous number of retries and try timeout interval in the <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubProducerClientOptions.RetryOptions" />.
               Doing so will allow the <see cref="T:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient" /> a higher chance to recover from transient failures.  This is
               especially important when ensuring the order of events is needed.
            
               It is not necessary to explicitly unregister this handler; it will be automatically unregistered when
               <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync" /> is invoked.
             </remarks>
        <exception cref="T:System.ArgumentException">If an attempt is made to remove a handler that doesn't match the current handler registered.</exception>
        <exception cref="T:System.NotSupportedException">If an attempt is made to add a handler when one is currently registered.</exception>
        <altmember cref="T:Azure.Messaging.EventHubs.EventHubsRetryOptions" />
      </Docs>
    </Member>
    <Member MemberName="SendEventBatchSucceededAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchSucceededEventArgs,System.Threading.Tasks.Task&gt; SendEventBatchSucceededAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Azure.Messaging.EventHubs.Producer.SendEventBatchSucceededEventArgs, class System.Threading.Tasks.Task&gt; SendEventBatchSucceededAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.SendEventBatchSucceededAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendEventBatchSucceededAsync As Func(Of SendEventBatchSucceededEventArgs, Task) " />
      <MemberSignature Language="F#" Value="member this.SendEventBatchSucceededAsync : Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchSucceededEventArgs, System.Threading.Tasks.Task&gt; " Usage="member this.SendEventBatchSucceededAsync : System.Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchSucceededEventArgs, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Messaging.EventHubs.Producer.SendEventBatchSucceededEventArgs,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               Invoked after each batch of events has been successfully published to the Event Hub, this handler is optional
               and is intended to provide notifications for interested listeners.  If this producer was configured with
               <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions.MaximumConcurrentSends" /> or <see cref="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClientOptions.MaximumConcurrentSendsPerPartition" />
               set greater than 1, the handler will be invoked concurrently.
            
               This handler will be awaited after publishing the batch; the publishing operation will not be considered complete until the handler
               call returns.  It is advised that no long-running operations be performed in the handler to avoid negatively impacting throughput.
            
               It is not recommended to invoke <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync" /> from this handler; doing so may result
               in a deadlock scenario if those calls are awaited.
             </summary>
        <remarks>
               It is not necessary to explicitly unregister this handler; it will be automatically unregistered when
               <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.CloseAsync(System.Boolean,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.DisposeAsync" /> is invoked.
             </remarks>
        <exception cref="T:System.ArgumentException">If an attempt is made to remove a handler that doesn't match the current handler registered.</exception>
        <exception cref="T:System.NotSupportedException">If an attempt is made to add a handler when one is currently registered.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventHubBufferedProducerClient.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Converts the instance to string representation.
             </summary>
        <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBufferedEventCount">
      <MemberSignature Language="C#" Value="public virtual int TotalBufferedEventCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBufferedEventCount" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.TotalBufferedEventCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TotalBufferedEventCount As Integer" />
      <MemberSignature Language="F#" Value="member this.TotalBufferedEventCount : int" Usage="Azure.Messaging.EventHubs.Producer.EventHubBufferedProducerClient.TotalBufferedEventCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.7.1.0</AssemblyVersion>
        <AssemblyVersion>5.7.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The total number of events that are currently buffered and waiting to be published, across all partitions.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
