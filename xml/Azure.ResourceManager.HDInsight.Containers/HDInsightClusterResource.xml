<Type Name="HDInsightClusterResource" FullName="Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource">
  <TypeSignature Language="C#" Value="public class HDInsightClusterResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HDInsightClusterResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" />
  <TypeSignature Language="VB.NET" Value="Public Class HDInsightClusterResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of HDInsightClusterData), IPersistableModel(Of HDInsightClusterData)" />
  <TypeSignature Language="F#" Value="type HDInsightClusterResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;HDInsightClusterData&gt;&#xA;    interface IPersistableModel&lt;HDInsightClusterData&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a HDInsightCluster along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetHDInsightClusterResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterPoolResource" /> using the GetHDInsightCluster method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HDInsightClusterResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string clusterPoolName, string clusterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string clusterPoolName, string clusterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, clusterPoolName As String, clusterName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, clusterPoolName, clusterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterPoolName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="clusterPoolName"> The clusterPoolName. </param>
        <param name="clusterName"> The clusterName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As HDInsightClusterData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData" Usage="Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="hDInsightClusterResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Delete</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="hDInsightClusterResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Delete</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a HDInsight cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a HDInsight cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterAvailableUpgrades">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt; GetClusterAvailableUpgrades (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt; GetClusterAvailableUpgrades(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterAvailableUpgrades(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterAvailableUpgrades (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterAvailableUpgrade)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterAvailableUpgrades : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt;&#xA;override this.GetClusterAvailableUpgrades : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt;" Usage="hDInsightClusterResource.GetClusterAvailableUpgrades cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List a cluster available upgrade.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/availableUpgrades</description></item><item><term>Operation Id</term><description>ClusterAvailableUpgrades_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterAvailableUpgradesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt; GetClusterAvailableUpgradesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt; GetClusterAvailableUpgradesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterAvailableUpgradesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterAvailableUpgradesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterAvailableUpgrade)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterAvailableUpgradesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt;&#xA;override this.GetClusterAvailableUpgradesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt;" Usage="hDInsightClusterResource.GetClusterAvailableUpgradesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List a cluster available upgrade.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/availableUpgrades</description></item><item><term>Operation Id</term><description>ClusterAvailableUpgrades_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterAvailableUpgrade" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt; GetClusterJobs (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt; GetClusterJobs(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterJobs(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterJobs (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterJob)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&#xA;override this.GetClusterJobs : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;" Usage="hDInsightClusterResource.GetClusterJobs (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The system query option to filter job returned in the response. Allowed value is 'jobName eq {jobName}' or 'jarName eq {jarName}'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get jobs of HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/jobs</description></item><item><term>Operation Id</term><description>ClusterJobs_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt; GetClusterJobsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt; GetClusterJobsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterJobsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterJobsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterJob)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&#xA;override this.GetClusterJobsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;" Usage="hDInsightClusterResource.GetClusterJobsAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The system query option to filter job returned in the response. Allowed value is 'jobName eq {jobName}' or 'jarName eq {jarName}'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get jobs of HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/jobs</description></item><item><term>Operation Id</term><description>ClusterJobs_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterLibraries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt; GetClusterLibraries (Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory category, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt; GetClusterLibraries(valuetype Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory category, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterLibraries(Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterLibraries (category As ClusterLibraryCategory, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterLibrary)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterLibraries : Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt;&#xA;override this.GetClusterLibraries : Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt;" Usage="hDInsightClusterResource.GetClusterLibraries (category, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="category"> The system query option to filter libraries returned in the response. Allowed value is 'custom' or 'predefined'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all libraries of HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/libraries</description></item><item><term>Operation Id</term><description>ClusterLibraries_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterLibrariesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt; GetClusterLibrariesAsync (Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory category, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt; GetClusterLibrariesAsync(valuetype Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory category, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterLibrariesAsync(Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterLibrariesAsync (category As ClusterLibraryCategory, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterLibrary)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterLibrariesAsync : Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt;&#xA;override this.GetClusterLibrariesAsync : Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt;" Usage="hDInsightClusterResource.GetClusterLibrariesAsync (category, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryCategory" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="category"> The system query option to filter libraries returned in the response. Allowed value is 'custom' or 'predefined'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all libraries of HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/libraries</description></item><item><term>Operation Id</term><description>ClusterLibraries_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibrary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterUpgradeHistories">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt; GetClusterUpgradeHistories (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt; GetClusterUpgradeHistories(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterUpgradeHistories(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterUpgradeHistories (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterUpgradeHistory)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterUpgradeHistories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt;&#xA;override this.GetClusterUpgradeHistories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt;" Usage="hDInsightClusterResource.GetClusterUpgradeHistories cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of upgrade history.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/upgradeHistories</description></item><item><term>Operation Id</term><description>ClusterUpgradeHistories_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterUpgradeHistoriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt; GetClusterUpgradeHistoriesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt; GetClusterUpgradeHistoriesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetClusterUpgradeHistoriesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterUpgradeHistoriesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterUpgradeHistory)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterUpgradeHistoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt;&#xA;override this.GetClusterUpgradeHistoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt;" Usage="hDInsightClusterResource.GetClusterUpgradeHistoriesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of upgrade history.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/upgradeHistories</description></item><item><term>Operation Id</term><description>ClusterUpgradeHistories_List</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeHistory" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceView">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt; GetInstanceView (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt; GetInstanceView(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetInstanceView(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInstanceView (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterInstanceViewResult)" />
      <MemberSignature Language="F#" Value="abstract member GetInstanceView : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&#xA;override this.GetInstanceView : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;" Usage="hDInsightClusterResource.GetInstanceView cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of a cluster instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/instanceViews/default</description></item><item><term>Operation Id</term><description>Clusters_GetInstanceView</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceViewAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&gt; GetInstanceViewAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&gt; GetInstanceViewAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetInstanceViewAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInstanceViewAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterInstanceViewResult))" />
      <MemberSignature Language="F#" Value="abstract member GetInstanceViewAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&gt;&#xA;override this.GetInstanceViewAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&gt;" Usage="hDInsightClusterResource.GetInstanceViewAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of a cluster instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/instanceViews/default</description></item><item><term>Operation Id</term><description>Clusters_GetInstanceView</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceViews">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt; GetInstanceViews (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt; GetInstanceViews(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetInstanceViews(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInstanceViews (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterInstanceViewResult)" />
      <MemberSignature Language="F#" Value="abstract member GetInstanceViews : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&#xA;override this.GetInstanceViews : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;" Usage="hDInsightClusterResource.GetInstanceViews cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the lists of instance views
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/instanceViews</description></item><item><term>Operation Id</term><description>Clusters_ListInstanceViews</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceViewsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt; GetInstanceViewsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt; GetInstanceViewsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetInstanceViewsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInstanceViewsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterInstanceViewResult)" />
      <MemberSignature Language="F#" Value="abstract member GetInstanceViewsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;&#xA;override this.GetInstanceViewsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;" Usage="hDInsightClusterResource.GetInstanceViewsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the lists of instance views
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/instanceViews</description></item><item><term>Operation Id</term><description>Clusters_ListInstanceViews</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterInstanceViewResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceConfigs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt; GetServiceConfigs (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt; GetServiceConfigs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetServiceConfigs(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceConfigs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterServiceConfigResult)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceConfigs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt;&#xA;override this.GetServiceConfigs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt;" Usage="hDInsightClusterResource.GetServiceConfigs cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the config dump of all services running in cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/serviceConfigs</description></item><item><term>Operation Id</term><description>Clusters_ListServiceConfigs</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceConfigsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt; GetServiceConfigsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt; GetServiceConfigsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.GetServiceConfigsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceConfigsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterServiceConfigResult)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceConfigsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt;&#xA;override this.GetServiceConfigsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt;" Usage="hDInsightClusterResource.GetServiceConfigsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the config dump of all services running in cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/serviceConfigs</description></item><item><term>Operation Id</term><description>Clusters_ListServiceConfigs</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Containers.Models.ClusterServiceConfigResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManageLibrariesClusterLibrary">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ManageLibrariesClusterLibrary (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ManageLibrariesClusterLibrary(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.ManageLibrariesClusterLibrary(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ManageLibrariesClusterLibrary (waitUntil As WaitUntil, content As ClusterLibraryManagementOperationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ManageLibrariesClusterLibrary : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ManageLibrariesClusterLibrary : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="hDInsightClusterResource.ManageLibrariesClusterLibrary (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The library management operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Library management operations on HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/manageLibraries</description></item><item><term>Operation Id</term><description>ClusterLibraries_ManageLibraries</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ManageLibrariesClusterLibraryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ManageLibrariesClusterLibraryAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ManageLibrariesClusterLibraryAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.ManageLibrariesClusterLibraryAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ManageLibrariesClusterLibraryAsync (waitUntil As WaitUntil, content As ClusterLibraryManagementOperationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ManageLibrariesClusterLibraryAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ManageLibrariesClusterLibraryAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="hDInsightClusterResource.ManageLibrariesClusterLibraryAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterLibraryManagementOperationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The library management operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Library management operations on HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/manageLibraries</description></item><item><term>Operation Id</term><description>ClusterLibraries_ManageLibraries</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Resize (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Resize(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.Resize(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Resize (waitUntil As WaitUntil, content As ClusterResizeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Resize : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.Resize : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.Resize (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Resize a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Resize an existing Cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/resize</description></item><item><term>Operation Id</term><description>Clusters_Resize</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; ResizeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; ResizeAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.ResizeAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResizeAsync (waitUntil As WaitUntil, content As ClusterResizeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.ResizeAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.ResizeAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterResizeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Resize a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Resize an existing Cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/resize</description></item><item><term>Operation Id</term><description>Clusters_Resize</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunJobClusterJob">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt; RunJobClusterJob (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob clusterJob, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt; RunJobClusterJob(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob clusterJob, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.RunJobClusterJob(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RunJobClusterJob (waitUntil As WaitUntil, clusterJob As ClusterJob, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ClusterJob)" />
      <MemberSignature Language="F#" Value="abstract member RunJobClusterJob : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&#xA;override this.RunJobClusterJob : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;" Usage="hDInsightClusterResource.RunJobClusterJob (waitUntil, clusterJob, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="clusterJob" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="clusterJob"> The Cluster job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Operations on jobs of HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/runJob</description></item><item><term>Operation Id</term><description>ClusterJobs_RunJob</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterJob" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RunJobClusterJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&gt; RunJobClusterJobAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob clusterJob, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&gt; RunJobClusterJobAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob clusterJob, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.RunJobClusterJobAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RunJobClusterJobAsync (waitUntil As WaitUntil, clusterJob As ClusterJob, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ClusterJob))" />
      <MemberSignature Language="F#" Value="abstract member RunJobClusterJobAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&gt;&#xA;override this.RunJobClusterJobAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&gt;" Usage="hDInsightClusterResource.RunJobClusterJobAsync (waitUntil, clusterJob, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="clusterJob" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterJob" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="clusterJob"> The Cluster job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Operations on jobs of HDInsight on AKS cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/runJob</description></item><item><term>Operation Id</term><description>ClusterJobs_RunJob</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterJob" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData IJsonModel&lt;HDInsightClusterData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#HDInsight#Containers#HDInsightClusterData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As HDInsightClusterData Implements IJsonModel(Of HDInsightClusterData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData" Usage="hDInsightClusterResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;HDInsightClusterData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#HDInsight#Containers#HDInsightClusterData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of HDInsightClusterData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="hDInsightClusterResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData IPersistableModel&lt;HDInsightClusterData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HDInsight#Containers#HDInsightClusterData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As HDInsightClusterData Implements IPersistableModel(Of HDInsightClusterData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData" Usage="hDInsightClusterResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;HDInsightClusterData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HDInsight#Containers#HDInsightClusterData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of HDInsightClusterData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="hDInsightClusterResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;HDInsightClusterData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#HDInsight#Containers#HDInsightClusterData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of HDInsightClusterData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="hDInsightClusterResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.Update(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As HDInsightClusterPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Patch a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing Cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Update</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As HDInsightClusterPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.HDInsight.Containers.Models.HDInsightClusterPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Patch a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing Cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Update</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Upgrade (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade clusterUpgradeRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; Upgrade(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade clusterUpgradeRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.Upgrade(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upgrade (waitUntil As WaitUntil, clusterUpgradeRequest As ClusterUpgrade, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.Upgrade : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.Upgrade (waitUntil, clusterUpgradeRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="clusterUpgradeRequest" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="clusterUpgradeRequest"> Upgrade a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Upgrade a cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/upgrade</description></item><item><term>Operation Id</term><description>Clusters_Upgrade</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterUpgradeRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpgradeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; UpgradeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade clusterUpgradeRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; UpgradeAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade clusterUpgradeRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.UpgradeAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpgradeAsync (waitUntil As WaitUntil, clusterUpgradeRequest As ClusterUpgrade, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member UpgradeAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.UpgradeAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.UpgradeAsync (waitUntil, clusterUpgradeRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="clusterUpgradeRequest" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgrade" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="clusterUpgradeRequest"> Upgrade a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Upgrade a cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/upgrade</description></item><item><term>Operation Id</term><description>Clusters_Upgrade</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterUpgradeRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpgradeManualRollback">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; UpgradeManualRollback (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback clusterRollbackUpgradeRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt; UpgradeManualRollback(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback clusterRollbackUpgradeRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.UpgradeManualRollback(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpgradeManualRollback (waitUntil As WaitUntil, clusterRollbackUpgradeRequest As ClusterUpgradeRollback, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of HDInsightClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member UpgradeManualRollback : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&#xA;override this.UpgradeManualRollback : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;" Usage="hDInsightClusterResource.UpgradeManualRollback (waitUntil, clusterRollbackUpgradeRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="clusterRollbackUpgradeRequest" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="clusterRollbackUpgradeRequest"> Manual rollback upgrade for a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Manual rollback upgrade for a cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/rollback</description></item><item><term>Operation Id</term><description>Clusters_UpgradeManualRollback</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterRollbackUpgradeRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpgradeManualRollbackAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; UpgradeManualRollbackAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback clusterRollbackUpgradeRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt; UpgradeManualRollbackAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback clusterRollbackUpgradeRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource.UpgradeManualRollbackAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpgradeManualRollbackAsync (waitUntil As WaitUntil, clusterRollbackUpgradeRequest As ClusterUpgradeRollback, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of HDInsightClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member UpgradeManualRollbackAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;&#xA;override this.UpgradeManualRollbackAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;" Usage="hDInsightClusterResource.UpgradeManualRollbackAsync (waitUntil, clusterRollbackUpgradeRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight.Containers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="clusterRollbackUpgradeRequest" Type="Azure.ResourceManager.HDInsight.Containers.Models.ClusterUpgradeRollback" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="clusterRollbackUpgradeRequest"> Manual rollback upgrade for a cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Manual rollback upgrade for a cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusterpools/{clusterPoolName}/clusters/{clusterName}/rollback</description></item><item><term>Operation Id</term><description>Clusters_UpgradeManualRollback</description></item><item><term>Default Api Version</term><description>2024-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HDInsight.Containers.HDInsightClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterRollbackUpgradeRequest" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
