<Type Name="OpenIdConnectProtocolValidator" FullName="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator">
  <TypeSignature Language="C#" Value="public class OpenIdConnectProtocolValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpenIdConnectProtocolValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class OpenIdConnectProtocolValidator" />
  <TypeSignature Language="F#" Value="type OpenIdConnectProtocolValidator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
    <AssemblyVersion>5.6.0.0</AssemblyVersion>
    <AssemblyVersion>6.5.0.0</AssemblyVersion>
    <AssemblyVersion>6.5.1.0</AssemblyVersion>
    <AssemblyVersion>6.6.0.0</AssemblyVersion>
    <AssemblyVersion>6.7.0.0</AssemblyVersion>
    <AssemblyVersion>6.7.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator" /> is used to ensure that an <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage" />
             obtained using OpenIdConnect is compliant with  http://openid.net/specs/openid-connect-core-1_0.html .
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenIdConnectProtocolValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator" />,
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoProviderFactory">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.CryptoProviderFactory CryptoProviderFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.CryptoProviderFactory CryptoProviderFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.CryptoProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoProviderFactory As CryptoProviderFactory" />
      <MemberSignature Language="F#" Value="member this.CryptoProviderFactory : Microsoft.IdentityModel.Tokens.CryptoProviderFactory with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.CryptoProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.CryptoProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.CryptoProviderFactory" /> that will be used for crypto operations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNonceLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultNonceLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultNonceLifetime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.DefaultNonceLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultNonceLifetime As TimeSpan " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultNonceLifetime : TimeSpan" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.DefaultNonceLifetime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Default for the how long the nonce is valid.
            </summary>
        <remarks>default: 1 hour.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNonce">
      <MemberSignature Language="C#" Value="public virtual string GenerateNonce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateNonce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.GenerateNonce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateNonce () As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateNonce : unit -&gt; string&#xA;override this.GenerateNonce : unit -&gt; string" Usage="openIdConnectProtocolValidator.GenerateNonce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generates a value suitable to use as a nonce.
            </summary>
        <returns>a nonce</returns>
        <remarks>if <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireTimeStampInNonce" /> is true then the 'nonce' will contain the Epoch time as the prefix, seperated by a '.'.
            <para>for example: 635410359229176103.MjQxMzU0ODUtMTdiNi00NzAwLWE4MjYtNTE4NGExYmMxNTNlZmRkOGU4NjctZjQ5OS00MWIyLTljNTEtMjg3NmM0NzI4ZTc5</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.HashAlgorithm GetHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.HashAlgorithm GetHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.GetHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashAlgorithm (algorithm As String) As HashAlgorithm" />
      <MemberSignature Language="F#" Value="abstract member GetHashAlgorithm : string -&gt; System.Security.Cryptography.HashAlgorithm&#xA;override this.GetHashAlgorithm : string -&gt; System.Security.Cryptography.HashAlgorithm" Usage="openIdConnectProtocolValidator.GetHashAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">string representing the hash algorithm</param>
        <summary>
            Returns a <see cref="T:System.Security.Cryptography.HashAlgorithm" /> corresponding to string 'algorithm' after translation using <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.HashAlgorithmMap" />.
            </summary>
        <returns>A <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; HashAlgorithmMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; HashAlgorithmMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.HashAlgorithmMap" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithmMap As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmMap : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.HashAlgorithmMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the algorithm mapping between OpenIdConnect and .Net for Hash algorithms.
            a <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains mappings from the JWT namespace http://tools.ietf.org/html/rfc7518 to .Net.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdTokenValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Protocols.OpenIdConnect.IdTokenValidator IdTokenValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Protocols.OpenIdConnect.IdTokenValidator IdTokenValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.IdTokenValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property IdTokenValidator As IdTokenValidator" />
      <MemberSignature Language="F#" Value="member this.IdTokenValidator : Microsoft.IdentityModel.Protocols.OpenIdConnect.IdTokenValidator with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.IdTokenValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Protocols.OpenIdConnect.IdTokenValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the delegate for validating 'id_token'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonceLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan NonceLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan NonceLifetime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.NonceLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property NonceLifetime As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.NonceLifetime : TimeSpan with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.NonceLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or set the <see cref="T:System.TimeSpan" /> defining how long a nonce is valid.
            </summary>
        <value>To be added.</value>
        <remarks>If <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireTimeStampInNonce" /> is true, then the nonce timestamp is bound by DateTime.UtcNow + NonceLifetime.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">If 'value' is less than or equal to 'TimeSpan.Zero'.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireAcr">
      <MemberSignature Language="C#" Value="public bool RequireAcr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireAcr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAcr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireAcr As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireAcr : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAcr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if an 'acr' claim is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireAmr">
      <MemberSignature Language="C#" Value="public bool RequireAmr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireAmr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAmr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireAmr As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireAmr : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAmr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if an 'amr' claim is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireAuthTime">
      <MemberSignature Language="C#" Value="public bool RequireAuthTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireAuthTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAuthTime" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireAuthTime As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireAuthTime : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAuthTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if an 'auth_time' claim is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireAzp">
      <MemberSignature Language="C#" Value="public bool RequireAzp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireAzp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAzp" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireAzp As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireAzp : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireAzp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if an 'azp' claim is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireNonce">
      <MemberSignature Language="C#" Value="public bool RequireNonce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireNonce" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireNonce" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireNonce As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireNonce : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireNonce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get or sets if a nonce is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireState">
      <MemberSignature Language="C#" Value="public bool RequireState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireState" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireState As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireState : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if a 'state' is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireStateValidation">
      <MemberSignature Language="C#" Value="public bool RequireStateValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireStateValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireStateValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireStateValidation As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireStateValidation : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireStateValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if validation of 'state' is turned on or off.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireSub">
      <MemberSignature Language="C#" Value="public bool RequireSub { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSub" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireSub" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireSub As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireSub : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireSub" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if a 'sub' claim is required.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireSubByDefault">
      <MemberSignature Language="C#" Value="public static bool RequireSubByDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSubByDefault" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireSubByDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RequireSubByDefault As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireSubByDefault : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireSubByDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value for default RequreSub.
            </summary>
        <value>To be added.</value>
        <remarks>default: true.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireTimeStampInNonce">
      <MemberSignature Language="C#" Value="public bool RequireTimeStampInNonce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireTimeStampInNonce" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireTimeStampInNonce" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireTimeStampInNonce As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireTimeStampInNonce : bool with get, set" Usage="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireTimeStampInNonce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or set logic to control if a nonce is prefixed with a timestamp.
            </summary>
        <value>To be added.</value>
        <remarks>if <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireTimeStampInNonce" /> is true then:
            <para><see cref="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.GenerateNonce" /> will return a 'nonce' with the Epoch time as the prefix, delimited with a '.'.</para><para><see cref="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateNonce(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" /> will require that the 'nonce' has a valid time as the prefix.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAtHash">
      <MemberSignature Language="C#" Value="protected virtual void ValidateAtHash (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateAtHash(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateAtHash(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateAtHash (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateAtHash : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateAtHash : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateAtHash validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">A <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains the protocol message to validate.</param>
        <summary>
            Validates the 'token' according to http://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'validationContext.ValidatedIdToken' is null.</exception>
        <exception cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolInvalidAtHashException">If the 'at_hash' claim in the 'id_token' does not correspond to the 'access_token' in the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage" /> response.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateAuthenticationResponse">
      <MemberSignature Language="C#" Value="public virtual void ValidateAuthenticationResponse (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateAuthenticationResponse(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateAuthenticationResponse(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateAuthenticationResponse (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateAuthenticationResponse : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateAuthenticationResponse : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateAuthenticationResponse validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains expected values.</param>
        <summary>
            Validates that an OpenIdConnect Response from 'authorization_endpoint" is valid as per http://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        <remarks>It is assumed that the IdToken had ('aud', 'iss', 'signature', 'lifetime') validated.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'validationContext' is null.</exception>
        <exception cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException">If the response is not spec compliant.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateCHash">
      <MemberSignature Language="C#" Value="protected virtual void ValidateCHash (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateCHash(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateCHash(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateCHash (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateCHash : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateCHash : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateCHash validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">A <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains the protocol message to validate.</param>
        <summary>
            Validates the 'code' according to http://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'validationContext.ValidatedIdToken' is null.</exception>
        <exception cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolInvalidCHashException">If the 'c_hash' claim in the 'id_token' does not correspond to the 'code' in the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage" /> response.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateIdToken">
      <MemberSignature Language="C#" Value="protected virtual void ValidateIdToken (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateIdToken(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateIdToken(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateIdToken (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateIdToken : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateIdToken : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateIdToken validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains expected values.</param>
        <summary>
            Validates the claims in the 'id_token' as per http://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateNonce">
      <MemberSignature Language="C#" Value="protected virtual void ValidateNonce (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateNonce(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateNonce(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateNonce (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateNonce : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateNonce : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateNonce validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">A <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains the 'nonce' to validate.</param>
        <summary>
            Validates that the <see cref="T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken" /> contains the nonce.
            </summary>
        <remarks>The timestamp is only validated if <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireTimeStampInNonce" /> is true.
            <para>If <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext.Nonce" /> is not-null, then a matching 'nonce' must exist in the 'id_token'.</para></remarks>
        <exception cref="T:System.ArgumentNullException">If 'validationContext.ValidatedIdToken' is null.</exception>
        <exception cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolInvalidNonceException">If <see cref="P:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.RequireTimeStampInNonce" /> is true and a timestamp is not: found, well formed, negatire or expired.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateState">
      <MemberSignature Language="C#" Value="protected virtual void ValidateState (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateState(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateState(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateState (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateState : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateState : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateState validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">A <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains the 'state' to validate.</param>
        <summary>
            Validates that the 'state' in message is valid.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'validationContext.ProtocolMessage ' is null.</exception>
        <exception cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolInvalidStateException">If 'state' in the context does not match the state in the message.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenResponse">
      <MemberSignature Language="C#" Value="public virtual void ValidateTokenResponse (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateTokenResponse(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateTokenResponse(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateTokenResponse (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateTokenResponse : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateTokenResponse : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateTokenResponse validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains expected values.</param>
        <summary>
            Validates that an OpenIdConnect Response from "token_endpoint" is valid as per http://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        <remarks>It is assumed that the IdToken had ('aud', 'iss', 'signature', 'lifetime') validated.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'validationContext' is null.</exception>
        <exception cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException">If the response is not spec compliant.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUserInfoResponse">
      <MemberSignature Language="C#" Value="public virtual void ValidateUserInfoResponse (Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateUserInfoResponse(class Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateUserInfoResponse(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateUserInfoResponse (validationContext As OpenIdConnectProtocolValidationContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateUserInfoResponse : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit&#xA;override this.ValidateUserInfoResponse : Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext -&gt; unit" Usage="openIdConnectProtocolValidator.ValidateUserInfoResponse validationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.OpenIdConnect</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationContext" Type="Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" />
      </Parameters>
      <Docs>
        <param name="validationContext">the <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidationContext" /> that contains expected values.</param>
        <summary>
            Validates that an OpenIdConnect Response from "useinfo_endpoint" is valid as per http://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'validationContext' is null.</exception>
        <exception cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException">If the response is not spec compliant.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
