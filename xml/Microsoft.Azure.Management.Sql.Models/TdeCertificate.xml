<Type Name="TdeCertificate" FullName="Microsoft.Azure.Management.Sql.Models.TdeCertificate">
  <TypeSignature Language="C#" Value="public class TdeCertificate : Microsoft.Azure.Management.Sql.Models.ProxyResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TdeCertificate extends Microsoft.Azure.Management.Sql.Models.ProxyResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Sql.Models.TdeCertificate" />
  <TypeSignature Language="VB.NET" Value="Public Class TdeCertificate&#xA;Inherits ProxyResource" />
  <TypeSignature Language="F#" Value="type TdeCertificate = class&#xA;    inherit ProxyResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.Sql.Models.ProxyResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="azure-dotnet">
      <AttributeName>Microsoft.Rest.Serialization.JsonTransformation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A TDE certificate that can be uploaded into a server.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TdeCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Models.TdeCertificate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the TdeCertificate class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TdeCertificate (string privateBlob, string id = null, string name = null, string type = null, string certPassword = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string privateBlob, string id, string name, string type, string certPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Models.TdeCertificate.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (privateBlob As String, Optional id As String = null, Optional name As String = null, Optional type As String = null, Optional certPassword As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Sql.Models.TdeCertificate : string * string * string * string * string -&gt; Microsoft.Azure.Management.Sql.Models.TdeCertificate" Usage="new Microsoft.Azure.Management.Sql.Models.TdeCertificate (privateBlob, id, name, type, certPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="privateBlob" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="certPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="privateBlob">The base64 encoded certificate private
            blob.</param>
        <param name="id">Resource ID.</param>
        <param name="name">Resource name.</param>
        <param name="type">Resource type.</param>
        <param name="certPassword">The certificate password.</param>
        <summary>
            Initializes a new instance of the TdeCertificate class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertPassword">
      <MemberSignature Language="C#" Value="public string CertPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Sql.Models.TdeCertificate.CertPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property CertPassword As String" />
      <MemberSignature Language="F#" Value="member this.CertPassword : string with get, set" Usage="Microsoft.Azure.Management.Sql.Models.TdeCertificate.CertPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.certPassword")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the certificate password.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBlob">
      <MemberSignature Language="C#" Value="public string PrivateBlob { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBlob" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Sql.Models.TdeCertificate.PrivateBlob" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBlob As String" />
      <MemberSignature Language="F#" Value="member this.PrivateBlob : string with get, set" Usage="Microsoft.Azure.Management.Sql.Models.TdeCertificate.PrivateBlob" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.privateBlob")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the base64 encoded certificate private blob.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Sql.Models.TdeCertificate.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="tdeCertificate.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>