<Type Name="MetricAnomalyAlertSnoozeCondition" FullName="Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition">
  <TypeSignature Language="C#" Value="public class MetricAnomalyAlertSnoozeCondition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetricAnomalyAlertSnoozeCondition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition" />
  <TypeSignature Language="VB.NET" Value="Public Class MetricAnomalyAlertSnoozeCondition" />
  <TypeSignature Language="F#" Value="type MetricAnomalyAlertSnoozeCondition = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The AlertSnoozeCondition. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricAnomalyAlertSnoozeCondition (int autoSnooze, Azure.AI.MetricsAdvisor.Models.SnoozeScope snoozeScope, bool isOnlyForSuccessive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 autoSnooze, valuetype Azure.AI.MetricsAdvisor.Models.SnoozeScope snoozeScope, bool isOnlyForSuccessive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.#ctor(System.Int32,Azure.AI.MetricsAdvisor.Models.SnoozeScope,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (autoSnooze As Integer, snoozeScope As SnoozeScope, isOnlyForSuccessive As Boolean)" />
      <MemberSignature Language="F#" Value="new Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition : int * Azure.AI.MetricsAdvisor.Models.SnoozeScope * bool -&gt; Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition" Usage="new Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition (autoSnooze, snoozeScope, isOnlyForSuccessive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="autoSnooze" Type="System.Int32" />
        <Parameter Name="snoozeScope" Type="Azure.AI.MetricsAdvisor.Models.SnoozeScope" />
        <Parameter Name="isOnlyForSuccessive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSnooze">The number of data points to be ingested before alerts are enabled again.</param>
        <param name="snoozeScope">
            Defines the set of time series to which this <see cref="T:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition" />
            applies. Anomalies detected out of the specified scope can be added to alerts normally.
            </param>
        <param name="isOnlyForSuccessive">
            If <c>true</c>, snoozing only continues as long as the subsequent data points are anomalies. It will stop
            as soon as a data point that's not an anomaly is found. If <c>false</c>, snoozing only stops when the
            amount of points specified by <paramref name="autoSnooze" /> have been ingested.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSnooze">
      <MemberSignature Language="C#" Value="public int AutoSnooze { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoSnooze" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.AutoSnooze" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSnooze As Integer" />
      <MemberSignature Language="F#" Value="member this.AutoSnooze : int with get, set" Usage="Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.AutoSnooze" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of data points to be ingested before alerts are enabled again.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOnlyForSuccessive">
      <MemberSignature Language="C#" Value="public bool IsOnlyForSuccessive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnlyForSuccessive" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.IsOnlyForSuccessive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOnlyForSuccessive As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsOnlyForSuccessive : bool with get, set" Usage="Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.IsOnlyForSuccessive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If <c>true</c>, snoozing only continues as long as the subsequent data points are anomalies. It will stop
            as soon as a data point that's not an anomaly is found. If <c>false</c>, snoozing only stops when the
            amount of points specified by <see cref="P:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.AutoSnooze" /> have been ingested.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnoozeScope">
      <MemberSignature Language="C#" Value="public Azure.AI.MetricsAdvisor.Models.SnoozeScope SnoozeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.AI.MetricsAdvisor.Models.SnoozeScope SnoozeScope" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.SnoozeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property SnoozeScope As SnoozeScope" />
      <MemberSignature Language="F#" Value="member this.SnoozeScope : Azure.AI.MetricsAdvisor.Models.SnoozeScope with get, set" Usage="Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition.SnoozeScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.MetricsAdvisor.Models.SnoozeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines the set of time series to which this <see cref="T:Azure.AI.MetricsAdvisor.Models.MetricAnomalyAlertSnoozeCondition" />
            applies. Anomalies detected out of the specified scope can be added to alerts normally.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
