<Type Name="TrackingEvent" FullName="Microsoft.Azure.Management.Logic.Models.TrackingEvent">
  <TypeSignature Language="C#" Value="public class TrackingEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TrackingEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Logic.Models.TrackingEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingEvent" />
  <TypeSignature Language="F#" Value="type TrackingEvent = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrackingEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.TrackingEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the TrackingEvent class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrackingEvent (Microsoft.Azure.Management.Logic.Models.EventLevel eventLevel, DateTime eventTime, string recordType, Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Azure.Management.Logic.Models.EventLevel eventLevel, valuetype System.DateTime eventTime, string recordType, class Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.TrackingEvent.#ctor(Microsoft.Azure.Management.Logic.Models.EventLevel,System.DateTime,System.String,Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventLevel As EventLevel, eventTime As DateTime, recordType As String, Optional error As TrackingEventErrorInfo = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Logic.Models.TrackingEvent : Microsoft.Azure.Management.Logic.Models.EventLevel * DateTime * string * Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo -&gt; Microsoft.Azure.Management.Logic.Models.TrackingEvent" Usage="new Microsoft.Azure.Management.Logic.Models.TrackingEvent (eventLevel, eventTime, recordType, error)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventLevel" Type="Microsoft.Azure.Management.Logic.Models.EventLevel" />
        <Parameter Name="eventTime" Type="System.DateTime" />
        <Parameter Name="recordType" Type="System.String" />
        <Parameter Name="error" Type="Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo" />
      </Parameters>
      <Docs>
        <param name="eventTime">To be added.</param>
        <param name="error">To be added.</param>
        <param name="eventLevel">Possible values include: 'LogAlways',
            'Critical', 'Error', 'Warning', 'Informational', 'Verbose'</param>
        <param name="recordType">Possible values include: 'NotSpecified',
            'Custom', 'AS2Message', 'AS2MDN', 'X12Interchange',
            'X12FunctionalGroup', 'X12TransactionSet',
            'X12InterchangeAcknowledgment', 'X12FunctionalGroupAcknowledgment',
            'X12TransactionSetAcknowledgment', 'EdifactInterchange',
            'EdifactFunctionalGroup', 'EdifactTransactionSet',
            'EdifactInterchangeAcknowledgment',
            'EdifactFunctionalGroupAcknowledgment',
            'EdifactTransactionSetAcknowledgment'</param>
        <summary>
            Initializes a new instance of the TrackingEvent class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo Error { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo Error" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.Error" />
      <MemberSignature Language="VB.NET" Value="Public Property Error As TrackingEventErrorInfo" />
      <MemberSignature Language="F#" Value="member this.Error : Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo with get, set" Usage="Microsoft.Azure.Management.Logic.Models.TrackingEvent.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="error")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="error")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Logic.Models.TrackingEventErrorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Logic.Models.EventLevel EventLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.Logic.Models.EventLevel EventLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.EventLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property EventLevel As EventLevel" />
      <MemberSignature Language="F#" Value="member this.EventLevel : Microsoft.Azure.Management.Logic.Models.EventLevel with get, set" Usage="Microsoft.Azure.Management.Logic.Models.TrackingEvent.EventLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="eventLevel")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="eventLevel")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Logic.Models.EventLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets possible values include: 'LogAlways', 'Critical',
            'Error', 'Warning', 'Informational', 'Verbose'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventTime">
      <MemberSignature Language="C#" Value="public DateTime EventTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime EventTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.EventTime" />
      <MemberSignature Language="VB.NET" Value="Public Property EventTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.EventTime : DateTime with get, set" Usage="Microsoft.Azure.Management.Logic.Models.TrackingEvent.EventTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="eventTime")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="eventTime")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordType">
      <MemberSignature Language="C#" Value="public string RecordType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RecordType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.TrackingEvent.RecordType" />
      <MemberSignature Language="VB.NET" Value="Public Property RecordType As String" />
      <MemberSignature Language="F#" Value="member this.RecordType : string with get, set" Usage="Microsoft.Azure.Management.Logic.Models.TrackingEvent.RecordType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="recordType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="recordType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets possible values include: 'NotSpecified', 'Custom',
            'AS2Message', 'AS2MDN', 'X12Interchange', 'X12FunctionalGroup',
            'X12TransactionSet', 'X12InterchangeAcknowledgment',
            'X12FunctionalGroupAcknowledgment',
            'X12TransactionSetAcknowledgment', 'EdifactInterchange',
            'EdifactFunctionalGroup', 'EdifactTransactionSet',
            'EdifactInterchangeAcknowledgment',
            'EdifactFunctionalGroupAcknowledgment',
            'EdifactTransactionSetAcknowledgment'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.TrackingEvent.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="trackingEvent.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
