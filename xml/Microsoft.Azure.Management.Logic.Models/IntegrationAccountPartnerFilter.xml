<Type Name="IntegrationAccountPartnerFilter" FullName="Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter">
  <TypeSignature Language="C#" Value="public class IntegrationAccountPartnerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegrationAccountPartnerFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegrationAccountPartnerFilter" />
  <TypeSignature Language="F#" Value="type IntegrationAccountPartnerFilter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The integration account partner filter for odata query.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegrationAccountPartnerFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the IntegrationAccountPartnerFilter
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegrationAccountPartnerFilter (string partnerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string partnerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (partnerType As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter : string -&gt; Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter" Usage="new Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter partnerType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="partnerType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partnerType">The partner type of integration account
            partner. Possible values include: 'NotSpecified', 'B2B'</param>
        <summary>
            Initializes a new instance of the IntegrationAccountPartnerFilter
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartnerType">
      <MemberSignature Language="C#" Value="public string PartnerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartnerType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.PartnerType" />
      <MemberSignature Language="VB.NET" Value="Public Property PartnerType As String" />
      <MemberSignature Language="F#" Value="member this.PartnerType : string with get, set" Usage="Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.PartnerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="partnerType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="partnerType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the partner type of integration account partner.
            Possible values include: 'NotSpecified', 'B2B'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="integrationAccountPartnerFilter.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Logic</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
