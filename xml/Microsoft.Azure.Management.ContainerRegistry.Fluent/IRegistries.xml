<Type Name="IRegistries" FullName="Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries">
  <TypeSignature Language="C#" Value="public interface IRegistries : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Registry.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistriesOperations&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryManager&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRegistries implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.Registry.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistriesOperations&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryManager&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRegistries&#xA;Implements IBeta, IHasInner(Of IRegistriesOperations), IHasManager(Of IRegistryManager), ISupportsBatchCreation(Of IRegistry), ISupportsCreating(Of IBlank), ISupportsDeletingById, ISupportsDeletingByResourceGroup, ISupportsGettingById(Of IRegistry), ISupportsGettingByResourceGroup(Of IRegistry), ISupportsListing(Of IRegistry), ISupportsListingByResourceGroup(Of IRegistry)" />
  <TypeSignature Language="F#" Value="type IRegistries = interface&#xA;    interface IBeta&#xA;    interface ISupportsCreating&lt;IBlank&gt;&#xA;    interface IHasManager&lt;IRegistryManager&gt;&#xA;    interface IHasInner&lt;IRegistriesOperations&gt;&#xA;    interface ISupportsBatchCreation&lt;IRegistry&gt;&#xA;    interface ISupportsGettingById&lt;IRegistry&gt;&#xA;    interface ISupportsDeletingById&#xA;    interface ISupportsDeletingByResourceGroup&#xA;    interface ISupportsListingByResourceGroup&lt;IRegistry&gt;&#xA;    interface ISupportsGettingByResourceGroup&lt;IRegistry&gt;&#xA;    interface ISupportsListing&lt;IRegistry&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.61</AssemblyVersion>
    <AssemblyVersion>1.0.0.62</AssemblyVersion>
    <AssemblyVersion>1.0.0.63</AssemblyVersion>
    <AssemblyVersion>1.0.0.64</AssemblyVersion>
    <AssemblyVersion>1.0.0.65</AssemblyVersion>
    <AssemblyVersion>1.0.0.66</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Registry.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistry&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistriesOperations&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryManager&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point to the registry management API.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailability">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult CheckNameAvailability (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult CheckNameAvailability(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.CheckNameAvailability(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNameAvailability (name As String) As ICheckNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailability : string -&gt; Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult" Usage="iRegistries.CheckNameAvailability name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The container registry name to check.</param>
        <summary>
            Checks if the specified container registry name is valid and available.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Whether the name is available and other info if not.</return>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult&gt; CheckNameAvailabilityAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult&gt; CheckNameAvailabilityAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.CheckNameAvailabilityAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNameAvailabilityAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ICheckNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult&gt;" Usage="iRegistries.CheckNameAvailabilityAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ICheckNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="name">The container registry name to check.</param>
        <summary>
            Checks if container registry name is valid and is not in use asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the future computation of this call, returning whether the name is available or other info if not.</return>
      </Docs>
    </Member>
    <Member MemberName="GetBuildSourceUploadUrl">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition GetBuildSourceUploadUrl (string rgName, string acrName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition GetBuildSourceUploadUrl(string rgName, string acrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.GetBuildSourceUploadUrl(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBuildSourceUploadUrl (rgName As String, acrName As String) As ISourceUploadDefinition" />
      <MemberSignature Language="F#" Value="abstract member GetBuildSourceUploadUrl : string * string -&gt; Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition" Usage="iRegistries.GetBuildSourceUploadUrl (rgName, acrName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgName" Type="System.String" />
        <Parameter Name="acrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgName">The name of the resource group.</param>
        <param name="acrName">The name of the container.</param>
        <summary>
            The function that gets the URL of the build source upload.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The URL of the build source upload.</return>
      </Docs>
    </Member>
    <Member MemberName="GetBuildSourceUploadUrlAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition&gt; GetBuildSourceUploadUrlAsync (string rgName, string acrName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition&gt; GetBuildSourceUploadUrlAsync(string rgName, string acrName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.GetBuildSourceUploadUrlAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBuildSourceUploadUrlAsync (rgName As String, acrName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ISourceUploadDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildSourceUploadUrlAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition&gt;" Usage="iRegistries.GetBuildSourceUploadUrlAsync (rgName, acrName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ISourceUploadDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgName" Type="System.String" />
        <Parameter Name="acrName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="rgName">The name of the resource group.</param>
        <param name="acrName">The name of the container.</param>
        <summary>
            The function that gets the URL of the build source upload ashnchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The URL of the build source upload.</return>
      </Docs>
    </Member>
    <Member MemberName="GetCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials GetCredentials (string resourceGroupName, string registryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials GetCredentials(string resourceGroupName, string registryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.GetCredentials(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredentials (resourceGroupName As String, registryName As String) As IRegistryCredentials" />
      <MemberSignature Language="F#" Value="abstract member GetCredentials : string * string -&gt; Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials" Usage="iRegistries.GetCredentials (resourceGroupName, registryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="registryName">The registry name.</param>
        <summary>
            Gets the login credentials for the specified container registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The container registry's login credentials.</return>
      </Docs>
    </Member>
    <Member MemberName="GetCredentialsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt; GetCredentialsAsync (string resourceGroupName, string registryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt; GetCredentialsAsync(string resourceGroupName, string registryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.GetCredentialsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredentialsAsync (resourceGroupName As String, registryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IRegistryCredentials)" />
      <MemberSignature Language="F#" Value="abstract member GetCredentialsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt;" Usage="iRegistries.GetCredentialsAsync (resourceGroupName, registryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="registryName">The registry name.</param>
        <summary>
            Gets the login credentials for the specified container registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the future computation of this call, returning the container registry's login credentials.</return>
      </Docs>
    </Member>
    <Member MemberName="ListQuotaUsages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt; ListQuotaUsages (string resourceGroupName, string registryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt; ListQuotaUsages(string resourceGroupName, string registryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.ListQuotaUsages(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListQuotaUsages (resourceGroupName As String, registryName As String) As IReadOnlyCollection(Of RegistryUsage)" />
      <MemberSignature Language="F#" Value="abstract member ListQuotaUsages : string * string -&gt; System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt;" Usage="iRegistries.ListQuotaUsages (resourceGroupName, registryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="registryName">The registry name.</param>
        <summary>
            Lists the quota usages for the specified container registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The list of container registry's quota usages.</return>
      </Docs>
    </Member>
    <Member MemberName="ListQuotaUsagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt;&gt; ListQuotaUsagesAsync (string resourceGroupName, string registryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt;&gt; ListQuotaUsagesAsync(string resourceGroupName, string registryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.ListQuotaUsagesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListQuotaUsagesAsync (resourceGroupName As String, registryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IReadOnlyCollection(Of RegistryUsage))" />
      <MemberSignature Language="F#" Value="abstract member ListQuotaUsagesAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt;&gt;" Usage="iRegistries.ListQuotaUsagesAsync (resourceGroupName, registryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.Models.RegistryUsage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="registryName">The registry name.</param>
        <summary>
            Lists the quota usages for the specified container registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the future computation of this call, returning the list of container registry's quota usages.</return>
      </Docs>
    </Member>
    <Member MemberName="RegenerateCredential">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials RegenerateCredential (string resourceGroupName, string registryName, Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType accessKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials RegenerateCredential(string resourceGroupName, string registryName, class Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType accessKeyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.RegenerateCredential(System.String,System.String,Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegenerateCredential (resourceGroupName As String, registryName As String, accessKeyType As AccessKeyType) As IRegistryCredentials" />
      <MemberSignature Language="F#" Value="abstract member RegenerateCredential : string * string * Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType -&gt; Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials" Usage="iRegistries.RegenerateCredential (resourceGroupName, registryName, accessKeyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="accessKeyType" Type="Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="registryName">The registry name.</param>
        <param name="accessKeyType">The admin user access key name to regenerate the value for.</param>
        <summary>
            Regenerates the value for one of the admin user access key for the specified container registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The container registry's login credentials.</return>
      </Docs>
    </Member>
    <Member MemberName="RegenerateCredentialAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt; RegenerateCredentialAsync (string resourceGroupName, string registryName, Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType accessKeyType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt; RegenerateCredentialAsync(string resourceGroupName, string registryName, class Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType accessKeyType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.RegenerateCredentialAsync(System.String,System.String,Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegenerateCredentialAsync (resourceGroupName As String, registryName As String, accessKeyType As AccessKeyType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IRegistryCredentials)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateCredentialAsync : string * string * Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt;" Usage="iRegistries.RegenerateCredentialAsync (resourceGroupName, registryName, accessKeyType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="accessKeyType" Type="Microsoft.Azure.Management.ContainerRegistry.Fluent.AccessKeyType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The resource group name.</param>
        <param name="registryName">The registry name.</param>
        <param name="accessKeyType">The admin user access key name to regenerate the value for.</param>
        <summary>
            Regenerates the value for one of the admin user access key for the specified container registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the future computation of this call, returning the container registry's login credentials.</return>
      </Docs>
    </Member>
    <Member MemberName="Webhooks">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.Registries.WebhooksClient.IWebhooksClient Webhooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.Registries.WebhooksClient.IWebhooksClient Webhooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.Webhooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Webhooks As IWebhooksClient" />
      <MemberSignature Language="F#" Value="member this.Webhooks : Microsoft.Azure.Management.ContainerRegistry.Fluent.Registries.WebhooksClient.IWebhooksClient" Usage="Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistries.Webhooks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.Registries.WebhooksClient.IWebhooksClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets returns entry point to manage container registry webhooks.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
