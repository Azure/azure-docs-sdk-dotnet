<Type Name="IRegistryTasks" FullName="Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks">
  <TypeSignature Language="C#" Value="public interface IRegistryTasks : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.RegistryTask.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ITasksOperations&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRegistryTasks implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.RegistryTask.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.ITasksOperations&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRegistryTasks&#xA;Implements IBeta, IHasInner(Of ITasksOperations), ISupportsCreating(Of IBlank)" />
  <TypeSignature Language="F#" Value="type IRegistryTasks = interface&#xA;    interface IBeta&#xA;    interface IHasInner&lt;ITasksOperations&gt;&#xA;    interface ISupportsCreating&lt;IBlank&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.RegistryTask.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.ITasksOperations&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Interface to define the RegistryTasks collection.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DeleteByRegistry">
      <MemberSignature Language="C#" Value="public void DeleteByRegistry (string resourceGroupName, string registryName, string taskName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteByRegistry(string resourceGroupName, string registryName, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks.DeleteByRegistry(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteByRegistry (resourceGroupName As String, registryName As String, taskName As String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteByRegistry : string * string * string -&gt; unit" Usage="iRegistryTasks.DeleteByRegistry (resourceGroupName, registryName, taskName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group of the parent registry.</param>
        <param name="registryName">The name of the parent registry.</param>
        <param name="taskName">The name of the task.</param>
        <summary>
            Deletes a task in a registry.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByRegistryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteByRegistryAsync (string resourceGroupName, string registryName, string taskName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteByRegistryAsync(string resourceGroupName, string registryName, string taskName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks.DeleteByRegistryAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteByRegistryAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRegistryTasks.DeleteByRegistryAsync (resourceGroupName, registryName, taskName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group of the parent registry.</param>
        <param name="registryName">The name of the parent registry.</param>
        <param name="taskName">The name of the task.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Deletes a task in a registry asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The handle to the request.</return>
      </Docs>
    </Member>
    <Member MemberName="GetByRegistry">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask GetByRegistry (string resourceGroupName, string registryName, string taskName, bool includeSecrets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask GetByRegistry(string resourceGroupName, string registryName, string taskName, bool includeSecrets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks.GetByRegistry(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByRegistry (resourceGroupName As String, registryName As String, taskName As String, includeSecrets As Boolean) As IRegistryTask" />
      <MemberSignature Language="F#" Value="abstract member GetByRegistry : string * string * string * bool -&gt; Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask" Usage="iRegistryTasks.GetByRegistry (resourceGroupName, registryName, taskName, includeSecrets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="includeSecrets" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group of the parent registry.</param>
        <param name="registryName">The name of the parent registry.</param>
        <param name="taskName">The name of the task.</param>
        <param name="includeSecrets">Whether to include secrets or not.</param>
        <summary>
            Gets a task in a registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The task.</return>
      </Docs>
    </Member>
    <Member MemberName="GetByRegistryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt; GetByRegistryAsync (string resourceGroupName, string registryName, string taskName, bool includeSecrets, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt; GetByRegistryAsync(string resourceGroupName, string registryName, string taskName, bool includeSecrets, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks.GetByRegistryAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetByRegistryAsync : string * string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;" Usage="iRegistryTasks.GetByRegistryAsync (resourceGroupName, registryName, taskName, includeSecrets, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="includeSecrets" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group of the parent registry.</param>
        <param name="registryName">The name of the parent registry.</param>
        <param name="taskName">The name of the task.</param>
        <param name="includeSecrets">Whether to include secrets or not.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Gets a task in a registry asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The task.</return>
      </Docs>
    </Member>
    <Member MemberName="ListByRegistry">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt; ListByRegistry (string resourceGroupName, string registryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt; ListByRegistry(string resourceGroupName, string registryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks.ListByRegistry(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListByRegistry (resourceGroupName As String, registryName As String) As IEnumerable(Of IRegistryTask)" />
      <MemberSignature Language="F#" Value="abstract member ListByRegistry : string * string -&gt; seq&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;" Usage="iRegistryTasks.ListByRegistry (resourceGroupName, registryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group of the parent registry.</param>
        <param name="registryName">The name of the parent registry.</param>
        <summary>
            Lists the tasks in a registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The tasks with parent registry registry.</return>
      </Docs>
    </Member>
    <Member MemberName="ListByRegistryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;&gt; ListByRegistryAsync (string resourceGroupName, string registryName, bool loadAllPages = true, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;&gt; ListByRegistryAsync(string resourceGroupName, string registryName, bool loadAllPages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTasks.ListByRegistryAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListByRegistryAsync : string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;&gt;" Usage="iRegistryTasks.ListByRegistryAsync (resourceGroupName, registryName, loadAllPages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.ContainerRegistry.Fluent.IRegistryTask&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="registryName" Type="System.String" />
        <Parameter Name="loadAllPages" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group of the parent registry.</param>
        <param name="registryName">The name of the parent registry.</param>
        <param name="loadAllPages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Lists the tasks in a registry asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The tasks with parent registry registry.</return>
      </Docs>
    </Member>
  </Members>
</Type>