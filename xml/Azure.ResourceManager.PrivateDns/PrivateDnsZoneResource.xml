<Type Name="PrivateDnsZoneResource" FullName="Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource">
  <TypeSignature Language="C#" Value="public class PrivateDnsZoneResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrivateDnsZoneResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource" />
  <TypeSignature Language="VB.NET" Value="Public Class PrivateDnsZoneResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type PrivateDnsZoneResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a PrivateDnsZone along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetPrivateDnsZoneResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetPrivateDnsZone method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrivateDnsZoneResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;" Usage="privateDnsZoneResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;" Usage="privateDnsZoneResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string privateZoneName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateZoneName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, privateZoneName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, privateZoneName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="privateZoneName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="privateZoneName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsZoneData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.PrivateDns.PrivateDnsZoneData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As PrivateDnsZoneData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.PrivateDns.PrivateDnsZoneData" Usage="Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsZoneData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.Delete(Azure.WaitUntil,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="privateDnsZoneResource.Delete (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.DeleteAsync(Azure.WaitUntil,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="privateDnsZoneResource.DeleteAsync (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;" Usage="privateDnsZoneResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets within the zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;" Usage="privateDnsZoneResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets within the zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsAaaaRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt; GetPrivateDnsAaaaRecord (string aaaaRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt; GetPrivateDnsAaaaRecord(string aaaaRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsAaaaRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsAaaaRecord (aaaaRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsAaaaRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsAaaaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;&#xA;override this.GetPrivateDnsAaaaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsAaaaRecord (aaaaRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aaaaRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="aaaaRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{aaaaRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aaaaRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsAaaaRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;&gt; GetPrivateDnsAaaaRecordAsync (string aaaaRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;&gt; GetPrivateDnsAaaaRecordAsync(string aaaaRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsAaaaRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsAaaaRecordAsync (aaaaRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsAaaaRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsAaaaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;&gt;&#xA;override this.GetPrivateDnsAaaaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsAaaaRecordAsync (aaaaRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aaaaRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="aaaaRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{aaaaRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aaaaRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsAaaaRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection GetPrivateDnsAaaaRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection GetPrivateDnsAaaaRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsAaaaRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsAaaaRecords () As PrivateDnsAaaaRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsAaaaRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection&#xA;override this.GetPrivateDnsAaaaRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsAaaaRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsAaaaRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsAaaaRecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsAaaaRecordResources and their operations over a PrivateDnsAaaaRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsARecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt; GetPrivateDnsARecord (string aRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt; GetPrivateDnsARecord(string aRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsARecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsARecord (aRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsARecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsARecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;&#xA;override this.GetPrivateDnsARecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsARecord (aRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="aRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{aRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsARecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;&gt; GetPrivateDnsARecordAsync (string aRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;&gt; GetPrivateDnsARecordAsync(string aRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsARecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsARecordAsync (aRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsARecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsARecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;&gt;&#xA;override this.GetPrivateDnsARecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsARecordAsync (aRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsARecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="aRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{aRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsARecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection GetPrivateDnsARecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection GetPrivateDnsARecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsARecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsARecords () As PrivateDnsARecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsARecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection&#xA;override this.GetPrivateDnsARecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsARecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsARecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsARecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsARecordResources and their operations over a PrivateDnsARecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsCnameRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt; GetPrivateDnsCnameRecord (string cnameRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt; GetPrivateDnsCnameRecord(string cnameRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsCnameRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsCnameRecord (cnameRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsCnameRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsCnameRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;&#xA;override this.GetPrivateDnsCnameRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsCnameRecord (cnameRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cnameRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cnameRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{cnameRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cnameRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsCnameRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;&gt; GetPrivateDnsCnameRecordAsync (string cnameRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;&gt; GetPrivateDnsCnameRecordAsync(string cnameRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsCnameRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsCnameRecordAsync (cnameRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsCnameRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsCnameRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;&gt;&#xA;override this.GetPrivateDnsCnameRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsCnameRecordAsync (cnameRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cnameRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cnameRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{cnameRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cnameRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsCnameRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection GetPrivateDnsCnameRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection GetPrivateDnsCnameRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsCnameRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsCnameRecords () As PrivateDnsCnameRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsCnameRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection&#xA;override this.GetPrivateDnsCnameRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsCnameRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsCnameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsCnameRecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsCnameRecordResources and their operations over a PrivateDnsCnameRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsMXRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt; GetPrivateDnsMXRecord (string mxRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt; GetPrivateDnsMXRecord(string mxRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsMXRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsMXRecord (mxRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsMXRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsMXRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;&#xA;override this.GetPrivateDnsMXRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsMXRecord (mxRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mxRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mxRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{mxRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mxRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsMXRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;&gt; GetPrivateDnsMXRecordAsync (string mxRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;&gt; GetPrivateDnsMXRecordAsync(string mxRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsMXRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsMXRecordAsync (mxRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsMXRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsMXRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;&gt;&#xA;override this.GetPrivateDnsMXRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsMXRecordAsync (mxRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mxRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mxRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{mxRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mxRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsMXRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection GetPrivateDnsMXRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection GetPrivateDnsMXRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsMXRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsMXRecords () As PrivateDnsMXRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsMXRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection&#xA;override this.GetPrivateDnsMXRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsMXRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsMXRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsMXRecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsMXRecordResources and their operations over a PrivateDnsMXRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsPtrRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt; GetPrivateDnsPtrRecord (string ptrRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt; GetPrivateDnsPtrRecord(string ptrRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsPtrRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsPtrRecord (ptrRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsPtrRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsPtrRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;&#xA;override this.GetPrivateDnsPtrRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsPtrRecord (ptrRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptrRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ptrRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{ptrRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ptrRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsPtrRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;&gt; GetPrivateDnsPtrRecordAsync (string ptrRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;&gt; GetPrivateDnsPtrRecordAsync(string ptrRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsPtrRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsPtrRecordAsync (ptrRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsPtrRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsPtrRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;&gt;&#xA;override this.GetPrivateDnsPtrRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsPtrRecordAsync (ptrRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptrRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ptrRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{ptrRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ptrRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsPtrRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection GetPrivateDnsPtrRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection GetPrivateDnsPtrRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsPtrRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsPtrRecords () As PrivateDnsPtrRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsPtrRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection&#xA;override this.GetPrivateDnsPtrRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsPtrRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsPtrRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsPtrRecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsPtrRecordResources and their operations over a PrivateDnsPtrRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsSoaRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt; GetPrivateDnsSoaRecord (string soaRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt; GetPrivateDnsSoaRecord(string soaRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsSoaRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsSoaRecord (soaRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsSoaRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsSoaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;&#xA;override this.GetPrivateDnsSoaRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsSoaRecord (soaRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soaRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="soaRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{soaRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="soaRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsSoaRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;&gt; GetPrivateDnsSoaRecordAsync (string soaRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;&gt; GetPrivateDnsSoaRecordAsync(string soaRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsSoaRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsSoaRecordAsync (soaRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsSoaRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsSoaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;&gt;&#xA;override this.GetPrivateDnsSoaRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsSoaRecordAsync (soaRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soaRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="soaRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{soaRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="soaRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsSoaRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection GetPrivateDnsSoaRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection GetPrivateDnsSoaRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsSoaRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsSoaRecords () As PrivateDnsSoaRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsSoaRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection&#xA;override this.GetPrivateDnsSoaRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsSoaRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsSoaRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsSoaRecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsSoaRecordResources and their operations over a PrivateDnsSoaRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsSrvRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt; GetPrivateDnsSrvRecord (string srvRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt; GetPrivateDnsSrvRecord(string srvRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsSrvRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsSrvRecord (srvRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsSrvRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsSrvRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;&#xA;override this.GetPrivateDnsSrvRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsSrvRecord (srvRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srvRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="srvRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{srvRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srvRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsSrvRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;&gt; GetPrivateDnsSrvRecordAsync (string srvRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;&gt; GetPrivateDnsSrvRecordAsync(string srvRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsSrvRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsSrvRecordAsync (srvRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsSrvRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsSrvRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;&gt;&#xA;override this.GetPrivateDnsSrvRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsSrvRecordAsync (srvRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srvRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="srvRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{srvRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srvRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsSrvRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection GetPrivateDnsSrvRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection GetPrivateDnsSrvRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsSrvRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsSrvRecords () As PrivateDnsSrvRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsSrvRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection&#xA;override this.GetPrivateDnsSrvRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsSrvRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsSrvRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsSrvRecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsSrvRecordResources and their operations over a PrivateDnsSrvRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsTxtRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt; GetPrivateDnsTxtRecord (string txtRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt; GetPrivateDnsTxtRecord(string txtRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsTxtRecord(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsTxtRecord (txtRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsTxtRecordResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsTxtRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;&#xA;override this.GetPrivateDnsTxtRecord : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;" Usage="privateDnsZoneResource.GetPrivateDnsTxtRecord (txtRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="txtRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{txtRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="txtRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsTxtRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;&gt; GetPrivateDnsTxtRecordAsync (string txtRecordName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;&gt; GetPrivateDnsTxtRecordAsync(string txtRecordName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsTxtRecordAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsTxtRecordAsync (txtRecordName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsTxtRecordResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsTxtRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;&gt;&#xA;override this.GetPrivateDnsTxtRecordAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;&gt;" Usage="privateDnsZoneResource.GetPrivateDnsTxtRecordAsync (txtRecordName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtRecordName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="txtRecordName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{txtRecordName}</description></item><item><term>Operation Id</term><description>RecordSets_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="txtRecordName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsTxtRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection GetPrivateDnsTxtRecords ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection GetPrivateDnsTxtRecords() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetPrivateDnsTxtRecords" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsTxtRecords () As PrivateDnsTxtRecordCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsTxtRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection&#xA;override this.GetPrivateDnsTxtRecords : unit -&gt; Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection" Usage="privateDnsZoneResource.GetPrivateDnsTxtRecords " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.PrivateDnsTxtRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateDnsTxtRecordResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of PrivateDnsTxtRecordResources and their operations over a PrivateDnsTxtRecordResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecords">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt; GetRecords (int? top = default, string recordsetnamesuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt; GetRecords(valuetype System.Nullable`1&lt;int32&gt; top, string recordsetnamesuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetRecords(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecords (Optional top As Nullable(Of Integer) = Nothing, Optional recordsetnamesuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PrivateDnsRecordData)" />
      <MemberSignature Language="F#" Value="abstract member GetRecords : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt;&#xA;override this.GetRecords : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt;" Usage="privateDnsZoneResource.GetRecords (top, recordsetnamesuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordsetnamesuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordsetnamesuffix"> The suffix label of the record set name to be used to filter the record set enumeration. If this parameter is specified, the returned enumeration will only contain records that end with ".&lt;recordsetnamesuffix&gt;". </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a Private DNS zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/ALL</description></item><item><term>Operation Id</term><description>RecordSets_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt; GetRecordsAsync (int? top = default, string recordsetnamesuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt; GetRecordsAsync(valuetype System.Nullable`1&lt;int32&gt; top, string recordsetnamesuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetRecordsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional recordsetnamesuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PrivateDnsRecordData)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt;&#xA;override this.GetRecordsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt;" Usage="privateDnsZoneResource.GetRecordsAsync (top, recordsetnamesuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PrivateDns.PrivateDnsRecordData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordsetnamesuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordsetnamesuffix"> The suffix label of the record set name to be used to filter the record set enumeration. If this parameter is specified, the returned enumeration will only contain records that end with ".&lt;recordsetnamesuffix&gt;". </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a Private DNS zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/ALL</description></item><item><term>Operation Id</term><description>RecordSets_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PrivateDns.PrivateDnsBaseRecordData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkLink">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt; GetVirtualNetworkLink (string virtualNetworkLinkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt; GetVirtualNetworkLink(string virtualNetworkLinkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetVirtualNetworkLink(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkLink (virtualNetworkLinkName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;&#xA;override this.GetVirtualNetworkLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;" Usage="privateDnsZoneResource.GetVirtualNetworkLink (virtualNetworkLinkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkLinkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkLinkName"> The name of the virtual network link. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a virtual network link to the specified Private DNS zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/virtualNetworkLinks/{virtualNetworkLinkName}</description></item><item><term>Operation Id</term><description>VirtualNetworkLinks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkLinkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkLinkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkLinkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;&gt; GetVirtualNetworkLinkAsync (string virtualNetworkLinkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;&gt; GetVirtualNetworkLinkAsync(string virtualNetworkLinkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetVirtualNetworkLinkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkLinkAsync (virtualNetworkLinkName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;&gt;&#xA;override this.GetVirtualNetworkLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;&gt;" Usage="privateDnsZoneResource.GetVirtualNetworkLinkAsync (virtualNetworkLinkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.VirtualNetworkLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkLinkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkLinkName"> The name of the virtual network link. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a virtual network link to the specified Private DNS zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/virtualNetworkLinks/{virtualNetworkLinkName}</description></item><item><term>Operation Id</term><description>VirtualNetworkLinks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkLinkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkLinkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection GetVirtualNetworkLinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection GetVirtualNetworkLinks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.GetVirtualNetworkLinks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkLinks () As VirtualNetworkLinkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkLinks : unit -&gt; Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection&#xA;override this.GetVirtualNetworkLinks : unit -&gt; Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection" Usage="privateDnsZoneResource.GetVirtualNetworkLinks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PrivateDns.VirtualNetworkLinkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualNetworkLinkResources in the PrivateDnsZone. </summary>
        <returns> An object representing collection of VirtualNetworkLinkResources and their operations over a VirtualNetworkLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;" Usage="privateDnsZoneResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;" Usage="privateDnsZoneResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateDnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;" Usage="privateDnsZoneResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateDnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;" Usage="privateDnsZoneResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.PrivateDns.PrivateDnsZoneData data, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.PrivateDns.PrivateDnsZoneData data, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.Update(Azure.WaitUntil,Azure.ResourceManager.PrivateDns.PrivateDnsZoneData,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As PrivateDnsZoneData, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of PrivateDnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.PrivateDns.PrivateDnsZoneData * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.PrivateDns.PrivateDnsZoneData * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;" Usage="privateDnsZoneResource.Update (waitUntil, data, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.PrivateDns.PrivateDnsZoneData" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> Parameters supplied to the Update operation. </param>
        <param name="ifMatch"> The ETag of the Private DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a Private DNS zone. Does not modify virtual network links or DNS records within the zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.PrivateDns.PrivateDnsZoneData data, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.PrivateDns.PrivateDnsZoneData data, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.PrivateDns.PrivateDnsZoneData,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As PrivateDnsZoneData, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of PrivateDnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.PrivateDns.PrivateDnsZoneData * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.PrivateDns.PrivateDnsZoneData * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;" Usage="privateDnsZoneResource.UpdateAsync (waitUntil, data, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PrivateDns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.PrivateDns.PrivateDnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.PrivateDns.PrivateDnsZoneData" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> Parameters supplied to the Update operation. </param>
        <param name="ifMatch"> The ETag of the Private DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a Private DNS zone. Does not modify virtual network links or DNS records within the zone.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}</description></item><item><term>Operation Id</term><description>PrivateDnsZones_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
