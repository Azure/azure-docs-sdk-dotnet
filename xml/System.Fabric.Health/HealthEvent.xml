<Type Name="HealthEvent" FullName="System.Fabric.Health.HealthEvent">
  <TypeSignature Language="C#" Value="public sealed class HealthEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HealthEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Health.HealthEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents health information reported on a health entity, such as cluster, application or node,
            with additional metadata added by the Health Manager.</para>
    </summary>
    <remarks>Health events are returned by health queries such as
            <see cref="M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)" />.
            They contain <see cref="T:System.Fabric.Health.HealthInformation" /> sent to Health Manager in a <see cref="T:System.Fabric.Health.HealthReport" />.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HealthInformation">
      <MemberSignature Language="C#" Value="public System.Fabric.Health.HealthInformation HealthInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.Health.HealthInformation HealthInformation" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Health.HealthEvent.HealthInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.Health.HealthInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the health information that was sent to health store in a <see cref="T:System.Fabric.Health.HealthReport" />.</para>
        </summary>
        <value>
          <para>The health information that was sent to health store in a <see cref="T:System.Fabric.Health.HealthReport" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpired">
      <MemberSignature Language="C#" Value="public bool IsExpired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpired" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Health.HealthEvent.IsExpired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets a value that indicates whether the health event has expired.</para>
        </summary>
        <value>
          <para>
            <languageKeyword>true</languageKeyword> if the health event has expired;
                <languageKeyword>false</languageKeyword> if the health event was not expired at the time the health store evaluated the query.</para>
        </value>
        <remarks>
          <para>An event can be expired only if RemoveWhenExpired is false.
            Otherwise, the event is not returned by query and is removed from the store.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastErrorTransitionAt">
      <MemberSignature Language="C#" Value="public DateTime LastErrorTransitionAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastErrorTransitionAt" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Health.HealthEvent.LastErrorTransitionAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If the current <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> is <see cref="F:System.Fabric.Health.HealthState.Error" />, returns 
            the time at which the health report was first reported with <see cref="F:System.Fabric.Health.HealthState.Error" />. For periodic reporting, many reports 
            with the same state may have been generated.</para>
          <para>If the current <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> is <see cref="F:System.Fabric.Health.HealthState.Ok" /> or 
            <see cref="F:System.Fabric.Health.HealthState.Warning" />, returns the time at which the health state was last in <see cref="F:System.Fabric.Health.HealthState.Error" />, 
            before transitioning to a different state. If the <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> has never been 
            <see cref="F:System.Fabric.Health.HealthState.Error" />, the value will be System.DateTime.FromFileTimeUtc(0).</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.DateTime" /> representing the last transition time (UTC) involving <see cref="F:System.Fabric.Health.HealthState.Error" />.</para>
        </value>
        <remarks>
          <para>The transition fields, <see cref="P:System.Fabric.Health.HealthEvent.LastOkTransitionAt" />, <see cref="P:System.Fabric.Health.HealthEvent.LastWarningTransitionAt" />, <see cref="P:System.Fabric.Health.HealthEvent.LastErrorTransitionAt" /> give the history of the health state transitions for the event.
            They can be used for smarter alerts or "historical" health event information. They enable scenarios such as:
            <list type="bullet"><item><para>Alert when a property has been at warning/error for more than X minutes.
                    This avoids alerts on temporary conditions. For example, an alert if the health state has been warning for more than five minutes can be translated into 
                    (HealthState == Warning and Now - LastWarningTransitionTime &gt; 5 minutes).</para></item><item><para>Alert only on conditions that have changed in the last X minutes.
                    If a report was already at error before the specified time, it can be ignored because it was already signaled previously.</para></item><item><para>If a property is toggling between warning and error, determine how long it has been unhealthy (i.e. not OK). 
                    For example, an alert if the property hasn't been healthy for more than five minutes can be translated into (HealthState != Ok and Now - LastOkTransitionTime &gt; 5 minutes).</para></item></list></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModifiedUtcTimestamp">
      <MemberSignature Language="C#" Value="public DateTime LastModifiedUtcTimestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastModifiedUtcTimestamp" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the date and time when the health report was last modified by the health store.</para>
        </summary>
        <value>
          <para>The date and time when the health report was last modified by the health store.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOkTransitionAt">
      <MemberSignature Language="C#" Value="public DateTime LastOkTransitionAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastOkTransitionAt" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Health.HealthEvent.LastOkTransitionAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If the current <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> is <see cref="F:System.Fabric.Health.HealthState.Ok" />, 
            returns the time at which the health report was first reported with <see cref="F:System.Fabric.Health.HealthState.Ok" />. For periodic reporting, 
            many reports with the same state may have been generated.</para>
          <para>If the current <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> is <see cref="F:System.Fabric.Health.HealthState.Error" /> 
            or <see cref="F:System.Fabric.Health.HealthState.Warning" />, returns the time at which the health state was last in 
            <see cref="F:System.Fabric.Health.HealthState.Ok" />, before transitioning to a different state. If the <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> 
            has never been <see cref="F:System.Fabric.Health.HealthState.Ok" />, the value will be System.DateTime.FromFileTimeUtc(0).</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.DateTime" /> representing the last transition time (UTC) involving <see cref="F:System.Fabric.Health.HealthState.Ok" />.</para>
        </value>
        <remarks>
          <para>The transition fields, <see cref="P:System.Fabric.Health.HealthEvent.LastOkTransitionAt" />, <see cref="P:System.Fabric.Health.HealthEvent.LastWarningTransitionAt" />, <see cref="P:System.Fabric.Health.HealthEvent.LastErrorTransitionAt" /> give the history of the health state transitions for the event.
            They can be used for smarter alerts or "historical" health event information. They enable scenarios such as:
            <list type="bullet"><item><para>Alert when a property has been at warning/error for more than X minutes.
                    This avoids alerts on temporary conditions. For example, an alert if the health state has been warning for more than five minutes can be translated into 
                    (HealthState == Warning and Now - LastWarningTransitionTime &gt; 5 minutes).</para></item><item><para>Alert only on conditions that have changed in the last X minutes.
                    If a report was already at error before the specified time, it can be ignored because it was already signaled previously.</para></item><item><para>If a property is toggling between warning and error, determine how long it has been unhealthy (i.e. not OK). 
                    For example, an alert if the property hasn't been healthy for more than five minutes can be translated into (HealthState != Ok and Now - LastOkTransitionTime &gt; 5 minutes).</para></item></list></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastWarningTransitionAt">
      <MemberSignature Language="C#" Value="public DateTime LastWarningTransitionAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWarningTransitionAt" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Health.HealthEvent.LastWarningTransitionAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If the current <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> is <see cref="F:System.Fabric.Health.HealthState.Warning" />, 
            returns the time at which the health report was first reported with <see cref="F:System.Fabric.Health.HealthState.Warning" />. For periodic reporting, 
            many reports with the same state may have been generated.</para>
          <para>If the current <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> is <see cref="F:System.Fabric.Health.HealthState.Ok" /> or 
            <see cref="F:System.Fabric.Health.HealthState.Error" />, returns the time at which the health state was last in <see cref="F:System.Fabric.Health.HealthState.Warning" />, 
            before transitioning to a different state. If the <see cref="P:System.Fabric.Health.HealthInformation.HealthState" /> has never been 
            <see cref="F:System.Fabric.Health.HealthState.Warning" />, the value will be System.DateTime.FromFileTimeUtc(0).</para>
        </summary>
        <value>
          <para>Returns <see cref="T:System.DateTime" /> representing the last transition time (UTC) involving <see cref="F:System.Fabric.Health.HealthState.Warning" />.</para>
        </value>
        <remarks>
          <para>The transition fields, <see cref="P:System.Fabric.Health.HealthEvent.LastOkTransitionAt" />, <see cref="P:System.Fabric.Health.HealthEvent.LastWarningTransitionAt" />, <see cref="P:System.Fabric.Health.HealthEvent.LastErrorTransitionAt" /> give the history of the health state transitions for the event.
            They can be used for smarter alerts or "historical" health event information. They enable scenarios such as:
            <list type="bullet"><item><para>Alert when a property has been at warning/error for more than X minutes.
                    This avoids alerts on temporary conditions. For example, an alert if the health state has been warning for more than five minutes can be translated into 
                    (HealthState == Warning and Now - LastWarningTransitionTime &gt; 5 minutes).</para></item><item><para>Alert only on conditions that have changed in the last X minutes.
                    If a report was already at error before the specified time, it can be ignored because it was already signaled previously.</para></item><item><para>If a property is toggling between warning and error, determine how long it has been unhealthy (i.e. not OK). 
                    For example, an alert if the property hasn't been healthy for more than five minutes can be translated into (HealthState != Ok and Now - LastOkTransitionTime &gt; 5 minutes).</para></item></list></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUtcTimestamp">
      <MemberSignature Language="C#" Value="public DateTime SourceUtcTimestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SourceUtcTimestamp" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Health.HealthEvent.SourceUtcTimestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the date and time when the health report was sent by the source.</para>
        </summary>
        <value>
          <para>The date and time when the health report was sent by the source.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Health.HealthEvent.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a string representation of the health event.
            </summary>
        <returns>A string representation of the health event.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>