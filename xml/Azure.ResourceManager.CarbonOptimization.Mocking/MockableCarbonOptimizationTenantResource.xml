<Type Name="MockableCarbonOptimizationTenantResource" FullName="Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource">
  <TypeSignature Language="C#" Value="public class MockableCarbonOptimizationTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableCarbonOptimizationTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableCarbonOptimizationTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableCarbonOptimizationTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableCarbonOptimizationTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCarbonEmissionAvailableDateRange">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt; QueryCarbonEmissionAvailableDateRange (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt; QueryCarbonEmissionAvailableDateRange(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource.QueryCarbonEmissionAvailableDateRange(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryCarbonEmissionAvailableDateRange (Optional cancellationToken As CancellationToken = Nothing) As Response(Of CarbonEmissionAvailableDateRange)" />
      <MemberSignature Language="F#" Value="abstract member QueryCarbonEmissionAvailableDateRange : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;&#xA;override this.QueryCarbonEmissionAvailableDateRange : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;" Usage="mockableCarbonOptimizationTenantResource.QueryCarbonEmissionAvailableDateRange cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API for query carbon emission data available date range
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Carbon/queryCarbonEmissionDataAvailableDateRange</description></item><item><term>Operation Id</term><description>CarbonService_QueryCarbonEmissionAvailableDateRange</description></item><item><term>Default Api Version</term><description>2025-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCarbonEmissionAvailableDateRangeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;&gt; QueryCarbonEmissionAvailableDateRangeAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;&gt; QueryCarbonEmissionAvailableDateRangeAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource.QueryCarbonEmissionAvailableDateRangeAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryCarbonEmissionAvailableDateRangeAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CarbonEmissionAvailableDateRange))" />
      <MemberSignature Language="F#" Value="abstract member QueryCarbonEmissionAvailableDateRangeAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;&gt;&#xA;override this.QueryCarbonEmissionAvailableDateRangeAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;&gt;" Usage="mockableCarbonOptimizationTenantResource.QueryCarbonEmissionAvailableDateRangeAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionAvailableDateRange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API for query carbon emission data available date range
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Carbon/queryCarbonEmissionDataAvailableDateRange</description></item><item><term>Operation Id</term><description>CarbonService_QueryCarbonEmissionAvailableDateRange</description></item><item><term>Default Api Version</term><description>2025-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCarbonEmissionReports">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt; QueryCarbonEmissionReports (Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter queryParameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt; QueryCarbonEmissionReports(class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter queryParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource.QueryCarbonEmissionReports(Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryCarbonEmissionReports (queryParameters As CarbonEmissionQueryFilter, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CarbonEmissionListResult)" />
      <MemberSignature Language="F#" Value="abstract member QueryCarbonEmissionReports : Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;&#xA;override this.QueryCarbonEmissionReports : Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;" Usage="mockableCarbonOptimizationTenantResource.QueryCarbonEmissionReports (queryParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryParameters" Type="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryParameters"> Query parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API for Carbon Emissions Reports
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Carbon/carbonEmissionReports</description></item><item><term>Operation Id</term><description>CarbonService_QueryCarbonEmissionReports</description></item><item><term>Default Api Version</term><description>2025-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queryParameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryCarbonEmissionReportsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;&gt; QueryCarbonEmissionReportsAsync (Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter queryParameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;&gt; QueryCarbonEmissionReportsAsync(class Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter queryParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CarbonOptimization.Mocking.MockableCarbonOptimizationTenantResource.QueryCarbonEmissionReportsAsync(Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryCarbonEmissionReportsAsync (queryParameters As CarbonEmissionQueryFilter, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CarbonEmissionListResult))" />
      <MemberSignature Language="F#" Value="abstract member QueryCarbonEmissionReportsAsync : Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;&gt;&#xA;override this.QueryCarbonEmissionReportsAsync : Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;&gt;" Usage="mockableCarbonOptimizationTenantResource.QueryCarbonEmissionReportsAsync (queryParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CarbonOptimization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionListResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryParameters" Type="Azure.ResourceManager.CarbonOptimization.Models.CarbonEmissionQueryFilter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryParameters"> Query parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API for Carbon Emissions Reports
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Carbon/carbonEmissionReports</description></item><item><term>Operation Id</term><description>CarbonService_QueryCarbonEmissionReports</description></item><item><term>Default Api Version</term><description>2025-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queryParameters" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
