<Type Name="PageBlobClient" FullName="Azure.Storage.Blobs.Specialized.PageBlobClient">
  <TypeSignature Language="C#" Value="public class PageBlobClient : Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageBlobClient extends Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
  <TypeSignature Language="VB.NET" Value="Public Class PageBlobClient&#xA;Inherits BlobBaseClient" />
  <TypeSignature Language="F#" Value="type PageBlobClient = class&#xA;    inherit BlobBaseClient" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
    <AssemblyVersion>12.1.0.0</AssemblyVersion>
    <AssemblyVersion>12.2.0.0</AssemblyVersion>
    <AssemblyVersion>12.3.0.0</AssemblyVersion>
    <AssemblyVersion>12.4.0.0</AssemblyVersion>
    <AssemblyVersion>12.4.1.0</AssemblyVersion>
    <AssemblyVersion>12.4.2.0</AssemblyVersion>
    <AssemblyVersion>12.4.3.0</AssemblyVersion>
    <AssemblyVersion>12.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Storage.Blobs.Specialized.BlobBaseClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             The <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> allows you to manipulate Azure
             Storage page blobs.
            
             Page blobs are a collection of 512-byte pages optimized for random
             read and write operations. To create a page blob, you initialize the
             page blob and specify the maximum size the page blob will grow. To add
             or update the contents of a page blob, you write a page or pages by
             specifying an offset and a range that align to 512-byte page
             boundaries.  A write to a page blob can overwrite just one page, some
             pages, or up to 4 MB of the page blob.  Writes to page blobs happen
             in-place and are immediately committed to the blob. The maximum size
             for a page blob is 8 TB.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageBlobClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (Uri blobUri, Azure.Storage.Blobs.BlobClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, Optional options As BlobClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : Uri * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (blobUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="T:System.Uri" /> referencing the page blob that includes the
            name of the account, the name of the blob container, and the name of
            the blob.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (string connectionString, string blobContainerName, string blobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string blobContainerName, string blobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, blobContainerName As String, blobName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : string * string * string -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (connectionString, blobContainerName, blobName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="blobContainerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="blobContainerName">
             The name of the container containing this page blob.
             </param>
        <param name="blobName">
             The name of this page blob.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (Uri blobUri, Azure.Core.TokenCredential credential, Azure.Storage.Blobs.BlobClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As TokenCredential, Optional options As BlobClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="T:System.Uri" /> referencing the page blob that includes the
            name of the account, the name of the blob container, and the name of
            the blob.
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (Uri blobUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Blobs.BlobClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As StorageSharedKeyCredential, Optional options As BlobClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="T:System.Uri" /> referencing the page blob that includes the
            name of the account, the name of the blob container, and the name of
            the blob.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (string connectionString, string blobContainerName, string blobName, Azure.Storage.Blobs.BlobClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string blobContainerName, string blobName, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, blobContainerName As String, blobName As String, options As BlobClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : string * string * string * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (connectionString, blobContainerName, blobName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="blobContainerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="blobContainerName">
             The name of the container containing this page blob.
             </param>
        <param name="blobName">
             The name of this page blob.
             </param>
        <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt; ClearPages (Azure.HttpRange range, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt; ClearPages(valuetype Azure.HttpRange range, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPages(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearPages (range As HttpRange, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageInfo)" />
      <MemberSignature Language="F#" Value="abstract member ClearPages : Azure.HttpRange * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&#xA;override this.ClearPages : Azure.HttpRange * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;" Usage="pageBlobClient.ClearPages (range, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Specifies the range of bytes to be cleared. Both the start and
             end of the range must be specified.  For a page clear operation,
             the page range can be up to the value of the blob's full size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on clearing pages from this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPages(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation clears one or more
             pages from the page blob, as specificed by the <paramref name="range" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated pages.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt; ClearPagesAsync (Azure.HttpRange range, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt;&gt; ClearPagesAsync(valuetype Azure.HttpRange range, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearPagesAsync (range As HttpRange, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageInfo))" />
      <MemberSignature Language="F#" Value="abstract member ClearPagesAsync : Azure.HttpRange * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;&#xA;override this.ClearPagesAsync : Azure.HttpRange * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;" Usage="pageBlobClient.ClearPagesAsync (range, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Specifies the range of bytes to be cleared. Both the start and
             end of the range must be specified.  For a page clear operation,
             the page range can be up to the value of the blob's full size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on clearing pages from this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation clears one or more
             pages from the page blob, as specificed by the <paramref name="range" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated pages.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Create (long size, long? sequenceNumber = default, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Create(int64 size, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (size As Long, Optional sequenceNumber As Nullable(Of Long) = Nothing, Optional httpHeaders As BlobHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobContentInfo)" />
      <MemberSignature Language="F#" Value="abstract member Create : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Create : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="pageBlobClient.Create (size, sequenceNumber, httpHeaders, metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
        <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber" /> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on the creation of this new page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation creates a new page blob of
             the specified <paramref name="size" />.  The content of any
             existing blob is overwritten with the newly initialized page blob
             To add content to the page blob, call the
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created page blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateAsync (long size, long? sequenceNumber = default, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateAsync(int64 size, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (size As Long, Optional sequenceNumber As Nullable(Of Long) = Nothing, Optional httpHeaders As BlobHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlobContentInfo))" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.CreateAsync : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="pageBlobClient.CreateAsync (size, sequenceNumber, httpHeaders, metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
        <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber" /> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on the creation of this new page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation creates a new page blob of
             the specified <paramref name="size" />.  The content of any
             existing blob is overwritten with the newly initialized page blob
             To add content to the page blob, call the
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created page blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; CreateIfNotExists (long size, long? sequenceNumber = default, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; CreateIfNotExists(int64 size, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExists(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (size As Long, Optional sequenceNumber As Nullable(Of Long) = Nothing, Optional httpHeaders As BlobHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobContentInfo)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExists : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.CreateIfNotExists : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="pageBlobClient.CreateIfNotExists (size, sequenceNumber, httpHeaders, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
        <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber" /> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExists(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation creates a new page blob
             of the specified <paramref name="size" />.  If the blob already exists, the content of
             the existing blob will remain unchanged. If the blob does not already exists,
             a new page blob with the specified <paramref name="size" /> will be created.
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
        <returns>
             If the page blob does not already exist, A <see cref="T:Azure.Response`1" />
             describing the newly created page blob. Otherwise, <c>null</c>.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateIfNotExistsAsync (long size, long? sequenceNumber = default, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateIfNotExistsAsync(int64 size, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (size As Long, Optional sequenceNumber As Nullable(Of Long) = Nothing, Optional httpHeaders As BlobHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlobContentInfo))" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.CreateIfNotExistsAsync : int64 * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="pageBlobClient.CreateIfNotExistsAsync (size, sequenceNumber, httpHeaders, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.
             </param>
        <param name="sequenceNumber">
             Optional user-controlled value that you can use to track requests.
             The value of the <paramref name="sequenceNumber" /> must be between
             0 and 2^63 - 1.  The default value is 0.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new page blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation creates a new page blob
             of the specified <paramref name="size" />.  If the blob already exists, the content of
             the existing blob will remain unchanged. If the blob does not already exists,
             a new page blob with the specified <paramref name="size" /> will be created.
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation.
            
             For more information, see https://docs.microsoft.com/rest/api/storageservices/put-blob.
             </summary>
        <returns>
             If the page blob does not already exist, A <see cref="T:Azure.Response`1" />
             describing the newly created page blob. Otherwise, <c>null</c>.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDiskPageRangesDiff">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetManagedDiskPageRangesDiff (Azure.HttpRange? range = default, string snapshot = default, Uri previousSnapshotUri = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetManagedDiskPageRangesDiff(valuetype System.Nullable`1&lt;valuetype Azure.HttpRange&gt; range, string snapshot, class System.Uri previousSnapshotUri, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDiskPageRangesDiff (Optional range As Nullable(Of HttpRange) = Nothing, Optional snapshot As String = Nothing, Optional previousSnapshotUri As Uri = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageRangesInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDiskPageRangesDiff : Nullable&lt;Azure.HttpRange&gt; * string * Uri * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&#xA;override this.GetManagedDiskPageRangesDiff : Nullable&lt;Azure.HttpRange&gt; * string * Uri * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;" Usage="pageBlobClient.GetManagedDiskPageRangesDiff (range, snapshot, previousSnapshotUri, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="previousSnapshotUri" Type="System.Uri" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
        <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </param>
        <param name="previousSnapshotUri">
             This parameter only works with managed disk storage accounts.
             Specifies that the response will contain only pages that were
             changed between target blob and previous snapshot.  Changed pages
             include both updated and cleared pages. The target blob may be a
             snapshot, as long as the snapshot specified by
             <paramref name="previousSnapshotUri" /> is the older of the two.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on getting page ranges for the this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             operation returns the list of page ranges that differ between a
             <paramref name="previousSnapshotUri" /> and this page blob. Changed pages
             include both updated and cleared pages.  This API only works with
             managed disk storage accounts.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid page ranges for this blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDiskPageRangesDiffAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetManagedDiskPageRangesDiffAsync (Azure.HttpRange? range = default, string snapshot = default, Uri previousSnapshotUri = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetManagedDiskPageRangesDiffAsync(valuetype System.Nullable`1&lt;valuetype Azure.HttpRange&gt; range, string snapshot, class System.Uri previousSnapshotUri, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDiskPageRangesDiffAsync (Optional range As Nullable(Of HttpRange) = Nothing, Optional snapshot As String = Nothing, Optional previousSnapshotUri As Uri = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageRangesInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDiskPageRangesDiffAsync : Nullable&lt;Azure.HttpRange&gt; * string * Uri * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;&#xA;override this.GetManagedDiskPageRangesDiffAsync : Nullable&lt;Azure.HttpRange&gt; * string * Uri * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;" Usage="pageBlobClient.GetManagedDiskPageRangesDiffAsync (range, snapshot, previousSnapshotUri, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="previousSnapshotUri" Type="System.Uri" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
        <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </param>
        <param name="previousSnapshotUri">
             This parameter only works with managed disk storage accounts.
             Specifies that the response will contain only pages that were
             changed between target blob and previous snapshot.  Changed pages
             include both updated and cleared pages. The target blob may be a
             snapshot, as long as the snapshot specified by
             <paramref name="previousSnapshotUri" /> is the older of the two.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on getting page ranges for the this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             operation returns the list of page ranges that differ between a
             <paramref name="previousSnapshotUri" /> and this page blob. Changed pages
             include both updated and cleared pages.  This API only works with
             managed disk storage accounts.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid page ranges for this blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRanges">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRanges (Azure.HttpRange? range = default, string snapshot = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRanges(valuetype System.Nullable`1&lt;valuetype Azure.HttpRange&gt; range, string snapshot, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRanges (Optional range As Nullable(Of HttpRange) = Nothing, Optional snapshot As String = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageRangesInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRanges : Nullable&lt;Azure.HttpRange&gt; * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&#xA;override this.GetPageRanges : Nullable&lt;Azure.HttpRange&gt; * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;" Usage="pageBlobClient.GetPageRanges (range, snapshot, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
        <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on getting page ranges for the this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation returns the list of
             valid page ranges for a page blob or snapshot of a page blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid page ranges for this blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesAsync (Azure.HttpRange? range = default, string snapshot = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesAsync(valuetype System.Nullable`1&lt;valuetype Azure.HttpRange&gt; range, string snapshot, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesAsync (Optional range As Nullable(Of HttpRange) = Nothing, Optional snapshot As String = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageRangesInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesAsync : Nullable&lt;Azure.HttpRange&gt; * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;&#xA;override this.GetPageRangesAsync : Nullable&lt;Azure.HttpRange&gt; * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;" Usage="pageBlobClient.GetPageRangesAsync (range, snapshot, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
        <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on getting page ranges for the this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation returns the list of
             valid page ranges for a page blob or snapshot of a page blob.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid page ranges for this blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiff">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRangesDiff (Azure.HttpRange? range = default, string snapshot = default, string previousSnapshot = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRangesDiff(valuetype System.Nullable`1&lt;valuetype Azure.HttpRange&gt; range, string snapshot, string previousSnapshot, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesDiff (Optional range As Nullable(Of HttpRange) = Nothing, Optional snapshot As String = Nothing, Optional previousSnapshot As String = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageRangesInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiff : Nullable&lt;Azure.HttpRange&gt; * string * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&#xA;override this.GetPageRangesDiff : Nullable&lt;Azure.HttpRange&gt; * string * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;" Usage="pageBlobClient.GetPageRangesDiff (range, snapshot, previousSnapshot, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="previousSnapshot" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
        <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </param>
        <param name="previousSnapshot">
             Specifies that the response will contain only pages that were
             changed between target blob and previous snapshot.  Changed pages
             include both updated and cleared pages. The target blob may be a
             snapshot, as long as the snapshot specified by
             <paramref name="previousSnapshot" /> is the older of the two.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on getting page ranges for the this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             operation returns the list of page ranges that differ between a
             <paramref name="previousSnapshot" /> and this page blob. Changed pages
             include both updated and cleared pages.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid page ranges for this blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiffAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesDiffAsync (Azure.HttpRange? range = default, string snapshot = default, string previousSnapshot = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesDiffAsync(valuetype System.Nullable`1&lt;valuetype Azure.HttpRange&gt; range, string snapshot, string previousSnapshot, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPageRangesDiffAsync (Optional range As Nullable(Of HttpRange) = Nothing, Optional snapshot As String = Nothing, Optional previousSnapshot As String = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageRangesInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiffAsync : Nullable&lt;Azure.HttpRange&gt; * string * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;&#xA;override this.GetPageRangesDiffAsync : Nullable&lt;Azure.HttpRange&gt; * string * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;" Usage="pageBlobClient.GetPageRangesDiffAsync (range, snapshot, previousSnapshot, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="previousSnapshot" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optionally specifies the range of bytes over which to list ranges,
             inclusively. If omitted, then all ranges for the blob are returned.
             </param>
        <param name="snapshot">
             Optionally specifies the blob snapshot to retrieve page ranges
             information from. For more information on working with blob snapshots,
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </param>
        <param name="previousSnapshot">
             Specifies that the response will contain only pages that were
             changed between target blob and previous snapshot.  Changed pages
             include both updated and cleared pages. The target blob may be a
             snapshot, as long as the snapshot specified by
             <paramref name="previousSnapshot" /> is the older of the two.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on getting page ranges for the this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             operation returns the list of page ranges that differ between a
             <paramref name="previousSnapshot" /> and this page blob. Changed pages
             include both updated and cleared pages.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-page-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid page ranges for this blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBlobMaxUploadPagesBytes">
      <MemberSignature Language="C#" Value="public virtual int PageBlobMaxUploadPagesBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBlobMaxUploadPagesBytes" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobMaxUploadPagesBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageBlobMaxUploadPagesBytes As Integer" />
      <MemberSignature Language="F#" Value="member this.PageBlobMaxUploadPagesBytes : int" Usage="Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobMaxUploadPagesBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum number of bytes that can be sent in a call
            to the <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBlobPageBytes">
      <MemberSignature Language="C#" Value="public virtual int PageBlobPageBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBlobPageBytes" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobPageBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageBlobPageBytes As Integer" />
      <MemberSignature Language="F#" Value="member this.PageBlobPageBytes : int" Usage="Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobPageBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of bytes in a page (512).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt; Resize (long size, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt; Resize(int64 size, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Resize(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Resize (size As Long, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageBlobInfo)" />
      <MemberSignature Language="F#" Value="abstract member Resize : int64 * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&#xA;override this.Resize : int64 * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;" Usage="pageBlobClient.Resize (size, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.  If the specified
             value is less than the current size of the blob, then all pages
             above the specified value are cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on the resize of this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Resize(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation resizes the page blob to
             the specified size (which must be a multiple of 512).  If the
             specified value is less than the current size of the blob, then
             all pages above the specified value are cleared.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the resized
             page blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; ResizeAsync (long size, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; ResizeAsync(int64 size, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResizeAsync (size As Long, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageBlobInfo))" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : int64 * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;&#xA;override this.ResizeAsync : int64 * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;" Usage="pageBlobClient.ResizeAsync (size, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">
             Specifies the maximum size for the page blob, up to 8 TB.  The
             size must be aligned to a 512-byte boundary.  If the specified
             value is less than the current size of the blob, then all pages
             above the specified value are cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on the resize of this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation resizes the page blob to
             the specified size (which must be a multiple of 512).  If the
             specified value is less than the current size of the blob, then
             all pages above the specified value are cleared.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the resized
             page blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyIncremental">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyIncremental (Uri sourceUri, string snapshot, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyIncremental(class System.Uri sourceUri, string snapshot, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyIncremental (sourceUri As Uri, snapshot As String, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As CopyFromUriOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCopyIncremental : Uri * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation&#xA;override this.StartCopyIncremental : Uri * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation" Usage="pageBlobClient.StartCopyIncremental (sourceUri, snapshot, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.CopyFromUriOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
             Specifies the to the source page blob as a <see cref="T:System.Uri" /> up to
             2 KB in length.  The source blob must either be public or must be
             authenticated via a shared access signature.
             </param>
        <param name="snapshot">
             The name of a snapshot to start copying from
             sourceUri.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on the incremental copy into this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             operation starts copying a snapshot of the sourceUri page blob to
             this page blob.  The snapshot is copied such that only the
             differential changes between the previously copied snapshot are
             transferred to the destination.  The copied snapshots are complete
             copies of the original snapshot and can be read or copied from as
             usual.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" />
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> to
             determine if the copy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/incremental-copy-blob" />
             and <see href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation" /> referencing the incremental
             copy operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
            
             The destination of an incremental copy must either not exist, or
             must have been created with a previous incremental copy from the
             same source blob.  Once created, the destination blob is
             permanently associated with the source and may only be used for
             incremental copies.
            
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />,
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobs(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)" />, and
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchy(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)" />
             operations indicate whether the blob is an incremental copy blob
             created in this way.  Incremental copy blobs may not be downloaded
             directly.  The only supported operations are
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />,
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />,
             and <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />.  The copied snapshots may
             be read and deleted as usual.
            
             An incremental copy is performed asynchronously on the service and
             must be polled for completion.  You can poll
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> and check
             <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" /> to determine when the copy
             has completed.  When the copy completes, the destination blob will
             contain a new snapshot.  The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
             operation returns the snapshot time of the newly created snapshot.
            
             The first time an incremental copy is performed on a destination
             blob, a new blob is created with a snapshot that is fully copied
             from the source.  Each subsequent call to <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             will create a new snapshot by copying only the differential
             changes from the previously copied snapshot.  The differential
             changes are computed on the server by issuing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             call on the source blob snapshot with prevSnapshot set to the most
             recently copied snapshot. Therefore, the same restrictions on
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> apply to
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />.
             Specifically, snapshots must be copied in ascending order and if
             the source blob is recreated using <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> or
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
             then  <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             on new snapshots will fail.
            
             The additional storage space consumed by the copied snapshot is
             the size of the differential data transferred during the copy.
             This can be determined by performing a
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             call on the snapshot to compare it to the previous snapshot.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyIncrementalAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyIncrementalAsync (Uri sourceUri, string snapshot, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyIncrementalAsync(class System.Uri sourceUri, string snapshot, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyIncrementalAsync (sourceUri As Uri, snapshot As String, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CopyFromUriOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyIncrementalAsync : Uri * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;&#xA;override this.StartCopyIncrementalAsync : Uri * string * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;" Usage="pageBlobClient.StartCopyIncrementalAsync (sourceUri, snapshot, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
             Specifies the to the source page blob as a <see cref="T:System.Uri" /> up to
             2 KB in length.  The source blob must either be public or must be
             authenticated via a shared access signature.
             </param>
        <param name="snapshot">
             The name of a snapshot to start copying from
             sourceUri.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on the incremental copy into this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             operation starts copying a snapshot of the sourceUri page blob to
             this page blob.  The snapshot is copied such that only the
             differential changes between the previously copied snapshot are
             transferred to the destination. The copied snapshots are complete
             copies of the original snapshot and can be read or copied from as
             usual.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" />
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
             to determine if thecopy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/incremental-copy-blob" />
             and <see href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation" /> describing the
             state of the incremental copy operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
            
             The destination of an incremental copy must either not exist, or
             must have been created with a previous incremental copy from the
             same source blob.  Once created, the destination blob is
             permanently associated with the source and may only be used for
             incremental copies.
            
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />,
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)" />, and
             <see cref="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)" />
             operations indicate whether the blob is an incremental copy blob
             created in this way.  Incremental copy blobs may not be downloaded
             directly.  The only supported operations are
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />,
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />,
             and  <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />.  The copied
             snapshots may be read and deleted as usual.
            
             An incremental copy is performed asynchronously on the service and
             must be polled for completion.  You can poll
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> and check
             <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" /> to determine when the copy
             has completed.  When the copy completes, the destination blob will
             contain a new snapshot.  The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
             operation returns the snapshot time of the newly created snapshot.
            
             The first time an incremental copy is performed on a destination
             blob, a new blob is created with a snapshot that is fully copied
             from the source.  Each subsequent call to <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             will create a new snapshot by copying only the differential
             changes from the previously copied snapshot.  The differential
             changes are computed on the server by issuing a <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             call on the source blob snapshot with prevSnapshot set to the most
             recently copied snapshot. Therefore, the same restrictions on
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> apply to
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />.
             Specifically, snapshots must be copied in ascending order and if
             the source blob is recreated using <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> or
             <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
             then <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             on new snapshots will fail.
            
             The additional storage space consumed by the copied snapshot is
             the size of the differential data transferred during the copy.
             This can be determined by performing a
             <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
             call on the snapshot to compare it to the previous snapshot.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSequenceNumber">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt; UpdateSequenceNumber (Azure.Storage.Blobs.Models.SequenceNumberAction action, long? sequenceNumber = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt; UpdateSequenceNumber(valuetype Azure.Storage.Blobs.Models.SequenceNumberAction action, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumber(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateSequenceNumber (action As SequenceNumberAction, Optional sequenceNumber As Nullable(Of Long) = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageBlobInfo)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSequenceNumber : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&#xA;override this.UpdateSequenceNumber : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;" Usage="pageBlobClient.UpdateSequenceNumber (action, sequenceNumber, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Azure.Storage.Blobs.Models.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">
             Specifies how the service should modify the blob's sequence number.
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max" /> sets the sequence number to
             be the higher of the value included with the request and the value
             currently stored for the blob.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update" />
             sets the sequence number to the <paramref name="sequenceNumber" />
             value.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" /> increments
             the value of the sequence number by 1.  If specifying
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" />, do not include the
             <paramref name="sequenceNumber" /> because that will throw a
             <see cref="T:Azure.RequestFailedException" />.
             </param>
        <param name="sequenceNumber">
             An updated sequence number of your choosing, if
             <paramref name="action" /> is <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max" />
             or <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update" />.  The value should
             not be provided if <paramref name="action" /> is
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" />.  The sequence number
             is a user-controlled property that you can use to track requests
             and manage concurrency issues via <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add conditions
             on updating the sequence number of this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumber(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation changes the
             sequence number <paramref name="action" /> and <paramref name="sequenceNumber" />
             for this page blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             page blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSequenceNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; UpdateSequenceNumberAsync (Azure.Storage.Blobs.Models.SequenceNumberAction action, long? sequenceNumber = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; UpdateSequenceNumberAsync(valuetype Azure.Storage.Blobs.Models.SequenceNumberAction action, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberAsync(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateSequenceNumberAsync (action As SequenceNumberAction, Optional sequenceNumber As Nullable(Of Long) = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageBlobInfo))" />
      <MemberSignature Language="F#" Value="abstract member UpdateSequenceNumberAsync : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;&#xA;override this.UpdateSequenceNumberAsync : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;" Usage="pageBlobClient.UpdateSequenceNumberAsync (action, sequenceNumber, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Azure.Storage.Blobs.Models.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">
             Specifies how the service should modify the blob's sequence number.
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max" /> sets the sequence number to
             be the higher of the value included with the request and the value
             currently stored for the blob.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update" />
             sets the sequence number to the <paramref name="sequenceNumber" />
             value.  <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" /> increments
             the value of the sequence number by 1.  If specifying
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" />, do not include the
             <paramref name="sequenceNumber" /> because that will throw a
             <see cref="T:Azure.RequestFailedException" />.
             </param>
        <param name="sequenceNumber">
             An updated sequence number of your choosing, if
             <paramref name="action" /> is <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max" />
             or <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update" />.  The value should
             not be provided if <paramref name="action" /> is
             <see cref="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" />.  The sequence number
             is a user-controlled property that you can use to track requests
             and manage concurrency issues via <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add conditions
             on updating the sequence number of this page blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberAsync(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation changes the
             sequence number <paramref name="action" /> and <paramref name="sequenceNumber" />
             for this page blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             page blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt; UploadPages (System.IO.Stream content, long offset, byte[] transactionalContentHash = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, IProgress&lt;long&gt; progressHandler = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt; UploadPages(class System.IO.Stream content, int64 offset, unsigned int8[] transactionalContentHash, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadPages (content As Stream, offset As Long, Optional transactionalContentHash As Byte() = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageInfo)" />
      <MemberSignature Language="F#" Value="abstract member UploadPages : System.IO.Stream * int64 * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&#xA;override this.UploadPages : System.IO.Stream * int64 * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;" Usage="pageBlobClient.UploadPages (content, offset, transactionalContentHash, conditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the pages to
             upload.  The content can be up to 4 MB in size.
             </param>
        <param name="offset">
             Specifies the starting offset for the <paramref name="content" />
             to be written as a page.  Given that pages must be aligned with
             512-byte boundaries, the start offset must be a modulus of 512.
             </param>
        <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on uploading pages to this page blob.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a range of pages in a page blob,
             starting at <paramref name="offset" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated pages.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesAsync (System.IO.Stream content, long offset, byte[] transactionalContentHash = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, IProgress&lt;long&gt; progressHandler = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesAsync(class System.IO.Stream content, int64 offset, unsigned int8[] transactionalContentHash, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadPagesAsync (content As Stream, offset As Long, Optional transactionalContentHash As Byte() = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadPagesAsync : System.IO.Stream * int64 * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;&#xA;override this.UploadPagesAsync : System.IO.Stream * int64 * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;" Usage="pageBlobClient.UploadPagesAsync (content, offset, transactionalContentHash, conditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the pages to
             upload.  The content can be up to 4 MB in size.
             </param>
        <param name="offset">
             Specifies the starting offset for the <paramref name="content" />
             to be written as a page.  Given that pages must be aligned with
             512-byte boundaries, the start offset must be a modulus of 512.
             </param>
        <param name="transactionalContentHash">
             Optional MD5 hash of the block content.  This hash is used to
             verify the integrity of the block during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the blob.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions" /> to add
             conditions on uploading pages to this page blob.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a range of pages in a page blob,
             starting at <paramref name="offset" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-page" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated pages.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPagesFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt; UploadPagesFromUri (Uri sourceUri, Azure.HttpRange sourceRange, Azure.HttpRange range, byte[] sourceContentHash = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions sourceConditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt; UploadPagesFromUri(class System.Uri sourceUri, valuetype Azure.HttpRange sourceRange, valuetype Azure.HttpRange range, unsigned int8[] sourceContentHash, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, class Azure.Storage.Blobs.Models.PageBlobRequestConditions sourceConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadPagesFromUri (sourceUri As Uri, sourceRange As HttpRange, range As HttpRange, Optional sourceContentHash As Byte() = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional sourceConditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PageInfo)" />
      <MemberSignature Language="F#" Value="abstract member UploadPagesFromUri : Uri * Azure.HttpRange * Azure.HttpRange * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&#xA;override this.UploadPagesFromUri : Uri * Azure.HttpRange * Azure.HttpRange * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;" Usage="pageBlobClient.UploadPagesFromUri (sourceUri, sourceRange, range, sourceContentHash, conditions, sourceConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="sourceRange" Type="Azure.HttpRange" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
             Specifies the <see cref="T:System.Uri" /> of the source blob.  The value may
             be a <see cref="T:System.Uri" /> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
        <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             sourceUri in the specified range.
             </param>
        <param name="range">
             Specifies the range to be written as a page. Both the start and
             end of the range must be specified and can be up to 4MB in size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
        <param name="sourceContentHash">
             Optional MD5 hash of the page block content from the
             sourceUri.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the sourceUri
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions" /> to add
             conditions on the copying of data to this page blob.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions" /> to add
             conditions on the copying of data from this source blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation writes a range
             of pages to a page blob where the contents are read from
             sourceUri.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated pages.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPagesFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesFromUriAsync (Uri sourceUri, Azure.HttpRange sourceRange, Azure.HttpRange range, byte[] sourceContentHash = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions = default, Azure.Storage.Blobs.Models.PageBlobRequestConditions sourceConditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesFromUriAsync(class System.Uri sourceUri, valuetype Azure.HttpRange sourceRange, valuetype Azure.HttpRange range, unsigned int8[] sourceContentHash, class Azure.Storage.Blobs.Models.PageBlobRequestConditions conditions, class Azure.Storage.Blobs.Models.PageBlobRequestConditions sourceConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadPagesFromUriAsync (sourceUri As Uri, sourceRange As HttpRange, range As HttpRange, Optional sourceContentHash As Byte() = Nothing, Optional conditions As PageBlobRequestConditions = Nothing, Optional sourceConditions As PageBlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PageInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadPagesFromUriAsync : Uri * Azure.HttpRange * Azure.HttpRange * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;&#xA;override this.UploadPagesFromUriAsync : Uri * Azure.HttpRange * Azure.HttpRange * byte[] * Azure.Storage.Blobs.Models.PageBlobRequestConditions * Azure.Storage.Blobs.Models.PageBlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;" Usage="pageBlobClient.UploadPagesFromUriAsync (sourceUri, sourceRange, range, sourceContentHash, conditions, sourceConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="sourceRange" Type="Azure.HttpRange" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Blobs.Models.PageBlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
             Specifies the <see cref="T:System.Uri" /> of the source blob.  The value may
             be a <see cref="T:System.Uri" /> of up to 2 KB in length that specifies a
             blob.  The source blob must either be public or must be
             authenticated via a shared access signature.  If the source blob
             is public, no authentication is required to perform the operation.
             </param>
        <param name="sourceRange">
             Optionally only upload the bytes of the blob in the
             sourceUri in the specified range.
             </param>
        <param name="range">
             Specifies the range to be written as a page. Both the start and
             end of the range must be specified and can be up to 4MB in size.
             Given that pages must be aligned with 512-byte boundaries, the
             start of the range must be a modulus of 512 and the end of the
             range must be a modulus of 512 – 1.  Examples of valid byte ranges
             are 0-511, 512-1023, etc.
             </param>
        <param name="sourceContentHash">
             Optional MD5 hash of the page block content from the
             sourceUri.  This hash is used to verify the
             integrity of the block during transport of the data from the Uri.
             When this hash is specified, the storage service compares the hash
             of the content that has arrived from the sourceUri
             with this value.  Note that this md5 hash is not stored with the
             blob.  If the two hashes do not match, the operation will fail
             with a <see cref="T:Azure.RequestFailedException" />.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions" /> to add
             conditions on the copying of data to this page blob.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions" /> to add
             conditions on the copying of data from this source blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" /> operation writes a range
             of pages to a page blob where the contents are read from
             sourceUri.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated pages.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshot">
      <MemberSignature Language="C#" Value="public Azure.Storage.Blobs.Specialized.PageBlobClient WithSnapshot (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Storage.Blobs.Specialized.PageBlobClient WithSnapshot(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSnapshot (snapshot As String) As PageBlobClient" />
      <MemberSignature Language="F#" Value="override this.WithSnapshot : string -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="pageBlobClient.WithSnapshot snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.PageBlobClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">The snapshot identifier.</param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
             class with an identical <see cref="T:System.Uri" /> source but the specified
             snapshot timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </summary>
        <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> instance.</returns>
        <remarks>
             Pass null or empty string to remove the snapshot returning a URL
             to the base blob.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshotCore">
      <MemberSignature Language="C#" Value="protected override sealed Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotCore (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotCore(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshotCore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function WithSnapshotCore (snapshot As String) As BlobBaseClient" />
      <MemberSignature Language="F#" Value="override this.WithSnapshotCore : string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="pageBlobClient.WithSnapshotCore snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.BlobBaseClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">The snapshot identifier.</param>
        <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> class
            with an identical <see cref="T:System.Uri" /> source but the specified
            snapshot timestamp.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
