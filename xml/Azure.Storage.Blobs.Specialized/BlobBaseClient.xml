<Type Name="BlobBaseClient" FullName="Azure.Storage.Blobs.Specialized.BlobBaseClient">
  <TypeSignature Language="C#" Value="public class BlobBaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlobBaseClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobBaseClient" />
  <TypeSignature Language="F#" Value="type BlobBaseClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
    <AssemblyVersion>12.1.0.0</AssemblyVersion>
    <AssemblyVersion>12.2.0.0</AssemblyVersion>
    <AssemblyVersion>12.3.0.0</AssemblyVersion>
    <AssemblyVersion>12.4.0.0</AssemblyVersion>
    <AssemblyVersion>12.4.1.0</AssemblyVersion>
    <AssemblyVersion>12.4.2.0</AssemblyVersion>
    <AssemblyVersion>12.4.3.0</AssemblyVersion>
    <AssemblyVersion>12.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" /> allows you to manipulate Azure Storage
            blobs.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BlobBaseClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobBaseClient (Uri blobUri, Azure.Storage.Blobs.BlobClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, Optional options As BlobClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlobBaseClient : Uri * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="new Azure.Storage.Blobs.Specialized.BlobBaseClient (blobUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            This is likely to be similar to "https://{account_name}.blob.core.windows.net/{container_name}/{blob_name}".
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobBaseClient (string connectionString, string blobContainerName, string blobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string blobContainerName, string blobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, blobContainerName As String, blobName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlobBaseClient : string * string * string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="new Azure.Storage.Blobs.Specialized.BlobBaseClient (connectionString, blobContainerName, blobName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="blobContainerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
        <param name="blobName">
             The name of this blob.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobBaseClient (Uri blobUri, Azure.Core.TokenCredential credential, Azure.Storage.Blobs.BlobClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As TokenCredential, Optional options As BlobClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlobBaseClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="new Azure.Storage.Blobs.Specialized.BlobBaseClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            This is likely to be similar to "https://{account_name}.blob.core.windows.net/{container_name}/{blob_name}".
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobBaseClient (Uri blobUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Blobs.BlobClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As StorageSharedKeyCredential, Optional options As BlobClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlobBaseClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="new Azure.Storage.Blobs.Specialized.BlobBaseClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            This is likely to be similar to "https://{account_name}.blob.core.windows.net/{container_name}/{blob_name}".
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobBaseClient (string connectionString, string blobContainerName, string blobName, Azure.Storage.Blobs.BlobClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string blobContainerName, string blobName, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, blobContainerName As String, blobName As String, options As BlobClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlobBaseClient : string * string * string * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="new Azure.Storage.Blobs.Specialized.BlobBaseClient (connectionString, blobContainerName, blobName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="blobContainerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
        <param name="blobName">
             The name of this blob.
             </param>
        <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortCopyFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AbortCopyFromUri (string copyId, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AbortCopyFromUri(string copyId, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUri(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbortCopyFromUri (copyId As String, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AbortCopyFromUri : string * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.AbortCopyFromUri : string * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.AbortCopyFromUri (copyId, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="copyId">
             ID of the copy operation to abort.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add
             conditions on aborting the copy operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUri(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation aborts a pending
             <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation" />, and leaves a this
             blob with zero length and full metadata.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortCopyFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AbortCopyFromUriAsync (string copyId, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AbortCopyFromUriAsync(string copyId, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbortCopyFromUriAsync (copyId As String, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AbortCopyFromUriAsync : string * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AbortCopyFromUriAsync : string * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.AbortCopyFromUriAsync (copyId, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="copyId">
             ID of the copy operation to abort.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add
             conditions on aborting the copy operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation aborts a pending
             <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation" />, and leaves a this
             blob with zero length and full metadata.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public virtual string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccountName As String" />
      <MemberSignature Language="F#" Value="member this.AccountName : string" Usage="Azure.Storage.Blobs.Specialized.BlobBaseClient.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Storage account name corresponding to the blob client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerName">
      <MemberSignature Language="C#" Value="public virtual string BlobContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BlobContainerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.BlobContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BlobContainerName As String" />
      <MemberSignature Language="F#" Value="member this.BlobContainerName : string" Usage="Azure.Storage.Blobs.Specialized.BlobBaseClient.BlobContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the container name corresponding to the blob client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshot">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt; CreateSnapshot (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt; CreateSnapshot(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshot (Optional metadata As IDictionary(Of String, String) = Nothing, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobSnapshotInfo)" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;&#xA;override this.CreateSnapshot : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;" Usage="blobBaseClient.CreateSnapshot (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this blob snapshot.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting creating this snapshot.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation creates a
             read-only snapshot of a blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             new blob snapshot.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;&gt; CreateSnapshotAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;&gt; CreateSnapshotAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSnapshotAsync (Optional metadata As IDictionary(Of String, String) = Nothing, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlobSnapshotInfo))" />
      <MemberSignature Language="F#" Value="abstract member CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;&gt;&#xA;override this.CreateSnapshotAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;&gt;" Usage="blobBaseClient.CreateSnapshotAsync (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobSnapshotInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this blob snapshot.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting creating this snapshot.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation creates a
             read-only snapshot of a blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             new blob snapshot.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional snapshotsOption As DeleteSnapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.Delete (snapshotsOption, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshotsOption" Type="Azure.Storage.Blobs.Models.DeleteSnapshotsOption" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             deleting this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified blob
             or snapshot for  deletion. The blob is later deleted during
             garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional snapshotsOption As DeleteSnapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.DeleteAsync (snapshotsOption, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshotsOption" Type="Azure.Storage.Blobs.Models.DeleteSnapshotsOption" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             deleting this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified blob
             or snapshot for  deletion. The blob is later deleted during
             garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteIfExists (Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteIfExists(valuetype Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExists(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExists (Optional snapshotsOption As DeleteSnapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExists : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.DeleteIfExists : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="blobBaseClient.DeleteIfExists (snapshotsOption, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshotsOption" Type="Azure.Storage.Blobs.Models.DeleteSnapshotsOption" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             deleting this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExists(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified blob
             or snapshot for deletion, if the blob exists. The blob is later deleted
             during garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteIfExistsAsync (Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteIfExistsAsync(valuetype Azure.Storage.Blobs.Models.DeleteSnapshotsOption snapshotsOption, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (Optional snapshotsOption As DeleteSnapshotsOption = Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.DeleteIfExistsAsync : Azure.Storage.Blobs.Models.DeleteSnapshotsOption * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="blobBaseClient.DeleteIfExistsAsync (snapshotsOption, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshotsOption" Type="Azure.Storage.Blobs.Models.DeleteSnapshotsOption" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="snapshotsOption">
             Specifies options for deleting blob snapshots.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             deleting this blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified blob
             or snapshot for deletion, if the blob exists. The blob is later deleted
             during garbage collection.
            
             Note that in order to delete a blob, you must delete all of its
             snapshots. You can delete both at the same time using
             <see cref="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt; Download ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobDownloadInfo&gt; Download() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Download () As Response(Of BlobDownloadInfo)" />
      <MemberSignature Language="F#" Value="abstract member Download : unit -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&#xA;override this.Download : unit -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;" Usage="blobBaseClient.Download " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download" /> operation downloads a blob from
             the service, including its metadata and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt; Download (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobDownloadInfo&gt; Download(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Download (Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobDownloadInfo)" />
      <MemberSignature Language="F#" Value="abstract member Download : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&#xA;override this.Download : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;" Usage="blobBaseClient.Download cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(System.Threading.CancellationToken)" /> operation downloads
             a blob from the service, including its metadata and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt; Download (Azure.HttpRange range = default, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, bool rangeGetContentHash = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobDownloadInfo&gt; Download(valuetype Azure.HttpRange range, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, bool rangeGetContentHash, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Download (Optional range As HttpRange = Nothing, Optional conditions As BlobRequestConditions = Nothing, Optional rangeGetContentHash As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobDownloadInfo)" />
      <MemberSignature Language="F#" Value="abstract member Download : Azure.HttpRange * Azure.Storage.Blobs.Models.BlobRequestConditions * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&#xA;override this.Download : Azure.HttpRange * Azure.Storage.Blobs.Models.BlobRequestConditions * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;" Usage="blobBaseClient.Download (range, conditions, rangeGetContentHash, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="rangeGetContentHash" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             If provided, only download the bytes of the blob in the specified
             range.  If not provided, download the entire blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             downloading this blob.
             </param>
        <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
             operation downloads a blob from the service, including its metadata
             and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt; DownloadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt; DownloadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadAsync () As Task(Of Response(Of BlobDownloadInfo))" />
      <MemberSignature Language="F#" Value="abstract member DownloadAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;&#xA;override this.DownloadAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;" Usage="blobBaseClient.DownloadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync" /> operation downloads a blob from
             the service, including its metadata and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt; DownloadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt; DownloadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadAsync (cancellationToken As CancellationToken) As Task(Of Response(Of BlobDownloadInfo))" />
      <MemberSignature Language="F#" Value="abstract member DownloadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;&#xA;override this.DownloadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;" Usage="blobBaseClient.DownloadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(System.Threading.CancellationToken)" /> operation
             downloads a blob from the service, including its metadata and
             properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt; DownloadAsync (Azure.HttpRange range = default, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, bool rangeGetContentHash = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt; DownloadAsync(valuetype Azure.HttpRange range, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, bool rangeGetContentHash, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadAsync (Optional range As HttpRange = Nothing, Optional conditions As BlobRequestConditions = Nothing, Optional rangeGetContentHash As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlobDownloadInfo))" />
      <MemberSignature Language="F#" Value="abstract member DownloadAsync : Azure.HttpRange * Azure.Storage.Blobs.Models.BlobRequestConditions * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;&#xA;override this.DownloadAsync : Azure.HttpRange * Azure.Storage.Blobs.Models.BlobRequestConditions * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;" Usage="blobBaseClient.DownloadAsync (range, conditions, rangeGetContentHash, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="rangeGetContentHash" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             If provided, only download the bytes of the blob in the specified
             range.  If not provided, download the entire blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             downloading this blob.
             </param>
        <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
             operation downloads a blob from the service, including its metadata
             and properties.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded blob.  <see cref="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (destination As Stream) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : System.IO.Stream -&gt; Azure.Response&#xA;override this.DownloadTo : System.IO.Stream -&gt; Azure.Response" Usage="blobBaseClient.DownloadTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream)" /> operation downloads a blob using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (path As String) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : string -&gt; Azure.Response&#xA;override this.DownloadTo : string -&gt; Azure.Response" Usage="blobBaseClient.DownloadTo path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String)" /> operation downloads a blob using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (destination As Stream, cancellationToken As CancellationToken) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.DownloadTo (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,System.Threading.CancellationToken)" /> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (string path, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (path As String, cancellationToken As CancellationToken) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.DownloadTo (path, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,System.Threading.CancellationToken)" /> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (System.IO.Stream destination, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(class System.IO.Stream destination, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (destination As Stream, Optional conditions As BlobRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : System.IO.Stream * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : System.IO.Stream * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.DownloadTo (destination, conditions, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
            the creation of this new block blob.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (string path, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(string path, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (path As String, Optional conditions As BlobRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : string * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : string * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.DownloadTo (path, conditions, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
            the creation of this new block blob.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (destination As Stream) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.DownloadToAsync destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream)" /> downloads a blob using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (path As String) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.DownloadToAsync path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String)" /> downloads a blob using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (destination As Stream, cancellationToken As CancellationToken) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.DownloadToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,System.Threading.CancellationToken)" /> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (string path, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (path As String, cancellationToken As CancellationToken) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.DownloadToAsync (path, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,System.Threading.CancellationToken)" /> operation
            downloads a blob using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (System.IO.Stream destination, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(class System.IO.Stream destination, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (destination As Stream, Optional conditions As BlobRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : System.IO.Stream * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : System.IO.Stream * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.DownloadToAsync (destination, conditions, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
            the creation of this new block blob.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (string path, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(string path, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (path As String, Optional conditions As BlobRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : string * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : string * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.DownloadToAsync (path, conditions, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
            the creation of this new block blob.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads a blob using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Exists(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="blobBaseClient.Exists cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" /> to see if the associated blob
            exists in the container on the storage account in the
            storage service.
            </summary>
        <returns>
            Returns true if the blob exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.ExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="blobBaseClient.ExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.ExistsAsync(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" /> to see if the associated blob
            exists in the container on the storage account in the storage service.
            </summary>
        <returns>
            Returns true if the blob exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt; GetProperties (Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobProperties&gt; GetProperties(class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt;&#xA;override this.GetProperties : Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt;" Usage="blobBaseClient.GetProperties (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add
             conditions on getting the blob's properties.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the blob. It does not return the content of the
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             blob's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt;&gt; GetPropertiesAsync (Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobProperties&gt;&gt; GetPropertiesAsync(class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesAsync (Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlobProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt;&gt;" Usage="blobBaseClient.GetPropertiesAsync (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add
             conditions on getting the blob's properties.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the blob. It does not return the content of the
             blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             blob's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Storage.Blobs.Specialized.BlobBaseClient.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the blob.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessTier">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetAccessTier (Azure.Storage.Blobs.Models.AccessTier accessTier, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, Azure.Storage.Blobs.Models.RehydratePriority? rehydratePriority = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetAccessTier(valuetype Azure.Storage.Blobs.Models.AccessTier accessTier, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.RehydratePriority&gt; rehydratePriority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTier(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessTier (accessTier As AccessTier, Optional conditions As BlobRequestConditions = Nothing, Optional rehydratePriority As Nullable(Of RehydratePriority) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SetAccessTier : Azure.Storage.Blobs.Models.AccessTier * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SetAccessTier : Azure.Storage.Blobs.Models.AccessTier * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.SetAccessTier (accessTier, conditions, rehydratePriority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessTier" Type="Azure.Storage.Blobs.Models.AccessTier" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessTier">
             Indicates the tier to be set on the blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting the access tier.
             </param>
        <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority" />
             Indicates the priority with which to rehydrate an archived blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTier(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" /> operation sets the tier on a blob.
             The operation is allowed on a page blob in a premium storage
             account and on a block blob in a blob storage or general purpose
             v2 account.
            
             A premium page blob's tier determines the allowed size, IOPS, and
             bandwidth of the blob.  A block blob's tier determines
             Hot/Cool/Archive storage type.  This operation does not update the
             blob's ETag.  For detailed information about block blob level
             tiering <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />
            
             For more information about setting the tier, see
             <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully setting the tier.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessTierAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetAccessTierAsync (Azure.Storage.Blobs.Models.AccessTier accessTier, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, Azure.Storage.Blobs.Models.RehydratePriority? rehydratePriority = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetAccessTierAsync(valuetype Azure.Storage.Blobs.Models.AccessTier accessTier, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.RehydratePriority&gt; rehydratePriority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierAsync(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessTierAsync (accessTier As AccessTier, Optional conditions As BlobRequestConditions = Nothing, Optional rehydratePriority As Nullable(Of RehydratePriority) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessTierAsync : Azure.Storage.Blobs.Models.AccessTier * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetAccessTierAsync : Azure.Storage.Blobs.Models.AccessTier * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.SetAccessTierAsync (accessTier, conditions, rehydratePriority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessTier" Type="Azure.Storage.Blobs.Models.AccessTier" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessTier">
             Indicates the tier to be set on the blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting the access tier.
             </param>
        <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority" />
             Indicates the priority with which to rehydrate an archived blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierAsync(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" /> operation sets the tier on a blob.
             The operation is allowed on a page blob in a premium storage
             account and on a block blob in a blob storage or general purpose
             v2 account.
            
             A premium page blob's tier determines the allowed size, IOPS, and
             bandwidth of the blob.  A block blob's tier determines
             Hot/Cool/Archive storage type.  This operation does not update the
             blob's ETag.  For detailed information about block blob level
             tiering <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />
            
             For more information about setting the tier, see
             <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully setting the tier.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeaders">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt; SetHttpHeaders (Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = default, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobInfo&gt; SetHttpHeaders(class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeaders(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetHttpHeaders (Optional httpHeaders As BlobHttpHeaders = Nothing, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeaders : Azure.Storage.Blobs.Models.BlobHttpHeaders * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&#xA;override this.SetHttpHeaders : Azure.Storage.Blobs.Models.BlobHttpHeaders * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;" Usage="blobBaseClient.SetHttpHeaders (httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting the blob's HTTP headers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeaders(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation sets system
             properties on the blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeadersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt; SetHttpHeadersAsync (Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = default, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobInfo&gt;&gt; SetHttpHeadersAsync(class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetHttpHeadersAsync (Optional httpHeaders As BlobHttpHeaders = Nothing, Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlobInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeadersAsync : Azure.Storage.Blobs.Models.BlobHttpHeaders * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt;&#xA;override this.SetHttpHeadersAsync : Azure.Storage.Blobs.Models.BlobHttpHeaders * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt;" Usage="blobBaseClient.SetHttpHeadersAsync (httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting the blob's HTTP headers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation sets system
             properties on the blob.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt; SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobInfo&gt; SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadata (metadata As IDictionary(Of String, String), Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlobInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&#xA;override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;" Usage="blobBaseClient.SetMetadata (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting the blob's metadata.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified blob as one or more name-value pairs.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobInfo&gt;&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync (metadata As IDictionary(Of String, String), Optional conditions As BlobRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlobInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt;&#xA;override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt;" Usage="blobBaseClient.SetMetadataAsync (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             setting the blob's metadata.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified blob as one or more name-value pairs.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyFromUri (Uri source, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Blobs.Models.AccessTier? accessTier = default, Azure.Storage.Blobs.Models.BlobRequestConditions sourceConditions = default, Azure.Storage.Blobs.Models.BlobRequestConditions destinationConditions = default, Azure.Storage.Blobs.Models.RehydratePriority? rehydratePriority = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyFromUri(class System.Uri source, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, class Azure.Storage.Blobs.Models.BlobRequestConditions sourceConditions, class Azure.Storage.Blobs.Models.BlobRequestConditions destinationConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.RehydratePriority&gt; rehydratePriority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyFromUri (source As Uri, Optional metadata As IDictionary(Of String, String) = Nothing, Optional accessTier As Nullable(Of AccessTier) = Nothing, Optional sourceConditions As BlobRequestConditions = Nothing, Optional destinationConditions As BlobRequestConditions = Nothing, Optional rehydratePriority As Nullable(Of RehydratePriority) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As CopyFromUriOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCopyFromUri : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation&#xA;override this.StartCopyFromUri : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation" Usage="blobBaseClient.StartCopyFromUri (source, metadata, accessTier, sourceConditions, destinationConditions, rehydratePriority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.CopyFromUriOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="destinationConditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">
             Specifies the <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> of the source blob.  The value may
             be a <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> of up to 2 KB in length that specifies a
             blob.  A source blob in the same storage account can be
             authenticated via Shared Key.  However, if the source is a blob in
             another account, the source blob must either be public or must be
             authenticated via a shared access signature. If the source blob
             is public, no authentication is required to perform the copy
             operation.
            
             The source object may be a file in the Azure File service.  If the
             source object is a file that is to be copied to a blob, then the
             source file must be authenticated using a shared access signature,
             whether it resides in the same account or in a different account.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this blob.
             </param>
        <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier" />
             Indicates the tier to be set on the blob.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add
             conditions on the copying of data from this source blob.
             </param>
        <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             the copying of data to this blob.
             </param>
        <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority" />
             Indicates the priority with which to rehydrate an archived blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
             operation copies data at from the <paramref name="source" /> to this
             blob.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" />
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> to determine if the
             copy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation" /> describing the
             state of the copy operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyFromUriAsync (Uri source, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Blobs.Models.AccessTier? accessTier = default, Azure.Storage.Blobs.Models.BlobRequestConditions sourceConditions = default, Azure.Storage.Blobs.Models.BlobRequestConditions destinationConditions = default, Azure.Storage.Blobs.Models.RehydratePriority? rehydratePriority = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyFromUriAsync(class System.Uri source, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, class Azure.Storage.Blobs.Models.BlobRequestConditions sourceConditions, class Azure.Storage.Blobs.Models.BlobRequestConditions destinationConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.RehydratePriority&gt; rehydratePriority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCopyFromUriAsync (source As Uri, Optional metadata As IDictionary(Of String, String) = Nothing, Optional accessTier As Nullable(Of AccessTier) = Nothing, Optional sourceConditions As BlobRequestConditions = Nothing, Optional destinationConditions As BlobRequestConditions = Nothing, Optional rehydratePriority As Nullable(Of RehydratePriority) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CopyFromUriOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyFromUriAsync : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;&#xA;override this.StartCopyFromUriAsync : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * Azure.Storage.Blobs.Models.BlobRequestConditions * Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;" Usage="blobBaseClient.StartCopyFromUriAsync (source, metadata, accessTier, sourceConditions, destinationConditions, rehydratePriority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="destinationConditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="rehydratePriority" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.RehydratePriority&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">
             Specifies the <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> of the source blob.  The value may
             be a <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> of up to 2 KB in length that specifies a
             blob.  A source blob in the same storage account can be
             authenticated via Shared Key.  However, if the source is a blob in
             another account, the source blob must either be public or must be
             authenticated via a shared access signature. If the source blob
             is public, no authentication is required to perform the copy
             operation.
            
             The source object may be a file in the Azure File service.  If the
             source object is a file that is to be copied to a blob, then the
             source file must be authenticated using a shared access signature,
             whether it resides in the same account or in a different account.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this blob.
             </param>
        <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier" />
             Indicates the tier to be set on the blob.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add
             conditions on the copying of data from this source blob.
             </param>
        <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             the copying of data to this blob.
             </param>
        <param name="rehydratePriority">
             Optional <see cref="T:Azure.Storage.Blobs.Models.RehydratePriority" />
             Indicates the priority with which to rehydrate an archived blob.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
             operation copies data at from the <paramref name="source" /> to this
             blob.  You can check the <see cref="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" />
             returned from the <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" /> to determine if
             the copy has completed.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Storage.Blobs.Models.CopyFromUriOperation" /> describing the
             state of the copy operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undelete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Undelete (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Undelete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Undelete(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Undelete (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Undelete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Undelete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="blobBaseClient.Undelete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Undelete(System.Threading.CancellationToken)" /> operation restores the contents
             and metadata of a soft deleted blob and any associated soft
             deleted snapshots.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/undelete-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UndeleteAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UndeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UndeleteAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UndeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UndeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="blobBaseClient.UndeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteAsync(System.Threading.CancellationToken)" /> operation restores the contents
             and metadata of a soft deleted blob and any associated soft
             deleted snapshots.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/undelete-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public virtual Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the blob's primary <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshot">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshot (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshot(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithSnapshot (snapshot As String) As BlobBaseClient" />
      <MemberSignature Language="F#" Value="abstract member WithSnapshot : string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient&#xA;override this.WithSnapshot : string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="blobBaseClient.WithSnapshot snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.BlobBaseClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">The snapshot identifier.</param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" />
             class with an identical <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> source but the specified
             <paramref name="snapshot" /> timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob" />.
             </summary>
        <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" /> instance.</returns>
        <remarks>
             Pass null or empty string to remove the snapshot returning a URL
             to the base blob.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshotCore">
      <MemberSignature Language="C#" Value="protected virtual Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotCore (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotCore(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshotCore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WithSnapshotCore (snapshot As String) As BlobBaseClient" />
      <MemberSignature Language="F#" Value="abstract member WithSnapshotCore : string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient&#xA;override this.WithSnapshotCore : string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="blobBaseClient.WithSnapshotCore snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.3.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.0.0</AssemblyVersion>
        <AssemblyVersion>12.4.1.0</AssemblyVersion>
        <AssemblyVersion>12.4.2.0</AssemblyVersion>
        <AssemblyVersion>12.4.3.0</AssemblyVersion>
        <AssemblyVersion>12.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.BlobBaseClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">The snapshot identifier.</param>
        <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" /> class
            with an identical <see cref="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" /> source but the specified
            <paramref name="snapshot" /> timestamp.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Blobs.Specialized.BlobBaseClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
