<Type Name="SparkBatchClient" FullName="Azure.Analytics.Synapse.Spark.SparkBatchClient">
  <TypeSignature Language="C#" Value="public class SparkBatchClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SparkBatchClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Spark.SparkBatchClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SparkBatchClient" />
  <TypeSignature Language="F#" Value="type SparkBatchClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The SparkBatch service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SparkBatchClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SparkBatchClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SparkBatchClient (Uri endpoint, string sparkPoolName, Azure.Core.TokenCredential credential, string livyApiVersion = &quot;2019-11-01-preview&quot;, Azure.Analytics.Synapse.Spark.SparkClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string sparkPoolName, class Azure.Core.TokenCredential credential, string livyApiVersion, class Azure.Analytics.Synapse.Spark.SparkClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,System.String,Azure.Analytics.Synapse.Spark.SparkClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, sparkPoolName As String, credential As TokenCredential, Optional livyApiVersion As String = &quot;2019-11-01-preview&quot;, Optional options As SparkClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Spark.SparkBatchClient : Uri * string * Azure.Core.TokenCredential * string * Azure.Analytics.Synapse.Spark.SparkClientOptions -&gt; Azure.Analytics.Synapse.Spark.SparkBatchClient" Usage="new Azure.Analytics.Synapse.Spark.SparkBatchClient (endpoint, sparkPoolName, credential, livyApiVersion, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="livyApiVersion" Type="System.String" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Spark.SparkClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net. </param>
        <param name="sparkPoolName"> Name of the spark pool. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="livyApiVersion"> Valid api-version for the request. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of SparkBatchClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSparkBatchJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelSparkBatchJob (int batchId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelSparkBatchJob(int32 batchId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.CancelSparkBatchJob(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSparkBatchJob (batchId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelSparkBatchJob : int * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelSparkBatchJob : int * System.Threading.CancellationToken -&gt; Azure.Response" Usage="sparkBatchClient.CancelSparkBatchJob (batchId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batchId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batchId"> Identifier for the batch job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancels a running spark batch job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSparkBatchJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelSparkBatchJobAsync (int batchId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelSparkBatchJobAsync(int32 batchId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.CancelSparkBatchJobAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSparkBatchJobAsync (batchId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelSparkBatchJobAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelSparkBatchJobAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="sparkBatchClient.CancelSparkBatchJobAsync (batchId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batchId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batchId"> Identifier for the batch job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancels a running spark batch job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkBatchJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt; GetSparkBatchJob (int batchId, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt; GetSparkBatchJob(int32 batchId, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.GetSparkBatchJob(System.Int32,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkBatchJob (batchId As Integer, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkBatchJob)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkBatchJob : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;&#xA;override this.GetSparkBatchJob : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;" Usage="sparkBatchClient.GetSparkBatchJob (batchId, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batchId" Type="System.Int32" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batchId"> Identifier for the batch job. </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single spark batch job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkBatchJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;&gt; GetSparkBatchJobAsync (int batchId, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;&gt; GetSparkBatchJobAsync(int32 batchId, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.GetSparkBatchJobAsync(System.Int32,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkBatchJobAsync (batchId As Integer, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkBatchJob))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkBatchJobAsync : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;&gt;&#xA;override this.GetSparkBatchJobAsync : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;&gt;" Usage="sparkBatchClient.GetSparkBatchJobAsync (batchId, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batchId" Type="System.Int32" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batchId"> Identifier for the batch job. </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single spark batch job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkBatchJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt; GetSparkBatchJobs (int? from = default, int? size = default, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt; GetSparkBatchJobs(valuetype System.Nullable`1&lt;int32&gt; from, valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.GetSparkBatchJobs(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkBatchJobs (Optional from As Nullable(Of Integer) = Nothing, Optional size As Nullable(Of Integer) = Nothing, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkBatchJobCollection)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkBatchJobs : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;&#xA;override this.GetSparkBatchJobs : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;" Usage="sparkBatchClient.GetSparkBatchJobs (from, size, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="from"> Optional param specifying which index the list should begin from. </param>
        <param name="size">
            Optional param specifying the size of the returned list.
                        By default it is 20 and that is the maximum.
            </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List all spark batch jobs which are running under a particular spark pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkBatchJobsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;&gt; GetSparkBatchJobsAsync (int? from = default, int? size = default, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;&gt; GetSparkBatchJobsAsync(valuetype System.Nullable`1&lt;int32&gt; from, valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.GetSparkBatchJobsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkBatchJobsAsync (Optional from As Nullable(Of Integer) = Nothing, Optional size As Nullable(Of Integer) = Nothing, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkBatchJobCollection))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkBatchJobsAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;&gt;&#xA;override this.GetSparkBatchJobsAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;&gt;" Usage="sparkBatchClient.GetSparkBatchJobsAsync (from, size, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="from"> Optional param specifying which index the list should begin from. </param>
        <param name="size">
            Optional param specifying the size of the returned list.
                        By default it is 20 and that is the maximum.
            </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List all spark batch jobs which are running under a particular spark pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateSparkBatchJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Spark.SparkBatchOperation StartCreateSparkBatchJob (Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions sparkBatchJobOptions, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Spark.SparkBatchOperation StartCreateSparkBatchJob(class Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions sparkBatchJobOptions, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.StartCreateSparkBatchJob(Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateSparkBatchJob (sparkBatchJobOptions As SparkBatchJobOptions, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As SparkBatchOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateSparkBatchJob : Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Spark.SparkBatchOperation&#xA;override this.StartCreateSparkBatchJob : Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Spark.SparkBatchOperation" Usage="sparkBatchClient.StartCreateSparkBatchJob (sparkBatchJobOptions, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.SparkBatchOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkBatchJobOptions" Type="Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkBatchJobOptions">To be added.</param>
        <param name="detailed">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateSparkBatchJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Spark.SparkBatchOperation&gt; StartCreateSparkBatchJobAsync (Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions sparkBatchJobOptions, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Spark.SparkBatchOperation&gt; StartCreateSparkBatchJobAsync(class Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions sparkBatchJobOptions, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkBatchClient.StartCreateSparkBatchJobAsync(Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateSparkBatchJobAsync (sparkBatchJobOptions As SparkBatchJobOptions, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SparkBatchOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateSparkBatchJobAsync : Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Spark.SparkBatchOperation&gt;&#xA;override this.StartCreateSparkBatchJobAsync : Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Spark.SparkBatchOperation&gt;" Usage="sparkBatchClient.StartCreateSparkBatchJobAsync (sparkBatchJobOptions, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Spark.SparkBatchOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkBatchJobOptions" Type="Azure.Analytics.Synapse.Spark.Models.SparkBatchJobOptions" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkBatchJobOptions">To be added.</param>
        <param name="detailed">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
