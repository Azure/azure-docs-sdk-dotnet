<Type Name="CcfReceiptVerifier" FullName="Azure.Security.CodeTransparency.Receipt.CcfReceiptVerifier">
  <TypeSignature Language="C#" Value="public class CcfReceiptVerifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CcfReceiptVerifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.CodeTransparency.Receipt.CcfReceiptVerifier" />
  <TypeSignature Language="VB.NET" Value="Public Class CcfReceiptVerifier" />
  <TypeSignature Language="F#" Value="type CcfReceiptVerifier = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            CcfReceiptVerifier class contains the methods to verify the CCF SCITT receipt
            integrity and the inclusion in the Code Transparency Service. The verification
            requires the receipt, the COSE_Sign1 envelope and the service certificate. The
            COSE_Sign1 envelope is the payload that was submitted to the Code Transparency
            Service. The receipt is a cryptographic proof issued by the Code Transparency
            Service after the successful submission of the signature. The service certificate
            is the public key of the Code Transparency Service that was used to endorse the
            receipt.
            The receipt can also be embedded in the COSE_Sign1 envelope.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CcfReceiptVerifier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceiptVerifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunVerification">
      <MemberSignature Language="C#" Value="public static void RunVerification (byte[] ccfReceiptOrCoseBytes, byte[] coseSign1Bytes = default, Func&lt;Azure.Security.CodeTransparency.Receipt.DidWebReference,Azure.Security.CodeTransparency.DidDocument&gt; didResolver = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunVerification(unsigned int8[] ccfReceiptOrCoseBytes, unsigned int8[] coseSign1Bytes, class System.Func`2&lt;class Azure.Security.CodeTransparency.Receipt.DidWebReference, class Azure.Security.CodeTransparency.DidDocument&gt; didResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceiptVerifier.RunVerification(System.Byte[],System.Byte[],System.Func{Azure.Security.CodeTransparency.Receipt.DidWebReference,Azure.Security.CodeTransparency.DidDocument})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RunVerification (ccfReceiptOrCoseBytes As Byte(), Optional coseSign1Bytes As Byte() = Nothing, Optional didResolver As Func(Of DidWebReference, DidDocument) = Nothing)" />
      <MemberSignature Language="F#" Value="static member RunVerification : byte[] * byte[] * Func&lt;Azure.Security.CodeTransparency.Receipt.DidWebReference, Azure.Security.CodeTransparency.DidDocument&gt; -&gt; unit" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceiptVerifier.RunVerification (ccfReceiptOrCoseBytes, coseSign1Bytes, didResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccfReceiptOrCoseBytes" Type="System.Byte[]" />
        <Parameter Name="coseSign1Bytes" Type="System.Byte[]" />
        <Parameter Name="didResolver" Type="System.Func&lt;Azure.Security.CodeTransparency.Receipt.DidWebReference,Azure.Security.CodeTransparency.DidDocument&gt;" />
      </Parameters>
      <Docs>
        <param name="ccfReceiptOrCoseBytes">Receipt cbor or Cose_Sign1 (with an embedded receipt) bytes.</param>
        <param name="coseSign1Bytes">Cose_Sign1 cbor bytes.</param>
        <param name="didResolver">Optional custom DID resolver <see cref="T:Azure.Security.CodeTransparency.Receipt.DidWebReference" />.</param>
        <summary>
            Verify the receipt integrity against the COSE_Sign1 envelope
            and check if receipt was endorsed by the service cert.
            In the case of receipts being embedded in the signature then verify
            all of them.
            Receipt is expected to have the DID issuer to get the certificate from.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunVerification">
      <MemberSignature Language="C#" Value="public static void RunVerification (System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCertificate, byte[] ccfReceiptOrCoseBytes, byte[] coseSign1Bytes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunVerification(class System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCertificate, unsigned int8[] ccfReceiptOrCoseBytes, unsigned int8[] coseSign1Bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceiptVerifier.RunVerification(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RunVerification (serviceCertificate As X509Certificate2, ccfReceiptOrCoseBytes As Byte(), Optional coseSign1Bytes As Byte() = Nothing)" />
      <MemberSignature Language="F#" Value="static member RunVerification : System.Security.Cryptography.X509Certificates.X509Certificate2 * byte[] * byte[] -&gt; unit" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceiptVerifier.RunVerification (serviceCertificate, ccfReceiptOrCoseBytes, coseSign1Bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="ccfReceiptOrCoseBytes" Type="System.Byte[]" />
        <Parameter Name="coseSign1Bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="serviceCertificate">Service certificate which endorsed the receipt signature.</param>
        <param name="ccfReceiptOrCoseBytes">Receipt cbor or Cose_Sign1 (with an embedded receipt) bytes.</param>
        <param name="coseSign1Bytes">Cose_Sign1 cbor bytes.</param>
        <summary>
            Verify the receipt integrity against the COSE_Sign1 envelope
            and check if receipt was endorsed by the given service certificate.
            In the case of receipts being embedded in the signature then verify
            all of them.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
