<Type Name="CcfReceipt" FullName="Azure.Security.CodeTransparency.Receipt.CcfReceipt">
  <TypeSignature Language="C#" Value="public class CcfReceipt" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CcfReceipt extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.CodeTransparency.Receipt.CcfReceipt" />
  <TypeSignature Language="VB.NET" Value="Public Class CcfReceipt" />
  <TypeSignature Language="F#" Value="type CcfReceipt = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            CcfReceipt class which enables encoding, decoding and verification of receipts issued from the Code Transparency Service.
            This class encapsulates the representation and the available operations of CBOR encoded CCF SCITT receipts.
            This is a reference implementation for a proposed draft IETF specification: https://datatracker.ietf.org/doc/draft-birkholz-scitt-receipts/03/ .
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CcfReceipt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeLeaf">
      <MemberSignature Language="C#" Value="protected byte[] ComputeLeaf (System.Security.Cryptography.Cose.CoseSign1Message coseSign1Message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] ComputeLeaf(class System.Security.Cryptography.Cose.CoseSign1Message coseSign1Message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.ComputeLeaf(System.Security.Cryptography.Cose.CoseSign1Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ComputeLeaf (coseSign1Message As CoseSign1Message) As Byte()" />
      <MemberSignature Language="F#" Value="member this.ComputeLeaf : System.Security.Cryptography.Cose.CoseSign1Message -&gt; byte[]" Usage="ccfReceipt.ComputeLeaf coseSign1Message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coseSign1Message" Type="System.Security.Cryptography.Cose.CoseSign1Message" />
      </Parameters>
      <Docs>
        <param name="coseSign1Message">CoseSign1Message message object</param>
        <summary>
            Compute leaf value with the help of CounterSignStruct bytes.
            </summary>
        <returns>Computed leaf bytes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public Azure.Security.CodeTransparency.Receipt.CcfReceipt.ReceiptContents Contents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Security.CodeTransparency.Receipt.CcfReceipt/ReceiptContents Contents" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.CodeTransparency.Receipt.CcfReceipt.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Property Contents As CcfReceipt.ReceiptContents" />
      <MemberSignature Language="F#" Value="member this.Contents : Azure.Security.CodeTransparency.Receipt.CcfReceipt.ReceiptContents with get, set" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.CodeTransparency.Receipt.CcfReceipt+ReceiptContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            ReceiptContents contains inclusion proof of the registration in the service and the signature.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COSE_HEADER_EMBEDDED_RECEIPTS">
      <MemberSignature Language="C#" Value="public const int COSE_HEADER_EMBEDDED_RECEIPTS = 394;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 COSE_HEADER_EMBEDDED_RECEIPTS = (394)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.CodeTransparency.Receipt.CcfReceipt.COSE_HEADER_EMBEDDED_RECEIPTS" />
      <MemberSignature Language="VB.NET" Value="Public Const COSE_HEADER_EMBEDDED_RECEIPTS As Integer  = 394" />
      <MemberSignature Language="F#" Value="val mutable COSE_HEADER_EMBEDDED_RECEIPTS : int" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.COSE_HEADER_EMBEDDED_RECEIPTS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>394</MemberValue>
      <Docs>
        <summary>
            Header key to get access to the embedded receipts.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static Azure.Security.CodeTransparency.Receipt.CcfReceipt Deserialize (byte[] cbor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Security.CodeTransparency.Receipt.CcfReceipt Deserialize(unsigned int8[] cbor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.Deserialize(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (cbor As Byte()) As CcfReceipt" />
      <MemberSignature Language="F#" Value="static member Deserialize : byte[] -&gt; Azure.Security.CodeTransparency.Receipt.CcfReceipt" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.Deserialize cbor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.CodeTransparency.Receipt.CcfReceipt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbor" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cbor">Receipt bytes.</param>
        <summary>
            Decode CBOR receipt bytes into CcfReceipt.
            </summary>
        <returns>CcfReceipt object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static Azure.Security.CodeTransparency.Receipt.CcfReceipt Deserialize (System.Formats.Cbor.CborReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Security.CodeTransparency.Receipt.CcfReceipt Deserialize(class System.Formats.Cbor.CborReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.Deserialize(System.Formats.Cbor.CborReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (reader As CborReader) As CcfReceipt" />
      <MemberSignature Language="F#" Value="static member Deserialize : System.Formats.Cbor.CborReader -&gt; Azure.Security.CodeTransparency.Receipt.CcfReceipt" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.CodeTransparency.Receipt.CcfReceipt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Formats.Cbor.CborReader" />
      </Parameters>
      <Docs>
        <param name="reader">CborReader.</param>
        <summary>
            Decode CBOR receipt bytes into CcfReceipt.
            </summary>
        <returns>CcfReceipt object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeMany">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Azure.Security.CodeTransparency.Receipt.CcfReceipt&gt; DeserializeMany (byte[] cbor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Azure.Security.CodeTransparency.Receipt.CcfReceipt&gt; DeserializeMany(unsigned int8[] cbor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.DeserializeMany(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeserializeMany (cbor As Byte()) As List(Of CcfReceipt)" />
      <MemberSignature Language="F#" Value="static member DeserializeMany : byte[] -&gt; System.Collections.Generic.List&lt;Azure.Security.CodeTransparency.Receipt.CcfReceipt&gt;" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.DeserializeMany cbor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Azure.Security.CodeTransparency.Receipt.CcfReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbor" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cbor">receipts encoded into CBOR array.</param>
        <summary>
            Decodes COSE_Sign1 unprotected header value that contains an array of receipts.
            </summary>
        <returns>List of CcfReceipt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="GetSignProtected">
      <MemberSignature Language="C#" Value="public Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected GetSignProtected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Security.CodeTransparency.Receipt.CcfReceipt/SignProtected GetSignProtected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.GetSignProtected" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignProtected () As CcfReceipt.SignProtected" />
      <MemberSignature Language="F#" Value="member this.GetSignProtected : unit -&gt; Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected" Usage="ccfReceipt.GetSignProtected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.CodeTransparency.Receipt.CcfReceipt+SignProtected</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Decodes the protected headers.
            </summary>
        <returns>SignProtected headers.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAndVerifyNodeCert">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.X509Certificates.X509Certificate2 ParseAndVerifyNodeCert (System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCert, Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected signProtected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 ParseAndVerifyNodeCert(class System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCert, class Azure.Security.CodeTransparency.Receipt.CcfReceipt/SignProtected signProtected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.ParseAndVerifyNodeCert(System.Security.Cryptography.X509Certificates.X509Certificate2,Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ParseAndVerifyNodeCert (serviceCert As X509Certificate2, signProtected As CcfReceipt.SignProtected) As X509Certificate2" />
      <MemberSignature Language="F#" Value="member this.ParseAndVerifyNodeCert : System.Security.Cryptography.X509Certificates.X509Certificate2 * Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="ccfReceipt.ParseAndVerifyNodeCert (serviceCert, signProtected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCert" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="signProtected" Type="Azure.Security.CodeTransparency.Receipt.CcfReceipt+SignProtected" />
      </Parameters>
      <Docs>
        <param name="serviceCert">Service certificate</param>
        <param name="signProtected">SignProtected object</param>
        <summary>
            Get the node certificate from the receipt and verify it against the service certificate before returning.
            </summary>
        <returns>Verified node certificate.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="RECEIPT_HEADER_ISSUER">
      <MemberSignature Language="C#" Value="public const ulong RECEIPT_HEADER_ISSUER = 391;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 RECEIPT_HEADER_ISSUER = (391)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_ISSUER" />
      <MemberSignature Language="VB.NET" Value="Public Const RECEIPT_HEADER_ISSUER As ULong  = 391" />
      <MemberSignature Language="F#" Value="val mutable RECEIPT_HEADER_ISSUER : uint64" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_ISSUER" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>391</MemberValue>
      <Docs>
        <summary>
            Issuer header key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RECEIPT_HEADER_KEY_ID">
      <MemberSignature Language="C#" Value="public const ulong RECEIPT_HEADER_KEY_ID = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 RECEIPT_HEADER_KEY_ID = (4)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_KEY_ID" />
      <MemberSignature Language="VB.NET" Value="Public Const RECEIPT_HEADER_KEY_ID As ULong  = 4" />
      <MemberSignature Language="F#" Value="val mutable RECEIPT_HEADER_KEY_ID : uint64" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_KEY_ID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            Key ID header key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RECEIPT_HEADER_REGISTRATION_TIME">
      <MemberSignature Language="C#" Value="public const string RECEIPT_HEADER_REGISTRATION_TIME;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string RECEIPT_HEADER_REGISTRATION_TIME" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_REGISTRATION_TIME" />
      <MemberSignature Language="VB.NET" Value="Public Const RECEIPT_HEADER_REGISTRATION_TIME As String " />
      <MemberSignature Language="F#" Value="val mutable RECEIPT_HEADER_REGISTRATION_TIME : string" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_REGISTRATION_TIME" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Countersign time header key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RECEIPT_HEADER_SERVICE_ID">
      <MemberSignature Language="C#" Value="public const string RECEIPT_HEADER_SERVICE_ID;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string RECEIPT_HEADER_SERVICE_ID" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_SERVICE_ID" />
      <MemberSignature Language="VB.NET" Value="Public Const RECEIPT_HEADER_SERVICE_ID As String " />
      <MemberSignature Language="F#" Value="val mutable RECEIPT_HEADER_SERVICE_ID : string" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_SERVICE_ID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Service identifier header key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RECEIPT_HEADER_TREE_ALGORITHM">
      <MemberSignature Language="C#" Value="public const string RECEIPT_HEADER_TREE_ALGORITHM;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string RECEIPT_HEADER_TREE_ALGORITHM" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_TREE_ALGORITHM" />
      <MemberSignature Language="VB.NET" Value="Public Const RECEIPT_HEADER_TREE_ALGORITHM As String " />
      <MemberSignature Language="F#" Value="val mutable RECEIPT_HEADER_TREE_ALGORITHM : string" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.RECEIPT_HEADER_TREE_ALGORITHM" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tree algorithm header id.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecomputeSignedRootHash">
      <MemberSignature Language="C#" Value="protected byte[] RecomputeSignedRootHash (System.Security.Cryptography.Cose.CoseSign1Message coseSign1Message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] RecomputeSignedRootHash(class System.Security.Cryptography.Cose.CoseSign1Message coseSign1Message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.RecomputeSignedRootHash(System.Security.Cryptography.Cose.CoseSign1Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RecomputeSignedRootHash (coseSign1Message As CoseSign1Message) As Byte()" />
      <MemberSignature Language="F#" Value="member this.RecomputeSignedRootHash : System.Security.Cryptography.Cose.CoseSign1Message -&gt; byte[]" Usage="ccfReceipt.RecomputeSignedRootHash coseSign1Message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coseSign1Message" Type="System.Security.Cryptography.Cose.CoseSign1Message" />
      </Parameters>
      <Docs>
        <param name="coseSign1Message">CoseSign1Message message object.</param>
        <summary>
            Recompute the signed root hash using the COSE_Sign1 envelope and receipt contents.
            </summary>
        <returns>Computed root hash byte array.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignProtectedRaw">
      <MemberSignature Language="C#" Value="public byte[] SignProtectedRaw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignProtectedRaw" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtectedRaw" />
      <MemberSignature Language="VB.NET" Value="Public Property SignProtectedRaw As Byte()" />
      <MemberSignature Language="F#" Value="member this.SignProtectedRaw : byte[] with get, set" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtectedRaw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Not yet decoded SignProtected structure, also referred to as protected headers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected" />
      </Docs>
    </Member>
    <Member MemberName="SUPPORTED_TREE_ALGORITHM">
      <MemberSignature Language="C#" Value="public const string SUPPORTED_TREE_ALGORITHM;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SUPPORTED_TREE_ALGORITHM" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.CodeTransparency.Receipt.CcfReceipt.SUPPORTED_TREE_ALGORITHM" />
      <MemberSignature Language="VB.NET" Value="Public Const SUPPORTED_TREE_ALGORITHM As String " />
      <MemberSignature Language="F#" Value="val mutable SUPPORTED_TREE_ALGORITHM : string" Usage="Azure.Security.CodeTransparency.Receipt.CcfReceipt.SUPPORTED_TREE_ALGORITHM" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Expected tree algorithm value in the receipt.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyReceipt">
      <MemberSignature Language="C#" Value="public void VerifyReceipt (byte[] coseSign1Bytes, System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyReceipt(unsigned int8[] coseSign1Bytes, class System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCert) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.VerifyReceipt(System.Byte[],System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyReceipt (coseSign1Bytes As Byte(), serviceCert As X509Certificate2)" />
      <MemberSignature Language="F#" Value="member this.VerifyReceipt : byte[] * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; unit" Usage="ccfReceipt.VerifyReceipt (coseSign1Bytes, serviceCert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coseSign1Bytes" Type="System.Byte[]" />
        <Parameter Name="serviceCert" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="coseSign1Bytes">COSE_Sign1 cbor bytes.</param>
        <param name="serviceCert">Service certificate that endorsed the receipt issuer.</param>
        <summary>
            Verify CCF SCITT receipt.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="protected bool VerifySignature (byte[] signedRootHash, System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCert, Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected signProtected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool VerifySignature(unsigned int8[] signedRootHash, class System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCert, class Azure.Security.CodeTransparency.Receipt.CcfReceipt/SignProtected signProtected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.CodeTransparency.Receipt.CcfReceipt.VerifySignature(System.Byte[],System.Security.Cryptography.X509Certificates.X509Certificate2,Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected)" />
      <MemberSignature Language="VB.NET" Value="Protected Function VerifySignature (signedRootHash As Byte(), serviceCert As X509Certificate2, signProtected As CcfReceipt.SignProtected) As Boolean" />
      <MemberSignature Language="F#" Value="member this.VerifySignature : byte[] * System.Security.Cryptography.X509Certificates.X509Certificate2 * Azure.Security.CodeTransparency.Receipt.CcfReceipt.SignProtected -&gt; bool" Usage="ccfReceipt.VerifySignature (signedRootHash, serviceCert, signProtected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.CodeTransparency</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedRootHash" Type="System.Byte[]" />
        <Parameter Name="serviceCert" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="signProtected" Type="Azure.Security.CodeTransparency.Receipt.CcfReceipt+SignProtected" />
      </Parameters>
      <Docs>
        <param name="signedRootHash">Computed signedRootHash byte array.</param>
        <param name="serviceCert">Service certificate.</param>
        <param name="signProtected">SignProtected object.</param>
        <summary>
            VerifySignature checks the integrity of the receipt signature against the parsed node certificate.
            Node certificate is also verified against the service certificate.
            This function is a simplified version of x509.Certificate.CheckSignature but without the forced hashing of the data as it is already hashed.
            </summary>
        <returns>Success/Failure as bool value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
