<Type Name="AnalyzeTextOptions" FullName="Azure.AI.ContentSafety.AnalyzeTextOptions">
  <TypeSignature Language="C#" Value="public class AnalyzeTextOptions" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalyzeTextOptions extends System.Object" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.ContentSafety.AnalyzeTextOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalyzeTextOptions" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type AnalyzeTextOptions = class" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class AnalyzeTextOptions : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalyzeTextOptions extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.ContentSafety.AnalyzeTextOptions&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.ContentSafety.AnalyzeTextOptions&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalyzeTextOptions&#xA;Implements IJsonModel(Of AnalyzeTextOptions), IPersistableModel(Of AnalyzeTextOptions)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type AnalyzeTextOptions = class&#xA;    interface IJsonModel&lt;AnalyzeTextOptions&gt;&#xA;    interface IPersistableModel&lt;AnalyzeTextOptions&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The text analysis request. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnalyzeTextOptions (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.AnalyzeTextOptions.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.ContentSafety.AnalyzeTextOptions : string -&gt; Azure.AI.ContentSafety.AnalyzeTextOptions" Usage="new Azure.AI.ContentSafety.AnalyzeTextOptions text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"> The text needs to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeTextOptions" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BlocklistNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; BlocklistNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; BlocklistNames" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.BlocklistNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlocklistNames As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.BlocklistNames : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.BlocklistNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The names of blocklists. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.ContentSafety.TextCategory&gt; Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.AI.ContentSafety.TextCategory&gt; Categories" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.Categories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Categories As IList(Of TextCategory)" />
      <MemberSignature Language="F#" Value="member this.Categories : System.Collections.Generic.IList&lt;Azure.AI.ContentSafety.TextCategory&gt;" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.Categories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.ContentSafety.TextCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HaltOnBlocklistHit">
      <MemberSignature Language="C#" Value="public bool? HaltOnBlocklistHit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; HaltOnBlocklistHit" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.HaltOnBlocklistHit" />
      <MemberSignature Language="VB.NET" Value="Public Property HaltOnBlocklistHit As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.HaltOnBlocklistHit : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.HaltOnBlocklistHit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputType">
      <MemberSignature Language="C#" Value="public Azure.AI.ContentSafety.AnalyzeTextOutputType? OutputType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.ContentSafety.AnalyzeTextOutputType&gt; OutputType" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.OutputType" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputType As Nullable(Of AnalyzeTextOutputType)" />
      <MemberSignature Language="F#" Value="member this.OutputType : Nullable&lt;Azure.AI.ContentSafety.AnalyzeTextOutputType&gt; with get, set" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.OutputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.ContentSafety.AnalyzeTextOutputType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This refers to the type of text analysis output. If no value is assigned, the default value will be "FourSeverityLevels". </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.ContentSafety.AnalyzeTextOptions IJsonModel&lt;AnalyzeTextOptions&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.ContentSafety.AnalyzeTextOptions System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.AnalyzeTextOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#ContentSafety#AnalyzeTextOptions&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As AnalyzeTextOptions Implements IJsonModel(Of AnalyzeTextOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.ContentSafety.AnalyzeTextOptions&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.ContentSafety.AnalyzeTextOptions" Usage="analyzeTextOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeTextOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;AnalyzeTextOptions&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.AnalyzeTextOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#ContentSafety#AnalyzeTextOptions&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of AnalyzeTextOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="analyzeTextOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.ContentSafety.AnalyzeTextOptions IPersistableModel&lt;AnalyzeTextOptions&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.ContentSafety.AnalyzeTextOptions System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.AnalyzeTextOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#ContentSafety#AnalyzeTextOptions&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As AnalyzeTextOptions Implements IPersistableModel(Of AnalyzeTextOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.ContentSafety.AnalyzeTextOptions&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.ContentSafety.AnalyzeTextOptions" Usage="analyzeTextOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeTextOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;AnalyzeTextOptions&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.AnalyzeTextOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#ContentSafety#AnalyzeTextOptions&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of AnalyzeTextOptions).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="analyzeTextOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;AnalyzeTextOptions&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.AnalyzeTextOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#ContentSafety#AnalyzeTextOptions&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of AnalyzeTextOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="analyzeTextOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.ContentSafety.AnalyzeTextOptions&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The text needs to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
