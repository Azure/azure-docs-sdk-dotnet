<Type Name="ContentSafetyModelFactory" FullName="Azure.AI.ContentSafety.ContentSafetyModelFactory">
  <TypeSignature Language="C#" Value="public static class ContentSafetyModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContentSafetyModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.ContentSafety.ContentSafetyModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentSafetyModelFactory" />
  <TypeSignature Language="F#" Value="type ContentSafetyModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> ContentSafety model factory. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOrUpdateTextBlocklistItemsResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult AddOrUpdateTextBlocklistItemsResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistItem&gt; blocklistItems = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult AddOrUpdateTextBlocklistItemsResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextBlocklistItem&gt; blocklistItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AddOrUpdateTextBlocklistItemsResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextBlocklistItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddOrUpdateTextBlocklistItemsResult (Optional blocklistItems As IEnumerable(Of TextBlocklistItem) = Nothing) As AddOrUpdateTextBlocklistItemsResult" />
      <MemberSignature Language="F#" Value="static member AddOrUpdateTextBlocklistItemsResult : seq&lt;Azure.AI.ContentSafety.TextBlocklistItem&gt; -&gt; Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AddOrUpdateTextBlocklistItemsResult blocklistItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistItems" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistItem&gt;" />
      </Parameters>
      <Docs>
        <param name="blocklistItems"> Array of blocklistItems have been added. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeImageOptions">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeImageOptions AnalyzeImageOptions (Azure.AI.ContentSafety.ContentSafetyImageData image = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.ImageCategory&gt; categories = default, Azure.AI.ContentSafety.AnalyzeImageOutputType? outputType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeImageOptions AnalyzeImageOptions(class Azure.AI.ContentSafety.ContentSafetyImageData image, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.ContentSafety.ImageCategory&gt; categories, valuetype System.Nullable`1&lt;valuetype Azure.AI.ContentSafety.AnalyzeImageOutputType&gt; outputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageOptions(Azure.AI.ContentSafety.ContentSafetyImageData,System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.ImageCategory},System.Nullable{Azure.AI.ContentSafety.AnalyzeImageOutputType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeImageOptions (Optional image As ContentSafetyImageData = Nothing, Optional categories As IEnumerable(Of ImageCategory) = Nothing, Optional outputType As Nullable(Of AnalyzeImageOutputType) = Nothing) As AnalyzeImageOptions" />
      <MemberSignature Language="F#" Value="static member AnalyzeImageOptions : Azure.AI.ContentSafety.ContentSafetyImageData * seq&lt;Azure.AI.ContentSafety.ImageCategory&gt; * Nullable&lt;Azure.AI.ContentSafety.AnalyzeImageOutputType&gt; -&gt; Azure.AI.ContentSafety.AnalyzeImageOptions" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageOptions (image, categories, outputType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeImageOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="Azure.AI.ContentSafety.ContentSafetyImageData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="categories" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.ImageCategory&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="outputType" Type="System.Nullable&lt;Azure.AI.ContentSafety.AnalyzeImageOutputType&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="image"> The image needs to be analyzed. </param>
        <param name="categories"> The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned. </param>
        <param name="outputType"> This refers to the type of image analysis output. If no value is assigned, the default value will be "FourSeverityLevels". </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeImageOptions" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeImageOptions" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeImageResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeImageResult AnalyzeImageResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt; categoriesAnalysis = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeImageResult AnalyzeImageResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt; categoriesAnalysis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.ImageCategoriesAnalysis})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeImageResult (Optional categoriesAnalysis As IEnumerable(Of ImageCategoriesAnalysis) = Nothing) As AnalyzeImageResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeImageResult : seq&lt;Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt; -&gt; Azure.AI.ContentSafety.AnalyzeImageResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageResult categoriesAnalysis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeImageResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoriesAnalysis" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt;" />
      </Parameters>
      <Docs>
        <param name="categoriesAnalysis"> Analysis result for categories. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeImageResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeImageResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextOptions">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeTextOptions AnalyzeTextOptions (string text = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextCategory&gt; categories = default, System.Collections.Generic.IEnumerable&lt;string&gt; blocklistNames = default, bool? haltOnBlocklistHit = default, Azure.AI.ContentSafety.AnalyzeTextOutputType? outputType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeTextOptions AnalyzeTextOptions(string text, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.ContentSafety.TextCategory&gt; categories, class System.Collections.Generic.IEnumerable`1&lt;string&gt; blocklistNames, valuetype System.Nullable`1&lt;bool&gt; haltOnBlocklistHit, valuetype System.Nullable`1&lt;valuetype Azure.AI.ContentSafety.AnalyzeTextOutputType&gt; outputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextOptions(System.String,System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextCategory},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{Azure.AI.ContentSafety.AnalyzeTextOutputType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextOptions (Optional text As String = Nothing, Optional categories As IEnumerable(Of TextCategory) = Nothing, Optional blocklistNames As IEnumerable(Of String) = Nothing, Optional haltOnBlocklistHit As Nullable(Of Boolean) = Nothing, Optional outputType As Nullable(Of AnalyzeTextOutputType) = Nothing) As AnalyzeTextOptions" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextOptions : string * seq&lt;Azure.AI.ContentSafety.TextCategory&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.AI.ContentSafety.AnalyzeTextOutputType&gt; -&gt; Azure.AI.ContentSafety.AnalyzeTextOptions" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextOptions (text, categories, blocklistNames, haltOnBlocklistHit, outputType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeTextOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="categories" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextCategory&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="blocklistNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="haltOnBlocklistHit" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="outputType" Type="System.Nullable&lt;Azure.AI.ContentSafety.AnalyzeTextOutputType&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="text"> The text needs to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request. </param>
        <param name="categories"> The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned. </param>
        <param name="blocklistNames"> The names of blocklists. </param>
        <param name="haltOnBlocklistHit"> When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit. </param>
        <param name="outputType"> This refers to the type of text analysis output. If no value is assigned, the default value will be "FourSeverityLevels". </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeTextOptions" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeTextOptions" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeTextResult AnalyzeTextResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistMatch&gt; blocklistsMatch = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextCategoriesAnalysis&gt; categoriesAnalysis = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeTextResult AnalyzeTextResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextBlocklistMatch&gt; blocklistsMatch, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextCategoriesAnalysis&gt; categoriesAnalysis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextBlocklistMatch},System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextCategoriesAnalysis})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextResult (Optional blocklistsMatch As IEnumerable(Of TextBlocklistMatch) = Nothing, Optional categoriesAnalysis As IEnumerable(Of TextCategoriesAnalysis) = Nothing) As AnalyzeTextResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextResult : seq&lt;Azure.AI.ContentSafety.TextBlocklistMatch&gt; * seq&lt;Azure.AI.ContentSafety.TextCategoriesAnalysis&gt; -&gt; Azure.AI.ContentSafety.AnalyzeTextResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextResult (blocklistsMatch, categoriesAnalysis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeTextResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistsMatch" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistMatch&gt;" />
        <Parameter Name="categoriesAnalysis" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextCategoriesAnalysis&gt;" />
      </Parameters>
      <Docs>
        <param name="blocklistsMatch"> The blocklist match details. </param>
        <param name="categoriesAnalysis"> Analysis result for categories. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeTextResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeTextResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageCategoriesAnalysis">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.ImageCategoriesAnalysis ImageCategoriesAnalysis (Azure.AI.ContentSafety.ImageCategory category = default, int? severity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.ImageCategoriesAnalysis ImageCategoriesAnalysis(valuetype Azure.AI.ContentSafety.ImageCategory category, valuetype System.Nullable`1&lt;int32&gt; severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.ImageCategoriesAnalysis(Azure.AI.ContentSafety.ImageCategory,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImageCategoriesAnalysis (Optional category As ImageCategory = Nothing, Optional severity As Nullable(Of Integer) = Nothing) As ImageCategoriesAnalysis" />
      <MemberSignature Language="F#" Value="static member ImageCategoriesAnalysis : Azure.AI.ContentSafety.ImageCategory * Nullable&lt;int&gt; -&gt; Azure.AI.ContentSafety.ImageCategoriesAnalysis" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.ImageCategoriesAnalysis (category, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.ImageCategoriesAnalysis</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.AI.ContentSafety.ImageCategory" />
        <Parameter Name="severity" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="category"> The image analysis category. </param>
        <param name="severity"> The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’, and the output value can be 0, 2, 4, 6. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.ImageCategoriesAnalysis" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.ImageCategoriesAnalysis" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBlocklist">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklist TextBlocklist (string name = default, string description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklist TextBlocklist(string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklist(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklist (Optional name As String = Nothing, Optional description As String = Nothing) As TextBlocklist" />
      <MemberSignature Language="F#" Value="static member TextBlocklist : string * string -&gt; Azure.AI.ContentSafety.TextBlocklist" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklist (name, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlocklist</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Text blocklist name. </param>
        <param name="description"> Text blocklist description. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextBlocklist" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlocklist" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBlocklistItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklistItem TextBlocklistItem (string blocklistItemId = default, string description = default, string text = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklistItem TextBlocklistItem(string blocklistItemId, string description, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistItem(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklistItem (Optional blocklistItemId As String = Nothing, Optional description As String = Nothing, Optional text As String = Nothing) As TextBlocklistItem" />
      <MemberSignature Language="F#" Value="static member TextBlocklistItem : string * string * string -&gt; Azure.AI.ContentSafety.TextBlocklistItem" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistItem (blocklistItemId, description, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlocklistItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistItemId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="blocklistItemId"> The service will generate a BlocklistItemId, which will be a UUID. </param>
        <param name="description"> BlocklistItem description. </param>
        <param name="text"> BlocklistItem content. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextBlocklistItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlocklistItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBlocklistMatch">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklistMatch TextBlocklistMatch (string blocklistName = default, string blocklistItemId = default, string blocklistItemText = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklistMatch TextBlocklistMatch(string blocklistName, string blocklistItemId, string blocklistItemText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistMatch(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklistMatch (Optional blocklistName As String = Nothing, Optional blocklistItemId As String = Nothing, Optional blocklistItemText As String = Nothing) As TextBlocklistMatch" />
      <MemberSignature Language="F#" Value="static member TextBlocklistMatch : string * string * string -&gt; Azure.AI.ContentSafety.TextBlocklistMatch" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistMatch (blocklistName, blocklistItemId, blocklistItemText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlocklistMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistName" Type="System.String" />
        <Parameter Name="blocklistItemId" Type="System.String" />
        <Parameter Name="blocklistItemText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="blocklistName"> The name of the matched blocklist. </param>
        <param name="blocklistItemId"> The ID of the matched item. </param>
        <param name="blocklistItemText"> The content of the matched item. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextBlocklistMatch" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlocklistMatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blocklistName" />, <paramref name="blocklistItemId" /> or <paramref name="blocklistItemText" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TextCategoriesAnalysis">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextCategoriesAnalysis TextCategoriesAnalysis (Azure.AI.ContentSafety.TextCategory category = default, int? severity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextCategoriesAnalysis TextCategoriesAnalysis(valuetype Azure.AI.ContentSafety.TextCategory category, valuetype System.Nullable`1&lt;int32&gt; severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextCategoriesAnalysis(Azure.AI.ContentSafety.TextCategory,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextCategoriesAnalysis (Optional category As TextCategory = Nothing, Optional severity As Nullable(Of Integer) = Nothing) As TextCategoriesAnalysis" />
      <MemberSignature Language="F#" Value="static member TextCategoriesAnalysis : Azure.AI.ContentSafety.TextCategory * Nullable&lt;int&gt; -&gt; Azure.AI.ContentSafety.TextCategoriesAnalysis" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextCategoriesAnalysis (category, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextCategoriesAnalysis</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.AI.ContentSafety.TextCategory" />
        <Parameter Name="severity" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="category"> The text analysis category. </param>
        <param name="severity"> The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’ or ‘EightSeverity Levels’, and the output value can be 0, 2, 4, 6 or 0, 1, 2, 3, 4, 5, 6, or 7. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextCategoriesAnalysis" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextCategoriesAnalysis" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
