<Type Name="EncryptionScopesOperations" FullName="Azure.ResourceManager.Storage.EncryptionScopesOperations">
  <TypeSignature Language="C#" Value="public class EncryptionScopesOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptionScopesOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Storage.EncryptionScopesOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptionScopesOperations" />
  <TypeSignature Language="F#" Value="type EncryptionScopesOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The EncryptionScopes service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptionScopesOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of EncryptionScopesOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt; Get (string resourceGroupName, string accountName, string encryptionScopeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt; Get(string resourceGroupName, string accountName, string encryptionScopeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, accountName As String, encryptionScopeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EncryptionScope)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&#xA;override this.Get : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;" Usage="encryptionScopesOperations.Get (resourceGroupName, accountName, encryptionScopeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="encryptionScopeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns the properties for the specified encryption scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt; GetAsync (string resourceGroupName, string accountName, string encryptionScopeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt; GetAsync(string resourceGroupName, string accountName, string encryptionScopeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, accountName As String, encryptionScopeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EncryptionScope))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;&#xA;override this.GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;" Usage="encryptionScopesOperations.GetAsync (resourceGroupName, accountName, encryptionScopeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="encryptionScopeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns the properties for the specified encryption scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt; List (string resourceGroupName, string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt; List(string resourceGroupName, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.List(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function List (resourceGroupName As String, accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EncryptionScope)" />
      <MemberSignature Language="F#" Value="abstract member List : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&#xA;override this.List : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;" Usage="encryptionScopesOperations.List (resourceGroupName, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists all the encryption scopes available under the specified storage account. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt; ListAsync (string resourceGroupName, string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt; ListAsync(string resourceGroupName, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.ListAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAsync (resourceGroupName As String, accountName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EncryptionScope)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&#xA;override this.ListAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;" Usage="encryptionScopesOperations.ListAsync (resourceGroupName, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists all the encryption scopes available under the specified storage account. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Patch">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt; Patch (string resourceGroupName, string accountName, string encryptionScopeName, Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt; Patch(string resourceGroupName, string accountName, string encryptionScopeName, class Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.Patch(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.EncryptionScope,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Patch (resourceGroupName As String, accountName As String, encryptionScopeName As String, encryptionScope As EncryptionScope, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EncryptionScope)" />
      <MemberSignature Language="F#" Value="abstract member Patch : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&#xA;override this.Patch : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;" Usage="encryptionScopesOperations.Patch (resourceGroupName, accountName, encryptionScopeName, encryptionScope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="encryptionScopeName" Type="System.String" />
        <Parameter Name="encryptionScope" Type="Azure.ResourceManager.Storage.Models.EncryptionScope" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
        <param name="encryptionScope"> Encryption scope properties to be used for the update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt; PatchAsync (string resourceGroupName, string accountName, string encryptionScopeName, Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt; PatchAsync(string resourceGroupName, string accountName, string encryptionScopeName, class Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.PatchAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.EncryptionScope,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PatchAsync (resourceGroupName As String, accountName As String, encryptionScopeName As String, encryptionScope As EncryptionScope, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EncryptionScope))" />
      <MemberSignature Language="F#" Value="abstract member PatchAsync : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;&#xA;override this.PatchAsync : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;" Usage="encryptionScopesOperations.PatchAsync (resourceGroupName, accountName, encryptionScopeName, encryptionScope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="encryptionScopeName" Type="System.String" />
        <Parameter Name="encryptionScope" Type="Azure.ResourceManager.Storage.Models.EncryptionScope" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
        <param name="encryptionScope"> Encryption scope properties to be used for the update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt; Put (string resourceGroupName, string accountName, string encryptionScopeName, Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt; Put(string resourceGroupName, string accountName, string encryptionScopeName, class Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.Put(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.EncryptionScope,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Put (resourceGroupName As String, accountName As String, encryptionScopeName As String, encryptionScope As EncryptionScope, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EncryptionScope)" />
      <MemberSignature Language="F#" Value="abstract member Put : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&#xA;override this.Put : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;" Usage="encryptionScopesOperations.Put (resourceGroupName, accountName, encryptionScopeName, encryptionScope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="encryptionScopeName" Type="System.String" />
        <Parameter Name="encryptionScope" Type="Azure.ResourceManager.Storage.Models.EncryptionScope" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
        <param name="encryptionScope"> Encryption scope properties to be used for the create or update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt; PutAsync (string resourceGroupName, string accountName, string encryptionScopeName, Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt; PutAsync(string resourceGroupName, string accountName, string encryptionScopeName, class Azure.ResourceManager.Storage.Models.EncryptionScope encryptionScope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.EncryptionScopesOperations.PutAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.EncryptionScope,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PutAsync (resourceGroupName As String, accountName As String, encryptionScopeName As String, encryptionScope As EncryptionScope, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EncryptionScope))" />
      <MemberSignature Language="F#" Value="abstract member PutAsync : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;&#xA;override this.PutAsync : string * string * string * Azure.ResourceManager.Storage.Models.EncryptionScope * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;" Usage="encryptionScopesOperations.PutAsync (resourceGroupName, accountName, encryptionScopeName, encryptionScope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.EncryptionScope&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="encryptionScopeName" Type="System.String" />
        <Parameter Name="encryptionScope" Type="Azure.ResourceManager.Storage.Models.EncryptionScope" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
        <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
        <param name="encryptionScope"> Encryption scope properties to be used for the create or update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
