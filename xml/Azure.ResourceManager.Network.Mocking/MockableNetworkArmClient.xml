<Type Name="MockableNetworkArmClient" FullName="Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient">
  <TypeSignature Language="C#" Value="public class MockableNetworkArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableNetworkArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableNetworkArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableNetworkArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.7.0.0</AssemblyVersion>
    <AssemblyVersion>1.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableNetworkArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdminRuleGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.AdminRuleGroupResource GetAdminRuleGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.AdminRuleGroupResource GetAdminRuleGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetAdminRuleGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdminRuleGroupResource (id As ResourceIdentifier) As AdminRuleGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetAdminRuleGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.AdminRuleGroupResource&#xA;override this.GetAdminRuleGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.AdminRuleGroupResource" Usage="mockableNetworkArmClient.GetAdminRuleGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.AdminRuleGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.AdminRuleGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.AdminRuleGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.AdminRuleGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.AdminRuleGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource GetApplicationGatewayPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource GetApplicationGatewayPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetApplicationGatewayPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayPrivateEndpointConnectionResource (id As ResourceIdentifier) As ApplicationGatewayPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource&#xA;override this.GetApplicationGatewayPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource" Usage="mockableNetworkArmClient.GetApplicationGatewayPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ApplicationGatewayResource GetApplicationGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ApplicationGatewayResource GetApplicationGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetApplicationGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayResource (id As ResourceIdentifier) As ApplicationGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationGatewayResource&#xA;override this.GetApplicationGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationGatewayResource" Usage="mockableNetworkArmClient.GetApplicationGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ApplicationGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ApplicationGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayWafDynamicManifestResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource GetApplicationGatewayWafDynamicManifestResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource GetApplicationGatewayWafDynamicManifestResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetApplicationGatewayWafDynamicManifestResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayWafDynamicManifestResource (id As ResourceIdentifier) As ApplicationGatewayWafDynamicManifestResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayWafDynamicManifestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&#xA;override this.GetApplicationGatewayWafDynamicManifestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource" Usage="mockableNetworkArmClient.GetApplicationGatewayWafDynamicManifestResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation)" /> to create an <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSecurityGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ApplicationSecurityGroupResource GetApplicationSecurityGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ApplicationSecurityGroupResource GetApplicationSecurityGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetApplicationSecurityGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationSecurityGroupResource (id As ResourceIdentifier) As ApplicationSecurityGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationSecurityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationSecurityGroupResource&#xA;override this.GetApplicationSecurityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ApplicationSecurityGroupResource" Usage="mockableNetworkArmClient.GetApplicationSecurityGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ApplicationSecurityGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ApplicationSecurityGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ApplicationSecurityGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ApplicationSecurityGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ApplicationSecurityGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewallResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.AzureFirewallResource GetAzureFirewallResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.AzureFirewallResource GetAzureFirewallResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetAzureFirewallResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewallResource (id As ResourceIdentifier) As AzureFirewallResource" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewallResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.AzureFirewallResource&#xA;override this.GetAzureFirewallResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.AzureFirewallResource" Usage="mockableNetworkArmClient.GetAzureFirewallResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.AzureFirewallResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.AzureFirewallResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.AzureFirewallResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.AzureFirewallResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.AzureFirewallResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureWebCategoryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.AzureWebCategoryResource GetAzureWebCategoryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.AzureWebCategoryResource GetAzureWebCategoryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetAzureWebCategoryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureWebCategoryResource (id As ResourceIdentifier) As AzureWebCategoryResource" />
      <MemberSignature Language="F#" Value="abstract member GetAzureWebCategoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.AzureWebCategoryResource&#xA;override this.GetAzureWebCategoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.AzureWebCategoryResource" Usage="mockableNetworkArmClient.GetAzureWebCategoryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.AzureWebCategoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.AzureWebCategoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.AzureWebCategoryResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.AzureWebCategoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.AzureWebCategoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackendAddressPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.BackendAddressPoolResource GetBackendAddressPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.BackendAddressPoolResource GetBackendAddressPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetBackendAddressPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackendAddressPoolResource (id As ResourceIdentifier) As BackendAddressPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetBackendAddressPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BackendAddressPoolResource&#xA;override this.GetBackendAddressPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BackendAddressPoolResource" Usage="mockableNetworkArmClient.GetBackendAddressPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.BackendAddressPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.BackendAddressPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.BackendAddressPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.BackendAddressPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.BackendAddressPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseAdminRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.BaseAdminRuleResource GetBaseAdminRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.BaseAdminRuleResource GetBaseAdminRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetBaseAdminRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseAdminRuleResource (id As ResourceIdentifier) As BaseAdminRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetBaseAdminRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BaseAdminRuleResource&#xA;override this.GetBaseAdminRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BaseAdminRuleResource" Usage="mockableNetworkArmClient.GetBaseAdminRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.BaseAdminRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.BaseAdminRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.BaseAdminRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.BaseAdminRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.BaseAdminRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBastionHostResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.BastionHostResource GetBastionHostResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.BastionHostResource GetBastionHostResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetBastionHostResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBastionHostResource (id As ResourceIdentifier) As BastionHostResource" />
      <MemberSignature Language="F#" Value="abstract member GetBastionHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BastionHostResource&#xA;override this.GetBastionHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BastionHostResource" Usage="mockableNetworkArmClient.GetBastionHostResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.BastionHostResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.BastionHostResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.BastionHostResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.BastionHostResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.BastionHostResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBgpConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.BgpConnectionResource GetBgpConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.BgpConnectionResource GetBgpConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetBgpConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBgpConnectionResource (id As ResourceIdentifier) As BgpConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetBgpConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BgpConnectionResource&#xA;override this.GetBgpConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.BgpConnectionResource" Usage="mockableNetworkArmClient.GetBgpConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.BgpConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.BgpConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.BgpConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.BgpConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.BgpConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceSwapResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.CloudServiceSwapResource GetCloudServiceSwapResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.CloudServiceSwapResource GetCloudServiceSwapResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetCloudServiceSwapResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceSwapResource (id As ResourceIdentifier) As CloudServiceSwapResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceSwapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.CloudServiceSwapResource&#xA;override this.GetCloudServiceSwapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.CloudServiceSwapResource" Usage="mockableNetworkArmClient.GetCloudServiceSwapResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.CloudServiceSwapResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.CloudServiceSwapResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.CloudServiceSwapResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.CloudServiceSwapResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.CloudServiceSwapResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionMonitorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ConnectionMonitorResource GetConnectionMonitorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ConnectionMonitorResource GetConnectionMonitorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetConnectionMonitorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionMonitorResource (id As ResourceIdentifier) As ConnectionMonitorResource" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionMonitorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ConnectionMonitorResource&#xA;override this.GetConnectionMonitorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ConnectionMonitorResource" Usage="mockableNetworkArmClient.GetConnectionMonitorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ConnectionMonitorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.ConnectionMonitorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ConnectionMonitorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.ConnectionMonitorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ConnectionMonitorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectivityConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ConnectivityConfigurationResource GetConnectivityConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ConnectivityConfigurationResource GetConnectivityConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetConnectivityConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectivityConfigurationResource (id As ResourceIdentifier) As ConnectivityConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetConnectivityConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ConnectivityConfigurationResource&#xA;override this.GetConnectivityConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ConnectivityConfigurationResource" Usage="mockableNetworkArmClient.GetConnectivityConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ConnectivityConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.ConnectivityConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ConnectivityConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.ConnectivityConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ConnectivityConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomIPPrefixResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.CustomIPPrefixResource GetCustomIPPrefixResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.CustomIPPrefixResource GetCustomIPPrefixResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetCustomIPPrefixResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomIPPrefixResource (id As ResourceIdentifier) As CustomIPPrefixResource" />
      <MemberSignature Language="F#" Value="abstract member GetCustomIPPrefixResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.CustomIPPrefixResource&#xA;override this.GetCustomIPPrefixResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.CustomIPPrefixResource" Usage="mockableNetworkArmClient.GetCustomIPPrefixResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.CustomIPPrefixResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.CustomIPPrefixResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.CustomIPPrefixResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.CustomIPPrefixResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.CustomIPPrefixResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDdosCustomPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.DdosCustomPolicyResource GetDdosCustomPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.DdosCustomPolicyResource GetDdosCustomPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetDdosCustomPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosCustomPolicyResource (id As ResourceIdentifier) As DdosCustomPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetDdosCustomPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DdosCustomPolicyResource&#xA;override this.GetDdosCustomPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DdosCustomPolicyResource" Usage="mockableNetworkArmClient.GetDdosCustomPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.DdosCustomPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.DdosCustomPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.DdosCustomPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.DdosCustomPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.DdosCustomPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDdosProtectionPlanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.DdosProtectionPlanResource GetDdosProtectionPlanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.DdosProtectionPlanResource GetDdosProtectionPlanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetDdosProtectionPlanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosProtectionPlanResource (id As ResourceIdentifier) As DdosProtectionPlanResource" />
      <MemberSignature Language="F#" Value="abstract member GetDdosProtectionPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DdosProtectionPlanResource&#xA;override this.GetDdosProtectionPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DdosProtectionPlanResource" Usage="mockableNetworkArmClient.GetDdosProtectionPlanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.DdosProtectionPlanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.DdosProtectionPlanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.DdosProtectionPlanResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.DdosProtectionPlanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.DdosProtectionPlanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSecurityRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.DefaultSecurityRuleResource GetDefaultSecurityRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.DefaultSecurityRuleResource GetDefaultSecurityRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetDefaultSecurityRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultSecurityRuleResource (id As ResourceIdentifier) As DefaultSecurityRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultSecurityRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DefaultSecurityRuleResource&#xA;override this.GetDefaultSecurityRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DefaultSecurityRuleResource" Usage="mockableNetworkArmClient.GetDefaultSecurityRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.DefaultSecurityRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.DefaultSecurityRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.DefaultSecurityRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.DefaultSecurityRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.DefaultSecurityRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscpConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.DscpConfigurationResource GetDscpConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.DscpConfigurationResource GetDscpConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetDscpConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscpConfigurationResource (id As ResourceIdentifier) As DscpConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetDscpConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DscpConfigurationResource&#xA;override this.GetDscpConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.DscpConfigurationResource" Usage="mockableNetworkArmClient.GetDscpConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.DscpConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.DscpConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.DscpConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.DscpConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.DscpConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuitAuthorizationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource GetExpressRouteCircuitAuthorizationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource GetExpressRouteCircuitAuthorizationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteCircuitAuthorizationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuitAuthorizationResource (id As ResourceIdentifier) As ExpressRouteCircuitAuthorizationResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuitAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource&#xA;override this.GetExpressRouteCircuitAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource" Usage="mockableNetworkArmClient.GetExpressRouteCircuitAuthorizationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitAuthorizationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuitConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource GetExpressRouteCircuitConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource GetExpressRouteCircuitConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteCircuitConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuitConnectionResource (id As ResourceIdentifier) As ExpressRouteCircuitConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuitConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource&#xA;override this.GetExpressRouteCircuitConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource" Usage="mockableNetworkArmClient.GetExpressRouteCircuitConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuitPeeringResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource GetExpressRouteCircuitPeeringResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource GetExpressRouteCircuitPeeringResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteCircuitPeeringResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuitPeeringResource (id As ResourceIdentifier) As ExpressRouteCircuitPeeringResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuitPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource&#xA;override this.GetExpressRouteCircuitPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource" Usage="mockableNetworkArmClient.GetExpressRouteCircuitPeeringResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitPeeringResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuitResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCircuitResource GetExpressRouteCircuitResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCircuitResource GetExpressRouteCircuitResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteCircuitResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuitResource (id As ResourceIdentifier) As ExpressRouteCircuitResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuitResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitResource&#xA;override this.GetExpressRouteCircuitResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitResource" Usage="mockableNetworkArmClient.GetExpressRouteCircuitResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCircuitResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteCircuitResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteConnectionResource GetExpressRouteConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteConnectionResource GetExpressRouteConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteConnectionResource (id As ResourceIdentifier) As ExpressRouteConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteConnectionResource&#xA;override this.GetExpressRouteConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteConnectionResource" Usage="mockableNetworkArmClient.GetExpressRouteConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCrossConnectionPeeringResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource GetExpressRouteCrossConnectionPeeringResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource GetExpressRouteCrossConnectionPeeringResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteCrossConnectionPeeringResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCrossConnectionPeeringResource (id As ResourceIdentifier) As ExpressRouteCrossConnectionPeeringResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCrossConnectionPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource&#xA;override this.GetExpressRouteCrossConnectionPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource" Usage="mockableNetworkArmClient.GetExpressRouteCrossConnectionPeeringResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionPeeringResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCrossConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource GetExpressRouteCrossConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource GetExpressRouteCrossConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteCrossConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCrossConnectionResource (id As ResourceIdentifier) As ExpressRouteCrossConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCrossConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&#xA;override this.GetExpressRouteCrossConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource" Usage="mockableNetworkArmClient.GetExpressRouteCrossConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteGatewayResource GetExpressRouteGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteGatewayResource GetExpressRouteGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteGatewayResource (id As ResourceIdentifier) As ExpressRouteGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteGatewayResource&#xA;override this.GetExpressRouteGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteGatewayResource" Usage="mockableNetworkArmClient.GetExpressRouteGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteLinkResource GetExpressRouteLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteLinkResource GetExpressRouteLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteLinkResource (id As ResourceIdentifier) As ExpressRouteLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteLinkResource&#xA;override this.GetExpressRouteLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteLinkResource" Usage="mockableNetworkArmClient.GetExpressRouteLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortAuthorizationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource GetExpressRoutePortAuthorizationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource GetExpressRoutePortAuthorizationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRoutePortAuthorizationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortAuthorizationResource (id As ResourceIdentifier) As ExpressRoutePortAuthorizationResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource&#xA;override this.GetExpressRoutePortAuthorizationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource" Usage="mockableNetworkArmClient.GetExpressRoutePortAuthorizationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortAuthorizationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRoutePortResource GetExpressRoutePortResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRoutePortResource GetExpressRoutePortResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRoutePortResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortResource (id As ResourceIdentifier) As ExpressRoutePortResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRoutePortResource&#xA;override this.GetExpressRoutePortResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRoutePortResource" Usage="mockableNetworkArmClient.GetExpressRoutePortResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRoutePortResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRoutePortResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortsLocationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRoutePortsLocationResource GetExpressRoutePortsLocationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRoutePortsLocationResource GetExpressRoutePortsLocationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRoutePortsLocationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortsLocationResource (id As ResourceIdentifier) As ExpressRoutePortsLocationResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortsLocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&#xA;override this.GetExpressRoutePortsLocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRoutePortsLocationResource" Usage="mockableNetworkArmClient.GetExpressRoutePortsLocationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRoutePortsLocationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortsLocationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRoutePortsLocationResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortsLocationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortsLocationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteProviderPortResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteProviderPortResource GetExpressRouteProviderPortResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteProviderPortResource GetExpressRouteProviderPortResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetExpressRouteProviderPortResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteProviderPortResource (id As ResourceIdentifier) As ExpressRouteProviderPortResource" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteProviderPortResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteProviderPortResource&#xA;override this.GetExpressRouteProviderPortResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ExpressRouteProviderPortResource" Usage="mockableNetworkArmClient.GetExpressRouteProviderPortResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteProviderPortResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.ExpressRouteProviderPortResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ExpressRouteProviderPortResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.ExpressRouteProviderPortResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ExpressRouteProviderPortResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicyDraftResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.FirewallPolicyDraftResource GetFirewallPolicyDraftResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.FirewallPolicyDraftResource GetFirewallPolicyDraftResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetFirewallPolicyDraftResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicyDraftResource (id As ResourceIdentifier) As FirewallPolicyDraftResource" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicyDraftResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyDraftResource&#xA;override this.GetFirewallPolicyDraftResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyDraftResource" Usage="mockableNetworkArmClient.GetFirewallPolicyDraftResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.FirewallPolicyDraftResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyDraftResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.FirewallPolicyDraftResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyDraftResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyDraftResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.FirewallPolicyResource GetFirewallPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.FirewallPolicyResource GetFirewallPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetFirewallPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicyResource (id As ResourceIdentifier) As FirewallPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyResource&#xA;override this.GetFirewallPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyResource" Usage="mockableNetworkArmClient.GetFirewallPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.FirewallPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.FirewallPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicyRuleCollectionGroupDraftResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource GetFirewallPolicyRuleCollectionGroupDraftResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource GetFirewallPolicyRuleCollectionGroupDraftResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetFirewallPolicyRuleCollectionGroupDraftResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicyRuleCollectionGroupDraftResource (id As ResourceIdentifier) As FirewallPolicyRuleCollectionGroupDraftResource" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicyRuleCollectionGroupDraftResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource&#xA;override this.GetFirewallPolicyRuleCollectionGroupDraftResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource" Usage="mockableNetworkArmClient.GetFirewallPolicyRuleCollectionGroupDraftResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupDraftResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicyRuleCollectionGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource GetFirewallPolicyRuleCollectionGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource GetFirewallPolicyRuleCollectionGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetFirewallPolicyRuleCollectionGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicyRuleCollectionGroupResource (id As ResourceIdentifier) As FirewallPolicyRuleCollectionGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicyRuleCollectionGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource&#xA;override this.GetFirewallPolicyRuleCollectionGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource" Usage="mockableNetworkArmClient.GetFirewallPolicyRuleCollectionGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.FirewallPolicyRuleCollectionGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFlowLogResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.FlowLogResource GetFlowLogResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.FlowLogResource GetFlowLogResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetFlowLogResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFlowLogResource (id As ResourceIdentifier) As FlowLogResource" />
      <MemberSignature Language="F#" Value="abstract member GetFlowLogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FlowLogResource&#xA;override this.GetFlowLogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FlowLogResource" Usage="mockableNetworkArmClient.GetFlowLogResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.FlowLogResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.FlowLogResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.FlowLogResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.FlowLogResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.FlowLogResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrontendIPConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.FrontendIPConfigurationResource GetFrontendIPConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.FrontendIPConfigurationResource GetFrontendIPConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetFrontendIPConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrontendIPConfigurationResource (id As ResourceIdentifier) As FrontendIPConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetFrontendIPConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FrontendIPConfigurationResource&#xA;override this.GetFrontendIPConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.FrontendIPConfigurationResource" Usage="mockableNetworkArmClient.GetFrontendIPConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.FrontendIPConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.FrontendIPConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.FrontendIPConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.FrontendIPConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.FrontendIPConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHubIPConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.HubIPConfigurationResource GetHubIPConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.HubIPConfigurationResource GetHubIPConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetHubIPConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHubIPConfigurationResource (id As ResourceIdentifier) As HubIPConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetHubIPConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.HubIPConfigurationResource&#xA;override this.GetHubIPConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.HubIPConfigurationResource" Usage="mockableNetworkArmClient.GetHubIPConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.HubIPConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.HubIPConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.HubIPConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.HubIPConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.HubIPConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHubRouteTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.HubRouteTableResource GetHubRouteTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.HubRouteTableResource GetHubRouteTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetHubRouteTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHubRouteTableResource (id As ResourceIdentifier) As HubRouteTableResource" />
      <MemberSignature Language="F#" Value="abstract member GetHubRouteTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.HubRouteTableResource&#xA;override this.GetHubRouteTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.HubRouteTableResource" Usage="mockableNetworkArmClient.GetHubRouteTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.HubRouteTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.HubRouteTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.HubRouteTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.HubRouteTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.HubRouteTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHubVirtualNetworkConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource GetHubVirtualNetworkConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource GetHubVirtualNetworkConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetHubVirtualNetworkConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHubVirtualNetworkConnectionResource (id As ResourceIdentifier) As HubVirtualNetworkConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetHubVirtualNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource&#xA;override this.GetHubVirtualNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource" Usage="mockableNetworkArmClient.GetHubVirtualNetworkConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.HubVirtualNetworkConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInboundNatRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.InboundNatRuleResource GetInboundNatRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.InboundNatRuleResource GetInboundNatRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetInboundNatRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInboundNatRuleResource (id As ResourceIdentifier) As InboundNatRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetInboundNatRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.InboundNatRuleResource&#xA;override this.GetInboundNatRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.InboundNatRuleResource" Usage="mockableNetworkArmClient.GetInboundNatRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.InboundNatRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.InboundNatRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.InboundNatRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.InboundNatRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.InboundNatRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPAllocationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.IPAllocationResource GetIPAllocationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.IPAllocationResource GetIPAllocationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetIPAllocationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAllocationResource (id As ResourceIdentifier) As IPAllocationResource" />
      <MemberSignature Language="F#" Value="abstract member GetIPAllocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.IPAllocationResource&#xA;override this.GetIPAllocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.IPAllocationResource" Usage="mockableNetworkArmClient.GetIPAllocationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.IPAllocationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.IPAllocationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.IPAllocationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.IPAllocationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.IPAllocationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.IPGroupResource GetIPGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.IPGroupResource GetIPGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetIPGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPGroupResource (id As ResourceIdentifier) As IPGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetIPGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.IPGroupResource&#xA;override this.GetIPGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.IPGroupResource" Usage="mockableNetworkArmClient.GetIPGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.IPGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.IPGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.IPGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.IPGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.IPGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadBalancerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.LoadBalancerResource GetLoadBalancerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.LoadBalancerResource GetLoadBalancerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetLoadBalancerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadBalancerResource (id As ResourceIdentifier) As LoadBalancerResource" />
      <MemberSignature Language="F#" Value="abstract member GetLoadBalancerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.LoadBalancerResource&#xA;override this.GetLoadBalancerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.LoadBalancerResource" Usage="mockableNetworkArmClient.GetLoadBalancerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.LoadBalancerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.LoadBalancerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.LoadBalancerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.LoadBalancerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.LoadBalancerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadBalancingRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.LoadBalancingRuleResource GetLoadBalancingRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.LoadBalancingRuleResource GetLoadBalancingRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetLoadBalancingRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadBalancingRuleResource (id As ResourceIdentifier) As LoadBalancingRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetLoadBalancingRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.LoadBalancingRuleResource&#xA;override this.GetLoadBalancingRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.LoadBalancingRuleResource" Usage="mockableNetworkArmClient.GetLoadBalancingRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.LoadBalancingRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.LoadBalancingRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.LoadBalancingRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.LoadBalancingRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.LoadBalancingRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalNetworkGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.LocalNetworkGatewayResource GetLocalNetworkGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.LocalNetworkGatewayResource GetLocalNetworkGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetLocalNetworkGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalNetworkGatewayResource (id As ResourceIdentifier) As LocalNetworkGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetLocalNetworkGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.LocalNetworkGatewayResource&#xA;override this.GetLocalNetworkGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.LocalNetworkGatewayResource" Usage="mockableNetworkArmClient.GetLocalNetworkGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.LocalNetworkGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.LocalNetworkGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.LocalNetworkGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.LocalNetworkGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.LocalNetworkGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagementGroupNetworkManagerConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource GetManagementGroupNetworkManagerConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource GetManagementGroupNetworkManagerConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetManagementGroupNetworkManagerConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagementGroupNetworkManagerConnectionResource (id As ResourceIdentifier) As ManagementGroupNetworkManagerConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagementGroupNetworkManagerConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource&#xA;override this.GetManagementGroupNetworkManagerConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource" Usage="mockableNetworkArmClient.GetManagementGroupNetworkManagerConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ManagementGroupNetworkManagerConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNatGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NatGatewayResource GetNatGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NatGatewayResource GetNatGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNatGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNatGatewayResource (id As ResourceIdentifier) As NatGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetNatGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NatGatewayResource&#xA;override this.GetNatGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NatGatewayResource" Usage="mockableNetworkArmClient.GetNatGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NatGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NatGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NatGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NatGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NatGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkGroupResource GetNetworkGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkGroupResource GetNetworkGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkGroupResource (id As ResourceIdentifier) As NetworkGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkGroupResource&#xA;override this.GetNetworkGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkGroupResource" Usage="mockableNetworkArmClient.GetNetworkGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkGroupStaticMemberResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkGroupStaticMemberResource GetNetworkGroupStaticMemberResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkGroupStaticMemberResource GetNetworkGroupStaticMemberResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkGroupStaticMemberResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkGroupStaticMemberResource (id As ResourceIdentifier) As NetworkGroupStaticMemberResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkGroupStaticMemberResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkGroupStaticMemberResource&#xA;override this.GetNetworkGroupStaticMemberResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkGroupStaticMemberResource" Usage="mockableNetworkArmClient.GetNetworkGroupStaticMemberResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkGroupStaticMemberResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkGroupStaticMemberResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkGroupStaticMemberResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkGroupStaticMemberResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkGroupStaticMemberResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfaceIPConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource GetNetworkInterfaceIPConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource GetNetworkInterfaceIPConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkInterfaceIPConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfaceIPConfigurationResource (id As ResourceIdentifier) As NetworkInterfaceIPConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfaceIPConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource&#xA;override this.GetNetworkInterfaceIPConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource" Usage="mockableNetworkArmClient.GetNetworkInterfaceIPConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceIPConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkInterfaceResource GetNetworkInterfaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkInterfaceResource GetNetworkInterfaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkInterfaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfaceResource (id As ResourceIdentifier) As NetworkInterfaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkInterfaceResource&#xA;override this.GetNetworkInterfaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkInterfaceResource" Usage="mockableNetworkArmClient.GetNetworkInterfaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkInterfaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkInterfaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfaceTapConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource GetNetworkInterfaceTapConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource GetNetworkInterfaceTapConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkInterfaceTapConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfaceTapConfigurationResource (id As ResourceIdentifier) As NetworkInterfaceTapConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfaceTapConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource&#xA;override this.GetNetworkInterfaceTapConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource" Usage="mockableNetworkArmClient.GetNetworkInterfaceTapConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceTapConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkManagerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkManagerResource GetNetworkManagerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkManagerResource GetNetworkManagerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkManagerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkManagerResource (id As ResourceIdentifier) As NetworkManagerResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkManagerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkManagerResource&#xA;override this.GetNetworkManagerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkManagerResource" Usage="mockableNetworkArmClient.GetNetworkManagerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkManagerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkManagerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkManagerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkManagerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkManagerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource GetNetworkPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource GetNetworkPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkPrivateEndpointConnectionResource (id As ResourceIdentifier) As NetworkPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource&#xA;override this.GetNetworkPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource" Usage="mockableNetworkArmClient.GetNetworkPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkProfileResource GetNetworkProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkProfileResource GetNetworkProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkProfileResource (id As ResourceIdentifier) As NetworkProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkProfileResource&#xA;override this.GetNetworkProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkProfileResource" Usage="mockableNetworkArmClient.GetNetworkProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkProfileResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkSecurityGroupResource GetNetworkSecurityGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkSecurityGroupResource GetNetworkSecurityGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkSecurityGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityGroupResource (id As ResourceIdentifier) As NetworkSecurityGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkSecurityGroupResource&#xA;override this.GetNetworkSecurityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkSecurityGroupResource" Usage="mockableNetworkArmClient.GetNetworkSecurityGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkSecurityGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkSecurityGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkSecurityGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkSecurityGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkSecurityGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualApplianceConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource GetNetworkVirtualApplianceConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource GetNetworkVirtualApplianceConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkVirtualApplianceConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualApplianceConnectionResource (id As ResourceIdentifier) As NetworkVirtualApplianceConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualApplianceConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource&#xA;override this.GetNetworkVirtualApplianceConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource" Usage="mockableNetworkArmClient.GetNetworkVirtualApplianceConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualApplianceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkVirtualApplianceResource GetNetworkVirtualApplianceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkVirtualApplianceResource GetNetworkVirtualApplianceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkVirtualApplianceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualApplianceResource (id As ResourceIdentifier) As NetworkVirtualApplianceResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualApplianceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceResource&#xA;override this.GetNetworkVirtualApplianceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceResource" Usage="mockableNetworkArmClient.GetNetworkVirtualApplianceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkVirtualApplianceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkVirtualApplianceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualApplianceSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource GetNetworkVirtualApplianceSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource GetNetworkVirtualApplianceSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkVirtualApplianceSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualApplianceSkuResource (id As ResourceIdentifier) As NetworkVirtualApplianceSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualApplianceSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&#xA;override this.GetNetworkVirtualApplianceSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource" Usage="mockableNetworkArmClient.GetNetworkVirtualApplianceSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkWatcherResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkWatcherResource GetNetworkWatcherResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkWatcherResource GetNetworkWatcherResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetNetworkWatcherResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkWatcherResource (id As ResourceIdentifier) As NetworkWatcherResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkWatcherResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkWatcherResource&#xA;override this.GetNetworkWatcherResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.NetworkWatcherResource" Usage="mockableNetworkArmClient.GetNetworkWatcherResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkWatcherResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.NetworkWatcherResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.NetworkWatcherResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.NetworkWatcherResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.NetworkWatcherResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.OutboundRuleResource GetOutboundRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.OutboundRuleResource GetOutboundRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetOutboundRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundRuleResource (id As ResourceIdentifier) As OutboundRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.OutboundRuleResource&#xA;override this.GetOutboundRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.OutboundRuleResource" Usage="mockableNetworkArmClient.GetOutboundRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.OutboundRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Network.OutboundRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.OutboundRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Network.OutboundRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.OutboundRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetP2SVpnGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.P2SVpnGatewayResource GetP2SVpnGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.P2SVpnGatewayResource GetP2SVpnGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetP2SVpnGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetP2SVpnGatewayResource (id As ResourceIdentifier) As P2SVpnGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetP2SVpnGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.P2SVpnGatewayResource&#xA;override this.GetP2SVpnGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.P2SVpnGatewayResource" Usage="mockableNetworkArmClient.GetP2SVpnGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.P2SVpnGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.P2SVpnGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.P2SVpnGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.P2SVpnGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.P2SVpnGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPacketCaptureResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PacketCaptureResource GetPacketCaptureResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PacketCaptureResource GetPacketCaptureResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPacketCaptureResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPacketCaptureResource (id As ResourceIdentifier) As PacketCaptureResource" />
      <MemberSignature Language="F#" Value="abstract member GetPacketCaptureResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PacketCaptureResource&#xA;override this.GetPacketCaptureResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PacketCaptureResource" Usage="mockableNetworkArmClient.GetPacketCaptureResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PacketCaptureResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PacketCaptureResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PacketCaptureResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PacketCaptureResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PacketCaptureResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerExpressRouteCircuitConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource GetPeerExpressRouteCircuitConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource GetPeerExpressRouteCircuitConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPeerExpressRouteCircuitConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeerExpressRouteCircuitConnectionResource (id As ResourceIdentifier) As PeerExpressRouteCircuitConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetPeerExpressRouteCircuitConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource&#xA;override this.GetPeerExpressRouteCircuitConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource" Usage="mockableNetworkArmClient.GetPeerExpressRouteCircuitConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicySignaturesOverridesForIdpsResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource GetPolicySignaturesOverridesForIdpsResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource GetPolicySignaturesOverridesForIdpsResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPolicySignaturesOverridesForIdpsResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicySignaturesOverridesForIdpsResource (id As ResourceIdentifier) As PolicySignaturesOverridesForIdpsResource" />
      <MemberSignature Language="F#" Value="abstract member GetPolicySignaturesOverridesForIdpsResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource&#xA;override this.GetPolicySignaturesOverridesForIdpsResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource" Usage="mockableNetworkArmClient.GetPolicySignaturesOverridesForIdpsResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PolicySignaturesOverridesForIdpsResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateDnsZoneGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PrivateDnsZoneGroupResource GetPrivateDnsZoneGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PrivateDnsZoneGroupResource GetPrivateDnsZoneGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPrivateDnsZoneGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateDnsZoneGroupResource (id As ResourceIdentifier) As PrivateDnsZoneGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateDnsZoneGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PrivateDnsZoneGroupResource&#xA;override this.GetPrivateDnsZoneGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PrivateDnsZoneGroupResource" Usage="mockableNetworkArmClient.GetPrivateDnsZoneGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PrivateDnsZoneGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PrivateDnsZoneGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PrivateDnsZoneGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PrivateDnsZoneGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PrivateDnsZoneGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PrivateEndpointResource GetPrivateEndpointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PrivateEndpointResource GetPrivateEndpointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPrivateEndpointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpointResource (id As ResourceIdentifier) As PrivateEndpointResource" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PrivateEndpointResource&#xA;override this.GetPrivateEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PrivateEndpointResource" Usage="mockableNetworkArmClient.GetPrivateEndpointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PrivateEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PrivateEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PrivateEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PrivateEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PrivateEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PrivateLinkServiceResource GetPrivateLinkServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PrivateLinkServiceResource GetPrivateLinkServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPrivateLinkServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkServiceResource (id As ResourceIdentifier) As PrivateLinkServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PrivateLinkServiceResource&#xA;override this.GetPrivateLinkServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PrivateLinkServiceResource" Usage="mockableNetworkArmClient.GetPrivateLinkServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PrivateLinkServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PrivateLinkServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PrivateLinkServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PrivateLinkServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PrivateLinkServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProbeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ProbeResource GetProbeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ProbeResource GetProbeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetProbeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProbeResource (id As ResourceIdentifier) As ProbeResource" />
      <MemberSignature Language="F#" Value="abstract member GetProbeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ProbeResource&#xA;override this.GetProbeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ProbeResource" Usage="mockableNetworkArmClient.GetProbeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ProbeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.ProbeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ProbeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.ProbeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ProbeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPAddressResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PublicIPAddressResource GetPublicIPAddressResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PublicIPAddressResource GetPublicIPAddressResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPublicIPAddressResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPAddressResource (id As ResourceIdentifier) As PublicIPAddressResource" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPAddressResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PublicIPAddressResource&#xA;override this.GetPublicIPAddressResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PublicIPAddressResource" Usage="mockableNetworkArmClient.GetPublicIPAddressResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PublicIPAddressResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PublicIPAddressResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PublicIPAddressResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PublicIPAddressResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PublicIPAddressResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPPrefixResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PublicIPPrefixResource GetPublicIPPrefixResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PublicIPPrefixResource GetPublicIPPrefixResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetPublicIPPrefixResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPPrefixResource (id As ResourceIdentifier) As PublicIPPrefixResource" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPPrefixResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PublicIPPrefixResource&#xA;override this.GetPublicIPPrefixResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.PublicIPPrefixResource" Usage="mockableNetworkArmClient.GetPublicIPPrefixResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PublicIPPrefixResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.PublicIPPrefixResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.PublicIPPrefixResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.PublicIPPrefixResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.PublicIPPrefixResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteFilterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RouteFilterResource GetRouteFilterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RouteFilterResource GetRouteFilterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetRouteFilterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteFilterResource (id As ResourceIdentifier) As RouteFilterResource" />
      <MemberSignature Language="F#" Value="abstract member GetRouteFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteFilterResource&#xA;override this.GetRouteFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteFilterResource" Usage="mockableNetworkArmClient.GetRouteFilterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RouteFilterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.RouteFilterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.RouteFilterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.RouteFilterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.RouteFilterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteFilterRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RouteFilterRuleResource GetRouteFilterRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RouteFilterRuleResource GetRouteFilterRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetRouteFilterRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteFilterRuleResource (id As ResourceIdentifier) As RouteFilterRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetRouteFilterRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteFilterRuleResource&#xA;override this.GetRouteFilterRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteFilterRuleResource" Usage="mockableNetworkArmClient.GetRouteFilterRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RouteFilterRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.RouteFilterRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.RouteFilterRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.RouteFilterRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.RouteFilterRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteMapResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RouteMapResource GetRouteMapResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RouteMapResource GetRouteMapResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetRouteMapResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteMapResource (id As ResourceIdentifier) As RouteMapResource" />
      <MemberSignature Language="F#" Value="abstract member GetRouteMapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteMapResource&#xA;override this.GetRouteMapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteMapResource" Usage="mockableNetworkArmClient.GetRouteMapResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RouteMapResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.RouteMapResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.RouteMapResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.RouteMapResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.RouteMapResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RouteResource GetRouteResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RouteResource GetRouteResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetRouteResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteResource (id As ResourceIdentifier) As RouteResource" />
      <MemberSignature Language="F#" Value="abstract member GetRouteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteResource&#xA;override this.GetRouteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteResource" Usage="mockableNetworkArmClient.GetRouteResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RouteResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.RouteResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.RouteResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.RouteResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.RouteResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RouteTableResource GetRouteTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RouteTableResource GetRouteTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetRouteTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteTableResource (id As ResourceIdentifier) As RouteTableResource" />
      <MemberSignature Language="F#" Value="abstract member GetRouteTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteTableResource&#xA;override this.GetRouteTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RouteTableResource" Usage="mockableNetworkArmClient.GetRouteTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RouteTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.RouteTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.RouteTableResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.RouteTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.RouteTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutingIntentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RoutingIntentResource GetRoutingIntentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RoutingIntentResource GetRoutingIntentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetRoutingIntentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoutingIntentResource (id As ResourceIdentifier) As RoutingIntentResource" />
      <MemberSignature Language="F#" Value="abstract member GetRoutingIntentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RoutingIntentResource&#xA;override this.GetRoutingIntentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.RoutingIntentResource" Usage="mockableNetworkArmClient.GetRoutingIntentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RoutingIntentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.RoutingIntentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.RoutingIntentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.RoutingIntentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.RoutingIntentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScopeConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ScopeConnectionResource GetScopeConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ScopeConnectionResource GetScopeConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetScopeConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScopeConnectionResource (id As ResourceIdentifier) As ScopeConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetScopeConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ScopeConnectionResource&#xA;override this.GetScopeConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ScopeConnectionResource" Usage="mockableNetworkArmClient.GetScopeConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ScopeConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.ScopeConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ScopeConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.ScopeConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ScopeConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAdminConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.SecurityAdminConfigurationResource GetSecurityAdminConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.SecurityAdminConfigurationResource GetSecurityAdminConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetSecurityAdminConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAdminConfigurationResource (id As ResourceIdentifier) As SecurityAdminConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAdminConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SecurityAdminConfigurationResource&#xA;override this.GetSecurityAdminConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SecurityAdminConfigurationResource" Usage="mockableNetworkArmClient.GetSecurityAdminConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.SecurityAdminConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.SecurityAdminConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.SecurityAdminConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.SecurityAdminConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.SecurityAdminConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPartnerProviderResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.SecurityPartnerProviderResource GetSecurityPartnerProviderResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.SecurityPartnerProviderResource GetSecurityPartnerProviderResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetSecurityPartnerProviderResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPartnerProviderResource (id As ResourceIdentifier) As SecurityPartnerProviderResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPartnerProviderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SecurityPartnerProviderResource&#xA;override this.GetSecurityPartnerProviderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SecurityPartnerProviderResource" Usage="mockableNetworkArmClient.GetSecurityPartnerProviderResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.SecurityPartnerProviderResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.SecurityPartnerProviderResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.SecurityPartnerProviderResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.SecurityPartnerProviderResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.SecurityPartnerProviderResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.SecurityRuleResource GetSecurityRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.SecurityRuleResource GetSecurityRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetSecurityRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityRuleResource (id As ResourceIdentifier) As SecurityRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SecurityRuleResource&#xA;override this.GetSecurityRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SecurityRuleResource" Usage="mockableNetworkArmClient.GetSecurityRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.SecurityRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.SecurityRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.SecurityRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.SecurityRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.SecurityRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointPolicyDefinitionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource GetServiceEndpointPolicyDefinitionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource GetServiceEndpointPolicyDefinitionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetServiceEndpointPolicyDefinitionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceEndpointPolicyDefinitionResource (id As ResourceIdentifier) As ServiceEndpointPolicyDefinitionResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointPolicyDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource&#xA;override this.GetServiceEndpointPolicyDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource" Usage="mockableNetworkArmClient.GetServiceEndpointPolicyDefinitionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ServiceEndpointPolicyResource GetServiceEndpointPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ServiceEndpointPolicyResource GetServiceEndpointPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetServiceEndpointPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceEndpointPolicyResource (id As ResourceIdentifier) As ServiceEndpointPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ServiceEndpointPolicyResource&#xA;override this.GetServiceEndpointPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.ServiceEndpointPolicyResource" Usage="mockableNetworkArmClient.GetServiceEndpointPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ServiceEndpointPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.ServiceEndpointPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubnetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.SubnetResource GetSubnetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.SubnetResource GetSubnetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetSubnetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubnetResource (id As ResourceIdentifier) As SubnetResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubnetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SubnetResource&#xA;override this.GetSubnetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SubnetResource" Usage="mockableNetworkArmClient.GetSubnetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.SubnetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.SubnetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.SubnetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.SubnetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.SubnetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionNetworkManagerConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource GetSubscriptionNetworkManagerConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource GetSubscriptionNetworkManagerConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetSubscriptionNetworkManagerConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionNetworkManagerConnectionResource (id As ResourceIdentifier) As SubscriptionNetworkManagerConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionNetworkManagerConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&#xA;override this.GetSubscriptionNetworkManagerConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource" Usage="mockableNetworkArmClient.GetSubscriptionNetworkManagerConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplianceSiteResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualApplianceSiteResource GetVirtualApplianceSiteResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualApplianceSiteResource GetVirtualApplianceSiteResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualApplianceSiteResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplianceSiteResource (id As ResourceIdentifier) As VirtualApplianceSiteResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplianceSiteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualApplianceSiteResource&#xA;override this.GetVirtualApplianceSiteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualApplianceSiteResource" Usage="mockableNetworkArmClient.GetVirtualApplianceSiteResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualApplianceSiteResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualApplianceSiteResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualApplianceSiteResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualApplianceSiteResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualApplianceSiteResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHubResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualHubResource GetVirtualHubResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualHubResource GetVirtualHubResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualHubResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHubResource (id As ResourceIdentifier) As VirtualHubResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualHubResource&#xA;override this.GetVirtualHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualHubResource" Usage="mockableNetworkArmClient.GetVirtualHubResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualHubResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHubRouteTableV2Resource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource GetVirtualHubRouteTableV2Resource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource GetVirtualHubRouteTableV2Resource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualHubRouteTableV2Resource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHubRouteTableV2Resource (id As ResourceIdentifier) As VirtualHubRouteTableV2Resource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHubRouteTableV2Resource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource&#xA;override this.GetVirtualHubRouteTableV2Resource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource" Usage="mockableNetworkArmClient.GetVirtualHubRouteTableV2Resource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualHubRouteTableV2Resource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource GetVirtualMachineScaleSetNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource GetVirtualMachineScaleSetNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualMachineScaleSetNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetNetworkResource (id As ResourceIdentifier) As VirtualMachineScaleSetNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource&#xA;override this.GetVirtualMachineScaleSetNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource" Usage="mockableNetworkArmClient.GetVirtualMachineScaleSetNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualMachineScaleSetNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetVmNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource GetVirtualMachineScaleSetVmNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource GetVirtualMachineScaleSetVmNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualMachineScaleSetVmNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetVmNetworkResource (id As ResourceIdentifier) As VirtualMachineScaleSetVmNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetVmNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource&#xA;override this.GetVirtualMachineScaleSetVmNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource" Usage="mockableNetworkArmClient.GetVirtualMachineScaleSetVmNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualMachineScaleSetVmNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGatewayConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource GetVirtualNetworkGatewayConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource GetVirtualNetworkGatewayConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualNetworkGatewayConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGatewayConnectionResource (id As ResourceIdentifier) As VirtualNetworkGatewayConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGatewayConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&#xA;override this.GetVirtualNetworkGatewayConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource" Usage="mockableNetworkArmClient.GetVirtualNetworkGatewayConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGatewayNatRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource GetVirtualNetworkGatewayNatRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource GetVirtualNetworkGatewayNatRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualNetworkGatewayNatRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGatewayNatRuleResource (id As ResourceIdentifier) As VirtualNetworkGatewayNatRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGatewayNatRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource&#xA;override this.GetVirtualNetworkGatewayNatRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource" Usage="mockableNetworkArmClient.GetVirtualNetworkGatewayNatRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayNatRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkGatewayResource GetVirtualNetworkGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkGatewayResource GetVirtualNetworkGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualNetworkGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGatewayResource (id As ResourceIdentifier) As VirtualNetworkGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayResource&#xA;override this.GetVirtualNetworkGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayResource" Usage="mockableNetworkArmClient.GetVirtualNetworkGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualNetworkGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkPeeringResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkPeeringResource GetVirtualNetworkPeeringResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkPeeringResource GetVirtualNetworkPeeringResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualNetworkPeeringResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkPeeringResource (id As ResourceIdentifier) As VirtualNetworkPeeringResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkPeeringResource&#xA;override this.GetVirtualNetworkPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkPeeringResource" Usage="mockableNetworkArmClient.GetVirtualNetworkPeeringResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkPeeringResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkPeeringResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualNetworkPeeringResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkPeeringResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkPeeringResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkResource GetVirtualNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkResource GetVirtualNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkResource (id As ResourceIdentifier) As VirtualNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkResource&#xA;override this.GetVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkResource" Usage="mockableNetworkArmClient.GetVirtualNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkTapResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkTapResource GetVirtualNetworkTapResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkTapResource GetVirtualNetworkTapResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualNetworkTapResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkTapResource (id As ResourceIdentifier) As VirtualNetworkTapResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkTapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkTapResource&#xA;override this.GetVirtualNetworkTapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualNetworkTapResource" Usage="mockableNetworkArmClient.GetVirtualNetworkTapResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkTapResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkTapResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualNetworkTapResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkTapResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualNetworkTapResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRouterPeeringResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualRouterPeeringResource GetVirtualRouterPeeringResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualRouterPeeringResource GetVirtualRouterPeeringResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualRouterPeeringResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualRouterPeeringResource (id As ResourceIdentifier) As VirtualRouterPeeringResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRouterPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualRouterPeeringResource&#xA;override this.GetVirtualRouterPeeringResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualRouterPeeringResource" Usage="mockableNetworkArmClient.GetVirtualRouterPeeringResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualRouterPeeringResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualRouterPeeringResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualRouterPeeringResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualRouterPeeringResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualRouterPeeringResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRouterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualRouterResource GetVirtualRouterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualRouterResource GetVirtualRouterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualRouterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualRouterResource (id As ResourceIdentifier) As VirtualRouterResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRouterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualRouterResource&#xA;override this.GetVirtualRouterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualRouterResource" Usage="mockableNetworkArmClient.GetVirtualRouterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualRouterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualRouterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualRouterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualRouterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualRouterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualWanResource GetVirtualWanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualWanResource GetVirtualWanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVirtualWanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWanResource (id As ResourceIdentifier) As VirtualWanResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualWanResource&#xA;override this.GetVirtualWanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VirtualWanResource" Usage="mockableNetworkArmClient.GetVirtualWanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualWanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VirtualWanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VirtualWanResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VirtualWanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VirtualWanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnConnectionResource GetVpnConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnConnectionResource GetVpnConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnConnectionResource (id As ResourceIdentifier) As VpnConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnConnectionResource&#xA;override this.GetVpnConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnConnectionResource" Usage="mockableNetworkArmClient.GetVpnConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnGatewayNatRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnGatewayNatRuleResource GetVpnGatewayNatRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnGatewayNatRuleResource GetVpnGatewayNatRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnGatewayNatRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnGatewayNatRuleResource (id As ResourceIdentifier) As VpnGatewayNatRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnGatewayNatRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnGatewayNatRuleResource&#xA;override this.GetVpnGatewayNatRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnGatewayNatRuleResource" Usage="mockableNetworkArmClient.GetVpnGatewayNatRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnGatewayNatRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnGatewayNatRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnGatewayNatRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnGatewayNatRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnGatewayNatRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnGatewayResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnGatewayResource GetVpnGatewayResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnGatewayResource GetVpnGatewayResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnGatewayResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnGatewayResource (id As ResourceIdentifier) As VpnGatewayResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnGatewayResource&#xA;override this.GetVpnGatewayResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnGatewayResource" Usage="mockableNetworkArmClient.GetVpnGatewayResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnGatewayResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnGatewayResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnGatewayResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnGatewayResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnServerConfigurationPolicyGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource GetVpnServerConfigurationPolicyGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource GetVpnServerConfigurationPolicyGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnServerConfigurationPolicyGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnServerConfigurationPolicyGroupResource (id As ResourceIdentifier) As VpnServerConfigurationPolicyGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnServerConfigurationPolicyGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource&#xA;override this.GetVpnServerConfigurationPolicyGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource" Usage="mockableNetworkArmClient.GetVpnServerConfigurationPolicyGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationPolicyGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnServerConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnServerConfigurationResource GetVpnServerConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnServerConfigurationResource GetVpnServerConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnServerConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnServerConfigurationResource (id As ResourceIdentifier) As VpnServerConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnServerConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnServerConfigurationResource&#xA;override this.GetVpnServerConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnServerConfigurationResource" Usage="mockableNetworkArmClient.GetVpnServerConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnServerConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnServerConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSiteLinkConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnSiteLinkConnectionResource GetVpnSiteLinkConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnSiteLinkConnectionResource GetVpnSiteLinkConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnSiteLinkConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSiteLinkConnectionResource (id As ResourceIdentifier) As VpnSiteLinkConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSiteLinkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnSiteLinkConnectionResource&#xA;override this.GetVpnSiteLinkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnSiteLinkConnectionResource" Usage="mockableNetworkArmClient.GetVpnSiteLinkConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnSiteLinkConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnSiteLinkConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnSiteLinkConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnSiteLinkConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnSiteLinkConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSiteLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnSiteLinkResource GetVpnSiteLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnSiteLinkResource GetVpnSiteLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnSiteLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSiteLinkResource (id As ResourceIdentifier) As VpnSiteLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSiteLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnSiteLinkResource&#xA;override this.GetVpnSiteLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnSiteLinkResource" Usage="mockableNetworkArmClient.GetVpnSiteLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnSiteLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnSiteLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnSiteLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnSiteLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnSiteLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSiteResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnSiteResource GetVpnSiteResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnSiteResource GetVpnSiteResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetVpnSiteResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSiteResource (id As ResourceIdentifier) As VpnSiteResource" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSiteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnSiteResource&#xA;override this.GetVpnSiteResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.VpnSiteResource" Usage="mockableNetworkArmClient.GetVpnSiteResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnSiteResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.VpnSiteResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.VpnSiteResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.VpnSiteResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.VpnSiteResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationFirewallPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource GetWebApplicationFirewallPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource GetWebApplicationFirewallPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkArmClient.GetWebApplicationFirewallPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebApplicationFirewallPolicyResource (id As ResourceIdentifier) As WebApplicationFirewallPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetWebApplicationFirewallPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&#xA;override this.GetWebApplicationFirewallPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource" Usage="mockableNetworkArmClient.GetWebApplicationFirewallPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
