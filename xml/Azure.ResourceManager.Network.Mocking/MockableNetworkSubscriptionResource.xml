<Type Name="MockableNetworkSubscriptionResource" FullName="Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableNetworkSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableNetworkSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableNetworkSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableNetworkSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableNetworkSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDnsNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt; CheckDnsNameAvailability (Azure.Core.AzureLocation location, string domainNameLabel, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt; CheckDnsNameAvailability(valuetype Azure.Core.AzureLocation location, string domainNameLabel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.CheckDnsNameAvailability(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDnsNameAvailability (location As AzureLocation, domainNameLabel As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckDnsNameAvailability : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;&#xA;override this.CheckDnsNameAvailability : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;" Usage="mockableNetworkSubscriptionResource.CheckDnsNameAvailability (location, domainNameLabel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="domainNameLabel" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="domainNameLabel"> The domain name to be verified. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether a domain name in the cloudapp.azure.com zone is available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability</description></item><item><term>Operation Id</term><description>CheckDnsNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainNameLabel" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckDnsNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;&gt; CheckDnsNameAvailabilityAsync (Azure.Core.AzureLocation location, string domainNameLabel, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;&gt; CheckDnsNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, string domainNameLabel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.CheckDnsNameAvailabilityAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDnsNameAvailabilityAsync (location As AzureLocation, domainNameLabel As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckDnsNameAvailabilityAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;&gt;&#xA;override this.CheckDnsNameAvailabilityAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;&gt;" Usage="mockableNetworkSubscriptionResource.CheckDnsNameAvailabilityAsync (location, domainNameLabel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.DnsNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="domainNameLabel" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="domainNameLabel"> The domain name to be verified. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether a domain name in the cloudapp.azure.com zone is available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability</description></item><item><term>Operation Id</term><description>CheckDnsNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainNameLabel" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPrivateLinkServiceVisibilityPrivateLinkService">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt; CheckPrivateLinkServiceVisibilityPrivateLinkService (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt; CheckPrivateLinkServiceVisibilityPrivateLinkService(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.CheckPrivateLinkServiceVisibilityPrivateLinkService(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrivateLinkServiceVisibilityPrivateLinkService (waitUntil As WaitUntil, location As AzureLocation, checkPrivateLinkServiceVisibilityRequest As CheckPrivateLinkServiceVisibilityRequest, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of PrivateLinkServiceVisibility)" />
      <MemberSignature Language="F#" Value="abstract member CheckPrivateLinkServiceVisibilityPrivateLinkService : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&#xA;override this.CheckPrivateLinkServiceVisibilityPrivateLinkService : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;" Usage="mockableNetworkSubscriptionResource.CheckPrivateLinkServiceVisibilityPrivateLinkService (waitUntil, location, checkPrivateLinkServiceVisibilityRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="checkPrivateLinkServiceVisibilityRequest" Type="Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The location of the domain name. </param>
        <param name="checkPrivateLinkServiceVisibilityRequest"> The request body of CheckPrivateLinkService API call. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the subscription is visible to private link service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility</description></item><item><term>Operation Id</term><description>PrivateLinkServices_CheckPrivateLinkServiceVisibility</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="checkPrivateLinkServiceVisibilityRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt; CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt; CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync (waitUntil As WaitUntil, location As AzureLocation, checkPrivateLinkServiceVisibilityRequest As CheckPrivateLinkServiceVisibilityRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of PrivateLinkServiceVisibility))" />
      <MemberSignature Language="F#" Value="abstract member CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt;&#xA;override this.CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt;" Usage="mockableNetworkSubscriptionResource.CheckPrivateLinkServiceVisibilityPrivateLinkServiceAsync (waitUntil, location, checkPrivateLinkServiceVisibilityRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="checkPrivateLinkServiceVisibilityRequest" Type="Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The location of the domain name. </param>
        <param name="checkPrivateLinkServiceVisibilityRequest"> The request body of CheckPrivateLinkService API call. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the subscription is visible to private link service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility</description></item><item><term>Operation Id</term><description>PrivateLinkServices_CheckPrivateLinkServiceVisibility</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="checkPrivateLinkServiceVisibilityRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllServiceTagInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt; GetAllServiceTagInformation (Azure.Core.AzureLocation location, bool? noAddressPrefixes = default, string tagName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.ServiceTagInformation&gt; GetAllServiceTagInformation(valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;bool&gt; noAddressPrefixes, string tagName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAllServiceTagInformation(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllServiceTagInformation (location As AzureLocation, Optional noAddressPrefixes As Nullable(Of Boolean) = Nothing, Optional tagName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceTagInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetAllServiceTagInformation : Azure.Core.AzureLocation * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt;&#xA;override this.GetAllServiceTagInformation : Azure.Core.AzureLocation * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt;" Usage="mockableNetworkSubscriptionResource.GetAllServiceTagInformation (location, noAddressPrefixes, tagName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="noAddressPrefixes" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location that will be used as a reference for cloud (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to). </param>
        <param name="noAddressPrefixes"> Do not return address prefixes for the tag(s). </param>
        <param name="tagName"> Return tag information for a particular tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of service tag information resources with pagination.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTagDetails</description></item><item><term>Operation Id</term><description>ServiceTagInformation_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.ServiceTagInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllServiceTagInformationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt; GetAllServiceTagInformationAsync (Azure.Core.AzureLocation location, bool? noAddressPrefixes = default, string tagName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.ServiceTagInformation&gt; GetAllServiceTagInformationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;bool&gt; noAddressPrefixes, string tagName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAllServiceTagInformationAsync(Azure.Core.AzureLocation,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllServiceTagInformationAsync (location As AzureLocation, Optional noAddressPrefixes As Nullable(Of Boolean) = Nothing, Optional tagName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceTagInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetAllServiceTagInformationAsync : Azure.Core.AzureLocation * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt;&#xA;override this.GetAllServiceTagInformationAsync : Azure.Core.AzureLocation * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt;" Usage="mockableNetworkSubscriptionResource.GetAllServiceTagInformationAsync (location, noAddressPrefixes, tagName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ServiceTagInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="noAddressPrefixes" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location that will be used as a reference for cloud (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to). </param>
        <param name="noAddressPrefixes"> Do not return address prefixes for the tag(s). </param>
        <param name="tagName"> Return tag information for a particular tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of service tag information resources with pagination.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTagDetails</description></item><item><term>Operation Id</term><description>ServiceTagInformation_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.ServiceTagInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppGatewayAvailableWafRuleSets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt; GetAppGatewayAvailableWafRuleSets (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt; GetAppGatewayAvailableWafRuleSets(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAppGatewayAvailableWafRuleSets(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppGatewayAvailableWafRuleSets (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApplicationGatewayFirewallRuleSet)" />
      <MemberSignature Language="F#" Value="abstract member GetAppGatewayAvailableWafRuleSets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt;&#xA;override this.GetAppGatewayAvailableWafRuleSets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt;" Usage="mockableNetworkSubscriptionResource.GetAppGatewayAvailableWafRuleSets cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available web application firewall rule sets.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableWafRuleSets</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppGatewayAvailableWafRuleSetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt; GetAppGatewayAvailableWafRuleSetsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt; GetAppGatewayAvailableWafRuleSetsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAppGatewayAvailableWafRuleSetsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppGatewayAvailableWafRuleSetsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApplicationGatewayFirewallRuleSet)" />
      <MemberSignature Language="F#" Value="abstract member GetAppGatewayAvailableWafRuleSetsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt;&#xA;override this.GetAppGatewayAvailableWafRuleSetsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt;" Usage="mockableNetworkSubscriptionResource.GetAppGatewayAvailableWafRuleSetsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available web application firewall rule sets.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableWafRuleSets</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.ApplicationGatewayFirewallRuleSet" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayAvailableSslOptions">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt; GetApplicationGatewayAvailableSslOptions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt; GetApplicationGatewayAvailableSslOptions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslOptions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayAvailableSslOptions (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApplicationGatewayAvailableSslOptionsInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayAvailableSslOptions : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;&#xA;override this.GetApplicationGatewayAvailableSslOptions : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslOptions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists available Ssl options for configuring Ssl policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableSslOptions</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayAvailableSslOptionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;&gt; GetApplicationGatewayAvailableSslOptionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;&gt; GetApplicationGatewayAvailableSslOptionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslOptionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayAvailableSslOptionsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApplicationGatewayAvailableSslOptionsInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayAvailableSslOptionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;&gt;&#xA;override this.GetApplicationGatewayAvailableSslOptionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslOptionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewayAvailableSslOptionsInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists available Ssl options for configuring Ssl policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableSslOptions</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayAvailableSslPredefinedPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt; GetApplicationGatewayAvailableSslPredefinedPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt; GetApplicationGatewayAvailableSslPredefinedPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslPredefinedPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayAvailableSslPredefinedPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApplicationGatewaySslPredefinedPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayAvailableSslPredefinedPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&#xA;override this.GetApplicationGatewayAvailableSslPredefinedPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslPredefinedPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all SSL predefined policies for configuring Ssl policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableSslPredefinedPolicies</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayAvailableSslPredefinedPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt; GetApplicationGatewayAvailableSslPredefinedPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt; GetApplicationGatewayAvailableSslPredefinedPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslPredefinedPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayAvailableSslPredefinedPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApplicationGatewaySslPredefinedPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayAvailableSslPredefinedPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&#xA;override this.GetApplicationGatewayAvailableSslPredefinedPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewayAvailableSslPredefinedPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all SSL predefined policies for configuring Ssl policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableSslPredefinedPolicies</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt; GetApplicationGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.ApplicationGatewayResource&gt; GetApplicationGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApplicationGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&#xA;override this.GetApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the application gateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt; GetApplicationGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.ApplicationGatewayResource&gt; GetApplicationGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApplicationGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&#xA;override this.GetApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the application gateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.ApplicationGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewaySslPredefinedPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt; GetApplicationGatewaySslPredefinedPolicy (string predefinedPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt; GetApplicationGatewaySslPredefinedPolicy(string predefinedPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewaySslPredefinedPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewaySslPredefinedPolicy (predefinedPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApplicationGatewaySslPredefinedPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewaySslPredefinedPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&#xA;override this.GetApplicationGatewaySslPredefinedPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewaySslPredefinedPolicy (predefinedPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predefinedPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="predefinedPolicyName"> Name of Ssl predefined policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Ssl predefined policy with the specified policy name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/{predefinedPolicyName}</description></item><item><term>Operation Id</term><description>ApplicationGateways_GetSslPredefinedPolicy</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="predefinedPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="predefinedPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewaySslPredefinedPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&gt; GetApplicationGatewaySslPredefinedPolicyAsync (string predefinedPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&gt; GetApplicationGatewaySslPredefinedPolicyAsync(string predefinedPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewaySslPredefinedPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewaySslPredefinedPolicyAsync (predefinedPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApplicationGatewaySslPredefinedPolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewaySslPredefinedPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&gt;&#xA;override this.GetApplicationGatewaySslPredefinedPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewaySslPredefinedPolicyAsync (predefinedPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ApplicationGatewaySslPredefinedPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predefinedPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="predefinedPolicyName"> Name of Ssl predefined policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Ssl predefined policy with the specified policy name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/{predefinedPolicyName}</description></item><item><term>Operation Id</term><description>ApplicationGateways_GetSslPredefinedPolicy</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="predefinedPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="predefinedPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayWafDynamicManifest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt; GetApplicationGatewayWafDynamicManifest (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt; GetApplicationGatewayWafDynamicManifest(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewayWafDynamicManifest(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayWafDynamicManifest (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApplicationGatewayWafDynamicManifestResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayWafDynamicManifest : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;&#xA;override this.GetApplicationGatewayWafDynamicManifest : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewayWafDynamicManifest (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region where the nrp are located at. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the regional application gateway waf manifest.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/applicationGatewayWafDynamicManifests/dafault</description></item><item><term>Operation Id</term><description>ApplicationGatewayWafDynamicManifestsDefault_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayWafDynamicManifestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;&gt; GetApplicationGatewayWafDynamicManifestAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;&gt; GetApplicationGatewayWafDynamicManifestAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewayWafDynamicManifestAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayWafDynamicManifestAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApplicationGatewayWafDynamicManifestResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayWafDynamicManifestAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;&gt;&#xA;override this.GetApplicationGatewayWafDynamicManifestAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewayWafDynamicManifestAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The region where the nrp are located at. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the regional application gateway waf manifest.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/applicationGatewayWafDynamicManifests/dafault</description></item><item><term>Operation Id</term><description>ApplicationGatewayWafDynamicManifestsDefault_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayWafDynamicManifests">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestCollection GetApplicationGatewayWafDynamicManifests (Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestCollection GetApplicationGatewayWafDynamicManifests(valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationGatewayWafDynamicManifests(Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayWafDynamicManifests (location As AzureLocation) As ApplicationGatewayWafDynamicManifestCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayWafDynamicManifests : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestCollection&#xA;override this.GetApplicationGatewayWafDynamicManifests : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestCollection" Usage="mockableNetworkSubscriptionResource.GetApplicationGatewayWafDynamicManifests location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ApplicationGatewayWafDynamicManifestCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="location"> The region where the nrp are located at. </param>
        <summary> Gets a collection of ApplicationGatewayWafDynamicManifestResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ApplicationGatewayWafDynamicManifestResources and their operations over a ApplicationGatewayWafDynamicManifestResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSecurityGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt; GetApplicationSecurityGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt; GetApplicationSecurityGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationSecurityGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationSecurityGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApplicationSecurityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationSecurityGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&#xA;override this.GetApplicationSecurityGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationSecurityGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all application security groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups</description></item><item><term>Operation Id</term><description>ApplicationSecurityGroups_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.ApplicationSecurityGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSecurityGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt; GetApplicationSecurityGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt; GetApplicationSecurityGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetApplicationSecurityGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationSecurityGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApplicationSecurityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationSecurityGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&#xA;override this.GetApplicationSecurityGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;" Usage="mockableNetworkSubscriptionResource.GetApplicationSecurityGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all application security groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups</description></item><item><term>Operation Id</term><description>ApplicationSecurityGroups_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.ApplicationSecurityGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoApprovedPrivateLinkServicesPrivateLinkServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesPrivateLinkServices (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesPrivateLinkServices(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAutoApprovedPrivateLinkServicesPrivateLinkServices(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoApprovedPrivateLinkServicesPrivateLinkServices (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutoApprovedPrivateLinkService)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoApprovedPrivateLinkServicesPrivateLinkServices : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;&#xA;override this.GetAutoApprovedPrivateLinkServicesPrivateLinkServices : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;" Usage="mockableNetworkSubscriptionResource.GetAutoApprovedPrivateLinkServicesPrivateLinkServices (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices</description></item><item><term>Operation Id</term><description>PrivateLinkServices_ListAutoApprovedPrivateLinkServices</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutoApprovedPrivateLinkService)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;&#xA;override this.GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;" Usage="mockableNetworkSubscriptionResource.GetAutoApprovedPrivateLinkServicesPrivateLinkServicesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices</description></item><item><term>Operation Id</term><description>PrivateLinkServices_ListAutoApprovedPrivateLinkServices</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableDelegations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableDelegations (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableDelegations(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableDelegations(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableDelegations (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailableDelegation)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableDelegations : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;&#xA;override this.GetAvailableDelegations : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableDelegations (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the subnet. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all of the available subnet delegations for this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableDelegations</description></item><item><term>Operation Id</term><description>AvailableDelegations_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableDelegation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableDelegationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableDelegationsAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableDelegationsAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableDelegationsAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableDelegationsAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailableDelegation)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableDelegationsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;&#xA;override this.GetAvailableDelegationsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableDelegationsAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the subnet. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all of the available subnet delegations for this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableDelegations</description></item><item><term>Operation Id</term><description>AvailableDelegations_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableDelegation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableEndpointServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt; GetAvailableEndpointServices (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.EndpointServiceResult&gt; GetAvailableEndpointServices(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableEndpointServices(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableEndpointServices (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EndpointServiceResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableEndpointServices : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt;&#xA;override this.GetAvailableEndpointServices : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableEndpointServices (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location to check available endpoint services. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List what values of endpoint services are available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/virtualNetworkAvailableEndpointServices</description></item><item><term>Operation Id</term><description>AvailableEndpointServices_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.EndpointServiceResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableEndpointServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt; GetAvailableEndpointServicesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.EndpointServiceResult&gt; GetAvailableEndpointServicesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableEndpointServicesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableEndpointServicesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EndpointServiceResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableEndpointServicesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt;&#xA;override this.GetAvailableEndpointServicesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableEndpointServicesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.EndpointServiceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location to check available endpoint services. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List what values of endpoint services are available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/virtualNetworkAvailableEndpointServices</description></item><item><term>Operation Id</term><description>AvailableEndpointServices_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.EndpointServiceResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailablePrivateEndpointTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypes (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypes(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailablePrivateEndpointTypes(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailablePrivateEndpointTypes (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailablePrivateEndpointType)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailablePrivateEndpointTypes : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;&#xA;override this.GetAvailablePrivateEndpointTypes : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailablePrivateEndpointTypes (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes</description></item><item><term>Operation Id</term><description>AvailablePrivateEndpointTypes_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailablePrivateEndpointTypesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailablePrivateEndpointTypesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailablePrivateEndpointTypesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailablePrivateEndpointType)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailablePrivateEndpointTypesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;&#xA;override this.GetAvailablePrivateEndpointTypesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailablePrivateEndpointTypesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes</description></item><item><term>Operation Id</term><description>AvailablePrivateEndpointTypes_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableRequestHeadersApplicationGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;string&gt; GetAvailableRequestHeadersApplicationGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;string&gt; GetAvailableRequestHeadersApplicationGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableRequestHeadersApplicationGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableRequestHeadersApplicationGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableRequestHeadersApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;&#xA;override this.GetAvailableRequestHeadersApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableRequestHeadersApplicationGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available request headers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableRequestHeaders</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableRequestHeaders</description></item></list></summary>
        <returns> A collection of <see cref="T:System.String" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableRequestHeadersApplicationGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;string&gt; GetAvailableRequestHeadersApplicationGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;string&gt; GetAvailableRequestHeadersApplicationGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableRequestHeadersApplicationGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableRequestHeadersApplicationGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableRequestHeadersApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;&#xA;override this.GetAvailableRequestHeadersApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableRequestHeadersApplicationGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available request headers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableRequestHeaders</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableRequestHeaders</description></item></list></summary>
        <returns> An async collection of <see cref="T:System.String" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableResponseHeadersApplicationGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;string&gt; GetAvailableResponseHeadersApplicationGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;string&gt; GetAvailableResponseHeadersApplicationGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableResponseHeadersApplicationGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableResponseHeadersApplicationGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableResponseHeadersApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;&#xA;override this.GetAvailableResponseHeadersApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableResponseHeadersApplicationGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available response headers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableResponseHeaders</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableResponseHeaders</description></item></list></summary>
        <returns> A collection of <see cref="T:System.String" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableResponseHeadersApplicationGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;string&gt; GetAvailableResponseHeadersApplicationGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;string&gt; GetAvailableResponseHeadersApplicationGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableResponseHeadersApplicationGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableResponseHeadersApplicationGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableResponseHeadersApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;&#xA;override this.GetAvailableResponseHeadersApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableResponseHeadersApplicationGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available response headers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableResponseHeaders</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableResponseHeaders</description></item></list></summary>
        <returns> An async collection of <see cref="T:System.String" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableServerVariablesApplicationGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;string&gt; GetAvailableServerVariablesApplicationGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;string&gt; GetAvailableServerVariablesApplicationGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableServerVariablesApplicationGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableServerVariablesApplicationGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableServerVariablesApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;&#xA;override this.GetAvailableServerVariablesApplicationGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableServerVariablesApplicationGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available server variables.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableServerVariables</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableServerVariables</description></item></list></summary>
        <returns> A collection of <see cref="T:System.String" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableServerVariablesApplicationGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;string&gt; GetAvailableServerVariablesApplicationGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;string&gt; GetAvailableServerVariablesApplicationGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableServerVariablesApplicationGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableServerVariablesApplicationGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableServerVariablesApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;&#xA;override this.GetAvailableServerVariablesApplicationGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableServerVariablesApplicationGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all available server variables.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableServerVariables</description></item><item><term>Operation Id</term><description>ApplicationGateways_ListAvailableServerVariables</description></item></list></summary>
        <returns> An async collection of <see cref="T:System.String" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableServiceAliases">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliases (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliases(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableServiceAliases(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableServiceAliases (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailableServiceAlias)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableServiceAliases : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;&#xA;override this.GetAvailableServiceAliases : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableServiceAliases (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available service aliases for this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableServiceAliases</description></item><item><term>Operation Id</term><description>AvailableServiceAliases_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableServiceAlias" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableServiceAliasesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliasesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliasesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAvailableServiceAliasesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableServiceAliasesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailableServiceAlias)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableServiceAliasesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;&#xA;override this.GetAvailableServiceAliasesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;" Usage="mockableNetworkSubscriptionResource.GetAvailableServiceAliasesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available service aliases for this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableServiceAliases</description></item><item><term>Operation Id</term><description>AvailableServiceAliases_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableServiceAlias" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewallFqdnTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt; GetAzureFirewallFqdnTags (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt; GetAzureFirewallFqdnTags(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAzureFirewallFqdnTags(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewallFqdnTags (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AzureFirewallFqdnTag)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewallFqdnTags : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt;&#xA;override this.GetAzureFirewallFqdnTags : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt;" Usage="mockableNetworkSubscriptionResource.GetAzureFirewallFqdnTags cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Azure Firewall FQDN Tags in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewallFqdnTags</description></item><item><term>Operation Id</term><description>AzureFirewallFqdnTags_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewallFqdnTagsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt; GetAzureFirewallFqdnTagsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt; GetAzureFirewallFqdnTagsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAzureFirewallFqdnTagsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewallFqdnTagsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AzureFirewallFqdnTag)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewallFqdnTagsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt;&#xA;override this.GetAzureFirewallFqdnTagsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt;" Usage="mockableNetworkSubscriptionResource.GetAzureFirewallFqdnTagsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Azure Firewall FQDN Tags in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewallFqdnTags</description></item><item><term>Operation Id</term><description>AzureFirewallFqdnTags_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AzureFirewallFqdnTag" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewalls">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt; GetAzureFirewalls (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.AzureFirewallResource&gt; GetAzureFirewalls(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAzureFirewalls(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewalls (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AzureFirewallResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewalls : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;&#xA;override this.GetAzureFirewalls : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;" Usage="mockableNetworkSubscriptionResource.GetAzureFirewalls cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Azure Firewalls in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls</description></item><item><term>Operation Id</term><description>AzureFirewalls_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.AzureFirewallResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewallsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt; GetAzureFirewallsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.AzureFirewallResource&gt; GetAzureFirewallsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAzureFirewallsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewallsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AzureFirewallResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewallsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;&#xA;override this.GetAzureFirewallsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;" Usage="mockableNetworkSubscriptionResource.GetAzureFirewallsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Azure Firewalls in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls</description></item><item><term>Operation Id</term><description>AzureFirewalls_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.AzureFirewallResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureWebCategories">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.AzureWebCategoryCollection GetAzureWebCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.AzureWebCategoryCollection GetAzureWebCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAzureWebCategories" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureWebCategories () As AzureWebCategoryCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAzureWebCategories : unit -&gt; Azure.ResourceManager.Network.AzureWebCategoryCollection&#xA;override this.GetAzureWebCategories : unit -&gt; Azure.ResourceManager.Network.AzureWebCategoryCollection" Usage="mockableNetworkSubscriptionResource.GetAzureWebCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.AzureWebCategoryCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AzureWebCategoryResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of AzureWebCategoryResources and their operations over a AzureWebCategoryResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureWebCategory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt; GetAzureWebCategory (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.AzureWebCategoryResource&gt; GetAzureWebCategory(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAzureWebCategory(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureWebCategory (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AzureWebCategoryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureWebCategory : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt;&#xA;override this.GetAzureWebCategory : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt;" Usage="mockableNetworkSubscriptionResource.GetAzureWebCategory (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the azureWebCategory. </param>
        <param name="expand"> Expands resourceIds back referenced by the azureWebCategory resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure Web Category.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories/{name}</description></item><item><term>Operation Id</term><description>WebCategories_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureWebCategoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt;&gt; GetAzureWebCategoryAsync (string name, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.AzureWebCategoryResource&gt;&gt; GetAzureWebCategoryAsync(string name, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetAzureWebCategoryAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureWebCategoryAsync (name As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AzureWebCategoryResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAzureWebCategoryAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt;&gt;&#xA;override this.GetAzureWebCategoryAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetAzureWebCategoryAsync (name, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureWebCategoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the azureWebCategory. </param>
        <param name="expand"> Expands resourceIds back referenced by the azureWebCategory resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure Web Category.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories/{name}</description></item><item><term>Operation Id</term><description>WebCategories_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBastionHosts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt; GetBastionHosts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.BastionHostResource&gt; GetBastionHosts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetBastionHosts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBastionHosts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BastionHostResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBastionHosts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt;&#xA;override this.GetBastionHosts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt;" Usage="mockableNetworkSubscriptionResource.GetBastionHosts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all Bastion Hosts in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/bastionHosts</description></item><item><term>Operation Id</term><description>BastionHosts_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.BastionHostResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBastionHostsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt; GetBastionHostsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.BastionHostResource&gt; GetBastionHostsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetBastionHostsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBastionHostsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BastionHostResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBastionHostsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt;&#xA;override this.GetBastionHostsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt;" Usage="mockableNetworkSubscriptionResource.GetBastionHostsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.BastionHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all Bastion Hosts in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/bastionHosts</description></item><item><term>Operation Id</term><description>BastionHosts_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.BastionHostResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBgpServiceCommunities">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt; GetBgpServiceCommunities (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt; GetBgpServiceCommunities(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetBgpServiceCommunities(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBgpServiceCommunities (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BgpServiceCommunity)" />
      <MemberSignature Language="F#" Value="abstract member GetBgpServiceCommunities : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt;&#xA;override this.GetBgpServiceCommunities : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt;" Usage="mockableNetworkSubscriptionResource.GetBgpServiceCommunities cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the available bgp service communities.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/bgpServiceCommunities</description></item><item><term>Operation Id</term><description>BgpServiceCommunities_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.BgpServiceCommunity" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBgpServiceCommunitiesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt; GetBgpServiceCommunitiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt; GetBgpServiceCommunitiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetBgpServiceCommunitiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBgpServiceCommunitiesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BgpServiceCommunity)" />
      <MemberSignature Language="F#" Value="abstract member GetBgpServiceCommunitiesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt;&#xA;override this.GetBgpServiceCommunitiesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt;" Usage="mockableNetworkSubscriptionResource.GetBgpServiceCommunitiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.BgpServiceCommunity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the available bgp service communities.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/bgpServiceCommunities</description></item><item><term>Operation Id</term><description>BgpServiceCommunities_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.BgpServiceCommunity" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomIPPrefixes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt; GetCustomIPPrefixes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.CustomIPPrefixResource&gt; GetCustomIPPrefixes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetCustomIPPrefixes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomIPPrefixes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CustomIPPrefixResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomIPPrefixes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&#xA;override this.GetCustomIPPrefixes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;" Usage="mockableNetworkSubscriptionResource.GetCustomIPPrefixes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the custom IP prefixes in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/customIpPrefixes</description></item><item><term>Operation Id</term><description>CustomIPPrefixes_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.CustomIPPrefixResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomIPPrefixesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt; GetCustomIPPrefixesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.CustomIPPrefixResource&gt; GetCustomIPPrefixesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetCustomIPPrefixesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomIPPrefixesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CustomIPPrefixResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomIPPrefixesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&#xA;override this.GetCustomIPPrefixesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;" Usage="mockableNetworkSubscriptionResource.GetCustomIPPrefixesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the custom IP prefixes in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/customIpPrefixes</description></item><item><term>Operation Id</term><description>CustomIPPrefixes_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.CustomIPPrefixResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDdosProtectionPlans">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt; GetDdosProtectionPlans (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.DdosProtectionPlanResource&gt; GetDdosProtectionPlans(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetDdosProtectionPlans(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosProtectionPlans (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DdosProtectionPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDdosProtectionPlans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&#xA;override this.GetDdosProtectionPlans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;" Usage="mockableNetworkSubscriptionResource.GetDdosProtectionPlans cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all DDoS protection plans in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ddosProtectionPlans</description></item><item><term>Operation Id</term><description>DdosProtectionPlans_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.DdosProtectionPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDdosProtectionPlansAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt; GetDdosProtectionPlansAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.DdosProtectionPlanResource&gt; GetDdosProtectionPlansAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetDdosProtectionPlansAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosProtectionPlansAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DdosProtectionPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDdosProtectionPlansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&#xA;override this.GetDdosProtectionPlansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;" Usage="mockableNetworkSubscriptionResource.GetDdosProtectionPlansAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all DDoS protection plans in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ddosProtectionPlans</description></item><item><term>Operation Id</term><description>DdosProtectionPlans_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.DdosProtectionPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscpConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt; GetDscpConfigurations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.DscpConfigurationResource&gt; GetDscpConfigurations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetDscpConfigurations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscpConfigurations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DscpConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDscpConfigurations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;&#xA;override this.GetDscpConfigurations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;" Usage="mockableNetworkSubscriptionResource.GetDscpConfigurations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all dscp configurations in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/dscpConfigurations</description></item><item><term>Operation Id</term><description>DscpConfiguration_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.DscpConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscpConfigurationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt; GetDscpConfigurationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.DscpConfigurationResource&gt; GetDscpConfigurationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetDscpConfigurationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscpConfigurationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DscpConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDscpConfigurationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;&#xA;override this.GetDscpConfigurationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;" Usage="mockableNetworkSubscriptionResource.GetDscpConfigurationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all dscp configurations in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/dscpConfigurations</description></item><item><term>Operation Id</term><description>DscpConfiguration_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.DscpConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuits">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt; GetExpressRouteCircuits (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt; GetExpressRouteCircuits(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteCircuits(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuits (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExpressRouteCircuitResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuits : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&#xA;override this.GetExpressRouteCircuits : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteCircuits cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the express route circuits in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits</description></item><item><term>Operation Id</term><description>ExpressRouteCircuits_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuitsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt; GetExpressRouteCircuitsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt; GetExpressRouteCircuitsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteCircuitsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuitsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExpressRouteCircuitResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuitsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&#xA;override this.GetExpressRouteCircuitsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteCircuitsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the express route circuits in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits</description></item><item><term>Operation Id</term><description>ExpressRouteCircuits_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCrossConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt; GetExpressRouteCrossConnections (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt; GetExpressRouteCrossConnections(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteCrossConnections(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCrossConnections (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExpressRouteCrossConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCrossConnections : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&#xA;override this.GetExpressRouteCrossConnections : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteCrossConnections cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves all the ExpressRouteCrossConnections in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCrossConnections</description></item><item><term>Operation Id</term><description>ExpressRouteCrossConnections_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCrossConnectionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt; GetExpressRouteCrossConnectionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt; GetExpressRouteCrossConnectionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteCrossConnectionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCrossConnectionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExpressRouteCrossConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCrossConnectionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&#xA;override this.GetExpressRouteCrossConnectionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteCrossConnectionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves all the ExpressRouteCrossConnections in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCrossConnections</description></item><item><term>Operation Id</term><description>ExpressRouteCrossConnections_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt; GetExpressRouteGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt; GetExpressRouteGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExpressRouteGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&#xA;override this.GetExpressRouteGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists ExpressRoute gateways under a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways</description></item><item><term>Operation Id</term><description>ExpressRouteGateways_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.ExpressRouteGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt; GetExpressRouteGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt; GetExpressRouteGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExpressRouteGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&#xA;override this.GetExpressRouteGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists ExpressRoute gateways under a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways</description></item><item><term>Operation Id</term><description>ExpressRouteGateways_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.ExpressRouteGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePorts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt; GetExpressRoutePorts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.ExpressRoutePortResource&gt; GetExpressRoutePorts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRoutePorts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePorts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExpressRoutePortResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePorts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&#xA;override this.GetExpressRoutePorts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRoutePorts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the ExpressRoutePort resources in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePorts</description></item><item><term>Operation Id</term><description>ExpressRoutePorts_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt; GetExpressRoutePortsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.ExpressRoutePortResource&gt; GetExpressRoutePortsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRoutePortsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExpressRoutePortResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&#xA;override this.GetExpressRoutePortsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRoutePortsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the ExpressRoutePort resources in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePorts</description></item><item><term>Operation Id</term><description>ExpressRoutePorts_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.ExpressRoutePortResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortsLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt; GetExpressRoutePortsLocation (string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt; GetExpressRoutePortsLocation(string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRoutePortsLocation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortsLocation (locationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRoutePortsLocationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortsLocation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;&#xA;override this.GetExpressRoutePortsLocation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRoutePortsLocation (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Name of the requested ExpressRoutePort peering location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations/{locationName}</description></item><item><term>Operation Id</term><description>ExpressRoutePortsLocations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortsLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;&gt; GetExpressRoutePortsLocationAsync (string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;&gt; GetExpressRoutePortsLocationAsync(string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRoutePortsLocationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortsLocationAsync (locationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRoutePortsLocationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortsLocationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;&gt;&#xA;override this.GetExpressRoutePortsLocationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRoutePortsLocationAsync (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortsLocationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Name of the requested ExpressRoutePort peering location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations/{locationName}</description></item><item><term>Operation Id</term><description>ExpressRoutePortsLocations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortsLocations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRoutePortsLocationCollection GetExpressRoutePortsLocations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRoutePortsLocationCollection GetExpressRoutePortsLocations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRoutePortsLocations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortsLocations () As ExpressRoutePortsLocationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortsLocations : unit -&gt; Azure.ResourceManager.Network.ExpressRoutePortsLocationCollection&#xA;override this.GetExpressRoutePortsLocations : unit -&gt; Azure.ResourceManager.Network.ExpressRoutePortsLocationCollection" Usage="mockableNetworkSubscriptionResource.GetExpressRoutePortsLocations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRoutePortsLocationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRoutePortsLocationResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ExpressRoutePortsLocationResources and their operations over a ExpressRoutePortsLocationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteProviderPort">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt; GetExpressRouteProviderPort (string providerport, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt; GetExpressRouteProviderPort(string providerport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteProviderPort(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteProviderPort (providerport As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRouteProviderPortResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteProviderPort : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;&#xA;override this.GetExpressRouteProviderPort : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteProviderPort (providerport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerport" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerport"> The name of the provider port. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves detail of a provider port.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteProviderPorts/{providerport}</description></item><item><term>Operation Id</term><description>ExpressRouteProviderPort</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerport" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerport" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteProviderPortAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;&gt; GetExpressRouteProviderPortAsync (string providerport, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;&gt; GetExpressRouteProviderPortAsync(string providerport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteProviderPortAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteProviderPortAsync (providerport As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRouteProviderPortResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteProviderPortAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;&gt;&#xA;override this.GetExpressRouteProviderPortAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteProviderPortAsync (providerport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteProviderPortResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerport" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerport"> The name of the provider port. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves detail of a provider port.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteProviderPorts/{providerport}</description></item><item><term>Operation Id</term><description>ExpressRouteProviderPort</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerport" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerport" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteProviderPorts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteProviderPortCollection GetExpressRouteProviderPorts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteProviderPortCollection GetExpressRouteProviderPorts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteProviderPorts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteProviderPorts () As ExpressRouteProviderPortCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteProviderPorts : unit -&gt; Azure.ResourceManager.Network.ExpressRouteProviderPortCollection&#xA;override this.GetExpressRouteProviderPorts : unit -&gt; Azure.ResourceManager.Network.ExpressRouteProviderPortCollection" Usage="mockableNetworkSubscriptionResource.GetExpressRouteProviderPorts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteProviderPortCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRouteProviderPortResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ExpressRouteProviderPortResources and their operations over a ExpressRouteProviderPortResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteServiceProviders">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt; GetExpressRouteServiceProviders (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt; GetExpressRouteServiceProviders(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteServiceProviders(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteServiceProviders (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExpressRouteServiceProvider)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteServiceProviders : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt;&#xA;override this.GetExpressRouteServiceProviders : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteServiceProviders cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the available express route service providers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders</description></item><item><term>Operation Id</term><description>ExpressRouteServiceProviders_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteServiceProvidersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt; GetExpressRouteServiceProvidersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt; GetExpressRouteServiceProvidersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetExpressRouteServiceProvidersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteServiceProvidersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExpressRouteServiceProvider)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteServiceProvidersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt;&#xA;override this.GetExpressRouteServiceProvidersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt;" Usage="mockableNetworkSubscriptionResource.GetExpressRouteServiceProvidersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the available express route service providers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders</description></item><item><term>Operation Id</term><description>ExpressRouteServiceProviders_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.ExpressRouteServiceProvider" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt; GetFirewallPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.FirewallPolicyResource&gt; GetFirewallPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetFirewallPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of FirewallPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;&#xA;override this.GetFirewallPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;" Usage="mockableNetworkSubscriptionResource.GetFirewallPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Firewall Policies in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/firewallPolicies</description></item><item><term>Operation Id</term><description>FirewallPolicies_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.FirewallPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt; GetFirewallPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.FirewallPolicyResource&gt; GetFirewallPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetFirewallPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of FirewallPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;&#xA;override this.GetFirewallPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;" Usage="mockableNetworkSubscriptionResource.GetFirewallPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Firewall Policies in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/firewallPolicies</description></item><item><term>Operation Id</term><description>FirewallPolicies_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.FirewallPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPAllocations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt; GetIPAllocations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.IPAllocationResource&gt; GetIPAllocations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetIPAllocations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAllocations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IPAllocationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIPAllocations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;&#xA;override this.GetIPAllocations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;" Usage="mockableNetworkSubscriptionResource.GetIPAllocations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all IpAllocations in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/IpAllocations</description></item><item><term>Operation Id</term><description>IpAllocations_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.IPAllocationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPAllocationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt; GetIPAllocationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.IPAllocationResource&gt; GetIPAllocationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetIPAllocationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAllocationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IPAllocationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIPAllocationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;&#xA;override this.GetIPAllocationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;" Usage="mockableNetworkSubscriptionResource.GetIPAllocationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all IpAllocations in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/IpAllocations</description></item><item><term>Operation Id</term><description>IpAllocations_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.IPAllocationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt; GetIPGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.IPGroupResource&gt; GetIPGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetIPGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IPGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIPGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt;&#xA;override this.GetIPGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt;" Usage="mockableNetworkSubscriptionResource.GetIPGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all IpGroups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ipGroups</description></item><item><term>Operation Id</term><description>IpGroups_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.IPGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt; GetIPGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.IPGroupResource&gt; GetIPGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetIPGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IPGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIPGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt;&#xA;override this.GetIPGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt;" Usage="mockableNetworkSubscriptionResource.GetIPGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.IPGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all IpGroups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ipGroups</description></item><item><term>Operation Id</term><description>IpGroups_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.IPGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadBalancers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt; GetLoadBalancers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.LoadBalancerResource&gt; GetLoadBalancers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetLoadBalancers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadBalancers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LoadBalancerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLoadBalancers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;&#xA;override this.GetLoadBalancers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;" Usage="mockableNetworkSubscriptionResource.GetLoadBalancers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the load balancers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers</description></item><item><term>Operation Id</term><description>LoadBalancers_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.LoadBalancerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadBalancersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt; GetLoadBalancersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.LoadBalancerResource&gt; GetLoadBalancersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetLoadBalancersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadBalancersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LoadBalancerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLoadBalancersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;&#xA;override this.GetLoadBalancersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;" Usage="mockableNetworkSubscriptionResource.GetLoadBalancersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the load balancers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers</description></item><item><term>Operation Id</term><description>LoadBalancers_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.LoadBalancerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNatGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt; GetNatGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.NatGatewayResource&gt; GetNatGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNatGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNatGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NatGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNatGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;&#xA;override this.GetNatGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNatGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Nat Gateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/natGateways</description></item><item><term>Operation Id</term><description>NatGateways_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.NatGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNatGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt; GetNatGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.NatGatewayResource&gt; GetNatGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNatGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNatGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NatGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNatGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;&#xA;override this.GetNatGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNatGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Nat Gateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/natGateways</description></item><item><term>Operation Id</term><description>NatGateways_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.NatGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt; GetNetworkInterfaces (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.NetworkInterfaceResource&gt; GetNetworkInterfaces(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkInterfaces(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfaces (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkInterfaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&#xA;override this.GetNetworkInterfaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkInterfaces cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all network interfaces in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces</description></item><item><term>Operation Id</term><description>NetworkInterfaces_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt; GetNetworkInterfacesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.NetworkInterfaceResource&gt; GetNetworkInterfacesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkInterfacesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfacesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkInterfaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&#xA;override this.GetNetworkInterfacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkInterfacesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all network interfaces in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces</description></item><item><term>Operation Id</term><description>NetworkInterfaces_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.NetworkInterfaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkManagers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt; GetNetworkManagers (int? top = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.NetworkManagerResource&gt; GetNetworkManagers(valuetype System.Nullable`1&lt;int32&gt; top, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkManagers(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkManagers (Optional top As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkManagerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkManagers : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;&#xA;override this.GetNetworkManagers : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkManagers (top, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> An optional query parameter which specifies the maximum number of records to be returned by the server. </param>
        <param name="skipToken"> SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all network managers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagers</description></item><item><term>Operation Id</term><description>NetworkManagers_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.NetworkManagerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkManagersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt; GetNetworkManagersAsync (int? top = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.NetworkManagerResource&gt; GetNetworkManagersAsync(valuetype System.Nullable`1&lt;int32&gt; top, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkManagersAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkManagersAsync (Optional top As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkManagerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkManagersAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;&#xA;override this.GetNetworkManagersAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkManagersAsync (top, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> An optional query parameter which specifies the maximum number of records to be returned by the server. </param>
        <param name="skipToken"> SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all network managers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagers</description></item><item><term>Operation Id</term><description>NetworkManagers_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.NetworkManagerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkProfiles">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt; GetNetworkProfiles (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.NetworkProfileResource&gt; GetNetworkProfiles(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkProfiles(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkProfiles (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkProfileResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkProfiles : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;&#xA;override this.GetNetworkProfiles : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkProfiles cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the network profiles in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkProfiles</description></item><item><term>Operation Id</term><description>NetworkProfiles_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.NetworkProfileResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkProfilesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt; GetNetworkProfilesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.NetworkProfileResource&gt; GetNetworkProfilesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkProfilesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkProfilesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkProfileResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkProfilesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;&#xA;override this.GetNetworkProfilesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkProfilesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the network profiles in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkProfiles</description></item><item><term>Operation Id</term><description>NetworkProfiles_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.NetworkProfileResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt; GetNetworkSecurityGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt; GetNetworkSecurityGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkSecurityGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkSecurityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&#xA;override this.GetNetworkSecurityGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkSecurityGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all network security groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups</description></item><item><term>Operation Id</term><description>NetworkSecurityGroups_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.NetworkSecurityGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt; GetNetworkSecurityGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt; GetNetworkSecurityGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkSecurityGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkSecurityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&#xA;override this.GetNetworkSecurityGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkSecurityGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all network security groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups</description></item><item><term>Operation Id</term><description>NetworkSecurityGroups_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.NetworkSecurityGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualAppliances">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt; GetNetworkVirtualAppliances (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt; GetNetworkVirtualAppliances(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkVirtualAppliances(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualAppliances (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkVirtualApplianceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualAppliances : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&#xA;override this.GetNetworkVirtualAppliances : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkVirtualAppliances cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Network Virtual Appliances in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualAppliances</description></item><item><term>Operation Id</term><description>NetworkVirtualAppliances_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualAppliancesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt; GetNetworkVirtualAppliancesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt; GetNetworkVirtualAppliancesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkVirtualAppliancesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualAppliancesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkVirtualApplianceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualAppliancesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&#xA;override this.GetNetworkVirtualAppliancesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkVirtualAppliancesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Network Virtual Appliances in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualAppliances</description></item><item><term>Operation Id</term><description>NetworkVirtualAppliances_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.NetworkVirtualApplianceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualApplianceSku">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt; GetNetworkVirtualApplianceSku (string skuName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt; GetNetworkVirtualApplianceSku(string skuName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkVirtualApplianceSku(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualApplianceSku (skuName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkVirtualApplianceSkuResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualApplianceSku : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;&#xA;override this.GetNetworkVirtualApplianceSku : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkVirtualApplianceSku (skuName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skuName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skuName"> Name of the Sku. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves a single available sku for network virtual appliance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualApplianceSkus/{skuName}</description></item><item><term>Operation Id</term><description>VirtualApplianceSkus_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="skuName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="skuName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualApplianceSkuAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;&gt; GetNetworkVirtualApplianceSkuAsync (string skuName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;&gt; GetNetworkVirtualApplianceSkuAsync(string skuName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkVirtualApplianceSkuAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualApplianceSkuAsync (skuName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkVirtualApplianceSkuResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualApplianceSkuAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;&gt;&#xA;override this.GetNetworkVirtualApplianceSkuAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkVirtualApplianceSkuAsync (skuName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceSkuResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skuName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skuName"> Name of the Sku. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves a single available sku for network virtual appliance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualApplianceSkus/{skuName}</description></item><item><term>Operation Id</term><description>VirtualApplianceSkus_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="skuName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="skuName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualApplianceSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkVirtualApplianceSkuCollection GetNetworkVirtualApplianceSkus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkVirtualApplianceSkuCollection GetNetworkVirtualApplianceSkus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkVirtualApplianceSkus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualApplianceSkus () As NetworkVirtualApplianceSkuCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualApplianceSkus : unit -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceSkuCollection&#xA;override this.GetNetworkVirtualApplianceSkus : unit -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceSkuCollection" Usage="mockableNetworkSubscriptionResource.GetNetworkVirtualApplianceSkus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkVirtualApplianceSkuCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NetworkVirtualApplianceSkuResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of NetworkVirtualApplianceSkuResources and their operations over a NetworkVirtualApplianceSkuResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkWatchers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt; GetNetworkWatchers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.NetworkWatcherResource&gt; GetNetworkWatchers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkWatchers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkWatchers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkWatcherResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkWatchers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;&#xA;override this.GetNetworkWatchers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkWatchers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all network watchers by subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers</description></item><item><term>Operation Id</term><description>NetworkWatchers_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.NetworkWatcherResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkWatchersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt; GetNetworkWatchersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.NetworkWatcherResource&gt; GetNetworkWatchersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetNetworkWatchersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkWatchersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkWatcherResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkWatchersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;&#xA;override this.GetNetworkWatchersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;" Usage="mockableNetworkSubscriptionResource.GetNetworkWatchersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all network watchers by subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers</description></item><item><term>Operation Id</term><description>NetworkWatchers_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.NetworkWatcherResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetP2SVpnGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt; GetP2SVpnGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.P2SVpnGatewayResource&gt; GetP2SVpnGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetP2SVpnGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetP2SVpnGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of P2SVpnGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetP2SVpnGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&#xA;override this.GetP2SVpnGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetP2SVpnGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the P2SVpnGateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways</description></item><item><term>Operation Id</term><description>P2sVpnGateways_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.P2SVpnGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetP2SVpnGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt; GetP2SVpnGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.P2SVpnGatewayResource&gt; GetP2SVpnGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetP2SVpnGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetP2SVpnGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of P2SVpnGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetP2SVpnGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&#xA;override this.GetP2SVpnGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetP2SVpnGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the P2SVpnGateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways</description></item><item><term>Operation Id</term><description>P2sVpnGateways_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.P2SVpnGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpoints">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt; GetPrivateEndpoints (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.PrivateEndpointResource&gt; GetPrivateEndpoints(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPrivateEndpoints(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpoints (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PrivateEndpointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpoints : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;&#xA;override this.GetPrivateEndpoints : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPrivateEndpoints cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all private endpoints in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateEndpoints</description></item><item><term>Operation Id</term><description>PrivateEndpoints_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.PrivateEndpointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt; GetPrivateEndpointsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.PrivateEndpointResource&gt; GetPrivateEndpointsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPrivateEndpointsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpointsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PrivateEndpointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpointsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;&#xA;override this.GetPrivateEndpointsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPrivateEndpointsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all private endpoints in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateEndpoints</description></item><item><term>Operation Id</term><description>PrivateEndpoints_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.PrivateEndpointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt; GetPrivateLinkServices (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.PrivateLinkServiceResource&gt; GetPrivateLinkServices(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPrivateLinkServices(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkServices (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PrivateLinkServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&#xA;override this.GetPrivateLinkServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPrivateLinkServices cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all private link service in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateLinkServices</description></item><item><term>Operation Id</term><description>PrivateLinkServices_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.PrivateLinkServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt; GetPrivateLinkServicesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.PrivateLinkServiceResource&gt; GetPrivateLinkServicesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPrivateLinkServicesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkServicesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PrivateLinkServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&#xA;override this.GetPrivateLinkServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPrivateLinkServicesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all private link service in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateLinkServices</description></item><item><term>Operation Id</term><description>PrivateLinkServices_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.PrivateLinkServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPAddresses">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt; GetPublicIPAddresses (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.PublicIPAddressResource&gt; GetPublicIPAddresses(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPublicIPAddresses(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPAddresses (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PublicIPAddressResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPAddresses : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;&#xA;override this.GetPublicIPAddresses : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPublicIPAddresses cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the public IP addresses in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses</description></item><item><term>Operation Id</term><description>PublicIPAddresses_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.PublicIPAddressResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPAddressesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt; GetPublicIPAddressesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.PublicIPAddressResource&gt; GetPublicIPAddressesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPublicIPAddressesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPAddressesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PublicIPAddressResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPAddressesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;&#xA;override this.GetPublicIPAddressesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPublicIPAddressesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the public IP addresses in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses</description></item><item><term>Operation Id</term><description>PublicIPAddresses_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.PublicIPAddressResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPPrefixes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt; GetPublicIPPrefixes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.PublicIPPrefixResource&gt; GetPublicIPPrefixes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPublicIPPrefixes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPPrefixes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PublicIPPrefixResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPPrefixes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&#xA;override this.GetPublicIPPrefixes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPublicIPPrefixes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the public IP prefixes in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPPrefixes</description></item><item><term>Operation Id</term><description>PublicIPPrefixes_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.PublicIPPrefixResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPPrefixesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt; GetPublicIPPrefixesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.PublicIPPrefixResource&gt; GetPublicIPPrefixesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetPublicIPPrefixesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPPrefixesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PublicIPPrefixResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPPrefixesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&#xA;override this.GetPublicIPPrefixesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;" Usage="mockableNetworkSubscriptionResource.GetPublicIPPrefixesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the public IP prefixes in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPPrefixes</description></item><item><term>Operation Id</term><description>PublicIPPrefixes_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.PublicIPPrefixResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteFilters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt; GetRouteFilters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.RouteFilterResource&gt; GetRouteFilters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetRouteFilters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteFilters (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RouteFilterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRouteFilters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;&#xA;override this.GetRouteFilters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;" Usage="mockableNetworkSubscriptionResource.GetRouteFilters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all route filters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters</description></item><item><term>Operation Id</term><description>RouteFilters_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.RouteFilterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteFiltersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt; GetRouteFiltersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.RouteFilterResource&gt; GetRouteFiltersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetRouteFiltersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteFiltersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RouteFilterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRouteFiltersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;&#xA;override this.GetRouteFiltersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;" Usage="mockableNetworkSubscriptionResource.GetRouteFiltersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all route filters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters</description></item><item><term>Operation Id</term><description>RouteFilters_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.RouteFilterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteTables">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt; GetRouteTables (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.RouteTableResource&gt; GetRouteTables(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetRouteTables(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteTables (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RouteTableResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRouteTables : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt;&#xA;override this.GetRouteTables : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt;" Usage="mockableNetworkSubscriptionResource.GetRouteTables cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all route tables in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables</description></item><item><term>Operation Id</term><description>RouteTables_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.RouteTableResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteTablesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt; GetRouteTablesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.RouteTableResource&gt; GetRouteTablesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetRouteTablesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteTablesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RouteTableResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRouteTablesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt;&#xA;override this.GetRouteTablesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt;" Usage="mockableNetworkSubscriptionResource.GetRouteTablesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.RouteTableResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all route tables in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables</description></item><item><term>Operation Id</term><description>RouteTables_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.RouteTableResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPartnerProviders">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt; GetSecurityPartnerProviders (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt; GetSecurityPartnerProviders(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetSecurityPartnerProviders(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPartnerProviders (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityPartnerProviderResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPartnerProviders : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&#xA;override this.GetSecurityPartnerProviders : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;" Usage="mockableNetworkSubscriptionResource.GetSecurityPartnerProviders cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Security Partner Providers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/securityPartnerProviders</description></item><item><term>Operation Id</term><description>SecurityPartnerProviders_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.SecurityPartnerProviderResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPartnerProvidersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt; GetSecurityPartnerProvidersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt; GetSecurityPartnerProvidersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetSecurityPartnerProvidersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPartnerProvidersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityPartnerProviderResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPartnerProvidersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&#xA;override this.GetSecurityPartnerProvidersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;" Usage="mockableNetworkSubscriptionResource.GetSecurityPartnerProvidersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Security Partner Providers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/securityPartnerProviders</description></item><item><term>Operation Id</term><description>SecurityPartnerProviders_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.SecurityPartnerProviderResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointPoliciesByServiceEndpointPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt; GetServiceEndpointPoliciesByServiceEndpointPolicy (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt; GetServiceEndpointPoliciesByServiceEndpointPolicy(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetServiceEndpointPoliciesByServiceEndpointPolicy(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceEndpointPoliciesByServiceEndpointPolicy (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceEndpointPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointPoliciesByServiceEndpointPolicy : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&#xA;override this.GetServiceEndpointPoliciesByServiceEndpointPolicy : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;" Usage="mockableNetworkSubscriptionResource.GetServiceEndpointPoliciesByServiceEndpointPolicy cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the service endpoint policies in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies</description></item><item><term>Operation Id</term><description>ServiceEndpointPolicies_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointPoliciesByServiceEndpointPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt; GetServiceEndpointPoliciesByServiceEndpointPolicyAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt; GetServiceEndpointPoliciesByServiceEndpointPolicyAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetServiceEndpointPoliciesByServiceEndpointPolicyAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceEndpointPoliciesByServiceEndpointPolicyAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceEndpointPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointPoliciesByServiceEndpointPolicyAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&#xA;override this.GetServiceEndpointPoliciesByServiceEndpointPolicyAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;" Usage="mockableNetworkSubscriptionResource.GetServiceEndpointPoliciesByServiceEndpointPolicyAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the service endpoint policies in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies</description></item><item><term>Operation Id</term><description>ServiceEndpointPolicies_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.ServiceEndpointPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt; GetServiceTag (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt; GetServiceTag(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetServiceTag(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceTag (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceTagsListResult)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceTag : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;&#xA;override this.GetServiceTag : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;" Usage="mockableNetworkSubscriptionResource.GetServiceTag (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location that will be used as a reference for version (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of service tag information resources.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTags</description></item><item><term>Operation Id</term><description>ServiceTags_List</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;&gt; GetServiceTagAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;&gt; GetServiceTagAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetServiceTagAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceTagAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceTagsListResult))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceTagAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;&gt;&#xA;override this.GetServiceTagAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetServiceTagAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ServiceTagsListResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location that will be used as a reference for version (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of service tag information resources.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTags</description></item><item><term>Operation Id</term><description>ServiceTags_List</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionNetworkManagerConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt; GetSubscriptionNetworkManagerConnection (string networkManagerConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt; GetSubscriptionNetworkManagerConnection(string networkManagerConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetSubscriptionNetworkManagerConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionNetworkManagerConnection (networkManagerConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionNetworkManagerConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionNetworkManagerConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;&#xA;override this.GetSubscriptionNetworkManagerConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;" Usage="mockableNetworkSubscriptionResource.GetSubscriptionNetworkManagerConnection (networkManagerConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkManagerConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkManagerConnectionName"> Name for the network manager connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specified connection created by this subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}</description></item><item><term>Operation Id</term><description>SubscriptionNetworkManagerConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkManagerConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkManagerConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionNetworkManagerConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;&gt; GetSubscriptionNetworkManagerConnectionAsync (string networkManagerConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;&gt; GetSubscriptionNetworkManagerConnectionAsync(string networkManagerConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetSubscriptionNetworkManagerConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionNetworkManagerConnectionAsync (networkManagerConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionNetworkManagerConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionNetworkManagerConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;&gt;&#xA;override this.GetSubscriptionNetworkManagerConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;&gt;" Usage="mockableNetworkSubscriptionResource.GetSubscriptionNetworkManagerConnectionAsync (networkManagerConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkManagerConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkManagerConnectionName"> Name for the network manager connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specified connection created by this subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}</description></item><item><term>Operation Id</term><description>SubscriptionNetworkManagerConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkManagerConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkManagerConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionNetworkManagerConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionCollection GetSubscriptionNetworkManagerConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionCollection GetSubscriptionNetworkManagerConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetSubscriptionNetworkManagerConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionNetworkManagerConnections () As SubscriptionNetworkManagerConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionNetworkManagerConnections : unit -&gt; Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionCollection&#xA;override this.GetSubscriptionNetworkManagerConnections : unit -&gt; Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionCollection" Usage="mockableNetworkSubscriptionResource.GetSubscriptionNetworkManagerConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.SubscriptionNetworkManagerConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SubscriptionNetworkManagerConnectionResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SubscriptionNetworkManagerConnectionResources and their operations over a SubscriptionNetworkManagerConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt; GetUsages (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.NetworkUsage&gt; GetUsages(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetUsages(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsages (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt;&#xA;override this.GetUsages : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt;" Usage="mockableNetworkSubscriptionResource.GetUsages (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location where resource usage is queried. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List network usages for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.NetworkUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt; GetUsagesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.NetworkUsage&gt; GetUsagesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetUsagesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt;&#xA;override this.GetUsagesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt;" Usage="mockableNetworkSubscriptionResource.GetUsagesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.NetworkUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location where resource usage is queried. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List network usages for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.NetworkUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHubs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt; GetVirtualHubs (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VirtualHubResource&gt; GetVirtualHubs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualHubs(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHubs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualHubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHubs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;&#xA;override this.GetVirtualHubs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualHubs cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VirtualHubs in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs</description></item><item><term>Operation Id</term><description>VirtualHubs_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VirtualHubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHubsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt; GetVirtualHubsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VirtualHubResource&gt; GetVirtualHubsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualHubsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHubsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualHubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHubsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;&#xA;override this.GetVirtualHubsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualHubsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VirtualHubs in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs</description></item><item><term>Operation Id</term><description>VirtualHubs_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VirtualHubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworks">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt; GetVirtualNetworks (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VirtualNetworkResource&gt; GetVirtualNetworks(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualNetworks(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworks (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworks : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;&#xA;override this.GetVirtualNetworks : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualNetworks cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all virtual networks in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks</description></item><item><term>Operation Id</term><description>VirtualNetworks_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VirtualNetworkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworksAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt; GetVirtualNetworksAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VirtualNetworkResource&gt; GetVirtualNetworksAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualNetworksAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworksAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworksAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;&#xA;override this.GetVirtualNetworksAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualNetworksAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all virtual networks in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks</description></item><item><term>Operation Id</term><description>VirtualNetworks_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VirtualNetworkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkTaps">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt; GetVirtualNetworkTaps (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VirtualNetworkTapResource&gt; GetVirtualNetworkTaps(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualNetworkTaps(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkTaps (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualNetworkTapResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkTaps : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&#xA;override this.GetVirtualNetworkTaps : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualNetworkTaps cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the VirtualNetworkTaps in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworkTaps</description></item><item><term>Operation Id</term><description>VirtualNetworkTaps_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VirtualNetworkTapResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkTapsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt; GetVirtualNetworkTapsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VirtualNetworkTapResource&gt; GetVirtualNetworkTapsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualNetworkTapsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkTapsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualNetworkTapResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkTapsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&#xA;override this.GetVirtualNetworkTapsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualNetworkTapsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the VirtualNetworkTaps in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworkTaps</description></item><item><term>Operation Id</term><description>VirtualNetworkTaps_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VirtualNetworkTapResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRouters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt; GetVirtualRouters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VirtualRouterResource&gt; GetVirtualRouters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualRouters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualRouters (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualRouterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRouters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;&#xA;override this.GetVirtualRouters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualRouters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Virtual Routers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualRouters</description></item><item><term>Operation Id</term><description>VirtualRouters_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VirtualRouterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRoutersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt; GetVirtualRoutersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VirtualRouterResource&gt; GetVirtualRoutersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualRoutersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualRoutersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualRouterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRoutersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;&#xA;override this.GetVirtualRoutersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualRoutersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the Virtual Routers in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualRouters</description></item><item><term>Operation Id</term><description>VirtualRouters_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VirtualRouterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWans">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt; GetVirtualWans (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VirtualWanResource&gt; GetVirtualWans(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualWans(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWans (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualWanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;&#xA;override this.GetVirtualWans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualWans cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VirtualWANs in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans</description></item><item><term>Operation Id</term><description>VirtualWans_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VirtualWanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWansAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt; GetVirtualWansAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VirtualWanResource&gt; GetVirtualWansAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVirtualWansAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWansAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualWanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;&#xA;override this.GetVirtualWansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVirtualWansAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VirtualWANs in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans</description></item><item><term>Operation Id</term><description>VirtualWans_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VirtualWanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt; GetVpnGateways (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VpnGatewayResource&gt; GetVpnGateways(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVpnGateways(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnGateways (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VpnGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;&#xA;override this.GetVpnGateways : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVpnGateways cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VpnGateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways</description></item><item><term>Operation Id</term><description>VpnGateways_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VpnGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnGatewaysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt; GetVpnGatewaysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VpnGatewayResource&gt; GetVpnGatewaysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVpnGatewaysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnGatewaysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VpnGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;&#xA;override this.GetVpnGatewaysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVpnGatewaysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VpnGateways in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways</description></item><item><term>Operation Id</term><description>VpnGateways_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VpnGatewayResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnServerConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt; GetVpnServerConfigurations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VpnServerConfigurationResource&gt; GetVpnServerConfigurations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVpnServerConfigurations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnServerConfigurations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VpnServerConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnServerConfigurations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&#xA;override this.GetVpnServerConfigurations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVpnServerConfigurations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VpnServerConfigurations in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnServerConfigurations</description></item><item><term>Operation Id</term><description>VpnServerConfigurations_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnServerConfigurationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt; GetVpnServerConfigurationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VpnServerConfigurationResource&gt; GetVpnServerConfigurationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVpnServerConfigurationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnServerConfigurationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VpnServerConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnServerConfigurationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&#xA;override this.GetVpnServerConfigurationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVpnServerConfigurationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VpnServerConfigurations in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnServerConfigurations</description></item><item><term>Operation Id</term><description>VpnServerConfigurations_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VpnServerConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSites">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt; GetVpnSites (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.VpnSiteResource&gt; GetVpnSites(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVpnSites(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSites (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VpnSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSites : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;&#xA;override this.GetVpnSites : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVpnSites cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VpnSites in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites</description></item><item><term>Operation Id</term><description>VpnSites_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.VpnSiteResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSitesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt; GetVpnSitesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.VpnSiteResource&gt; GetVpnSitesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetVpnSitesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSitesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VpnSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSitesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;&#xA;override this.GetVpnSitesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;" Usage="mockableNetworkSubscriptionResource.GetVpnSitesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the VpnSites in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites</description></item><item><term>Operation Id</term><description>VpnSites_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.VpnSiteResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationFirewallPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt; GetWebApplicationFirewallPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt; GetWebApplicationFirewallPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetWebApplicationFirewallPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebApplicationFirewallPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of WebApplicationFirewallPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWebApplicationFirewallPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&#xA;override this.GetWebApplicationFirewallPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;" Usage="mockableNetworkSubscriptionResource.GetWebApplicationFirewallPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the WAF policies in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies</description></item><item><term>Operation Id</term><description>WebApplicationFirewallPolicies_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationFirewallPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt; GetWebApplicationFirewallPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt; GetWebApplicationFirewallPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.GetWebApplicationFirewallPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebApplicationFirewallPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of WebApplicationFirewallPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWebApplicationFirewallPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&#xA;override this.GetWebApplicationFirewallPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;" Usage="mockableNetworkSubscriptionResource.GetWebApplicationFirewallPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the WAF policies in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies</description></item><item><term>Operation Id</term><description>WebApplicationFirewallPolicies_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapPublicIPAddressesLoadBalancer">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation SwapPublicIPAddressesLoadBalancer (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation SwapPublicIPAddressesLoadBalancer(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.SwapPublicIPAddressesLoadBalancer(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SwapPublicIPAddressesLoadBalancer (waitUntil As WaitUntil, location As AzureLocation, content As LoadBalancerVipSwapContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member SwapPublicIPAddressesLoadBalancer : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.SwapPublicIPAddressesLoadBalancer : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="mockableNetworkSubscriptionResource.SwapPublicIPAddressesLoadBalancer (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region where load balancers are located at. </param>
        <param name="content"> Parameters that define which VIPs should be swapped. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Swaps VIPs between two load balancers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/setLoadBalancerFrontendPublicIpAddresses</description></item><item><term>Operation Id</term><description>LoadBalancers_SwapPublicIpAddresses</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SwapPublicIPAddressesLoadBalancerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; SwapPublicIPAddressesLoadBalancerAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; SwapPublicIPAddressesLoadBalancerAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.MockableNetworkSubscriptionResource.SwapPublicIPAddressesLoadBalancerAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SwapPublicIPAddressesLoadBalancerAsync (waitUntil As WaitUntil, location As AzureLocation, content As LoadBalancerVipSwapContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member SwapPublicIPAddressesLoadBalancerAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.SwapPublicIPAddressesLoadBalancerAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="mockableNetworkSubscriptionResource.SwapPublicIPAddressesLoadBalancerAsync (waitUntil, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Network.Models.LoadBalancerVipSwapContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The region where load balancers are located at. </param>
        <param name="content"> Parameters that define which VIPs should be swapped. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Swaps VIPs between two load balancers.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/setLoadBalancerFrontendPublicIpAddresses</description></item><item><term>Operation Id</term><description>LoadBalancers_SwapPublicIpAddresses</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
