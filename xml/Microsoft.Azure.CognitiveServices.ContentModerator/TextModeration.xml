<Type Name="TextModeration" FullName="Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration">
  <TypeSignature Language="C#" Value="public class TextModeration : Microsoft.Azure.CognitiveServices.ContentModerator.ITextModeration, Microsoft.Rest.IServiceOperations&lt;Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextModeration extends System.Object implements class Microsoft.Azure.CognitiveServices.ContentModerator.ITextModeration, class Microsoft.Rest.IServiceOperations`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration" />
  <TypeSignature Language="VB.NET" Value="Public Class TextModeration&#xA;Implements IServiceOperations(Of ContentModeratorClient), ITextModeration" />
  <TypeSignature Language="F#" Value="type TextModeration = class&#xA;    interface IServiceOperations&lt;ContentModeratorClient&gt;&#xA;    interface ITextModeration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.CognitiveServices.ContentModerator.ITextModeration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Rest.IServiceOperations&lt;Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            TextModeration operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextModeration (Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration.#ctor(Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As ContentModeratorClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration : Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient -&gt; Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration" Usage="new Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration client" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient" />
      </Parameters>
      <Docs>
        <param name="client">
            Reference to the service client.
            </param>
        <summary>
            Initializes a new instance of the TextModeration class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient Client { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient Client" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration.Client" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Client As ContentModeratorClient" />
      <MemberSignature Language="F#" Value="member this.Client : Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient" Usage="Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLanguageWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.DetectedLanguage&gt;&gt; DetectLanguageWithHttpMessagesAsync (string textContentType, System.IO.Stream textContent, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.DetectedLanguage&gt;&gt; DetectLanguageWithHttpMessagesAsync(string textContentType, class System.IO.Stream textContent, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration.DetectLanguageWithHttpMessagesAsync(System.String,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetectLanguageWithHttpMessagesAsync (textContentType As String, textContent As Stream, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of DetectedLanguage))" />
      <MemberSignature Language="F#" Value="abstract member DetectLanguageWithHttpMessagesAsync : string * System.IO.Stream * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.DetectedLanguage&gt;&gt;&#xA;override this.DetectLanguageWithHttpMessagesAsync : string * System.IO.Stream * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.DetectedLanguage&gt;&gt;" Usage="textModeration.DetectLanguageWithHttpMessagesAsync (textContentType, textContent, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.ITextModeration.DetectLanguageWithHttpMessagesAsync(System.String,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.DetectedLanguage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContentType" Type="System.String" />
        <Parameter Name="textContent" Type="System.IO.Stream" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="textContentType">
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
        <param name="textContent">
            Content to screen.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            This operation will detect the language of given input content. Returns the
            &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3
            code&lt;/a&gt; for the predominant language comprising the submitted text.
            Over 110 languages supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="ScreenTextWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Screen&gt;&gt; ScreenTextWithHttpMessagesAsync (string textContentType, System.IO.Stream textContent, string language = default, bool? autocorrect = false, bool? pII = false, string listId = default, bool? classify = false, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.Screen&gt;&gt; ScreenTextWithHttpMessagesAsync(string textContentType, class System.IO.Stream textContent, string language, valuetype System.Nullable`1&lt;bool&gt; autocorrect, valuetype System.Nullable`1&lt;bool&gt; pII, string listId, valuetype System.Nullable`1&lt;bool&gt; classify, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.TextModeration.ScreenTextWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScreenTextWithHttpMessagesAsync (textContentType As String, textContent As Stream, Optional language As String = Nothing, Optional autocorrect As Nullable(Of Boolean) = false, Optional pII As Nullable(Of Boolean) = false, Optional listId As String = Nothing, Optional classify As Nullable(Of Boolean) = false, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of Screen))" />
      <MemberSignature Language="F#" Value="abstract member ScreenTextWithHttpMessagesAsync : string * System.IO.Stream * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Screen&gt;&gt;&#xA;override this.ScreenTextWithHttpMessagesAsync : string * System.IO.Stream * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Screen&gt;&gt;" Usage="textModeration.ScreenTextWithHttpMessagesAsync (textContentType, textContent, language, autocorrect, pII, listId, classify, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.ITextModeration.ScreenTextWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Screen&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContentType" Type="System.String" />
        <Parameter Name="textContent" Type="System.IO.Stream" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="autocorrect" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="pII" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="listId" Type="System.String" />
        <Parameter Name="classify" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="textContentType">
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
        <param name="textContent">
            Content to screen.
            </param>
        <param name="language">
            Language of the text.
            </param>
        <param name="autocorrect">
            Autocorrect text.
            </param>
        <param name="pII">
            Detect personal identifiable information.
            </param>
        <param name="listId">
            The list Id.
            </param>
        <param name="classify">
            Classify input.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Detect profanity and match against custom and shared blacklists
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Detects profanity in more than 100 languages and match against custom and
            shared blacklists.
            </remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
  </Members>
</Type>
