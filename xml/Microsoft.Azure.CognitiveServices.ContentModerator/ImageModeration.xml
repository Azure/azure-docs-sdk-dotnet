<Type Name="ImageModeration" FullName="Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration">
  <TypeSignature Language="C#" Value="public class ImageModeration : Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration, Microsoft.Rest.IServiceOperations&lt;Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageModeration extends System.Object implements class Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration, class Microsoft.Rest.IServiceOperations`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageModeration&#xA;Implements IImageModeration, IServiceOperations(Of ContentModeratorClient)" />
  <TypeSignature Language="F#" Value="type ImageModeration = class&#xA;    interface IServiceOperations&lt;ContentModeratorClient&gt;&#xA;    interface IImageModeration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Rest.IServiceOperations&lt;Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            ImageModeration operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageModeration (Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.#ctor(Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As ContentModeratorClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration : Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient -&gt; Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration" Usage="new Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration client" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient" />
      </Parameters>
      <Docs>
        <param name="client">
            Reference to the service client.
            </param>
        <summary>
            Initializes a new instance of the ImageModeration class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient Client { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient Client" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.Client" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Client As ContentModeratorClient" />
      <MemberSignature Language="F#" Value="member this.Client : Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient" Usage="Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.CognitiveServices.ContentModerator.ContentModeratorClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateFileInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt; EvaluateFileInputWithHttpMessagesAsync (System.IO.Stream imageStream, Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt; EvaluateFileInputWithHttpMessagesAsync(class System.IO.Stream imageStream, valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.EvaluateFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateFileInputWithHttpMessagesAsync : System.IO.Stream * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;&#xA;override this.EvaluateFileInputWithHttpMessagesAsync : System.IO.Stream * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;" Usage="imageModeration.EvaluateFileInputWithHttpMessagesAsync (imageStream, cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.EvaluateFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="imageStream">
            The image file.
            </param>
        <param name="cacheImage">
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="EvaluateMethodWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt; EvaluateMethodWithHttpMessagesAsync (Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt; EvaluateMethodWithHttpMessagesAsync(valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.EvaluateMethodWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateMethodWithHttpMessagesAsync : Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;&#xA;override this.EvaluateMethodWithHttpMessagesAsync : Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;" Usage="imageModeration.EvaluateMethodWithHttpMessagesAsync (cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.EvaluateMethodWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheImage">
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="EvaluateUrlInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt; EvaluateUrlInputWithHttpMessagesAsync (string contentType, Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt; EvaluateUrlInputWithHttpMessagesAsync(string contentType, class Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.EvaluateUrlInputWithHttpMessagesAsync(System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateUrlInputWithHttpMessagesAsync : string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;&#xA;override this.EvaluateUrlInputWithHttpMessagesAsync : string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;" Usage="imageModeration.EvaluateUrlInputWithHttpMessagesAsync (contentType, imageUrl, cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.EvaluateUrlInputWithHttpMessagesAsync(System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.Evaluate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="imageUrl" Type="Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="contentType">
            The content type.
            </param>
        <param name="imageUrl">
            The image url.
            </param>
        <param name="cacheImage">
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="FindFacesFileInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt; FindFacesFileInputWithHttpMessagesAsync (System.IO.Stream imageStream, Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt; FindFacesFileInputWithHttpMessagesAsync(class System.IO.Stream imageStream, valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.FindFacesFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member FindFacesFileInputWithHttpMessagesAsync : System.IO.Stream * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;&#xA;override this.FindFacesFileInputWithHttpMessagesAsync : System.IO.Stream * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;" Usage="imageModeration.FindFacesFileInputWithHttpMessagesAsync (imageStream, cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.FindFacesFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="imageStream">
            The image file.
            </param>
        <param name="cacheImage">
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns the list of faces found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="FindFacesUrlInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt; FindFacesUrlInputWithHttpMessagesAsync (string contentType, Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt; FindFacesUrlInputWithHttpMessagesAsync(string contentType, class Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.FindFacesUrlInputWithHttpMessagesAsync(System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member FindFacesUrlInputWithHttpMessagesAsync : string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;&#xA;override this.FindFacesUrlInputWithHttpMessagesAsync : string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;" Usage="imageModeration.FindFacesUrlInputWithHttpMessagesAsync (contentType, imageUrl, cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.FindFacesUrlInputWithHttpMessagesAsync(System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="imageUrl" Type="Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="contentType">
            The content type.
            </param>
        <param name="imageUrl">
            The image url.
            </param>
        <param name="cacheImage">
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns the list of faces found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="FindFacesWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt; FindFacesWithHttpMessagesAsync (Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt; FindFacesWithHttpMessagesAsync(valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.FindFacesWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member FindFacesWithHttpMessagesAsync : Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;&#xA;override this.FindFacesWithHttpMessagesAsync : Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;" Usage="imageModeration.FindFacesWithHttpMessagesAsync (cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.FindFacesWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.FoundFaces&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheImage">
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns the list of faces found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="MatchFileInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt; MatchFileInputWithHttpMessagesAsync (System.IO.Stream imageStream, string listId = null, Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt; MatchFileInputWithHttpMessagesAsync(class System.IO.Stream imageStream, string listId, valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.MatchFileInputWithHttpMessagesAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member MatchFileInputWithHttpMessagesAsync : System.IO.Stream * string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;&#xA;override this.MatchFileInputWithHttpMessagesAsync : System.IO.Stream * string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;" Usage="imageModeration.MatchFileInputWithHttpMessagesAsync (imageStream, listId, cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.MatchFileInputWithHttpMessagesAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="listId" Type="System.String" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="imageStream">
             The image file.
             </param>
        <param name="listId">
             The list Id.
             </param>
        <param name="cacheImage">
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        <param name="customHeaders">
             Headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
        <return>
             A response object containing the response body and response headers.
             </return>
      </Docs>
    </Member>
    <Member MemberName="MatchMethodWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt; MatchMethodWithHttpMessagesAsync (string listId = null, Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt; MatchMethodWithHttpMessagesAsync(string listId, valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.MatchMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member MatchMethodWithHttpMessagesAsync : string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;&#xA;override this.MatchMethodWithHttpMessagesAsync : string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;" Usage="imageModeration.MatchMethodWithHttpMessagesAsync (listId, cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.MatchMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listId" Type="System.String" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="listId">
             The list Id.
             </param>
        <param name="cacheImage">
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        <param name="customHeaders">
             Headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
        <return>
             A response object containing the response body and response headers.
             </return>
      </Docs>
    </Member>
    <Member MemberName="MatchUrlInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt; MatchUrlInputWithHttpMessagesAsync (string contentType, Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, string listId = null, Nullable&lt;bool&gt; cacheImage = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt; MatchUrlInputWithHttpMessagesAsync(string contentType, class Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, string listId, valuetype System.Nullable`1&lt;bool&gt; cacheImage, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.MatchUrlInputWithHttpMessagesAsync(System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member MatchUrlInputWithHttpMessagesAsync : string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;&#xA;override this.MatchUrlInputWithHttpMessagesAsync : string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;" Usage="imageModeration.MatchUrlInputWithHttpMessagesAsync (contentType, imageUrl, listId, cacheImage, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.MatchUrlInputWithHttpMessagesAsync(System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.MatchResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="imageUrl" Type="Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel" />
        <Parameter Name="listId" Type="System.String" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="contentType">
             The content type.
             </param>
        <param name="imageUrl">
             The image url.
             </param>
        <param name="listId">
             The list Id.
             </param>
        <param name="cacheImage">
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        <param name="customHeaders">
             Headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
        <return>
             A response object containing the response body and response headers.
             </return>
      </Docs>
    </Member>
    <Member MemberName="OCRFileInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt; OCRFileInputWithHttpMessagesAsync (string language, System.IO.Stream imageStream, Nullable&lt;bool&gt; cacheImage = null, Nullable&lt;bool&gt; enhanced = false, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt; OCRFileInputWithHttpMessagesAsync(string language, class System.IO.Stream imageStream, valuetype System.Nullable`1&lt;bool&gt; cacheImage, valuetype System.Nullable`1&lt;bool&gt; enhanced, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.OCRFileInputWithHttpMessagesAsync(System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member OCRFileInputWithHttpMessagesAsync : string * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;&#xA;override this.OCRFileInputWithHttpMessagesAsync : string * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;" Usage="imageModeration.OCRFileInputWithHttpMessagesAsync (language, imageStream, cacheImage, enhanced, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.OCRFileInputWithHttpMessagesAsync(System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enhanced" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="language">
             Language of the terms.
             </param>
        <param name="imageStream">
             The image file.
             </param>
        <param name="cacheImage">
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        <param name="enhanced">
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
        <param name="customHeaders">
             Headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
        <return>
             A response object containing the response body and response headers.
             </return>
      </Docs>
    </Member>
    <Member MemberName="OCRMethodWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt; OCRMethodWithHttpMessagesAsync (string language, Nullable&lt;bool&gt; cacheImage = null, Nullable&lt;bool&gt; enhanced = false, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt; OCRMethodWithHttpMessagesAsync(string language, valuetype System.Nullable`1&lt;bool&gt; cacheImage, valuetype System.Nullable`1&lt;bool&gt; enhanced, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.OCRMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member OCRMethodWithHttpMessagesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;&#xA;override this.OCRMethodWithHttpMessagesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;" Usage="imageModeration.OCRMethodWithHttpMessagesAsync (language, cacheImage, enhanced, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.OCRMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enhanced" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="language">
             Language of the terms.
             </param>
        <param name="cacheImage">
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        <param name="enhanced">
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
        <param name="customHeaders">
             Headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
        <return>
             A response object containing the response body and response headers.
             </return>
      </Docs>
    </Member>
    <Member MemberName="OCRUrlInputWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt; OCRUrlInputWithHttpMessagesAsync (string language, string contentType, Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, Nullable&lt;bool&gt; cacheImage = null, Nullable&lt;bool&gt; enhanced = false, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt; OCRUrlInputWithHttpMessagesAsync(string language, string contentType, class Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel imageUrl, valuetype System.Nullable`1&lt;bool&gt; cacheImage, valuetype System.Nullable`1&lt;bool&gt; enhanced, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.ContentModerator.ImageModeration.OCRUrlInputWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member OCRUrlInputWithHttpMessagesAsync : string * string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;&#xA;override this.OCRUrlInputWithHttpMessagesAsync : string * string * Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;" Usage="imageModeration.OCRUrlInputWithHttpMessagesAsync (language, contentType, imageUrl, cacheImage, enhanced, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.CognitiveServices.ContentModerator.IImageModeration.OCRUrlInputWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.ContentModerator</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.ContentModerator.Models.OCR&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="imageUrl" Type="Microsoft.Azure.CognitiveServices.ContentModerator.Models.BodyModel" />
        <Parameter Name="cacheImage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enhanced" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="language">
             Language of the terms.
             </param>
        <param name="contentType">
             The content type.
             </param>
        <param name="imageUrl">
             The image url.
             </param>
        <param name="cacheImage">
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        <param name="enhanced">
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
        <param name="customHeaders">
             Headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
        <return>
             A response object containing the response body and response headers.
             </return>
      </Docs>
    </Member>
  </Members>
</Type>