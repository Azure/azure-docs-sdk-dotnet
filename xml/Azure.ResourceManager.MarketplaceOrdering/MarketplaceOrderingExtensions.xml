<Type Name="MarketplaceOrderingExtensions" FullName="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions">
  <TypeSignature Language="C#" Value="public static class MarketplaceOrderingExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MarketplaceOrderingExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MarketplaceOrderingExtensions" />
  <TypeSignature Language="F#" Value="type MarketplaceOrderingExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.MarketplaceOrdering. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMarketplaceAgreement">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt; GetMarketplaceAgreement (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt; GetMarketplaceAgreement(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreement(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreement (subscriptionResource As SubscriptionResource, publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MarketplaceAgreementResource)" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreement : Azure.ResourceManager.Resources.SubscriptionResource * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreement (subscriptionResource, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace agreement.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements/{publisherId}/offers/{offerId}/plans/{planId}</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_GetAgreement</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreement(System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt; GetMarketplaceAgreementAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt; GetMarketplaceAgreementAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreementAsync (subscriptionResource As SubscriptionResource, publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MarketplaceAgreementResource))" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreementAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt;" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementAsync (subscriptionResource, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace agreement.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/agreements/{publisherId}/offers/{offerId}/plans/{planId}</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_GetAgreement</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource GetMarketplaceAgreementResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource GetMarketplaceAgreementResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreementResource (client As ArmClient, id As ResourceIdentifier) As MarketplaceAgreementResource" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreementResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingArmClient.GetMarketplaceAgreementResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreements">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection GetMarketplaceAgreements (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection GetMarketplaceAgreements(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreements(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreements (subscriptionResource As SubscriptionResource) As MarketplaceAgreementCollection" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreements : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreements subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of MarketplaceAgreementResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreements" /> instead.</description></item></summary>
        <returns> An object representing collection of MarketplaceAgreementResources and their operations over a MarketplaceAgreementResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementTerm">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt; GetMarketplaceAgreementTerm (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt; GetMarketplaceAgreementTerm(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTerm(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreementTerm (subscriptionResource As SubscriptionResource, offerType As AgreementOfferType, publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MarketplaceAgreementTermResource)" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreementTerm : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTerm (subscriptionResource, offerType, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="offerType" Type="Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="offerType"> Offer Type, currently only virtualmachine type is supported. </param>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace terms.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/offerTypes/{offerType}/publishers/{publisherId}/offers/{offerId}/plans/{planId}/agreements/current</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_Get</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTerm(Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementTermAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt; GetMarketplaceAgreementTermAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt; GetMarketplaceAgreementTermAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType offerType, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTermAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreementTermAsync (subscriptionResource As SubscriptionResource, offerType As AgreementOfferType, publisherId As String, offerId As String, planId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MarketplaceAgreementTermResource))" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreementTermAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt;" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTermAsync (subscriptionResource, offerType, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="offerType" Type="Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="offerType"> Offer Type, currently only virtualmachine type is supported. </param>
        <param name="publisherId"> Publisher identifier string of image being deployed. </param>
        <param name="offerId"> Offer identifier string of image being deployed. </param>
        <param name="planId"> Plan identifier string of image being deployed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get marketplace terms.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MarketplaceOrdering/offerTypes/{offerType}/publishers/{publisherId}/offers/{offerId}/plans/{planId}/agreements/current</description></item><item><term>Operation Id</term><description>MarketplaceAgreements_Get</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTermAsync(Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="publisherId" />, <paramref name="offerId" /> or <paramref name="planId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementTermResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource GetMarketplaceAgreementTermResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource GetMarketplaceAgreementTermResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTermResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreementTermResource (client As ArmClient, id As ResourceIdentifier) As MarketplaceAgreementTermResource" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreementTermResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTermResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource.CreateResourceIdentifier(System.String,Azure.ResourceManager.MarketplaceOrdering.Models.AgreementOfferType,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingArmClient.GetMarketplaceAgreementTermResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMarketplaceAgreementTerms">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection GetMarketplaceAgreementTerms (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection GetMarketplaceAgreementTerms(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTerms(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMarketplaceAgreementTerms (subscriptionResource As SubscriptionResource) As MarketplaceAgreementTermCollection" />
      <MemberSignature Language="F#" Value="static member GetMarketplaceAgreementTerms : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection" Usage="Azure.ResourceManager.MarketplaceOrdering.MarketplaceOrderingExtensions.GetMarketplaceAgreementTerms subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MarketplaceOrdering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MarketplaceOrdering.MarketplaceAgreementTermCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of MarketplaceAgreementTermResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MarketplaceOrdering.Mocking.MockableMarketplaceOrderingSubscriptionResource.GetMarketplaceAgreementTerms" /> instead.</description></item></summary>
        <returns> An object representing collection of MarketplaceAgreementTermResources and their operations over a MarketplaceAgreementTermResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
