<Type Name="ContainerRepository" FullName="Azure.Containers.ContainerRegistry.ContainerRepository">
  <TypeSignature Language="C#" Value="public class ContainerRepository" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerRepository extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Containers.ContainerRegistry.ContainerRepository" />
  <TypeSignature Language="VB.NET" Value="Public Class ContainerRepository" />
  <TypeSignature Language="F#" Value="type ContainerRepository = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A `repository` in a container registry is a logical grouping of images or artifacts that share the same name.  For example,
            different versions of a `hello-world` application could have tags `v1` and `v2`, and be grouped by the repository `hello-world`.
            <para>
            The <see cref="T:Azure.Containers.ContainerRegistry.ContainerRepository" /> class is a helper class that groups information and operations about a repository in this
            container registry.
            </para></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContainerRepository ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ContainerRepository for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="containerRepository.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the repository and all artifacts that are part of its logical group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="containerRepository.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the repository and all artifacts that are part of its logical group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllManifestProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; GetAllManifestProperties (Azure.Containers.ContainerRegistry.ArtifactManifestOrder manifestOrder = Azure.Containers.ContainerRegistry.ArtifactManifestOrder.None, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; GetAllManifestProperties(valuetype Azure.Containers.ContainerRegistry.ArtifactManifestOrder manifestOrder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.GetAllManifestProperties(Azure.Containers.ContainerRegistry.ArtifactManifestOrder,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllManifestProperties (Optional manifestOrder As ArtifactManifestOrder = Azure.Containers.ContainerRegistry.ArtifactManifestOrder.None, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ArtifactManifestProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetAllManifestProperties : Azure.Containers.ContainerRegistry.ArtifactManifestOrder * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&#xA;override this.GetAllManifestProperties : Azure.Containers.ContainerRegistry.ArtifactManifestOrder * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;" Usage="containerRepository.GetAllManifestProperties (manifestOrder, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestOrder" Type="Azure.Containers.ContainerRegistry.ArtifactManifestOrder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="manifestOrder"> Requested order of manifests in the collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List the manifests associated with this repository and the properties of each.
            This is useful for determining the collection of artifacts associated with this repository, as each artifact is uniquely identified by its manifest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllManifestPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; GetAllManifestPropertiesAsync (Azure.Containers.ContainerRegistry.ArtifactManifestOrder manifestOrder = Azure.Containers.ContainerRegistry.ArtifactManifestOrder.None, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; GetAllManifestPropertiesAsync(valuetype Azure.Containers.ContainerRegistry.ArtifactManifestOrder manifestOrder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.GetAllManifestPropertiesAsync(Azure.Containers.ContainerRegistry.ArtifactManifestOrder,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllManifestPropertiesAsync (Optional manifestOrder As ArtifactManifestOrder = Azure.Containers.ContainerRegistry.ArtifactManifestOrder.None, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ArtifactManifestProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetAllManifestPropertiesAsync : Azure.Containers.ContainerRegistry.ArtifactManifestOrder * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&#xA;override this.GetAllManifestPropertiesAsync : Azure.Containers.ContainerRegistry.ArtifactManifestOrder * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;" Usage="containerRepository.GetAllManifestPropertiesAsync (manifestOrder, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestOrder" Type="Azure.Containers.ContainerRegistry.ArtifactManifestOrder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="manifestOrder"> Requested order of manifests in the collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List the manifests associated with this repository and the properties of each.
            This is useful for determining the collection of artifacts associated with this repository, as each artifact is uniquely identified by its manifest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetArtifact">
      <MemberSignature Language="C#" Value="public virtual Azure.Containers.ContainerRegistry.RegistryArtifact GetArtifact (string tagOrDigest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Containers.ContainerRegistry.RegistryArtifact GetArtifact(string tagOrDigest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.GetArtifact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArtifact (tagOrDigest As String) As RegistryArtifact" />
      <MemberSignature Language="F#" Value="abstract member GetArtifact : string -&gt; Azure.Containers.ContainerRegistry.RegistryArtifact&#xA;override this.GetArtifact : string -&gt; Azure.Containers.ContainerRegistry.RegistryArtifact" Usage="containerRepository.GetArtifact tagOrDigest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Containers.ContainerRegistry.RegistryArtifact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagOrDigest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagOrDigest"> Either a tag or a digest that uniquely identifies the artifact. </param>
        <summary>
            Create a new <see cref="T:Azure.Containers.ContainerRegistry.RegistryArtifact" /> helper object for the artifact identified by <paramref name="tagOrDigest" />.
            </summary>
        <returns> A new <see cref="T:Azure.Containers.ContainerRegistry.RegistryArtifact" /> for the desired repository. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="tagOrDigest" /> is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when <paramref name="tagOrDigest" /> is empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt; GetProperties (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt; GetProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.GetProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContainerRepositoryProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&#xA;override this.GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;" Usage="containerRepository.GetProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the properties of the repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt; GetPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt; GetPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContainerRepositoryProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt;" Usage="containerRepository.GetPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the properties of the repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.ContainerRepository.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Containers.ContainerRegistry.ContainerRepository.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the repository.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegistryEndpoint">
      <MemberSignature Language="C#" Value="public virtual Uri RegistryEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RegistryEndpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.ContainerRepository.RegistryEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RegistryEndpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.RegistryEndpoint : Uri" Usage="Azure.Containers.ContainerRegistry.ContainerRepository.RegistryEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Registry Uri.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt; UpdateProperties (Azure.Containers.ContainerRegistry.ContainerRepositoryProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt; UpdateProperties(class Azure.Containers.ContainerRegistry.ContainerRepositoryProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.UpdateProperties(Azure.Containers.ContainerRegistry.ContainerRepositoryProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateProperties (value As ContainerRepositoryProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContainerRepositoryProperties)" />
      <MemberSignature Language="F#" Value="abstract member UpdateProperties : Azure.Containers.ContainerRegistry.ContainerRepositoryProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&#xA;override this.UpdateProperties : Azure.Containers.ContainerRegistry.ContainerRepositoryProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;" Usage="containerRepository.UpdateProperties (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContainerRepositoryProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="value"> Repository properties object containing values to update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update the properties of the repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="value" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdatePropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt; UpdatePropertiesAsync (Azure.Containers.ContainerRegistry.ContainerRepositoryProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt; UpdatePropertiesAsync(class Azure.Containers.ContainerRegistry.ContainerRepositoryProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepository.UpdatePropertiesAsync(Azure.Containers.ContainerRegistry.ContainerRepositoryProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdatePropertiesAsync (value As ContainerRepositoryProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContainerRepositoryProperties))" />
      <MemberSignature Language="F#" Value="abstract member UpdatePropertiesAsync : Azure.Containers.ContainerRegistry.ContainerRepositoryProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt;&#xA;override this.UpdatePropertiesAsync : Azure.Containers.ContainerRegistry.ContainerRepositoryProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt;" Usage="containerRepository.UpdatePropertiesAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ContainerRepositoryProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContainerRepositoryProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="value"> Repository properties object containing values to update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update the properties of the repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="value" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
