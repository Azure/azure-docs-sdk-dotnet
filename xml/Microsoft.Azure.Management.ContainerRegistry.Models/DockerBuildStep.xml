<Type Name="DockerBuildStep" FullName="Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep">
  <TypeSignature Language="C#" Value="public class DockerBuildStep : Microsoft.Azure.Management.ContainerRegistry.Models.TaskStepProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DockerBuildStep extends Microsoft.Azure.Management.ContainerRegistry.Models.TaskStepProperties" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep" />
  <TypeSignature Language="VB.NET" Value="Public Class DockerBuildStep&#xA;Inherits TaskStepProperties" />
  <TypeSignature Language="F#" Value="type DockerBuildStep = class&#xA;    inherit TaskStepProperties" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ContainerRegistry.Models.TaskStepProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonObject("Docker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonObject("Docker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The Docker build step.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DockerBuildStep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the DockerBuildStep class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DockerBuildStep (string dockerFilePath, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.BaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default, System.Collections.Generic.IList&lt;string&gt; imageNames = default, bool? isPushEnabled = default, bool? noCache = default, string target = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt; arguments = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dockerFilePath, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Models.BaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken, class System.Collections.Generic.IList`1&lt;string&gt; imageNames, valuetype System.Nullable`1&lt;bool&gt; isPushEnabled, valuetype System.Nullable`1&lt;bool&gt; noCache, string target, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ContainerRegistry.Models.BaseImageDependency},System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ContainerRegistry.Models.Argument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dockerFilePath As String, Optional baseImageDependencies As IList(Of BaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing, Optional imageNames As IList(Of String) = Nothing, Optional isPushEnabled As Nullable(Of Boolean) = Nothing, Optional noCache As Nullable(Of Boolean) = Nothing, Optional target As String = Nothing, Optional arguments As IList(Of Argument) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep : string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.BaseImageDependency&gt; * string * string * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt; -&gt; Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep" Usage="new Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep (dockerFilePath, baseImageDependencies, contextPath, contextAccessToken, imageNames, isPushEnabled, noCache, target, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dockerFilePath" Type="System.String" />
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.BaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
        <Parameter Name="imageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="isPushEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="noCache" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt;" />
      </Parameters>
      <Docs>
        <param name="dockerFilePath">The Docker file path relative to the
            source context.</param>
        <param name="baseImageDependencies">List of base image dependencies
            for a step.</param>
        <param name="contextPath">The URL(absolute or relative) of the
            source context for the task step.</param>
        <param name="contextAccessToken">The token (git PAT or SAS token of
            storage account blob) associated with the context for a
            step.</param>
        <param name="imageNames">The fully qualified image names including
            the repository and tag.</param>
        <param name="isPushEnabled">The value of this property indicates
            whether the image built should be pushed to the registry or
            not.</param>
        <param name="noCache">The value of this property indicates whether
            the image cache is enabled or not.</param>
        <param name="target">The name of the target build stage for the
            docker build.</param>
        <param name="arguments">The collection of override arguments to be
            used when executing this build step.</param>
        <summary>
            Initializes a new instance of the DockerBuildStep class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt; Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As IList(Of Argument)" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="arguments")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="arguments")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ContainerRegistry.Models.Argument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the collection of override arguments to be used when
            executing this build step.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockerFilePath">
      <MemberSignature Language="C#" Value="public string DockerFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DockerFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.DockerFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DockerFilePath As String" />
      <MemberSignature Language="F#" Value="member this.DockerFilePath : string with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.DockerFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="dockerFilePath")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="dockerFilePath")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Docker file path relative to the source context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ImageNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ImageNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.ImageNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageNames As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ImageNames : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.ImageNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="imageNames")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="imageNames")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the fully qualified image names including the
            repository and tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPushEnabled">
      <MemberSignature Language="C#" Value="public bool? IsPushEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsPushEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.IsPushEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPushEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsPushEnabled : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.IsPushEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="isPushEnabled")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="isPushEnabled")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of this property indicates whether the image
            built should be pushed to the registry or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoCache">
      <MemberSignature Language="C#" Value="public bool? NoCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; NoCache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.NoCache" />
      <MemberSignature Language="VB.NET" Value="Public Property NoCache As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.NoCache : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.NoCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="noCache")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="noCache")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of this property indicates whether the image
            cache is enabled or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="target")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="target")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the target build stage for the docker
            build.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerRegistry.Models.DockerBuildStep.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="dockerBuildStep.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerRegistry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
