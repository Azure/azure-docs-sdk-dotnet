<Type Name="Schedule" FullName="Microsoft.Azure.Management.AlertsManagement.Models.Schedule">
  <TypeSignature Language="C#" Value="public class Schedule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Schedule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.AlertsManagement.Models.Schedule" />
  <TypeSignature Language="VB.NET" Value="Public Class Schedule" />
  <TypeSignature Language="F#" Value="type Schedule = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Scheduling configuration for a given alert processing rule.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Schedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.AlertsManagement.Models.Schedule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Schedule class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Schedule (string effectiveFrom = default, string effectiveUntil = default, string timeZone = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt; recurrences = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string effectiveFrom, string effectiveUntil, string timeZone, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt; recurrences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.AlertsManagement.Models.Schedule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.AlertsManagement.Models.Recurrence})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional effectiveFrom As String = Nothing, Optional effectiveUntil As String = Nothing, Optional timeZone As String = Nothing, Optional recurrences As IList(Of Recurrence) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.AlertsManagement.Models.Schedule : string * string * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt; -&gt; Microsoft.Azure.Management.AlertsManagement.Models.Schedule" Usage="new Microsoft.Azure.Management.AlertsManagement.Models.Schedule (effectiveFrom, effectiveUntil, timeZone, recurrences)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="effectiveFrom" Type="System.String" />
        <Parameter Name="effectiveUntil" Type="System.String" />
        <Parameter Name="timeZone" Type="System.String" />
        <Parameter Name="recurrences" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt;" />
      </Parameters>
      <Docs>
        <param name="effectiveFrom">Scheduling effective from time.
            Date-Time in ISO-8601 format without timezone suffix.</param>
        <param name="effectiveUntil">Scheduling effective until time.
            Date-Time in ISO-8601 format without timezone suffix.</param>
        <param name="timeZone">Scheduling time zone.</param>
        <param name="recurrences">List of recurrences.</param>
        <summary>
            Initializes a new instance of the Schedule class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectiveFrom">
      <MemberSignature Language="C#" Value="public string EffectiveFrom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EffectiveFrom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.AlertsManagement.Models.Schedule.EffectiveFrom" />
      <MemberSignature Language="VB.NET" Value="Public Property EffectiveFrom As String" />
      <MemberSignature Language="F#" Value="member this.EffectiveFrom : string with get, set" Usage="Microsoft.Azure.Management.AlertsManagement.Models.Schedule.EffectiveFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="effectiveFrom")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="effectiveFrom")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets scheduling effective from time. Date-Time in ISO-8601
            format without timezone suffix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectiveUntil">
      <MemberSignature Language="C#" Value="public string EffectiveUntil { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EffectiveUntil" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.AlertsManagement.Models.Schedule.EffectiveUntil" />
      <MemberSignature Language="VB.NET" Value="Public Property EffectiveUntil As String" />
      <MemberSignature Language="F#" Value="member this.EffectiveUntil : string with get, set" Usage="Microsoft.Azure.Management.AlertsManagement.Models.Schedule.EffectiveUntil" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="effectiveUntil")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="effectiveUntil")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets scheduling effective until time. Date-Time in ISO-8601
            format without timezone suffix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recurrences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt; Recurrences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt; Recurrences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.AlertsManagement.Models.Schedule.Recurrences" />
      <MemberSignature Language="VB.NET" Value="Public Property Recurrences As IList(Of Recurrence)" />
      <MemberSignature Language="F#" Value="member this.Recurrences : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt; with get, set" Usage="Microsoft.Azure.Management.AlertsManagement.Models.Schedule.Recurrences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="recurrences")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="recurrences")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.AlertsManagement.Models.Recurrence&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of recurrences.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZone">
      <MemberSignature Language="C#" Value="public string TimeZone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeZone" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.AlertsManagement.Models.Schedule.TimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeZone As String" />
      <MemberSignature Language="F#" Value="member this.TimeZone : string with get, set" Usage="Microsoft.Azure.Management.AlertsManagement.Models.Schedule.TimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="timeZone")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="timeZone")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets scheduling time zone.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.AlertsManagement.Models.Schedule.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="schedule.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
