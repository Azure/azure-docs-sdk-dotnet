<Type Name="Base64UrlEncoder" FullName="Microsoft.IdentityModel.Tokens.Base64UrlEncoder">
  <TypeSignature Language="C#" Value="public static class Base64UrlEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64UrlEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.Base64UrlEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64UrlEncoder" />
  <TypeSignature Language="F#" Value="type Base64UrlEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>5.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Encodes and Decodes strings as Base64Url encoding.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static string Decode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Decode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (arg As String) As String" />
      <MemberSignature Language="F#" Value="static member Decode : string -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Decode arg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">string to decode.</param>
        <summary>
            Decodes the string from Base64UrlEncoded to UTF8.
            </summary>
        <returns>UTF8 string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBytes">
      <MemberSignature Language="C#" Value="public static byte[] DecodeBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecodeBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.DecodeBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeBytes (str As String) As Byte()" />
      <MemberSignature Language="F#" Value="static member DecodeBytes : string -&gt; byte[]" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.DecodeBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">base64Url encoded string.</param>
        <summary>
             Converts the specified string, which encodes binary data as base-64-url digits, to an equivalent 8-bit unsigned integer array.</summary>
        <returns>UTF8 bytes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (inArray As Byte()) As String" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode inArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray">An array of 8-bit unsigned integers.</param>
        <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64-url digits. Parameters specify
            the subset as an offset in the input array, and the number of elements in the array to convert.
            </summary>
        <returns>The string representation in base 64 url encodingof length elements of inArray, starting at position offset.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">'inArray' is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">offset or length is negative OR offset plus length is greater than the length of inArray.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (arg As String) As String" />
      <MemberSignature Language="F#" Value="static member Encode : string -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode arg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">string to encode.</param>
        <summary>
            The following functions perform base64url encoding which differs from regular base64 encoding as follows
            * padding is skipped so the pad character '=' doesn't have to be percent encoded
            * the 62nd and 63rd regular base64 encoding characters ('+' and '/') are replace with ('-' and '_')
            The changes make the encoding alphabet file and URL safe.
            </summary>
        <returns>Base64Url encoding of the UTF8 bytes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * int * int -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">An array of 8-bit unsigned integers.</param>
        <param name="offset">The number of elements of inArray to convert.</param>
        <param name="length">An offset in inArray.</param>
        <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64-url digits. Parameters specify
            the subset as an offset in the input array, and the number of elements in the array to convert.
            </summary>
        <returns>The string representation in base 64 url encodingof length elements of inArray, starting at position offset.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">'inArray' is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">offset or length is negative OR offset plus length is greater than the length of inArray.</exception>
      </Docs>
    </Member>
  </Members>
</Type>