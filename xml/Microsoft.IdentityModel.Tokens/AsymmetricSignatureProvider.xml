<Type Name="AsymmetricSignatureProvider" FullName="Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider">
  <TypeSignature Language="C#" Value="public class AsymmetricSignatureProvider : Microsoft.IdentityModel.Tokens.SignatureProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsymmetricSignatureProvider extends Microsoft.IdentityModel.Tokens.SignatureProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AsymmetricSignatureProvider&#xA;Inherits SignatureProvider" />
  <TypeSignature Language="F#" Value="type AsymmetricSignatureProvider = class&#xA;    inherit SignatureProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>5.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.IdentityModel.Tokens.SignatureProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides signature and verification operations for Asymmetric Algorithms using a <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsymmetricSignatureProvider (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SecurityKey, algorithm As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider : Microsoft.IdentityModel.Tokens.SecurityKey * string -&gt; Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider" Usage="new Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider (key, algorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> that will be used for signature operations.<see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /></param>
        <param name="algorithm">The signature algorithm to apply.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider" /> class used to create and verify signatures.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsymmetricSignatureProvider (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm, bool willCreateSignatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm, bool willCreateSignatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SecurityKey, algorithm As String, willCreateSignatures As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider : Microsoft.IdentityModel.Tokens.SecurityKey * string * bool -&gt; Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider" Usage="new Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider (key, algorithm, willCreateSignatures)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="willCreateSignatures" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> that will be used for signature operations.</param>
        <param name="algorithm">The signature algorithm to apply.</param>
        <param name="willCreateSignatures">If this <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider" /> is required to create signatures then set this to true.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider" /> class used to create and verify signatures.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="algorithm" />is null or empty.</exception>
        <exception cref="T:System.InvalidOperationException">If the runtime is unable to create a suitable cryptographic provider.</exception>
        <exception cref="T:System.NotSupportedException">If <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> and algorithm pair are not supported.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" />.KeySize is less than the size corresponding to the algorithm in <see cref="P:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.MinimumAsymmetricKeySizeInBitsForVerifyingMap" />. Note: this is always checked.
            </exception>
        <para>
            Creating signatures requires that the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> has access to a private key.
            Verifying signatures (the default), does not require access to the private key.
            </para>
      </Docs>
    </Member>
    <Member MemberName="DefaultMinimumAsymmetricKeySizeInBitsForSigningMap">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Generic.Dictionary&lt;string,int&gt; DefaultMinimumAsymmetricKeySizeInBitsForSigningMap;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Generic.Dictionary`2&lt;string, int32&gt; DefaultMinimumAsymmetricKeySizeInBitsForSigningMap" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.DefaultMinimumAsymmetricKeySizeInBitsForSigningMap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultMinimumAsymmetricKeySizeInBitsForSigningMap As Dictionary(Of String, Integer) " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultMinimumAsymmetricKeySizeInBitsForSigningMap : System.Collections.Generic.Dictionary&lt;string, int&gt;" Usage="Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.DefaultMinimumAsymmetricKeySizeInBitsForSigningMap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Mapping from algorithm to minimum <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey" />.KeySize when creating signatures.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMinimumAsymmetricKeySizeInBitsForVerifyingMap">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Generic.Dictionary&lt;string,int&gt; DefaultMinimumAsymmetricKeySizeInBitsForVerifyingMap;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Generic.Dictionary`2&lt;string, int32&gt; DefaultMinimumAsymmetricKeySizeInBitsForVerifyingMap" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.DefaultMinimumAsymmetricKeySizeInBitsForVerifyingMap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultMinimumAsymmetricKeySizeInBitsForVerifyingMap As Dictionary(Of String, Integer) " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultMinimumAsymmetricKeySizeInBitsForVerifyingMap : System.Collections.Generic.Dictionary&lt;string, int&gt;" Usage="Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.DefaultMinimumAsymmetricKeySizeInBitsForVerifyingMap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Mapping from algorithm to minimum <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey" />.KeySize when verifying signatures.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="asymmetricSignatureProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">true, if called from Dispose(), false, if invoked inside a finalizer.</param>
        <summary>
            Calls to release managed resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithmName">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.HashAlgorithmName GetHashAlgorithmName (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Security.Cryptography.HashAlgorithmName GetHashAlgorithmName(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.GetHashAlgorithmName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHashAlgorithmName (algorithm As String) As HashAlgorithmName" />
      <MemberSignature Language="F#" Value="abstract member GetHashAlgorithmName : string -&gt; System.Security.Cryptography.HashAlgorithmName&#xA;override this.GetHashAlgorithmName : string -&gt; System.Security.Cryptography.HashAlgorithmName" Usage="asymmetricSignatureProvider.GetHashAlgorithmName algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">The SignatureAlgorithm in use.</param>
        <summary>
            Creating a Signature requires the use of a <see cref="T:System.Security.Cryptography.HashAlgorithm" />.
            This method returns the <see cref="T:System.Security.Cryptography.HashAlgorithmName" />
            that describes the <see cref="T:System.Security.Cryptography.HashAlgorithm" />to use when generating a Signature.
            </summary>
        <returns>The <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> to use.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">if <paramref name="algorithm" /> is null or whitespace.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="algorithm" /> is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumAsymmetricKeySizeInBitsForSigningMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,int&gt; MinimumAsymmetricKeySizeInBitsForSigningMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, int32&gt; MinimumAsymmetricKeySizeInBitsForSigningMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.MinimumAsymmetricKeySizeInBitsForSigningMap" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumAsymmetricKeySizeInBitsForSigningMap As IReadOnlyDictionary(Of String, Integer)" />
      <MemberSignature Language="F#" Value="member this.MinimumAsymmetricKeySizeInBitsForSigningMap : System.Collections.Generic.IReadOnlyDictionary&lt;string, int&gt;" Usage="Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.MinimumAsymmetricKeySizeInBitsForSigningMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mapping from algorithm to the minimum <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey" />.KeySize for creating signatures.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumAsymmetricKeySizeInBitsForVerifyingMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,int&gt; MinimumAsymmetricKeySizeInBitsForVerifyingMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, int32&gt; MinimumAsymmetricKeySizeInBitsForVerifyingMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.MinimumAsymmetricKeySizeInBitsForVerifyingMap" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumAsymmetricKeySizeInBitsForVerifyingMap As IReadOnlyDictionary(Of String, Integer)" />
      <MemberSignature Language="F#" Value="member this.MinimumAsymmetricKeySizeInBitsForVerifyingMap : System.Collections.Generic.IReadOnlyDictionary&lt;string, int&gt;" Usage="Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.MinimumAsymmetricKeySizeInBitsForVerifyingMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mapping from algorithm to the minimum <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey" />.KeySize for verifying signatures.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public override byte[] Sign (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Sign(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.Sign(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Sign (input As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="override this.Sign : byte[] -&gt; byte[]" Usage="asymmetricSignatureProvider.Sign input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">The bytes to be signed.</param>
        <summary>
            Produces a signature over the 'input' using the <see cref="T:Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey" /> and algorithm passed to <see cref="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,System.Boolean)" />.
            </summary>
        <returns>A signature over the input.</returns>
        <remarks>Sign is thread safe.</remarks>
        <exception cref="T:System.ArgumentNullException">if <paramref name="input" />.Length == 0.</exception>
        <exception cref="T:System.ObjectDisposedException">If <see cref="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.Dispose(System.Boolean)" /> has been called. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateAsymmetricSecurityKeySize">
      <MemberSignature Language="C#" Value="public virtual void ValidateAsymmetricSecurityKeySize (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm, bool willCreateSignatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateAsymmetricSecurityKeySize(class Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm, bool willCreateSignatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.ValidateAsymmetricSecurityKeySize(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateAsymmetricSecurityKeySize (key As SecurityKey, algorithm As String, willCreateSignatures As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ValidateAsymmetricSecurityKeySize : Microsoft.IdentityModel.Tokens.SecurityKey * string * bool -&gt; unit&#xA;override this.ValidateAsymmetricSecurityKeySize : Microsoft.IdentityModel.Tokens.SecurityKey * string * bool -&gt; unit" Usage="asymmetricSignatureProvider.ValidateAsymmetricSecurityKeySize (key, algorithm, willCreateSignatures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="willCreateSignatures" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">The asymmetric key to validate.</param>
        <param name="algorithm">Algorithm for which this key will be used.</param>
        <param name="willCreateSignatures">Whether they key will be used for creating signatures.</param>
        <summary>
            Validates that an asymmetric key size is of sufficient size for a SignatureAlgorithm.
            </summary>
        <remarks>
          <seealso cref="P:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.MinimumAsymmetricKeySizeInBitsForSigningMap" /> for minimum signing sizes.
            <seealso cref="P:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.MinimumAsymmetricKeySizeInBitsForVerifyingMap" /> for minimum verifying sizes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">if <paramref name="algorithm" />is null or empty.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="key" />.KeySize is less than the minimum
            acceptable size.</exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public override bool Verify (byte[] input, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Verify(unsigned int8[] input, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.Verify(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Verify (input As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Verify : byte[] * byte[] -&gt; bool" Usage="asymmetricSignatureProvider.Verify (input, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">The bytes to generate the signature over.</param>
        <param name="signature">The value to verify against.</param>
        <summary>
            Verifies that the <paramref name="signature" /> over <paramref name="input" /> using the
            <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> and <see cref="P:Microsoft.IdentityModel.Tokens.SignatureProvider.Algorithm" /> specified by this
            <see cref="T:Microsoft.IdentityModel.Tokens.SignatureProvider" /> are consistent.
            </summary>
        <returns>true if signature matches, false otherwise.</returns>
        <remarks>Verify is thread safe.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signature" /> is null or has length == 0.</exception>
        <exception cref="T:System.ObjectDisposedException">If <see cref="M:Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.Dispose(System.Boolean)" /> has been called. </exception>
      </Docs>
    </Member>
  </Members>
</Type>