<Type Name="Utility" FullName="Microsoft.IdentityModel.Tokens.Utility">
  <TypeSignature Language="C#" Value="public static class Utility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.Utility" />
  <TypeSignature Language="VB.NET" Value="Public Module Utility" />
  <TypeSignature Language="F#" Value="type Utility = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>5.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains some utility methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreEqual">
      <MemberSignature Language="C#" Value="public static bool AreEqual (byte[] a, byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreEqual(unsigned int8[] a, unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Utility.AreEqual(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AreEqual (a As Byte(), b As Byte()) As Boolean" />
      <MemberSignature Language="F#" Value="static member AreEqual : byte[] * byte[] -&gt; bool" Usage="Microsoft.IdentityModel.Tokens.Utility.AreEqual (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">
            One set of bytes to compare.
            </param>
        <param name="b">
            The other set of bytes to compare with.
            </param>
        <summary>
            Compares two byte arrays for equality. Hash size is fixed normally it is 32 bytes.
            The attempt here is to take the same time if an attacker shortens the signature OR changes some of the signed contents.
            </summary>
        <returns>
            true if the bytes are equal, false otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneByteArray">
      <MemberSignature Language="C#" Value="public static byte[] CloneByteArray (this byte[] src);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] CloneByteArray(unsigned int8[] src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Utility.CloneByteArray(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CloneByteArray (src As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="static member CloneByteArray : byte[] -&gt; byte[]" Usage="Microsoft.IdentityModel.Tokens.Utility.CloneByteArray src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Byte[]" RefType="this" />
      </Parameters>
      <Docs>
        <param name="src">The resource array.</param>
        <summary>
            Creates a copy of the byte array.
            </summary>
        <returns>A copy of the byte array.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public const string Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Empty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.Utility.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Const Empty As String " />
      <MemberSignature Language="F#" Value="val mutable Empty : string" Usage="Microsoft.IdentityModel.Tokens.Utility.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A string with "empty" value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHttps">
      <MemberSignature Language="C#" Value="public static bool IsHttps (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHttps(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Utility.IsHttps(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsHttps (address As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsHttps : string -&gt; bool" Usage="Microsoft.IdentityModel.Tokens.Utility.IsHttps address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">The input string.</param>
        <summary>
            Returns whether the input string is https.
            </summary>
        <returns>To be added.</returns>
        <remarks>true if the input string is https; otherwise, false.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHttps">
      <MemberSignature Language="C#" Value="public static bool IsHttps (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHttps(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Utility.IsHttps(System.Uri)" />
      <MemberSignature Language="F#" Value="static member IsHttps : Uri -&gt; bool" Usage="Microsoft.IdentityModel.Tokens.Utility.IsHttps uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <see cref="T:System.Uri" />.</param>
        <summary>
            Returns whether the input uri is https.
            </summary>
        <returns>true if the input uri is https; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public const string Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.Utility.Null" />
      <MemberSignature Language="VB.NET" Value="Public Const Null As String " />
      <MemberSignature Language="F#" Value="val mutable Null : string" Usage="Microsoft.IdentityModel.Tokens.Utility.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>5.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A string with "null" value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>