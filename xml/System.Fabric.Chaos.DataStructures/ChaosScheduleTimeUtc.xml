<Type Name="ChaosScheduleTimeUtc" FullName="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc">
  <TypeSignature Language="C#" Value="public sealed class ChaosScheduleTimeUtc : System.Fabric.ByteSerializable, IComparable&lt;System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc&gt;, IEquatable&lt;System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ChaosScheduleTimeUtc extends System.Fabric.ByteSerializable implements class System.IComparable`1&lt;class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc&gt;, class System.IEquatable`1&lt;class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ChaosScheduleTimeUtc&#xA;Inherits ByteSerializable&#xA;Implements IComparable(Of ChaosScheduleTimeUtc), IEquatable(Of ChaosScheduleTimeUtc)" />
  <TypeSignature Language="F#" Value="type ChaosScheduleTimeUtc = class&#xA;    inherit ByteSerializable&#xA;    interface IComparable&lt;ChaosScheduleTimeUtc&gt;&#xA;    interface IEquatable&lt;ChaosScheduleTimeUtc&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Fabric.ByteSerializable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Represents a time of day in 24 hour time. Time is in UTC time.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChaosScheduleTimeUtc (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.#ctor(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As ChaosScheduleTimeUtc)" />
      <MemberSignature Language="F#" Value="new System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" Usage="new System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="other">Another ChaosScheduleTimeUtc to copy.</param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" /> class by copying another time.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChaosScheduleTimeUtc (int hour, int minute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 hour, int32 minute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hour As Integer, minute As Integer)" />
      <MemberSignature Language="F#" Value="new System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc : int * int -&gt; System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" Usage="new System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc (hour, minute)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hour">Hour of the day in 24 hour time format.</param>
        <param name="minute">Minute of the hour.</param>
        <summary>
          <para>Initializes a new instance of the <see cref="T:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" /> class.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.CompareTo(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ChaosScheduleTimeUtc) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; int&#xA;override this.CompareTo : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; int" Usage="chaosScheduleTimeUtc.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>
          <para>Determine how this time relates to another time. </para>
        </summary>
        <returns>Returns 1 if this time is later than the other time, 0 if they are the same time and -1 if this time comes before the other time.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfDay">
      <MemberSignature Language="C#" Value="public static readonly System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc EndOfDay;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc EndOfDay" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.EndOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EndOfDay As ChaosScheduleTimeUtc " />
      <MemberSignature Language="F#" Value=" staticval mutable EndOfDay : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" Usage="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.EndOfDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A <see cref="T:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" /> representing the end of the day in UTC time.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Equals(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ChaosScheduleTimeUtc) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; bool" Usage="chaosScheduleTimeUtc.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>
          <para>Compare if this time is equal to another time.</para>
        </summary>
        <returns>True if both times are equal. False otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="chaosScheduleTimeUtc.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
          <para>Compare if this time is equal to another object.</para>
        </summary>
        <returns>returns true if both are equal, false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="chaosScheduleTimeUtc.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Get a hashcode for this object.</para>
        </summary>
        <returns>A hash value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the integer representing the hour of the day in 24 hour format.</para>
        </summary>
        <value>
          <para>The integer representing the hour of the day in 24 hour format.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the integer representing the minute of the hour of the day.</para>
        </summary>
        <value>
          <para>Gets the integer representing the minute of the hour of the day.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_Equality(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (operand1 As ChaosScheduleTimeUtc, operand2 As ChaosScheduleTimeUtc) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc * System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; bool" Usage="operand1 = operand2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operand1" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
        <Parameter Name="operand2" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="operand1">Left side of operator.</param>
        <param name="operand2">Right side of operator.</param>
        <summary>
          <para>Compares if left side time is the same time as the right side.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_GreaterThan(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (operand1 As ChaosScheduleTimeUtc, operand2 As ChaosScheduleTimeUtc) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc * System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; bool" Usage="operand1 &gt; operand2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operand1" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
        <Parameter Name="operand2" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="operand1">Left side of operator.</param>
        <param name="operand2">Right side of operator.</param>
        <summary>
          <para>Compares if left side time is later in the day than the right side.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_GreaterThanOrEqual(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (operand1 As ChaosScheduleTimeUtc, operand2 As ChaosScheduleTimeUtc) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc * System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; bool" Usage="operand1 &gt;= operand2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operand1" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
        <Parameter Name="operand2" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="operand1">Left side of operator.</param>
        <param name="operand2">Right side of operator.</param>
        <summary>
          <para>Compares if left side time is later or at the same time in the day as the right side.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_Inequality(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (operand1 As ChaosScheduleTimeUtc, operand2 As ChaosScheduleTimeUtc) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc * System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; bool" Usage="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_Inequality (operand1, operand2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operand1" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
        <Parameter Name="operand2" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="operand1">Left side of operator.</param>
        <param name="operand2">Right side of operator.</param>
        <summary>
          <para>Compares if the left side time is not the same time as the right side.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_LessThan(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (operand1 As ChaosScheduleTimeUtc, operand2 As ChaosScheduleTimeUtc) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc * System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; bool" Usage="operand1 &lt; operand2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operand1" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
        <Parameter Name="operand2" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="operand1">Left side of operator.</param>
        <param name="operand2">Right side of operator.</param>
        <summary>
          <para>Compares if left side time is earlier in the day than the right side.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand1, class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc operand2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.op_LessThanOrEqual(System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc,System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (operand1 As ChaosScheduleTimeUtc, operand2 As ChaosScheduleTimeUtc) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc * System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc -&gt; bool" Usage="operand1 &lt;= operand2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operand1" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
        <Parameter Name="operand2" Type="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" />
      </Parameters>
      <Docs>
        <param name="operand1">Left side of operator.</param>
        <param name="operand2">Right side of operator.</param>
        <summary>
          <para>Compares if left side time is earlier in the day or at the same time as the right side.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override void Read (System.IO.BinaryReader br);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Read(class System.IO.BinaryReader br) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Read(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Read (br As BinaryReader)" />
      <MemberSignature Language="F#" Value="override this.Read : System.IO.BinaryReader -&gt; unit" Usage="chaosScheduleTimeUtc.Read br" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="br" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="br">A BinaryReader object</param>
        <summary>
            Reads the state of this object from byte array.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached. </exception>
        <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartOfDay">
      <MemberSignature Language="C#" Value="public static readonly System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc StartOfDay;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc StartOfDay" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.StartOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StartOfDay As ChaosScheduleTimeUtc " />
      <MemberSignature Language="F#" Value=" staticval mutable StartOfDay : System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" Usage="System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.StartOfDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A <see cref="T:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc" /> representing the start of the day in UTC time.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="chaosScheduleTimeUtc.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a string representation of this object.
            </summary>
        <returns>A string representation of the chaos schedule time object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.IO.BinaryWriter bw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.IO.BinaryWriter bw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Chaos.DataStructures.ChaosScheduleTimeUtc.Write(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (bw As BinaryWriter)" />
      <MemberSignature Language="F#" Value="override this.Write : System.IO.BinaryWriter -&gt; unit" Usage="chaosScheduleTimeUtc.Write bw" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Fabric</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bw" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="bw">A BinaryWriter object.</param>
        <summary>
            Writes the state of this object into a byte array.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
      </Docs>
    </Member>
  </Members>
</Type>