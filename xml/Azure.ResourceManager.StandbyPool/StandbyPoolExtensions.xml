<Type Name="StandbyPoolExtensions" FullName="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions">
  <TypeSignature Language="C#" Value="public static class StandbyPoolExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StandbyPoolExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module StandbyPoolExtensions" />
  <TypeSignature Language="F#" Value="type StandbyPoolExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.StandbyPool. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStandbyContainerGroupPool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPool (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyContainerGroupPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPool(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyContainerGroupPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPool(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyContainerGroupPool (resourceGroupResource As ResourceGroupResource, standbyContainerGroupPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StandbyContainerGroupPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetStandbyContainerGroupPool : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPool (resourceGroupResource, standbyContainerGroupPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="standbyContainerGroupPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="standbyContainerGroupPoolName"> Name of the standby container group pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyContainerGroupPoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}</description></item><item><term>Operation Id</term><description>StandbyContainerGroupPools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPool(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="standbyContainerGroupPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyContainerGroupPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt; GetStandbyContainerGroupPoolAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyContainerGroupPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt; GetStandbyContainerGroupPoolAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyContainerGroupPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPoolAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyContainerGroupPoolAsync (resourceGroupResource As ResourceGroupResource, standbyContainerGroupPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StandbyContainerGroupPoolResource))" />
      <MemberSignature Language="F#" Value="static member GetStandbyContainerGroupPoolAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPoolAsync (resourceGroupResource, standbyContainerGroupPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="standbyContainerGroupPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="standbyContainerGroupPoolName"> Name of the standby container group pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyContainerGroupPoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}</description></item><item><term>Operation Id</term><description>StandbyContainerGroupPools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPoolAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="standbyContainerGroupPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyContainerGroupPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource GetStandbyContainerGroupPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource GetStandbyContainerGroupPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyContainerGroupPoolResource (client As ArmClient, id As ResourceIdentifier) As StandbyContainerGroupPoolResource" />
      <MemberSignature Language="F#" Value="static member GetStandbyContainerGroupPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient.GetStandbyContainerGroupPoolResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection GetStandbyContainerGroupPools (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection GetStandbyContainerGroupPools(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPools(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyContainerGroupPools (resourceGroupResource As ResourceGroupResource) As StandbyContainerGroupPoolCollection" />
      <MemberSignature Language="F#" Value="static member GetStandbyContainerGroupPools : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPools resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of StandbyContainerGroupPoolResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyContainerGroupPools" /> instead.</description></item></summary>
        <returns> An object representing collection of StandbyContainerGroupPoolResources and their operations over a StandbyContainerGroupPoolResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPools (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPools(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPools(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyContainerGroupPools (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StandbyContainerGroupPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetStandbyContainerGroupPools : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPools (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List StandbyContainerGroupPoolResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyContainerGroupPools</description></item><item><term>Operation Id</term><description>StandbyContainerGroupPools_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolSubscriptionResource.GetStandbyContainerGroupPools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyContainerGroupPoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPoolsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt; GetStandbyContainerGroupPoolsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPoolsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyContainerGroupPoolsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StandbyContainerGroupPoolResource)" />
      <MemberSignature Language="F#" Value="static member GetStandbyContainerGroupPoolsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyContainerGroupPoolsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List StandbyContainerGroupPoolResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyContainerGroupPools</description></item><item><term>Operation Id</term><description>StandbyContainerGroupPools_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolSubscriptionResource.GetStandbyContainerGroupPools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.StandbyPool.StandbyContainerGroupPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePool (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyVirtualMachinePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePool(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyVirtualMachinePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePool(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyVirtualMachinePool (resourceGroupResource As ResourceGroupResource, standbyVirtualMachinePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StandbyVirtualMachinePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetStandbyVirtualMachinePool : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePool (resourceGroupResource, standbyVirtualMachinePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="standbyVirtualMachinePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="standbyVirtualMachinePoolName"> Name of the standby virtual machine pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyVirtualMachinePoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}</description></item><item><term>Operation Id</term><description>StandbyVirtualMachinePools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePool(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="standbyVirtualMachinePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyVirtualMachinePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt; GetStandbyVirtualMachinePoolAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyVirtualMachinePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt; GetStandbyVirtualMachinePoolAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string standbyVirtualMachinePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePoolAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyVirtualMachinePoolAsync (resourceGroupResource As ResourceGroupResource, standbyVirtualMachinePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StandbyVirtualMachinePoolResource))" />
      <MemberSignature Language="F#" Value="static member GetStandbyVirtualMachinePoolAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePoolAsync (resourceGroupResource, standbyVirtualMachinePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="standbyVirtualMachinePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="standbyVirtualMachinePoolName"> Name of the standby virtual machine pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StandbyVirtualMachinePoolResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}</description></item><item><term>Operation Id</term><description>StandbyVirtualMachinePools_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePoolAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="standbyVirtualMachinePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="standbyVirtualMachinePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource GetStandbyVirtualMachinePoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource GetStandbyVirtualMachinePoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyVirtualMachinePoolResource (client As ArmClient, id As ResourceIdentifier) As StandbyVirtualMachinePoolResource" />
      <MemberSignature Language="F#" Value="static member GetStandbyVirtualMachinePoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient.GetStandbyVirtualMachinePoolResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection GetStandbyVirtualMachinePools (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection GetStandbyVirtualMachinePools(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePools(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyVirtualMachinePools (resourceGroupResource As ResourceGroupResource) As StandbyVirtualMachinePoolCollection" />
      <MemberSignature Language="F#" Value="static member GetStandbyVirtualMachinePools : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePools resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of StandbyVirtualMachinePoolResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolResourceGroupResource.GetStandbyVirtualMachinePools" /> instead.</description></item></summary>
        <returns> An object representing collection of StandbyVirtualMachinePoolResources and their operations over a StandbyVirtualMachinePoolResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePools (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePools(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePools(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyVirtualMachinePools (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StandbyVirtualMachinePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetStandbyVirtualMachinePools : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePools (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List StandbyVirtualMachinePoolResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools</description></item><item><term>Operation Id</term><description>StandbyVirtualMachinePools_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolSubscriptionResource.GetStandbyVirtualMachinePools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachinePoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePoolsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt; GetStandbyVirtualMachinePoolsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePoolsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyVirtualMachinePoolsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StandbyVirtualMachinePoolResource)" />
      <MemberSignature Language="F#" Value="static member GetStandbyVirtualMachinePoolsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachinePoolsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List StandbyVirtualMachinePoolResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools</description></item><item><term>Operation Id</term><description>StandbyVirtualMachinePools_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolSubscriptionResource.GetStandbyVirtualMachinePools(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachinePoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandbyVirtualMachineResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource GetStandbyVirtualMachineResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource GetStandbyVirtualMachineResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachineResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStandbyVirtualMachineResource (client As ArmClient, id As ResourceIdentifier) As StandbyVirtualMachineResource" />
      <MemberSignature Language="F#" Value="static member GetStandbyVirtualMachineResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" Usage="Azure.ResourceManager.StandbyPool.StandbyPoolExtensions.GetStandbyVirtualMachineResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StandbyPool</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.StandbyPool.Mocking.MockableStandbyPoolArmClient.GetStandbyVirtualMachineResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StandbyPool.StandbyVirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
