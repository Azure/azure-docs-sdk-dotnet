<Type Name="MockableHybridContainerServiceArmClient" FullName="Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient">
  <TypeSignature Language="C#" Value="public class MockableHybridContainerServiceArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableHybridContainerServiceArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableHybridContainerServiceArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableHybridContainerServiceArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableHybridContainerServiceArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridContainerServiceAgentPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource GetHybridContainerServiceAgentPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource GetHybridContainerServiceAgentPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetHybridContainerServiceAgentPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridContainerServiceAgentPoolResource (id As ResourceIdentifier) As HybridContainerServiceAgentPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridContainerServiceAgentPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource&#xA;override this.GetHybridContainerServiceAgentPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource" Usage="mockableHybridContainerServiceArmClient.GetHybridContainerServiceAgentPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceAgentPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridContainerServiceVirtualNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource GetHybridContainerServiceVirtualNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource GetHybridContainerServiceVirtualNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetHybridContainerServiceVirtualNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridContainerServiceVirtualNetworkResource (id As ResourceIdentifier) As HybridContainerServiceVirtualNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridContainerServiceVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&#xA;override this.GetHybridContainerServiceVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource" Usage="mockableHybridContainerServiceArmClient.GetHybridContainerServiceVirtualNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridContainerServiceVmSku">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource GetHybridContainerServiceVmSku (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource GetHybridContainerServiceVmSku(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetHybridContainerServiceVmSku(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridContainerServiceVmSku (scope As ResourceIdentifier) As HybridContainerServiceVmSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridContainerServiceVmSku : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource&#xA;override this.GetHybridContainerServiceVmSku : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource" Usage="mockableHybridContainerServiceArmClient.GetHybridContainerServiceVmSku scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a HybridContainerServiceVmSkuResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridContainerServiceVmSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource GetHybridContainerServiceVmSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource GetHybridContainerServiceVmSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetHybridContainerServiceVmSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridContainerServiceVmSkuResource (id As ResourceIdentifier) As HybridContainerServiceVmSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridContainerServiceVmSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource&#xA;override this.GetHybridContainerServiceVmSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource" Usage="mockableHybridContainerServiceArmClient.GetHybridContainerServiceVmSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridContainerServiceVmSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridIdentityMetadataResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource GetHybridIdentityMetadataResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource GetHybridIdentityMetadataResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetHybridIdentityMetadataResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridIdentityMetadataResource (id As ResourceIdentifier) As HybridIdentityMetadataResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource&#xA;override this.GetHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource" Usage="mockableHybridContainerServiceArmClient.GetHybridIdentityMetadataResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.HybridIdentityMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKubernetesVersionProfile">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource GetKubernetesVersionProfile (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource GetKubernetesVersionProfile(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetKubernetesVersionProfile(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKubernetesVersionProfile (scope As ResourceIdentifier) As KubernetesVersionProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetKubernetesVersionProfile : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource&#xA;override this.GetKubernetesVersionProfile : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource" Usage="mockableHybridContainerServiceArmClient.GetKubernetesVersionProfile scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a KubernetesVersionProfileResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKubernetesVersionProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource GetKubernetesVersionProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource GetKubernetesVersionProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetKubernetesVersionProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKubernetesVersionProfileResource (id As ResourceIdentifier) As KubernetesVersionProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetKubernetesVersionProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource&#xA;override this.GetKubernetesVersionProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource" Usage="mockableHybridContainerServiceArmClient.GetKubernetesVersionProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.KubernetesVersionProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource GetProvisionedCluster (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource GetProvisionedCluster(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetProvisionedCluster(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProvisionedCluster (scope As ResourceIdentifier) As ProvisionedClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetProvisionedCluster : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&#xA;override this.GetProvisionedCluster : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource" Usage="mockableHybridContainerServiceArmClient.GetProvisionedCluster scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a ProvisionedClusterResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource GetProvisionedClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource GetProvisionedClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetProvisionedClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProvisionedClusterResource (id As ResourceIdentifier) As ProvisionedClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetProvisionedClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&#xA;override this.GetProvisionedClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource" Usage="mockableHybridContainerServiceArmClient.GetProvisionedClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedClusterUpgradeProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource GetProvisionedClusterUpgradeProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource GetProvisionedClusterUpgradeProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceArmClient.GetProvisionedClusterUpgradeProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProvisionedClusterUpgradeProfileResource (id As ResourceIdentifier) As ProvisionedClusterUpgradeProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetProvisionedClusterUpgradeProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource&#xA;override this.GetProvisionedClusterUpgradeProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource" Usage="mockableHybridContainerServiceArmClient.GetProvisionedClusterUpgradeProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridContainerService.ProvisionedClusterUpgradeProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
