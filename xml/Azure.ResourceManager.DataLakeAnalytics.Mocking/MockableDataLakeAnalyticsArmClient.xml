<Type Name="MockableDataLakeAnalyticsArmClient" FullName="Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient">
  <TypeSignature Language="C#" Value="public class MockableDataLakeAnalyticsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataLakeAnalyticsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataLakeAnalyticsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataLakeAnalyticsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataLakeAnalyticsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeAnalyticsAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource GetDataLakeAnalyticsAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource GetDataLakeAnalyticsAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeAnalyticsAccountResource (id As ResourceIdentifier) As DataLakeAnalyticsAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeAnalyticsAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&#xA;override this.GetDataLakeAnalyticsAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" Usage="mockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeAnalyticsComputePolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource GetDataLakeAnalyticsComputePolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource GetDataLakeAnalyticsComputePolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsComputePolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeAnalyticsComputePolicyResource (id As ResourceIdentifier) As DataLakeAnalyticsComputePolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeAnalyticsComputePolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource&#xA;override this.GetDataLakeAnalyticsComputePolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource" Usage="mockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsComputePolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsComputePolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeAnalyticsFirewallRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource GetDataLakeAnalyticsFirewallRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource GetDataLakeAnalyticsFirewallRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsFirewallRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeAnalyticsFirewallRuleResource (id As ResourceIdentifier) As DataLakeAnalyticsFirewallRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeAnalyticsFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource&#xA;override this.GetDataLakeAnalyticsFirewallRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource" Usage="mockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsFirewallRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeAnalyticsStorageAccountInformationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource GetDataLakeAnalyticsStorageAccountInformationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource GetDataLakeAnalyticsStorageAccountInformationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsStorageAccountInformationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeAnalyticsStorageAccountInformationResource (id As ResourceIdentifier) As DataLakeAnalyticsStorageAccountInformationResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeAnalyticsStorageAccountInformationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource&#xA;override this.GetDataLakeAnalyticsStorageAccountInformationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource" Usage="mockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsStorageAccountInformationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageAccountInformationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeAnalyticsStorageContainerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource GetDataLakeAnalyticsStorageContainerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource GetDataLakeAnalyticsStorageContainerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsStorageContainerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeAnalyticsStorageContainerResource (id As ResourceIdentifier) As DataLakeAnalyticsStorageContainerResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeAnalyticsStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource&#xA;override this.GetDataLakeAnalyticsStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource" Usage="mockableDataLakeAnalyticsArmClient.GetDataLakeAnalyticsStorageContainerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsStorageContainerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeStoreAccountInformationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource GetDataLakeStoreAccountInformationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource GetDataLakeStoreAccountInformationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.Mocking.MockableDataLakeAnalyticsArmClient.GetDataLakeStoreAccountInformationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeStoreAccountInformationResource (id As ResourceIdentifier) As DataLakeStoreAccountInformationResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeStoreAccountInformationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&#xA;override this.GetDataLakeStoreAccountInformationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource" Usage="mockableDataLakeAnalyticsArmClient.GetDataLakeStoreAccountInformationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
