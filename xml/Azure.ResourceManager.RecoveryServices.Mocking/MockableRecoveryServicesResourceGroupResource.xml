<Type Name="MockableRecoveryServicesResourceGroupResource" FullName="Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableRecoveryServicesResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableRecoveryServicesResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableRecoveryServicesResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableRecoveryServicesResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableRecoveryServicesResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckRecoveryServicesNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt; CheckRecoveryServicesNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt; CheckRecoveryServicesNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource.CheckRecoveryServicesNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckRecoveryServicesNameAvailability (location As AzureLocation, content As RecoveryServicesNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecoveryServicesNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckRecoveryServicesNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;&#xA;override this.CheckRecoveryServicesNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;" Usage="mockableRecoveryServicesResourceGroupResource.CheckRecoveryServicesNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> Location of the resource. </param>
        <param name="content"> Contains information about Resource type and Resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API to check for resource name availability.
            A name is available if no other resource exists that has the same SubscriptionId, Resource Name and Type
            or if one or more such resources exist, each of these must be GC'd and their time of deletion be more than 24 Hours Ago
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>RecoveryServices_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckRecoveryServicesNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;&gt; CheckRecoveryServicesNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;&gt; CheckRecoveryServicesNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource.CheckRecoveryServicesNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckRecoveryServicesNameAvailabilityAsync (location As AzureLocation, content As RecoveryServicesNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecoveryServicesNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckRecoveryServicesNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;&gt;&#xA;override this.CheckRecoveryServicesNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;&gt;" Usage="mockableRecoveryServicesResourceGroupResource.CheckRecoveryServicesNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServices.Models.RecoveryServicesNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> Location of the resource. </param>
        <param name="content"> Contains information about Resource type and Resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API to check for resource name availability.
            A name is available if no other resource exists that has the same SubscriptionId, Resource Name and Type
            or if one or more such resources exist, each of these must be GC'd and their time of deletion be more than 24 Hours Ago
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>RecoveryServices_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoveryServicesVault">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt; GetRecoveryServicesVault (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt; GetRecoveryServicesVault(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource.GetRecoveryServicesVault(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoveryServicesVault (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecoveryServicesVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoveryServicesVault : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&#xA;override this.GetRecoveryServicesVault : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;" Usage="mockableRecoveryServicesResourceGroupResource.GetRecoveryServicesVault (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Vault details.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoveryServicesVaultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&gt; GetRecoveryServicesVaultAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&gt; GetRecoveryServicesVaultAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource.GetRecoveryServicesVaultAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoveryServicesVaultAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecoveryServicesVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecoveryServicesVaultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&gt;&#xA;override this.GetRecoveryServicesVaultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&gt;" Usage="mockableRecoveryServicesResourceGroupResource.GetRecoveryServicesVaultAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Vault details.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoveryServicesVaults">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultCollection GetRecoveryServicesVaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultCollection GetRecoveryServicesVaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesResourceGroupResource.GetRecoveryServicesVaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoveryServicesVaults () As RecoveryServicesVaultCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecoveryServicesVaults : unit -&gt; Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultCollection&#xA;override this.GetRecoveryServicesVaults : unit -&gt; Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultCollection" Usage="mockableRecoveryServicesResourceGroupResource.GetRecoveryServicesVaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecoveryServicesVaultResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of RecoveryServicesVaultResources and their operations over a RecoveryServicesVaultResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
