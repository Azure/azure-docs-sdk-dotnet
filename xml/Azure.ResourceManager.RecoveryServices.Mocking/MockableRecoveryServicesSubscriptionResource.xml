<Type Name="MockableRecoveryServicesSubscriptionResource" FullName="Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableRecoveryServicesSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableRecoveryServicesSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableRecoveryServicesSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableRecoveryServicesSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableRecoveryServicesSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoveryServiceCapabilities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt; GetRecoveryServiceCapabilities (Azure.Core.AzureLocation location, Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities input, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt; GetRecoveryServiceCapabilities(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities input, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource.GetRecoveryServiceCapabilities(Azure.Core.AzureLocation,Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoveryServiceCapabilities (location As AzureLocation, input As ResourceCapabilities, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CapabilitiesResult)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoveryServiceCapabilities : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;&#xA;override this.GetRecoveryServiceCapabilities : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;" Usage="mockableRecoveryServicesSubscriptionResource.GetRecoveryServiceCapabilities (location, input, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="input" Type="Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> Location of the resource. </param>
        <param name="input"> Contains information about Resource type and properties to get capabilities. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API to get details about capabilities provided by Microsoft.RecoveryServices RP
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/capabilities</description></item><item><term>Operation Id</term><description>RecoveryServices_Capabilities</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoveryServiceCapabilitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;&gt; GetRecoveryServiceCapabilitiesAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities input, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;&gt; GetRecoveryServiceCapabilitiesAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities input, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource.GetRecoveryServiceCapabilitiesAsync(Azure.Core.AzureLocation,Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoveryServiceCapabilitiesAsync (location As AzureLocation, input As ResourceCapabilities, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CapabilitiesResult))" />
      <MemberSignature Language="F#" Value="abstract member GetRecoveryServiceCapabilitiesAsync : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;&gt;&#xA;override this.GetRecoveryServiceCapabilitiesAsync : Azure.Core.AzureLocation * Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;&gt;" Usage="mockableRecoveryServicesSubscriptionResource.GetRecoveryServiceCapabilitiesAsync (location, input, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServices.Models.CapabilitiesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="input" Type="Azure.ResourceManager.RecoveryServices.Models.ResourceCapabilities" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> Location of the resource. </param>
        <param name="input"> Contains information about Resource type and properties to get capabilities. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API to get details about capabilities provided by Microsoft.RecoveryServices RP
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/capabilities</description></item><item><term>Operation Id</term><description>RecoveryServices_Capabilities</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoveryServicesVaults">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt; GetRecoveryServicesVaults (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt; GetRecoveryServicesVaults(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource.GetRecoveryServicesVaults(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoveryServicesVaults (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RecoveryServicesVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoveryServicesVaults : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&#xA;override this.GetRecoveryServicesVaults : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;" Usage="mockableRecoveryServicesSubscriptionResource.GetRecoveryServicesVaults cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches all the resources of the specified type in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/vaults</description></item><item><term>Operation Id</term><description>Vaults_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoveryServicesVaultsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt; GetRecoveryServicesVaultsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt; GetRecoveryServicesVaultsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServices.Mocking.MockableRecoveryServicesSubscriptionResource.GetRecoveryServicesVaultsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoveryServicesVaultsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RecoveryServicesVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoveryServicesVaultsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;&#xA;override this.GetRecoveryServicesVaultsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;" Usage="mockableRecoveryServicesSubscriptionResource.GetRecoveryServicesVaultsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServices</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches all the resources of the specified type in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/vaults</description></item><item><term>Operation Id</term><description>Vaults_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServices.RecoveryServicesVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
