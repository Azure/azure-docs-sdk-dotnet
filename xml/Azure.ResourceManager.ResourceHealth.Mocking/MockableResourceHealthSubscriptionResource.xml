<Type Name="MockableResourceHealthSubscriptionResource" FullName="Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableResourceHealthSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableResourceHealthSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableResourceHealthSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableResourceHealthSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableResourceHealthSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusesBySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscription (string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscription(string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetAvailabilityStatusesBySubscription(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailabilityStatusesBySubscription (Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailabilityStatusesBySubscription : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&#xA;override this.GetAvailabilityStatusesBySubscription : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="mockableResourceHealthSubscriptionResource.GetAvailabilityStatusesBySubscription (filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current availability status for all the resources in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusesBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscriptionAsync (string filter = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt; GetAvailabilityStatusesBySubscriptionAsync(string filter, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetAvailabilityStatusesBySubscriptionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailabilityStatusesBySubscriptionAsync (Optional filter As String = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthAvailabilityStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailabilityStatusesBySubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;&#xA;override this.GetAvailabilityStatusesBySubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;" Usage="mockableResourceHealthSubscriptionResource.GetAvailabilityStatusesBySubscriptionAsync (filter, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="expand"> Setting $expand=recommendedactions in url query expands the recommendedactions in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current availability status for all the resources in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses</description></item><item><term>Operation Id</term><description>AvailabilityStatuses_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEvent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt; GetResourceHealthEvent (string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt; GetResourceHealthEvent(string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetResourceHealthEvent(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceHealthEvent (eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceHealthEventResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceHealthEvent : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&#xA;override this.GetResourceHealthEvent : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;" Usage="mockableResourceHealthSubscriptionResource.GetResourceHealthEvent (eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventTrackingId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEventAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt; GetResourceHealthEventAsync (string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt; GetResourceHealthEventAsync(string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetResourceHealthEventAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceHealthEventAsync (eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceHealthEventResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceHealthEventAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt;&#xA;override this.GetResourceHealthEventAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt;" Usage="mockableResourceHealthSubscriptionResource.GetResourceHealthEventAsync (eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventTrackingId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceHealthEvents">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection GetResourceHealthEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection GetResourceHealthEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Mocking.MockableResourceHealthSubscriptionResource.GetResourceHealthEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceHealthEvents () As ResourceHealthEventCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceHealthEvents : unit -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection&#xA;override this.GetResourceHealthEvents : unit -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection" Usage="mockableResourceHealthSubscriptionResource.GetResourceHealthEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthEventCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ResourceHealthEventResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ResourceHealthEventResources and their operations over a ResourceHealthEventResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
