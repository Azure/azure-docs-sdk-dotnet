<Type Name="ClientResultException" FullName="System.ClientModel.ClientResultException">
  <TypeSignature Language="C#" Value="public class ClientResultException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientResultException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.ClientResultException" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientResultException&#xA;Inherits Exception" />
  <TypeSignature Language="F#" Value="type ClientResultException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>
            The exception that is thrown when the processing of a client request failed.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientResultException (System.ClientModel.Primitives.PipelineResponse response, Exception? innerException = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ClientModel.Primitives.PipelineResponse response, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.ClientResultException.#ctor(System.ClientModel.Primitives.PipelineResponse,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (response As PipelineResponse, Optional innerException As Exception = Nothing)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.ClientResultException : System.ClientModel.Primitives.PipelineResponse * Exception -&gt; System.ClientModel.ClientResultException" Usage="new System.ClientModel.ClientResultException (response, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="response" Type="System.ClientModel.Primitives.PipelineResponse" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="response">The service's error response.</param>
        <param name="innerException">The <see cref="P:System.Exception.InnerException" />,
            if any, that threw the current exception.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.ClientModel.ClientResultException" /> from a
            <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> containing the details of the service's
            error response.  The <see cref="P:System.Exception.Message" /> is created from the
            provided <paramref name="response" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientResultException (string message, System.ClientModel.Primitives.PipelineResponse? response = default, Exception? innerException = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.ClientModel.Primitives.PipelineResponse response, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.ClientResultException.#ctor(System.String,System.ClientModel.Primitives.PipelineResponse,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, Optional response As PipelineResponse = Nothing, Optional innerException As Exception = Nothing)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.ClientResultException : string * System.ClientModel.Primitives.PipelineResponse * Exception -&gt; System.ClientModel.ClientResultException" Usage="new System.ClientModel.ClientResultException (message, response, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="response" Type="System.ClientModel.Primitives.PipelineResponse" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to set on <see cref="P:System.Exception.Message" />.
            </param>
        <param name="response">The response, if any, to return from
            <see cref="M:System.ClientModel.ClientResultException.GetRawResponse" />.</param>
        <param name="innerException">The <see cref="P:System.Exception.InnerException" />,
            if any, that threw the current exception.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.ClientModel.ClientResultException" /> with a
            custom exception message and an optional <see cref="T:System.ClientModel.Primitives.PipelineResponse" />.
            The <see cref="P:System.Exception.Message" /> is set to <paramref name="response" />
            and if <paramref name="response" /> is provided, it will be returned from
            calls to this exception instance's <see cref="M:System.ClientModel.ClientResultException.GetRawResponse" /> method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.ClientModel.ClientResultException&gt; CreateAsync (System.ClientModel.Primitives.PipelineResponse response, Exception? innerException = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResultException&gt; CreateAsync(class System.ClientModel.Primitives.PipelineResponse response, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.ClientResultException.CreateAsync(System.ClientModel.Primitives.PipelineResponse,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAsync (response As PipelineResponse, Optional innerException As Exception = Nothing) As Task(Of ClientResultException)" />
      <MemberSignature Language="F#" Value="static member CreateAsync : System.ClientModel.Primitives.PipelineResponse * Exception -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResultException&gt;" Usage="System.ClientModel.ClientResultException.CreateAsync (response, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResultException&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.ClientModel.Primitives.PipelineResponse" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="response">The service's error response.</param>
        <param name="innerException">The <see cref="P:System.Exception.InnerException" />,
            if any, that threw the current exception.</param>
        <summary>
            Asynchronously create an instance of <see cref="T:System.ClientModel.ClientResultException" />
            from the <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> containing the details of the
            service's error response.
            </summary>
        <returns>The <see cref="T:System.ClientModel.ClientResultException" /> instance that was
            created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawResponse">
      <MemberSignature Language="C#" Value="public System.ClientModel.Primitives.PipelineResponse? GetRawResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ClientModel.Primitives.PipelineResponse GetRawResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.ClientResultException.GetRawResponse" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawResponse () As PipelineResponse" />
      <MemberSignature Language="F#" Value="member this.GetRawResponse : unit -&gt; System.ClientModel.Primitives.PipelineResponse" Usage="clientResultException.GetRawResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.PipelineResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.ClientModel.Primitives.PipelineResponse" />, if any, that led to the exception.
            </summary>
        <returns>The <see cref="T:System.ClientModel.Primitives.PipelineResponse" />, if any, that led to the exception.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public int Status { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Status" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.ClientResultException.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As Integer" />
      <MemberSignature Language="F#" Value="member this.Status : int with get, set" Usage="System.ClientModel.ClientResultException.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the HTTP status code of the response. Returns. <code>0</code> if response was not received.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
