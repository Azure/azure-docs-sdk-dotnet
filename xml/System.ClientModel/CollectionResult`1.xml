<Type Name="CollectionResult&lt;T&gt;" FullName="System.ClientModel.CollectionResult&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class CollectionResult&lt;T&gt; : System.ClientModel.Primitives.CollectionResult, System.Collections.Generic.IEnumerable&lt;T&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CollectionResult`1&lt;T&gt; extends System.ClientModel.Primitives.CollectionResult implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.CollectionResult`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CollectionResult(Of T)&#xA;Inherits CollectionResult&#xA;Implements IEnumerable(Of T)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type CollectionResult&lt;'T&gt; = class&#xA;    inherit CollectionResult&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public abstract class CollectionResult&lt;T&gt; : System.ClientModel.ClientResult, System.Collections.Generic.IEnumerable&lt;T&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CollectionResult`1&lt;T&gt; extends System.ClientModel.ClientResult implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CollectionResult(Of T)&#xA;Inherits ClientResult&#xA;Implements IEnumerable(Of T)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type CollectionResult&lt;'T&gt; = class&#xA;    inherit ClientResult&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ClientModel.Primitives.CollectionResult</BaseTypeName>
    <BaseTypeName FrameworkAlternate="azure-dotnet-preview">System.ClientModel.ClientResult</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            Represents a collection of values returned from a cloud service operation.
            The collection values may be delivered over one or more service responses.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CollectionResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.CollectionResult`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of <see cref="T:System.ClientModel.CollectionResult`1" />.
            </summary>
        <remarks>If no <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> is provided when the
            <see cref="T:System.ClientModel.ClientResult" /> instance is created, it is expected that
            a derived type will call <see cref="M:System.ClientModel.ClientResult.SetRawResponse(System.ClientModel.Primitives.PipelineResponse)" />
            prior to a user calling <see cref="M:System.ClientModel.ClientResult.GetRawResponse" />.
            This constructor is indended for use by collection implementations that
            postpone sending a request until <see cref="M:System.ClientModel.CollectionResult`1.GetEnumerator" />
            is called. Such implementations will typically be returned from client
            convenience methods so that callers of the methods don't need to
            dispose the return value. </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CollectionResult (System.ClientModel.Primitives.PipelineResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.ClientModel.Primitives.PipelineResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.CollectionResult`1.#ctor(System.ClientModel.Primitives.PipelineResponse)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (response As PipelineResponse)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.CollectionResult&lt;'T&gt; : System.ClientModel.Primitives.PipelineResponse -&gt; System.ClientModel.CollectionResult&lt;'T&gt;" Usage="new System.ClientModel.CollectionResult&lt;'T&gt; response" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="response" Type="System.ClientModel.Primitives.PipelineResponse" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="response">The <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> holding the
            items in the collection, or the first set of the items in the collection.
            </param>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.CollectionResult`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.CollectionResult`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator(Of T)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="collectionResult.GetEnumerator " FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of T)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="collectionResult.GetEnumerator " FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.ClientModel.CollectionResult&lt;&gt;+&lt;GetEnumerator&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.ClientModel.CollectionResult&lt;&gt;+&lt;GetEnumerator&gt;d__1))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValuesFromPage">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;T&gt; GetValuesFromPage (System.ClientModel.ClientResult page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetValuesFromPage(class System.ClientModel.ClientResult page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.CollectionResult`1.GetValuesFromPage(System.ClientModel.ClientResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetValuesFromPage (page As ClientResult) As IEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetValuesFromPage : System.ClientModel.ClientResult -&gt; seq&lt;'T&gt;" Usage="collectionResult.GetValuesFromPage page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.ClientModel.ClientResult" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="page">The service response to obtain the values from.
             </param>
        <summary>
             Gets a collection of the values returned in a page response.
             </summary>
        <returns>A collection of <typeparamref name="T" /> values read from the
            response content in <paramref name="page" />.</returns>
        <remarks>
          <see cref="T:System.ClientModel.CollectionResult`1" /> implementations are expected
             to store the <see cref="T:System.Threading.CancellationToken" /> passed to the service
             method that creates them and pass that token to any methods making
             service calls that are called from this method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.CollectionResult`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collectionResult.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
