<Type Name="AsyncCollectionResult&lt;T&gt;" FullName="System.ClientModel.AsyncCollectionResult&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncCollectionResult&lt;T&gt; : System.ClientModel.Primitives.AsyncCollectionResult, System.Collections.Generic.IAsyncEnumerable&lt;T&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncCollectionResult`1&lt;T&gt; extends System.ClientModel.Primitives.AsyncCollectionResult implements class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.AsyncCollectionResult`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncCollectionResult(Of T)&#xA;Inherits AsyncCollectionResult&#xA;Implements IAsyncEnumerable(Of T)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type AsyncCollectionResult&lt;'T&gt; = class&#xA;    inherit AsyncCollectionResult&#xA;    interface IAsyncEnumerable&lt;'T&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public abstract class AsyncCollectionResult&lt;T&gt; : System.ClientModel.ClientResult, System.Collections.Generic.IAsyncEnumerable&lt;T&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncCollectionResult`1&lt;T&gt; extends System.ClientModel.ClientResult implements class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncCollectionResult(Of T)&#xA;Inherits ClientResult&#xA;Implements IAsyncEnumerable(Of T)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type AsyncCollectionResult&lt;'T&gt; = class&#xA;    inherit ClientResult&#xA;    interface IAsyncEnumerable&lt;'T&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ClientModel.Primitives.AsyncCollectionResult</BaseTypeName>
    <BaseTypeName FrameworkAlternate="azure-dotnet-preview">System.ClientModel.ClientResult</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            Represents a collection of values returned from a cloud service operation.
            The collection values may be delivered over one or more service responses.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AsyncCollectionResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncCollectionResult`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of <see cref="T:System.ClientModel.AsyncCollectionResult`1" />.
            </summary>
        <remarks>If no <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> is provided when the
            <see cref="T:System.ClientModel.ClientResult" /> instance is created, it is expected that
            a derived type will call <see cref="M:System.ClientModel.ClientResult.SetRawResponse(System.ClientModel.Primitives.PipelineResponse)" />
            prior to a user calling <see cref="M:System.ClientModel.ClientResult.GetRawResponse" />.
            This constructor is indended for use by collection implementations that
            postpone sending a request until <see cref="M:System.ClientModel.AsyncCollectionResult`1.GetAsyncEnumerator(System.Threading.CancellationToken)" />
            is called. Such implementations will typically be returned from client
            convenience methods so that callers of the methods don't need to
            dispose the return value. </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AsyncCollectionResult (System.ClientModel.Primitives.PipelineResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.ClientModel.Primitives.PipelineResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncCollectionResult`1.#ctor(System.ClientModel.Primitives.PipelineResponse)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (response As PipelineResponse)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.AsyncCollectionResult&lt;'T&gt; : System.ClientModel.Primitives.PipelineResponse -&gt; System.ClientModel.AsyncCollectionResult&lt;'T&gt;" Usage="new System.ClientModel.AsyncCollectionResult&lt;'T&gt; response" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="response" Type="System.ClientModel.Primitives.PipelineResponse" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="response">The <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> holding the
            items in the collection, or the first set of the items in the collection.
            </param>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.AsyncCollectionResult`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerator&lt;T&gt; GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;!T&gt; GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncCollectionResult`1.GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsyncEnumerator (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of T)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;&#xA;override this.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;" Usage="asyncCollectionResult.GetAsyncEnumerator cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IAsyncEnumerator&lt;T&gt; GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAsyncEnumerator (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of T)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;" Usage="asyncCollectionResult.GetAsyncEnumerator cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(System.ClientModel.AsyncCollectionResult&lt;&gt;+&lt;GetAsyncEnumerator&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(System.ClientModel.AsyncCollectionResult&lt;&gt;+&lt;GetAsyncEnumerator&gt;d__1))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
        <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
        <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValuesFromPageAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IAsyncEnumerable&lt;T&gt; GetValuesFromPageAsync (System.ClientModel.ClientResult page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt; GetValuesFromPageAsync(class System.ClientModel.ClientResult page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncCollectionResult`1.GetValuesFromPageAsync(System.ClientModel.ClientResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetValuesFromPageAsync (page As ClientResult) As IAsyncEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetValuesFromPageAsync : System.ClientModel.ClientResult -&gt; System.Collections.Generic.IAsyncEnumerable&lt;'T&gt;" Usage="asyncCollectionResult.GetValuesFromPageAsync page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.ClientModel.ClientResult" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="page">The service response to obtain the values from.
             </param>
        <summary>
             Gets a collection of the values returned in a page response.
             </summary>
        <returns>A collection of <typeparamref name="T" /> values read from the
            response content in <paramref name="page" />.</returns>
        <remarks>This method does not take a <see cref="T:System.Threading.CancellationToken" />
             parameter.  <see cref="T:System.ClientModel.AsyncCollectionResult`1" /> implementations must
             store the <see cref="T:System.Threading.CancellationToken" /> passed to the service method
             that creates them and pass that token to any <c>async</c> methods
             called from this method.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
