<Type Name="VolumeClaimSpec" FullName="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec">
  <TypeSignature Language="C#" Value="public class VolumeClaimSpec : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VolumeClaimSpec extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec" />
  <TypeSignature Language="VB.NET" Value="Public Class VolumeClaimSpec&#xA;Implements IJsonModel(Of VolumeClaimSpec), IPersistableModel(Of VolumeClaimSpec)" />
  <TypeSignature Language="F#" Value="type VolumeClaimSpec = class&#xA;    interface IJsonModel&lt;VolumeClaimSpec&gt;&#xA;    interface IPersistableModel&lt;VolumeClaimSpec&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> VolumeClaimSpec properties. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VolumeClaimSpec ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessModes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AccessModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AccessModes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.AccessModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessModes As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AccessModes : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.AccessModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.IotOperations.Models.LocalKubernetesReference DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.IotOperations.Models.LocalKubernetesReference DataSource" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As LocalKubernetesReference" />
      <MemberSignature Language="F#" Value="member this.DataSource : Azure.ResourceManager.IotOperations.Models.LocalKubernetesReference with get, set" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.LocalKubernetesReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceRef">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.IotOperations.Models.KubernetesReference DataSourceRef { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.IotOperations.Models.KubernetesReference DataSourceRef" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.DataSourceRef" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceRef As KubernetesReference" />
      <MemberSignature Language="F#" Value="member this.DataSourceRef : Azure.ResourceManager.IotOperations.Models.KubernetesReference with get, set" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.DataSourceRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.KubernetesReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="volumeClaimSpec.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.IotOperations.Models.VolumeClaimResourceRequirements Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.IotOperations.Models.VolumeClaimResourceRequirements Resources" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As VolumeClaimResourceRequirements" />
      <MemberSignature Language="F#" Value="member this.Resources : Azure.ResourceManager.IotOperations.Models.VolumeClaimResourceRequirements with get, set" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.VolumeClaimResourceRequirements</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selector">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.IotOperations.Models.VolumeClaimSpecSelector Selector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.IotOperations.Models.VolumeClaimSpecSelector Selector" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.Selector" />
      <MemberSignature Language="VB.NET" Value="Public Property Selector As VolumeClaimSpecSelector" />
      <MemberSignature Language="F#" Value="member this.Selector : Azure.ResourceManager.IotOperations.Models.VolumeClaimSpecSelector with get, set" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.Selector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.VolumeClaimSpecSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A label query over volumes to consider for binding. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageClassName">
      <MemberSignature Language="C#" Value="public string StorageClassName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageClassName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.StorageClassName" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageClassName As String" />
      <MemberSignature Language="F#" Value="member this.StorageClassName : string with get, set" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.StorageClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec IJsonModel&lt;VolumeClaimSpec&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#IotOperations#Models#VolumeClaimSpec&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As VolumeClaimSpec Implements IJsonModel(Of VolumeClaimSpec).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec" Usage="volumeClaimSpec.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;VolumeClaimSpec&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#IotOperations#Models#VolumeClaimSpec&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of VolumeClaimSpec).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="volumeClaimSpec.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec IPersistableModel&lt;VolumeClaimSpec&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#IotOperations#Models#VolumeClaimSpec&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As VolumeClaimSpec Implements IPersistableModel(Of VolumeClaimSpec).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec" Usage="volumeClaimSpec.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;VolumeClaimSpec&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#IotOperations#Models#VolumeClaimSpec&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of VolumeClaimSpec).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="volumeClaimSpec.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;VolumeClaimSpec&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#IotOperations#Models#VolumeClaimSpec&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of VolumeClaimSpec).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="volumeClaimSpec.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VolumeMode">
      <MemberSignature Language="C#" Value="public string VolumeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VolumeMode" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.VolumeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VolumeMode As String" />
      <MemberSignature Language="F#" Value="member this.VolumeMode : string with get, set" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.VolumeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeName">
      <MemberSignature Language="C#" Value="public string VolumeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VolumeName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.VolumeName" />
      <MemberSignature Language="VB.NET" Value="Public Property VolumeName As String" />
      <MemberSignature Language="F#" Value="member this.VolumeName : string with get, set" Usage="Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec.VolumeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> VolumeName is the binding reference to the PersistentVolume backing this claim. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
