<Type Name="DiskBackedMessageBuffer" FullName="Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer">
  <TypeSignature Language="C#" Value="public class DiskBackedMessageBuffer : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiskBackedMessageBuffer extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer" />
  <TypeSignature Language="VB.NET" Value="Public Class DiskBackedMessageBuffer&#xA;Implements IJsonModel(Of DiskBackedMessageBuffer), IPersistableModel(Of DiskBackedMessageBuffer)" />
  <TypeSignature Language="F#" Value="type DiskBackedMessageBuffer = class&#xA;    interface IJsonModel&lt;DiskBackedMessageBuffer&gt;&#xA;    interface IPersistableModel&lt;DiskBackedMessageBuffer&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> DiskBackedMessageBuffer properties. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiskBackedMessageBuffer (string maxSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string maxSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxSize As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer : string -&gt; Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer" Usage="new Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer maxSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxSize" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="maxSize"> The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See &lt;https://kubernetes.io/docs/concepts/storage/volumes/#emptydir&gt; for details. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="maxSize" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EphemeralVolumeClaimSpec">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec EphemeralVolumeClaimSpec { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec EphemeralVolumeClaimSpec" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.EphemeralVolumeClaimSpec" />
      <MemberSignature Language="VB.NET" Value="Public Property EphemeralVolumeClaimSpec As VolumeClaimSpec" />
      <MemberSignature Language="F#" Value="member this.EphemeralVolumeClaimSpec : Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec with get, set" Usage="Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.EphemeralVolumeClaimSpec" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See &lt;https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes&gt; for details. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="diskBackedMessageBuffer.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public string MaxSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaxSize" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.MaxSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSize As String" />
      <MemberSignature Language="F#" Value="member this.MaxSize : string with get, set" Usage="Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See &lt;https://kubernetes.io/docs/concepts/storage/volumes/#emptydir&gt; for details. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistentVolumeClaimSpec">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec PersistentVolumeClaimSpec { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec PersistentVolumeClaimSpec" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.PersistentVolumeClaimSpec" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentVolumeClaimSpec As VolumeClaimSpec" />
      <MemberSignature Language="F#" Value="member this.PersistentVolumeClaimSpec : Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec with get, set" Usage="Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.PersistentVolumeClaimSpec" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.VolumeClaimSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Use the specified persistent volume claim template to mount a persistent volume for the message buffer. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer IJsonModel&lt;DiskBackedMessageBuffer&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#IotOperations#Models#DiskBackedMessageBuffer&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As DiskBackedMessageBuffer Implements IJsonModel(Of DiskBackedMessageBuffer).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer" Usage="diskBackedMessageBuffer.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;DiskBackedMessageBuffer&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#IotOperations#Models#DiskBackedMessageBuffer&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of DiskBackedMessageBuffer).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="diskBackedMessageBuffer.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer IPersistableModel&lt;DiskBackedMessageBuffer&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#IotOperations#Models#DiskBackedMessageBuffer&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As DiskBackedMessageBuffer Implements IPersistableModel(Of DiskBackedMessageBuffer).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer" Usage="diskBackedMessageBuffer.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;DiskBackedMessageBuffer&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#IotOperations#Models#DiskBackedMessageBuffer&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of DiskBackedMessageBuffer).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="diskBackedMessageBuffer.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;DiskBackedMessageBuffer&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#IotOperations#Models#DiskBackedMessageBuffer&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of DiskBackedMessageBuffer).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="diskBackedMessageBuffer.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.IotOperations.Models.DiskBackedMessageBuffer&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.IotOperations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
