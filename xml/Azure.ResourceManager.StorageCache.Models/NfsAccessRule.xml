<Type Name="NfsAccessRule" FullName="Azure.ResourceManager.StorageCache.Models.NfsAccessRule">
  <TypeSignature Language="C#" Value="public class NfsAccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NfsAccessRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.StorageCache.Models.NfsAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public Class NfsAccessRule" />
  <TypeSignature Language="F#" Value="type NfsAccessRule = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Rule to place restrictions on portions of the cache namespace being presented to clients. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NfsAccessRule (Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope scope, Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope scope, valuetype Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.#ctor(Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope,Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As NfsAccessRuleScope, access As NfsAccessRuleAccess)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.StorageCache.Models.NfsAccessRule : Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope * Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess -&gt; Azure.ResourceManager.StorageCache.Models.NfsAccessRule" Usage="new Azure.ResourceManager.StorageCache.Models.NfsAccessRule (scope, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope" />
        <Parameter Name="access" Type="Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess" />
      </Parameters>
      <Docs>
        <param name="scope"> Scope for this rule. The scope and filter determine which clients match the rule. </param>
        <param name="access"> Access allowed by this rule. </param>
        <summary> Initializes a new instance of NfsAccessRule. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Access">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess Access { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess Access" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Access" />
      <MemberSignature Language="VB.NET" Value="Public Property Access As NfsAccessRuleAccess" />
      <MemberSignature Language="F#" Value="member this.Access : Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Access" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.Models.NfsAccessRuleAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Access allowed by this rule. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSubmountAccess">
      <MemberSignature Language="C#" Value="public bool? AllowSubmountAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AllowSubmountAccess" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AllowSubmountAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSubmountAccess As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AllowSubmountAccess : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AllowSubmountAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSuid">
      <MemberSignature Language="C#" Value="public bool? AllowSuid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AllowSuid" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AllowSuid" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSuid As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AllowSuid : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AllowSuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Allow SUID semantics. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousGID">
      <MemberSignature Language="C#" Value="public string AnonymousGID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousGID" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AnonymousGID" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousGID As String" />
      <MemberSignature Language="F#" Value="member this.AnonymousGID : string with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AnonymousGID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> GID value that replaces 0 when rootSquash is true. This will use the value of anonymousUID if not provided. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousUID">
      <MemberSignature Language="C#" Value="public string AnonymousUID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousUID" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AnonymousUID" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousUID As String" />
      <MemberSignature Language="F#" Value="member this.AnonymousUID : string with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.AnonymousUID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> UID value that replaces 0 when rootSquash is true. 65534 will be used if not provided. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRootSquash">
      <MemberSignature Language="C#" Value="public bool? EnableRootSquash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableRootSquash" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.EnableRootSquash" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRootSquash As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableRootSquash : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.EnableRootSquash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Map root accesses to anonymousUID and anonymousGID. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootSquash">
      <MemberSignature Language="C#" Value="public bool? RootSquash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RootSquash" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.RootSquash" />
      <MemberSignature Language="VB.NET" Value="Public Property RootSquash As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RootSquash : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.RootSquash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Map root accesses to anonymousUID and anonymousGID. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope Scope" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As NfsAccessRuleScope" />
      <MemberSignature Language="F#" Value="member this.Scope : Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.Models.NfsAccessRuleScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Scope for this rule. The scope and filter determine which clients match the rule. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmountAccess">
      <MemberSignature Language="C#" Value="public bool? SubmountAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; SubmountAccess" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.SubmountAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property SubmountAccess As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.SubmountAccess : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.SubmountAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Suid">
      <MemberSignature Language="C#" Value="public bool? Suid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Suid" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Suid" />
      <MemberSignature Language="VB.NET" Value="Public Property Suid As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Suid : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.StorageCache.Models.NfsAccessRule.Suid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Allow SUID semantics. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
