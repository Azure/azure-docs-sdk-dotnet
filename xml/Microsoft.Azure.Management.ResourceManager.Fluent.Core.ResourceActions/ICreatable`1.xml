<Type Name="ICreatable&lt;T&gt;" FullName="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface ICreatable&lt;T&gt; : Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICreatable`1&lt;T&gt; implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICreatable(Of T)&#xA;Implements IIndexable" />
  <TypeSignature Language="F#" Value="type ICreatable&lt;'T&gt; = interface&#xA;    interface IIndexable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public T Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Function Create () As T" />
      <MemberSignature Language="F#" Value="abstract member Create : unit -&gt; 'T" Usage="iCreatable.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Execute the create request.
            </summary>
        <returns>the create resource</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; CreateAsync (System.Threading.CancellationToken cancellationToken = null, bool multiThreaded = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!T&gt; CreateAsync(valuetype System.Threading.CancellationToken cancellationToken, bool multiThreaded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1.CreateAsync(System.Threading.CancellationToken,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.Threading.CancellationToken * bool -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="iCreatable.CreateAsync (cancellationToken, multiThreaded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="multiThreaded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">cancellationToken the cancellation token</param>
        <param name="multiThreaded">multiThreaded use mutli-threading</param>
        <summary>
            Puts the request into the queue and allow the HTTP client to execute
            it when system resources are available.
            </summary>
        <returns>a handle to cancel the request</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;'T&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the creatable resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>