<Type Name="EntireDetectResponse" FullName="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse">
  <TypeSignature Language="C#" Value="public class EntireDetectResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntireDetectResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse" />
  <TypeSignature Language="VB.NET" Value="Public Class EntireDetectResponse" />
  <TypeSignature Language="F#" Value="type EntireDetectResponse = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
    <AssemblyVersion>0.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntireDetectResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the EntireDetectResponse class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntireDetectResponse (int period, System.Collections.Generic.IList&lt;double&gt; expectedValues, System.Collections.Generic.IList&lt;double&gt; upperMargins, System.Collections.Generic.IList&lt;double&gt; lowerMargins, System.Collections.Generic.IList&lt;bool&gt; isAnomaly, System.Collections.Generic.IList&lt;bool&gt; isNegativeAnomaly, System.Collections.Generic.IList&lt;bool&gt; isPositiveAnomaly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 period, class System.Collections.Generic.IList`1&lt;float64&gt; expectedValues, class System.Collections.Generic.IList`1&lt;float64&gt; upperMargins, class System.Collections.Generic.IList`1&lt;float64&gt; lowerMargins, class System.Collections.Generic.IList`1&lt;bool&gt; isAnomaly, class System.Collections.Generic.IList`1&lt;bool&gt; isNegativeAnomaly, class System.Collections.Generic.IList`1&lt;bool&gt; isPositiveAnomaly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.#ctor(System.Int32,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Boolean},System.Collections.Generic.IList{System.Boolean},System.Collections.Generic.IList{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (period As Integer, expectedValues As IList(Of Double), upperMargins As IList(Of Double), lowerMargins As IList(Of Double), isAnomaly As IList(Of Boolean), isNegativeAnomaly As IList(Of Boolean), isPositiveAnomaly As IList(Of Boolean))" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse : int * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Collections.Generic.IList&lt;bool&gt; -&gt; Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse" Usage="new Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse (period, expectedValues, upperMargins, lowerMargins, isAnomaly, isNegativeAnomaly, isPositiveAnomaly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="period" Type="System.Int32" />
        <Parameter Name="expectedValues" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="upperMargins" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="lowerMargins" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="isAnomaly" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
        <Parameter Name="isNegativeAnomaly" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
        <Parameter Name="isPositiveAnomaly" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="period">Frequency extracted from the series, zero
            means no recurrent pattern has been found.</param>
        <param name="expectedValues">ExpectedValues contain expected value
            for each input point. The index of the array is consistent with the
            input series.</param>
        <param name="upperMargins">UpperMargins contain upper margin of
            each input point. UpperMargin is used to calculate upperBoundary,
            which equals to expectedValue + (100 - marginScale)*upperMargin.
            Anomalies in response can be filtered by upperBoundary and
            lowerBoundary. By adjusting marginScale value, less significant
            anomalies can be filtered in client side. The index of the array is
            consistent with the input series.</param>
        <param name="lowerMargins">LowerMargins contain lower margin of
            each input point. LowerMargin is used to calculate lowerBoundary,
            which equals to expectedValue - (100 - marginScale)*lowerMargin.
            Points between the boundary can be marked as normal ones in client
            side. The index of the array is consistent with the input
            series.</param>
        <param name="isAnomaly">IsAnomaly contains anomaly properties for
            each input point. True means an anomaly either negative or positive
            has been detected. The index of the array is consistent with the
            input series.</param>
        <param name="isNegativeAnomaly">IsNegativeAnomaly contains anomaly
            status in negative direction for each input point. True means a
            negative anomaly has been detected. A negative anomaly means the
            point is detected as an anomaly and its real value is smaller than
            the expected one. The index of the array is consistent with the
            input series.</param>
        <param name="isPositiveAnomaly">IsPositiveAnomaly contain anomaly
            status in positive direction for each input point. True means a
            positive anomaly has been detected. A positive anomaly means the
            point is detected as an anomaly and its real value is larger than
            the expected one. The index of the array is consistent with the
            input series.</param>
        <summary>
            Initializes a new instance of the EntireDetectResponse class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;double&gt; ExpectedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;float64&gt; ExpectedValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.ExpectedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpectedValues As IList(Of Double)" />
      <MemberSignature Language="F#" Value="member this.ExpectedValues : System.Collections.Generic.IList&lt;double&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.ExpectedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="expectedValues")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="expectedValues")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets expectedValues contain expected value for each input
            point. The index of the array is consistent with the input series.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnomaly">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; IsAnomaly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; IsAnomaly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.IsAnomaly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAnomaly As IList(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsAnomaly : System.Collections.Generic.IList&lt;bool&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.IsAnomaly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="isAnomaly")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="isAnomaly")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets isAnomaly contains anomaly properties for each input
            point. True means an anomaly either negative or positive has been
            detected. The index of the array is consistent with the input
            series.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeAnomaly">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; IsNegativeAnomaly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; IsNegativeAnomaly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.IsNegativeAnomaly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNegativeAnomaly As IList(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsNegativeAnomaly : System.Collections.Generic.IList&lt;bool&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.IsNegativeAnomaly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="isNegativeAnomaly")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="isNegativeAnomaly")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets isNegativeAnomaly contains anomaly status in negative
            direction for each input point. True means a negative anomaly has
            been detected. A negative anomaly means the point is detected as an
            anomaly and its real value is smaller than the expected one. The
            index of the array is consistent with the input series.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveAnomaly">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; IsPositiveAnomaly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; IsPositiveAnomaly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.IsPositiveAnomaly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPositiveAnomaly As IList(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsPositiveAnomaly : System.Collections.Generic.IList&lt;bool&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.IsPositiveAnomaly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="isPositiveAnomaly")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="isPositiveAnomaly")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets isPositiveAnomaly contain anomaly status in positive
            direction for each input point. True means a positive anomaly has
            been detected. A positive anomaly means the point is detected as an
            anomaly and its real value is larger than the expected one. The
            index of the array is consistent with the input series.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowerMargins">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;double&gt; LowerMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;float64&gt; LowerMargins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.LowerMargins" />
      <MemberSignature Language="VB.NET" Value="Public Property LowerMargins As IList(Of Double)" />
      <MemberSignature Language="F#" Value="member this.LowerMargins : System.Collections.Generic.IList&lt;double&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.LowerMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="lowerMargins")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="lowerMargins")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets lowerMargins contain lower margin of each input point.
            LowerMargin is used to calculate lowerBoundary, which equals to
            expectedValue - (100 - marginScale)*lowerMargin. Points between the
            boundary can be marked as normal ones in client side. The index of
            the array is consistent with the input series.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Period">
      <MemberSignature Language="C#" Value="public int Period { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Period" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.Period" />
      <MemberSignature Language="VB.NET" Value="Public Property Period As Integer" />
      <MemberSignature Language="F#" Value="member this.Period : int with get, set" Usage="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.Period" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="period")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="period")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets frequency extracted from the series, zero means no
            recurrent pattern has been found.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpperMargins">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;double&gt; UpperMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;float64&gt; UpperMargins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.UpperMargins" />
      <MemberSignature Language="VB.NET" Value="Public Property UpperMargins As IList(Of Double)" />
      <MemberSignature Language="F#" Value="member this.UpperMargins : System.Collections.Generic.IList&lt;double&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.UpperMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="upperMargins")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="upperMargins")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets upperMargins contain upper margin of each input point.
            UpperMargin is used to calculate upperBoundary, which equals to
            expectedValue + (100 - marginScale)*upperMargin. Anomalies in
            response can be filtered by upperBoundary and lowerBoundary. By
            adjusting marginScale value, less significant anomalies can be
            filtered in client side. The index of the array is consistent with
            the input series.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.AnomalyDetector.Models.EntireDetectResponse.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="entireDetectResponse.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.AnomalyDetector</AssemblyName>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
