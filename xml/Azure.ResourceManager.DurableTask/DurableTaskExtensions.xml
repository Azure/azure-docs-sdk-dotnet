<Type Name="DurableTaskExtensions" FullName="Azure.ResourceManager.DurableTask.DurableTaskExtensions">
  <TypeSignature Language="C#" Value="public static class DurableTaskExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DurableTaskExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DurableTask.DurableTaskExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DurableTaskExtensions" />
  <TypeSignature Language="F#" Value="type DurableTaskExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.DurableTask. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDurableTaskHubResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DurableTask.DurableTaskHubResource GetDurableTaskHubResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DurableTask.DurableTaskHubResource GetDurableTaskHubResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskHubResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskHubResource (client As ArmClient, id As ResourceIdentifier) As DurableTaskHubResource" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskHubResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DurableTask.DurableTaskHubResource" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskHubResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DurableTask.DurableTaskHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DurableTask.DurableTaskHubResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskArmClient.GetDurableTaskHubResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDurableTaskRetentionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource GetDurableTaskRetentionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource GetDurableTaskRetentionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskRetentionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskRetentionPolicyResource (client As ArmClient, id As ResourceIdentifier) As DurableTaskRetentionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskRetentionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskRetentionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskArmClient.GetDurableTaskRetentionPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskRetentionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDurableTaskScheduler">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt; GetDurableTaskScheduler (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string schedulerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt; GetDurableTaskScheduler(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string schedulerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskScheduler(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskScheduler (resourceGroupResource As ResourceGroupResource, schedulerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DurableTaskSchedulerResource)" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskScheduler : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskScheduler (resourceGroupResource, schedulerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="schedulerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="schedulerName"> The name of the Scheduler. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Scheduler
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DurableTask/schedulers/{schedulerName}</description></item><item><term>Operation Id</term><description>Scheduler_Get</description></item><item><term>Default Api Version</term><description>2025-04-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskResourceGroupResource.GetDurableTaskScheduler(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="schedulerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="schedulerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDurableTaskSchedulerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;&gt; GetDurableTaskSchedulerAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string schedulerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;&gt; GetDurableTaskSchedulerAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string schedulerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulerAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskSchedulerAsync (resourceGroupResource As ResourceGroupResource, schedulerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DurableTaskSchedulerResource))" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskSchedulerAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;&gt;" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulerAsync (resourceGroupResource, schedulerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="schedulerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="schedulerName"> The name of the Scheduler. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Scheduler
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DurableTask/schedulers/{schedulerName}</description></item><item><term>Operation Id</term><description>Scheduler_Get</description></item><item><term>Default Api Version</term><description>2025-04-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskResourceGroupResource.GetDurableTaskSchedulerAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="schedulerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="schedulerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDurableTaskSchedulerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource GetDurableTaskSchedulerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource GetDurableTaskSchedulerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskSchedulerResource (client As ArmClient, id As ResourceIdentifier) As DurableTaskSchedulerResource" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskSchedulerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskArmClient.GetDurableTaskSchedulerResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDurableTaskSchedulers">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DurableTask.DurableTaskSchedulerCollection GetDurableTaskSchedulers (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DurableTask.DurableTaskSchedulerCollection GetDurableTaskSchedulers(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulers(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskSchedulers (resourceGroupResource As ResourceGroupResource) As DurableTaskSchedulerCollection" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskSchedulers : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.DurableTask.DurableTaskSchedulerCollection" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulers resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DurableTask.DurableTaskSchedulerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of DurableTaskSchedulerResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskResourceGroupResource.GetDurableTaskSchedulers" /> instead.</description></item></summary>
        <returns> An object representing collection of DurableTaskSchedulerResources and their operations over a DurableTaskSchedulerResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDurableTaskSchedulers">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt; GetDurableTaskSchedulers (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt; GetDurableTaskSchedulers(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulers(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskSchedulers (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DurableTaskSchedulerResource)" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskSchedulers : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulers (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Schedulers by subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DurableTask/schedulers</description></item><item><term>Operation Id</term><description>Scheduler_ListBySubscription</description></item><item><term>Default Api Version</term><description>2025-04-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskSubscriptionResource.GetDurableTaskSchedulers(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDurableTaskSchedulersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt; GetDurableTaskSchedulersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt; GetDurableTaskSchedulersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDurableTaskSchedulersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DurableTaskSchedulerResource)" />
      <MemberSignature Language="F#" Value="static member GetDurableTaskSchedulersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;" Usage="Azure.ResourceManager.DurableTask.DurableTaskExtensions.GetDurableTaskSchedulersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DurableTask</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Schedulers by subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DurableTask/schedulers</description></item><item><term>Operation Id</term><description>Scheduler_ListBySubscription</description></item><item><term>Default Api Version</term><description>2025-04-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.DurableTask.Mocking.MockableDurableTaskSubscriptionResource.GetDurableTaskSchedulers(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DurableTask.DurableTaskSchedulerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
