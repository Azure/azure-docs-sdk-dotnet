<Type Name="BotContextExtension" FullName="Microsoft.Bot.Builder.BotContextExtension">
  <TypeSignature Language="C#" Value="public static class BotContextExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BotContextExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.BotContextExtension" />
  <TypeSignature Language="VB.NET" Value="Public Module BotContextExtension" />
  <TypeSignature Language="F#" Value="type BotContextExtension = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
    <AssemblyVersion>4.0.0.11</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Get&lt;ObjectT&gt;">
      <MemberSignature Language="C#" Value="public static ObjectT Get&lt;ObjectT&gt; (this Microsoft.Bot.Builder.IBotContext context, string key = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!ObjectT Get&lt;ObjectT&gt;(class Microsoft.Bot.Builder.IBotContext context, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotContextExtension.Get``1(Microsoft.Bot.Builder.IBotContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get(Of ObjectT) (context As IBotContext, Optional key As String = null) As ObjectT" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Bot.Builder.IBotContext * string -&gt; 'ObjectT" Usage="Microsoft.Bot.Builder.BotContextExtension.Get (context, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjectT</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="ObjectT" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.IBotContext" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="ObjectT">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set&lt;ObjectT&gt;">
      <MemberSignature Language="C#" Value="public static void Set&lt;ObjectT&gt; (this Microsoft.Bot.Builder.IBotContext context, ObjectT value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Set&lt;ObjectT&gt;(class Microsoft.Bot.Builder.IBotContext context, !!ObjectT value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotContextExtension.Set``1(Microsoft.Bot.Builder.IBotContext,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Set(Of ObjectT) (context As IBotContext, value As ObjectT)" />
      <MemberSignature Language="F#" Value="static member Set : Microsoft.Bot.Builder.IBotContext * 'ObjectT -&gt; unit" Usage="Microsoft.Bot.Builder.BotContextExtension.Set (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="ObjectT" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.IBotContext" RefType="this" />
        <Parameter Name="value" Type="ObjectT" />
      </Parameters>
      <Docs>
        <typeparam name="ObjectT">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>