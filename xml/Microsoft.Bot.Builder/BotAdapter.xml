<Type Name="BotAdapter" FullName="Microsoft.Bot.Builder.BotAdapter">
  <TypeSignature Language="C#" Value="public abstract class BotAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BotAdapter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.BotAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BotAdapter" />
  <TypeSignature Language="F#" Value="type BotAdapter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
    <AssemblyVersion>4.0.0.11</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_middlewareSet">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.Bot.Builder.MiddlewareSet _middlewareSet;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.Bot.Builder.MiddlewareSet _middlewareSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.BotAdapter._middlewareSet" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly _middlewareSet As MiddlewareSet " />
      <MemberSignature Language="F#" Value="val mutable _middlewareSet : Microsoft.Bot.Builder.MiddlewareSet" Usage="Microsoft.Bot.Builder.BotAdapter._middlewareSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.MiddlewareSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueConversation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ContinueConversation (Microsoft.Bot.Schema.ConversationReference reference, Func&lt;Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ContinueConversation(class Microsoft.Bot.Schema.ConversationReference reference, class System.Func`2&lt;class Microsoft.Bot.Builder.IBotContext, class System.Threading.Tasks.Task&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.ContinueConversation(Microsoft.Bot.Schema.ConversationReference,System.Func{Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContinueConversation (reference As ConversationReference, callback As Func(Of IBotContext, Task)) As Task" />
      <MemberSignature Language="F#" Value="abstract member ContinueConversation : Microsoft.Bot.Schema.ConversationReference * Func&lt;Microsoft.Bot.Builder.IBotContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.ContinueConversation : Microsoft.Bot.Schema.ConversationReference * Func&lt;Microsoft.Bot.Builder.IBotContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="botAdapter.ContinueConversation (reference, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="Microsoft.Bot.Schema.ConversationReference" />
        <Parameter Name="callback" Type="System.Func&lt;Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConversation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateConversation (string channelId, Func&lt;Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateConversation(string channelId, class System.Func`2&lt;class Microsoft.Bot.Builder.IBotContext, class System.Threading.Tasks.Task&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.CreateConversation(System.String,System.Func{Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateConversation (channelId As String, callback As Func(Of IBotContext, Task)) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateConversation : string * Func&lt;Microsoft.Bot.Builder.IBotContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.CreateConversation : string * Func&lt;Microsoft.Bot.Builder.IBotContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="botAdapter.CreateConversation (channelId, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Builder.BotAdapter/&lt;CreateConversation&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="callback" Type="System.Func&lt;Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="channelId">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteActivity">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task DeleteActivity (Microsoft.Bot.Builder.IBotContext context, Microsoft.Bot.Schema.ConversationReference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteActivity(class Microsoft.Bot.Builder.IBotContext context, class Microsoft.Bot.Schema.ConversationReference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.DeleteActivity(Microsoft.Bot.Builder.IBotContext,Microsoft.Bot.Schema.ConversationReference)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteActivity (context As IBotContext, reference As ConversationReference) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteActivity : Microsoft.Bot.Builder.IBotContext * Microsoft.Bot.Schema.ConversationReference -&gt; System.Threading.Tasks.Task" Usage="botAdapter.DeleteActivity (context, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.IBotContext" />
        <Parameter Name="reference" Type="Microsoft.Bot.Schema.ConversationReference" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="reference">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunPipeline">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task RunPipeline (Microsoft.Bot.Builder.IBotContext context, Func&lt;Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task&gt; callback = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task RunPipeline(class Microsoft.Bot.Builder.IBotContext context, class System.Func`2&lt;class Microsoft.Bot.Builder.IBotContext, class System.Threading.Tasks.Task&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.RunPipeline(Microsoft.Bot.Builder.IBotContext,System.Func{Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Protected Function RunPipeline (context As IBotContext, Optional callback As Func(Of IBotContext, Task) = null) As Task" />
      <MemberSignature Language="F#" Value="member this.RunPipeline : Microsoft.Bot.Builder.IBotContext * Func&lt;Microsoft.Bot.Builder.IBotContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="botAdapter.RunPipeline (context, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Bot.Builder.BotAdapter/&lt;RunPipeline&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.IBotContext" />
        <Parameter Name="callback" Type="System.Func&lt;Microsoft.Bot.Builder.IBotContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendActivity">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendActivity (Microsoft.Bot.Builder.IBotContext context, params Microsoft.Bot.Schema.Activity[] activities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendActivity(class Microsoft.Bot.Builder.IBotContext context, class Microsoft.Bot.Schema.Activity[] activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.SendActivity(Microsoft.Bot.Builder.IBotContext,Microsoft.Bot.Schema.Activity[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendActivity (context As IBotContext, ParamArray activities As Activity()) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendActivity : Microsoft.Bot.Builder.IBotContext * Microsoft.Bot.Schema.Activity[] -&gt; System.Threading.Tasks.Task" Usage="botAdapter.SendActivity (context, activities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.IBotContext" />
        <Parameter Name="activities" Type="Microsoft.Bot.Schema.Activity[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="activities">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateActivity">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; UpdateActivity (Microsoft.Bot.Builder.IBotContext context, Microsoft.Bot.Schema.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; UpdateActivity(class Microsoft.Bot.Builder.IBotContext context, class Microsoft.Bot.Schema.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.UpdateActivity(Microsoft.Bot.Builder.IBotContext,Microsoft.Bot.Schema.Activity)" />
      <MemberSignature Language="F#" Value="abstract member UpdateActivity : Microsoft.Bot.Builder.IBotContext * Microsoft.Bot.Schema.Activity -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="botAdapter.UpdateActivity (context, activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.IBotContext" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="activity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.BotAdapter Use (Microsoft.Bot.Builder.IMiddleware middleware);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Builder.BotAdapter Use(class Microsoft.Bot.Builder.IMiddleware middleware) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotAdapter.Use(Microsoft.Bot.Builder.IMiddleware)" />
      <MemberSignature Language="VB.NET" Value="Public Function Use (middleware As IMiddleware) As BotAdapter" />
      <MemberSignature Language="F#" Value="member this.Use : Microsoft.Bot.Builder.IMiddleware -&gt; Microsoft.Bot.Builder.BotAdapter" Usage="botAdapter.Use middleware" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Core</AssemblyName>
        <AssemblyVersion>4.0.0.11</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.BotAdapter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="middleware" Type="Microsoft.Bot.Builder.IMiddleware" />
      </Parameters>
      <Docs>
        <param name="middleware">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>