<Type Name="ICustomVisionTrainingClient" FullName="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient">
  <TypeSignature Language="C#" Value="public interface ICustomVisionTrainingClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomVisionTrainingClient implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomVisionTrainingClient&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ICustomVisionTrainingClient = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
    <AssemblyVersion>0.13.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary />
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApiKey">
      <MemberSignature Language="C#" Value="public string ApiKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApiKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.ApiKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ApiKey As String" />
      <MemberSignature Language="F#" Value="member this.ApiKey : string with get, set" Usage="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.ApiKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImageRegionsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateSummary&gt;&gt; CreateImageRegionsWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateBatch batch, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateSummary&gt;&gt; CreateImageRegionsWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateBatch batch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateImageRegionsWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateBatch,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateImageRegionsWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateBatch * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateSummary&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateImageRegionsWithHttpMessagesAsync (projectId, batch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="batch" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionCreateBatch" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="batch">
            Batch of image regions which include a tag and bounding box.
            Limited to 64.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Create a set of image regions.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API accepts a batch of image regions, and optionally tags, to
            update existing images with region information.
            There is a limit of 64 entries in the batch.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImagesFromDataWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromDataWithHttpMessagesAsync (Guid projectId, System.IO.Stream imageData, System.Collections.Generic.IList&lt;string&gt; tagIds = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromDataWithHttpMessagesAsync(valuetype System.Guid projectId, class System.IO.Stream imageData, class System.Collections.Generic.IList`1&lt;string&gt; tagIds, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateImagesFromDataWithHttpMessagesAsync(System.Guid,System.IO.Stream,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateImagesFromDataWithHttpMessagesAsync : Guid * System.IO.Stream * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateImagesFromDataWithHttpMessagesAsync (projectId, imageData, tagIds, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="imageData" Type="System.IO.Stream" />
        <Parameter Name="tagIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="imageData">
            Binary image data.
            </param>
        <param name="tagIds">
            The tags ids with which to tag each image. Limited to 20.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Add the provided images to the set of training images.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API accepts body content as multipart/form-data and
            application/octet-stream. When using multipart
            multiple image files can be sent at once, with a maximum of 64
            files
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImagesFromFilesWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromFilesWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageFileCreateBatch batch, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromFilesWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageFileCreateBatch batch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateImagesFromFilesWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageFileCreateBatch,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateImagesFromFilesWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageFileCreateBatch * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateImagesFromFilesWithHttpMessagesAsync (projectId, batch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="batch" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageFileCreateBatch" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="batch">
            The batch of image files to add. Limited to 64 images and 20 tags
            per batch.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Add the provided batch of images to the set of training images.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API accepts a batch of files, and optionally tags, to create
            images. There is a limit of 64 images and 20 tags.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImagesFromPredictionsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromPredictionsWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageIdCreateBatch batch, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromPredictionsWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageIdCreateBatch batch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateImagesFromPredictionsWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageIdCreateBatch,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateImagesFromPredictionsWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageIdCreateBatch * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateImagesFromPredictionsWithHttpMessagesAsync (projectId, batch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="batch" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageIdCreateBatch" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="batch">
            Image and tag ids. Limted to 64 images and 20 tags per batch.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Add the specified predicted images to the set of training images.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API creates a batch of images from predicted images specified.
            There is a limit of 64 images and 20 tags.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImagesFromUrlsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromUrlsWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrlCreateBatch batch, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt; CreateImagesFromUrlsWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrlCreateBatch batch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateImagesFromUrlsWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrlCreateBatch,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateImagesFromUrlsWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrlCreateBatch * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateImagesFromUrlsWithHttpMessagesAsync (projectId, batch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageCreateSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="batch" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrlCreateBatch" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="batch">
            Image urls and tag ids. Limited to 64 images and 20 tags per batch.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Add the provided images urls to the set of training images.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API accepts a batch of urls, and optionally tags, to create
            images. There is a limit of 64 images and 20 tags.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImageTagsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateSummary&gt;&gt; CreateImageTagsWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateBatch batch, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateSummary&gt;&gt; CreateImageTagsWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateBatch batch, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateImageTagsWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateBatch,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateImageTagsWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateBatch * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateSummary&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateImageTagsWithHttpMessagesAsync (projectId, batch, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="batch" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageTagCreateBatch" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="batch">
            Batch of image tags. Limited to 128 tags per batch.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Associate a set of images with a set of tags.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt; CreateProjectWithHttpMessagesAsync (string name, string description = null, Nullable&lt;Guid&gt; domainId = null, string classificationType = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt; CreateProjectWithHttpMessagesAsync(string name, string description, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; domainId, string classificationType, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateProjectWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateProjectWithHttpMessagesAsync : string * string * Nullable&lt;Guid&gt; * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateProjectWithHttpMessagesAsync (name, description, domainId, classificationType, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="domainId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="classificationType" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">
            Name of the project.
            </param>
        <param name="description">
            The description of the project.
            </param>
        <param name="domainId">
            The id of the domain to use for this project. Defaults to General.
            </param>
        <param name="classificationType">
            The type of classifier to create for this project. Possible values
            include: 'Multiclass', 'Multilabel'
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Create a project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTagWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt; CreateTagWithHttpMessagesAsync (Guid projectId, string name, string description = null, string type = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt; CreateTagWithHttpMessagesAsync(valuetype System.Guid projectId, string name, string description, string type, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.CreateTagWithHttpMessagesAsync(System.Guid,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateTagWithHttpMessagesAsync : Guid * string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;" Usage="iCustomVisionTrainingClient.CreateTagWithHttpMessagesAsync (projectId, name, description, type, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="name">
            The tag name.
            </param>
        <param name="description">
            Optional description for the tag.
            </param>
        <param name="type">
            Optional type for the tag. Possible values include: 'Regular',
            'Negative'
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Create a tag for the project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteImageRegionsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteImageRegionsWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.IList&lt;string&gt; regionIds, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteImageRegionsWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.IList`1&lt;string&gt; regionIds, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeleteImageRegionsWithHttpMessagesAsync(System.Guid,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteImageRegionsWithHttpMessagesAsync : Guid * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iCustomVisionTrainingClient.DeleteImageRegionsWithHttpMessagesAsync (projectId, regionIds, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="regionIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="regionIds">
            Regions to delete. Limited to 64.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete a set of image regions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteImagesWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteImagesWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.IList&lt;string&gt; imageIds, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteImagesWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.IList`1&lt;string&gt; imageIds, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeleteImagesWithHttpMessagesAsync(System.Guid,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteImagesWithHttpMessagesAsync : Guid * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iCustomVisionTrainingClient.DeleteImagesWithHttpMessagesAsync (projectId, imageIds, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="imageIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="imageIds">
            Ids of the images to be deleted. Limted to 256 images per batch.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete images from the set of training images.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteImageTagsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteImageTagsWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.IList&lt;string&gt; imageIds, System.Collections.Generic.IList&lt;string&gt; tagIds, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteImageTagsWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.IList`1&lt;string&gt; imageIds, class System.Collections.Generic.IList`1&lt;string&gt; tagIds, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeleteImageTagsWithHttpMessagesAsync(System.Guid,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteImageTagsWithHttpMessagesAsync : Guid * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iCustomVisionTrainingClient.DeleteImageTagsWithHttpMessagesAsync (projectId, imageIds, tagIds, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="imageIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="tagIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="imageIds">
            Image ids. Limited to 64 images.
            </param>
        <param name="tagIds">
            Tags to be deleted from the specified images. Limted to 20 tags.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Remove a set of tags from a set of images.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIterationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteIterationWithHttpMessagesAsync (Guid projectId, Guid iterationId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteIterationWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeleteIterationWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIterationWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iCustomVisionTrainingClient.DeleteIterationWithHttpMessagesAsync (projectId, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete a specific iteration of a project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeletePredictionWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeletePredictionWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.IList&lt;string&gt; ids, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeletePredictionWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.IList`1&lt;string&gt; ids, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeletePredictionWithHttpMessagesAsync(System.Guid,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeletePredictionWithHttpMessagesAsync : Guid * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iCustomVisionTrainingClient.DeletePredictionWithHttpMessagesAsync (projectId, ids, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="ids" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="ids">
            The prediction ids. Limited to 64.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete a set of predicted images and their associated prediction
            results.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProjectWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteProjectWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteProjectWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeleteProjectWithHttpMessagesAsync(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteProjectWithHttpMessagesAsync : Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iCustomVisionTrainingClient.DeleteProjectWithHttpMessagesAsync (projectId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete a specific project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTagWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteTagWithHttpMessagesAsync (Guid projectId, Guid tagId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteTagWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid tagId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeleteTagWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTagWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iCustomVisionTrainingClient.DeleteTagWithHttpMessagesAsync (projectId, tagId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="tagId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="tagId">
            Id of the tag to be deleted.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete a tag from the project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializationSettings">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.JsonSerializerSettings DeserializationSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.JsonSerializerSettings DeserializationSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeserializationSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeserializationSettings As JsonSerializerSettings" />
      <MemberSignature Language="F#" Value="member this.DeserializationSettings : Newtonsoft.Json.JsonSerializerSettings" Usage="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.DeserializationSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonSerializerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets json deserialization settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public string Endpoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Endpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property Endpoint As String" />
      <MemberSignature Language="F#" Value="member this.Endpoint : string with get, set" Usage="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Supported Cognitive Services endpoints
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportIterationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt; ExportIterationWithHttpMessagesAsync (Guid projectId, Guid iterationId, string platform, string flavor = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt; ExportIterationWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, string platform, string flavor, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.ExportIterationWithHttpMessagesAsync(System.Guid,System.Guid,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExportIterationWithHttpMessagesAsync : Guid * Guid * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt;" Usage="iCustomVisionTrainingClient.ExportIterationWithHttpMessagesAsync (projectId, iterationId, platform, flavor, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="platform" Type="System.String" />
        <Parameter Name="flavor" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id.
            </param>
        <param name="platform">
            The target platform. Possible values include: 'CoreML',
            'TensorFlow', 'DockerFile', 'ONNX'
            </param>
        <param name="flavor">
            The flavor of the target platform. Possible values include:
            'Linux', 'Windows', 'ONNX10', 'ONNX12'
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Export a trained iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt;&gt; GetDomainsWithHttpMessagesAsync (System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt;&gt; GetDomainsWithHttpMessagesAsync(class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetDomainsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDomainsWithHttpMessagesAsync : System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetDomainsWithHttpMessagesAsync (customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get a list of the available domains.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt; GetDomainWithHttpMessagesAsync (Guid domainId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt; GetDomainWithHttpMessagesAsync(valuetype System.Guid domainId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetDomainWithHttpMessagesAsync(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDomainWithHttpMessagesAsync : Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt;" Usage="iCustomVisionTrainingClient.GetDomainWithHttpMessagesAsync (domainId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Domain&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="domainId">
            The id of the domain to get information about.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get information about a specific domain.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt;&gt; GetExportsWithHttpMessagesAsync (Guid projectId, Guid iterationId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt;&gt; GetExportsWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetExportsWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetExportsWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetExportsWithHttpMessagesAsync (projectId, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Export&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get the list of exports for a specific iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImagePerformanceCountWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Nullable&lt;int&gt;&gt;&gt; GetImagePerformanceCountWithHttpMessagesAsync (Guid projectId, Guid iterationId, System.Collections.Generic.IList&lt;string&gt; tagIds = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; GetImagePerformanceCountWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, class System.Collections.Generic.IList`1&lt;string&gt; tagIds, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetImagePerformanceCountWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetImagePerformanceCountWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Nullable&lt;int&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetImagePerformanceCountWithHttpMessagesAsync (projectId, iterationId, tagIds, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Nullable&lt;System.Int32&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="tagIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="tagIds">
            A list of tags ids to filter the images to count. Defaults to all
            tags when null.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the number of images tagged with the provided {tagIds} that
            have prediction results from
            training for the provided iteration {iterationId}.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The filtering is on an and/or relationship. For example, if the
            provided tag ids are for the "Dog" and
            "Cat" tags, then only images tagged with Dog and/or Cat will be
            returned
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImagePerformancesWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePerformance&gt;&gt;&gt; GetImagePerformancesWithHttpMessagesAsync (Guid projectId, Guid iterationId, System.Collections.Generic.IList&lt;string&gt; tagIds = null, string orderBy = null, Nullable&lt;int&gt; take = 50, Nullable&lt;int&gt; skip = 0, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePerformance&gt;&gt;&gt; GetImagePerformancesWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, class System.Collections.Generic.IList`1&lt;string&gt; tagIds, string orderBy, valuetype System.Nullable`1&lt;int32&gt; take, valuetype System.Nullable`1&lt;int32&gt; skip, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetImagePerformancesWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetImagePerformancesWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.IList&lt;string&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePerformance&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetImagePerformancesWithHttpMessagesAsync (projectId, iterationId, tagIds, orderBy, take, skip, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePerformance&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="tagIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="tagIds">
            A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
            </param>
        <param name="orderBy">
            The ordering. Defaults to newest. Possible values include:
            'Newest', 'Oldest'
            </param>
        <param name="take">
            Maximum number of images to return. Defaults to 50, limited to 256.
            </param>
        <param name="skip">
            Number of images to skip before beginning the image batch. Defaults
            to 0.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get image with its prediction for a given project iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API supports batching and range selection. By default it will
            only return first 50 images matching images.
            Use the {take} and {skip} parameters to control how many images to
            return in a given batch.
            The filtering is on an and/or relationship. For example, if the
            provided tag ids are for the "Dog" and
            "Cat" tags, then only images tagged with Dog and/or Cat will be
            returned
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageRegionProposalsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionProposal&gt;&gt; GetImageRegionProposalsWithHttpMessagesAsync (Guid projectId, Guid imageId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionProposal&gt;&gt; GetImageRegionProposalsWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid imageId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetImageRegionProposalsWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetImageRegionProposalsWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionProposal&gt;&gt;" Usage="iCustomVisionTrainingClient.GetImageRegionProposalsWithHttpMessagesAsync (projectId, imageId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageRegionProposal&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="imageId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="imageId">
            The image id.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get region proposals for an image. Returns empty array if no
            proposals are found.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API will get region proposals for an image along with
            confidences for the region. It returns an empty array if no
            proposals are found.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImagesByIdsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt; GetImagesByIdsWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.IList&lt;string&gt; imageIds = null, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt; GetImagesByIdsWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.IList`1&lt;string&gt; imageIds, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetImagesByIdsWithHttpMessagesAsync(System.Guid,System.Collections.Generic.IList{System.String},System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetImagesByIdsWithHttpMessagesAsync : Guid * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;Guid&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetImagesByIdsWithHttpMessagesAsync (projectId, imageIds, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="imageIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="imageIds">
            The list of image ids to retrieve. Limited to 256.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get images by id for a given project iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API will return a set of Images for the specified tags and
            optionally iteration. If no iteration is specified the
            current workspace is used.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIterationPerformanceWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.IterationPerformance&gt;&gt; GetIterationPerformanceWithHttpMessagesAsync (Guid projectId, Guid iterationId, Nullable&lt;double&gt; threshold = null, Nullable&lt;double&gt; overlapThreshold = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.IterationPerformance&gt;&gt; GetIterationPerformanceWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, valuetype System.Nullable`1&lt;float64&gt; threshold, valuetype System.Nullable`1&lt;float64&gt; overlapThreshold, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetIterationPerformanceWithHttpMessagesAsync(System.Guid,System.Guid,System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetIterationPerformanceWithHttpMessagesAsync : Guid * Guid * Nullable&lt;double&gt; * Nullable&lt;double&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.IterationPerformance&gt;&gt;" Usage="iCustomVisionTrainingClient.GetIterationPerformanceWithHttpMessagesAsync (projectId, iterationId, threshold, overlapThreshold, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.IterationPerformance&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="threshold" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="overlapThreshold" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The id of the project the iteration belongs to.
            </param>
        <param name="iterationId">
            The id of the iteration to get.
            </param>
        <param name="threshold">
            The threshold used to determine true predictions.
            </param>
        <param name="overlapThreshold">
            If applicable, the bounding box overlap threshold used to determine
            true predictions.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get detailed performance information about an iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIterationsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;&gt; GetIterationsWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;&gt; GetIterationsWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetIterationsWithHttpMessagesAsync(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetIterationsWithHttpMessagesAsync : Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetIterationsWithHttpMessagesAsync (projectId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get iterations for the project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIterationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt; GetIterationWithHttpMessagesAsync (Guid projectId, Guid iterationId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt; GetIterationWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetIterationWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetIterationWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;" Usage="iCustomVisionTrainingClient.GetIterationWithHttpMessagesAsync (projectId, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The id of the project the iteration belongs to.
            </param>
        <param name="iterationId">
            The id of the iteration to get.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get a specific iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;&gt; GetProjectsWithHttpMessagesAsync (System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;&gt; GetProjectsWithHttpMessagesAsync(class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetProjectsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProjectsWithHttpMessagesAsync : System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetProjectsWithHttpMessagesAsync (customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get your projects.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt; GetProjectWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt; GetProjectWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetProjectWithHttpMessagesAsync(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProjectWithHttpMessagesAsync : Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;" Usage="iCustomVisionTrainingClient.GetProjectWithHttpMessagesAsync (projectId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The id of the project to get.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get a specific project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaggedImageCountWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Nullable&lt;int&gt;&gt;&gt; GetTaggedImageCountWithHttpMessagesAsync (Guid projectId, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.IList&lt;string&gt; tagIds = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; GetTaggedImageCountWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.IList`1&lt;string&gt; tagIds, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetTaggedImageCountWithHttpMessagesAsync(System.Guid,System.Nullable{System.Guid},System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaggedImageCountWithHttpMessagesAsync : Guid * Nullable&lt;Guid&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Nullable&lt;int&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetTaggedImageCountWithHttpMessagesAsync (projectId, iterationId, tagIds, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Nullable&lt;System.Int32&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="tagIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="tagIds">
            A list of tags ids to filter the images to count. Defaults to all
            tags when null.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the number of images tagged with the provided {tagIds}.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The filtering is on an and/or relationship. For example, if the
            provided tag ids are for the "Dog" and
            "Cat" tags, then only images tagged with Dog and/or Cat will be
            returned
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaggedImagesWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt; GetTaggedImagesWithHttpMessagesAsync (Guid projectId, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.IList&lt;string&gt; tagIds = null, string orderBy = null, Nullable&lt;int&gt; take = 50, Nullable&lt;int&gt; skip = 0, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt; GetTaggedImagesWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.IList`1&lt;string&gt; tagIds, string orderBy, valuetype System.Nullable`1&lt;int32&gt; take, valuetype System.Nullable`1&lt;int32&gt; skip, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetTaggedImagesWithHttpMessagesAsync(System.Guid,System.Nullable{System.Guid},System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaggedImagesWithHttpMessagesAsync : Guid * Nullable&lt;Guid&gt; * System.Collections.Generic.IList&lt;string&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetTaggedImagesWithHttpMessagesAsync (projectId, iterationId, tagIds, orderBy, take, skip, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="tagIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="tagIds">
            A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
            </param>
        <param name="orderBy">
            The ordering. Defaults to newest. Possible values include:
            'Newest', 'Oldest'
            </param>
        <param name="take">
            Maximum number of images to return. Defaults to 50, limited to 256.
            </param>
        <param name="skip">
            Number of images to skip before beginning the image batch. Defaults
            to 0.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get tagged images for a given project iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API supports batching and range selection. By default it will
            only return first 50 images matching images.
            Use the {take} and {skip} parameters to control how many images to
            return in a given batch.
            The filtering is on an and/or relationship. For example, if the
            provided tag ids are for the "Dog" and
            "Cat" tags, then only images tagged with Dog and/or Cat will be
            returned
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;&gt; GetTagsWithHttpMessagesAsync (Guid projectId, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;&gt; GetTagsWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetTagsWithHttpMessagesAsync(System.Guid,System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTagsWithHttpMessagesAsync : Guid * Nullable&lt;Guid&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetTagsWithHttpMessagesAsync (projectId, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get the tags for a given project and iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt; GetTagWithHttpMessagesAsync (Guid projectId, Guid tagId, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt; GetTagWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid tagId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetTagWithHttpMessagesAsync(System.Guid,System.Guid,System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTagWithHttpMessagesAsync : Guid * Guid * Nullable&lt;Guid&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;" Usage="iCustomVisionTrainingClient.GetTagWithHttpMessagesAsync (projectId, tagId, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="tagId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project this tag belongs to.
            </param>
        <param name="tagId">
            The tag id.
            </param>
        <param name="iterationId">
            The iteration to retrieve this tag from. Optional, defaults to
            current training set.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get information about a specific tag.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUntaggedImageCountWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Nullable&lt;int&gt;&gt;&gt; GetUntaggedImageCountWithHttpMessagesAsync (Guid projectId, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; GetUntaggedImageCountWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetUntaggedImageCountWithHttpMessagesAsync(System.Guid,System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetUntaggedImageCountWithHttpMessagesAsync : Guid * Nullable&lt;Guid&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Nullable&lt;int&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetUntaggedImageCountWithHttpMessagesAsync (projectId, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Nullable&lt;System.Int32&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets the number of untagged images.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API returns the images which have no tags for a given project
            and optionally an iteration. If no iteration is specified the
            current workspace is used.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUntaggedImagesWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt; GetUntaggedImagesWithHttpMessagesAsync (Guid projectId, Nullable&lt;Guid&gt; iterationId = null, string orderBy = null, Nullable&lt;int&gt; take = 50, Nullable&lt;int&gt; skip = 0, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt; GetUntaggedImagesWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, string orderBy, valuetype System.Nullable`1&lt;int32&gt; take, valuetype System.Nullable`1&lt;int32&gt; skip, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.GetUntaggedImagesWithHttpMessagesAsync(System.Guid,System.Nullable{System.Guid},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetUntaggedImagesWithHttpMessagesAsync : Guid * Nullable&lt;Guid&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt;" Usage="iCustomVisionTrainingClient.GetUntaggedImagesWithHttpMessagesAsync (projectId, iterationId, orderBy, take, skip, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Image&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="iterationId">
            The iteration id. Defaults to workspace.
            </param>
        <param name="orderBy">
            The ordering. Defaults to newest. Possible values include:
            'Newest', 'Oldest'
            </param>
        <param name="take">
            Maximum number of images to return. Defaults to 50, limited to 256.
            </param>
        <param name="skip">
            Number of images to skip before beginning the image batch. Defaults
            to 0.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get untagged images for a given project iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This API supports batching and range selection. By default it will
            only return first 50 images matching images.
            Use the {take} and {skip} parameters to control how many images to
            return in a given batch.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPredictionsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryResult&gt;&gt; QueryPredictionsWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryToken query, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryResult&gt;&gt; QueryPredictionsWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryToken query, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.QueryPredictionsWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryToken,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueryPredictionsWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryToken * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryResult&gt;&gt;" Usage="iCustomVisionTrainingClient.QueryPredictionsWithHttpMessagesAsync (projectId, query, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="query" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.PredictionQueryToken" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="query">
            Parameters used to query the predictions. Limited to combining 2
            tags.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get images that were sent to your prediction endpoint.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickTestImageUrlWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt; QuickTestImageUrlWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrl imageUrl, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt; QuickTestImageUrlWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrl imageUrl, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.QuickTestImageUrlWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrl,System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QuickTestImageUrlWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrl * Nullable&lt;Guid&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt;" Usage="iCustomVisionTrainingClient.QuickTestImageUrlWithHttpMessagesAsync (projectId, imageUrl, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="imageUrl" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImageUrl" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project to evaluate against.
            </param>
        <param name="imageUrl">
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the
            image to be evaluated.
            </param>
        <param name="iterationId">
            Optional. Specifies the id of a particular iteration to evaluate
            against.
            The default iteration for the project will be used when not
            specified.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Quick test an image url.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickTestImageWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt; QuickTestImageWithHttpMessagesAsync (Guid projectId, System.IO.Stream imageData, Nullable&lt;Guid&gt; iterationId = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt; QuickTestImageWithHttpMessagesAsync(valuetype System.Guid projectId, class System.IO.Stream imageData, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; iterationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.QuickTestImageWithHttpMessagesAsync(System.Guid,System.IO.Stream,System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QuickTestImageWithHttpMessagesAsync : Guid * System.IO.Stream * Nullable&lt;Guid&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt;" Usage="iCustomVisionTrainingClient.QuickTestImageWithHttpMessagesAsync (projectId, imageData, iterationId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.ImagePrediction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="imageData" Type="System.IO.Stream" />
        <Parameter Name="iterationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="imageData">
            Binary image data.
            </param>
        <param name="iterationId">
            Optional. Specifies the id of a particular iteration to evaluate
            against.
            The default iteration for the project will be used when not
            specified.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Quick test an image.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationSettings">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.JsonSerializerSettings SerializationSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.JsonSerializerSettings SerializationSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.SerializationSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationSettings As JsonSerializerSettings" />
      <MemberSignature Language="F#" Value="member this.SerializationSettings : Newtonsoft.Json.JsonSerializerSettings" Usage="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.SerializationSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonSerializerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets json serialization settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrainProjectWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt; TrainProjectWithHttpMessagesAsync (Guid projectId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt; TrainProjectWithHttpMessagesAsync(valuetype System.Guid projectId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.TrainProjectWithHttpMessagesAsync(System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member TrainProjectWithHttpMessagesAsync : Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;" Usage="iCustomVisionTrainingClient.TrainProjectWithHttpMessagesAsync (projectId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Queues project for training.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIterationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt; UpdateIterationWithHttpMessagesAsync (Guid projectId, Guid iterationId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration updatedIteration, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt; UpdateIterationWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid iterationId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration updatedIteration, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.UpdateIterationWithHttpMessagesAsync(System.Guid,System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIterationWithHttpMessagesAsync : Guid * Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;" Usage="iCustomVisionTrainingClient.UpdateIterationWithHttpMessagesAsync (projectId, iterationId, updatedIteration, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="iterationId" Type="System.Guid" />
        <Parameter Name="updatedIteration" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Iteration" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            Project id.
            </param>
        <param name="iterationId">
            Iteration id.
            </param>
        <param name="updatedIteration">
            The updated iteration model.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Update a specific iteration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProjectWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt; UpdateProjectWithHttpMessagesAsync (Guid projectId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project updatedProject, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt; UpdateProjectWithHttpMessagesAsync(valuetype System.Guid projectId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project updatedProject, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.UpdateProjectWithHttpMessagesAsync(System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateProjectWithHttpMessagesAsync : Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;" Usage="iCustomVisionTrainingClient.UpdateProjectWithHttpMessagesAsync (projectId, updatedProject, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="updatedProject" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Project" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The id of the project to update.
            </param>
        <param name="updatedProject">
            The updated project model.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Update a specific project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTagWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt; UpdateTagWithHttpMessagesAsync (Guid projectId, Guid tagId, Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag updatedTag, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt; UpdateTagWithHttpMessagesAsync(valuetype System.Guid projectId, valuetype System.Guid tagId, class Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag updatedTag, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.ICustomVisionTrainingClient.UpdateTagWithHttpMessagesAsync(System.Guid,System.Guid,Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTagWithHttpMessagesAsync : Guid * Guid * Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;" Usage="iCustomVisionTrainingClient.UpdateTagWithHttpMessagesAsync (projectId, tagId, updatedTag, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training</AssemblyName>
        <AssemblyVersion>0.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="tagId" Type="System.Guid" />
        <Parameter Name="updatedTag" Type="Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models.Tag" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="projectId">
            The project id.
            </param>
        <param name="tagId">
            The id of the target tag.
            </param>
        <param name="updatedTag">
            The updated tag model.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Update a tag.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>