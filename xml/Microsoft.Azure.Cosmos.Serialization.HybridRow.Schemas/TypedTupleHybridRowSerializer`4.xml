<Type Name="TypedTupleHybridRowSerializer&lt;T1,T1Serializer,T2,T2Serializer&gt;" FullName="Microsoft.Azure.Cosmos.Serialization.HybridRow.Schemas.TypedTupleHybridRowSerializer&lt;T1,T1Serializer,T2,T2Serializer&gt;">
  <TypeSignature Language="C#" Value="public struct TypedTupleHybridRowSerializer&lt;T1,T1Serializer,T2,T2Serializer&gt; : Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer&lt;(T1, T2)&gt; where T1Serializer : struct where T2Serializer : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypedTupleHybridRowSerializer`4&lt;T1, struct .ctor (class Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer`1&lt;!T1&gt;, class System.ValueType) T1Serializer, T2, struct .ctor (class Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer`1&lt;!T2&gt;, class System.ValueType) T2Serializer&gt; extends System.ValueType implements class Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer`1&lt;valuetype System.ValueTuple`2&lt;!T1, !T2&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Cosmos.Serialization.HybridRow.Schemas.TypedTupleHybridRowSerializer`4" />
  <TypeSignature Language="VB.NET" Value="Public Structure TypedTupleHybridRowSerializer(Of T1, T1Serializer, T2, T2Serializer)&#xA;Implements IHybridRowSerializer(Of ValueTuple(Of T1, T2))" />
  <TypeSignature Language="F#" Value="type TypedTupleHybridRowSerializer&lt;'T1, 'T1Serializer, 'T2, 'T2Serializer (requires 'T1Serializer : struct and 'T2Serializer : struct)&gt; = struct&#xA;    interface IHybridRowSerializer&lt;ValueTuple&lt;'T1, 'T2&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Cosmos.Serialization.HybridRow</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T1Serializer">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer&lt;T1&gt;</InterfaceName>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2" />
    <TypeParameter Name="T2Serializer">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer&lt;T2&gt;</InterfaceName>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer&lt;System.ValueTuple&lt;T1,T2&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1">To be added.</typeparam>
    <typeparam name="T1Serializer">To be added.</typeparam>
    <typeparam name="T2">To be added.</typeparam>
    <typeparam name="T2Serializer">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;(T1 Item1, T2 Item2)&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;valuetype System.ValueTuple`2&lt;!T1, !T2&gt;&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.Serialization.HybridRow.Schemas.TypedTupleHybridRowSerializer`4.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of ValueTuple(Of T1, T2))" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;ValueTuple&lt;'T1, 'T2&gt;&gt;" Usage="Microsoft.Azure.Cosmos.Serialization.HybridRow.Schemas.TypedTupleHybridRowSerializer&lt;'T1, 'T1Serializer, 'T2, 'T2Serializer (requires 'T1Serializer : struct and 'T2Serializer : struct)&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer`1.Comparer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Serialization.HybridRow</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Item1", "Item2" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Item1", "Item2" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;System.ValueTuple&lt;T1,T2&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.Serialization.HybridRow.Result Read (ref Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer row, ref Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor scope, bool isRoot, out (T1 Item1, T2 Item2) value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Azure.Cosmos.Serialization.HybridRow.Result Read(valuetype Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer&amp; row, valuetype Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor&amp; scope, bool isRoot, [out] valuetype System.ValueTuple`2&lt;!T1, !T2&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Serialization.HybridRow.Schemas.TypedTupleHybridRowSerializer`4.Read(Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer@,Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor@,System.Boolean,System.ValueTuple{`0,`2}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (ByRef row As RowBuffer, ByRef scope As RowCursor, isRoot As Boolean, ByRef value As ValueTuple(Of T1, T2)) As Result" />
      <MemberSignature Language="F#" Value="abstract member Read : RowBuffer * RowCursor * bool * ValueTuple -&gt; Microsoft.Azure.Cosmos.Serialization.HybridRow.Result&#xA;override this.Read : RowBuffer * RowCursor * bool * ValueTuple -&gt; Microsoft.Azure.Cosmos.Serialization.HybridRow.Result" Usage="typedTupleHybridRowSerializer.Read (row, scope, isRoot, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Serialization.HybridRow</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Serialization.HybridRow.Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer" RefType="ref" />
        <Parameter Name="scope" Type="Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor" RefType="ref" />
        <Parameter Name="isRoot" Type="System.Boolean" />
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2&gt;" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Item1", "Item2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Item1", "Item2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="row">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="isRoot">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.Serialization.HybridRow.Result Write (ref Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer row, ref Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor scope, bool isRoot, Microsoft.Azure.Cosmos.Serialization.HybridRow.Layouts.TypeArgumentList typeArgs, (T1 Item1, T2 Item2) value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Azure.Cosmos.Serialization.HybridRow.Result Write(valuetype Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer&amp; row, valuetype Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor&amp; scope, bool isRoot, valuetype Microsoft.Azure.Cosmos.Serialization.HybridRow.Layouts.TypeArgumentList typeArgs, valuetype System.ValueTuple`2&lt;!T1, !T2&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.Serialization.HybridRow.Schemas.TypedTupleHybridRowSerializer`4.Write(Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer@,Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor@,System.Boolean,Microsoft.Azure.Cosmos.Serialization.HybridRow.Layouts.TypeArgumentList,System.ValueTuple{`0,`2})" />
      <MemberSignature Language="VB.NET" Value="Public Function Write (ByRef row As RowBuffer, ByRef scope As RowCursor, isRoot As Boolean, typeArgs As TypeArgumentList, value As ValueTuple(Of T1, T2)) As Result" />
      <MemberSignature Language="F#" Value="abstract member Write : RowBuffer * RowCursor * bool * Microsoft.Azure.Cosmos.Serialization.HybridRow.Layouts.TypeArgumentList * ValueTuple&lt;'T1, 'T2&gt; -&gt; Microsoft.Azure.Cosmos.Serialization.HybridRow.Result&#xA;override this.Write : RowBuffer * RowCursor * bool * Microsoft.Azure.Cosmos.Serialization.HybridRow.Layouts.TypeArgumentList * ValueTuple&lt;'T1, 'T2&gt; -&gt; Microsoft.Azure.Cosmos.Serialization.HybridRow.Result" Usage="typedTupleHybridRowSerializer.Write (row, scope, isRoot, typeArgs, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Cosmos.Serialization.HybridRow.IO.IHybridRowSerializer`1.Write(Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer@,Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor@,System.Boolean,Microsoft.Azure.Cosmos.Serialization.HybridRow.Layouts.TypeArgumentList,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Serialization.HybridRow</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Serialization.HybridRow.Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="Microsoft.Azure.Cosmos.Serialization.HybridRow.RowBuffer" RefType="ref" />
        <Parameter Name="scope" Type="Microsoft.Azure.Cosmos.Serialization.HybridRow.RowCursor" RefType="ref" />
        <Parameter Name="isRoot" Type="System.Boolean" />
        <Parameter Name="typeArgs" Type="Microsoft.Azure.Cosmos.Serialization.HybridRow.Layouts.TypeArgumentList" />
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Item1", "Item2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Item1", "Item2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="row">To be added.</param>
        <param name="scope">To be added.</param>
        <param name="isRoot">To be added.</param>
        <param name="typeArgs">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
