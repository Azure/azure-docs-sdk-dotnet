<Type Name="ArmContainerRegistryModelFactory" FullName="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmContainerRegistryModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmContainerRegistryModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmContainerRegistryModelFactory" />
  <TypeSignature Language="F#" Value="type ArmContainerRegistryModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainerRegistryAgentPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData ContainerRegistryAgentPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, int? count = default, string tier = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS? os = default, Azure.Core.ResourceIdentifier virtualNetworkSubnetResourceId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData ContainerRegistryAgentPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;int32&gt; count, string tier, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS&gt; os, class Azure.Core.ResourceIdentifier virtualNetworkSubnetResourceId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryAgentPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional count As Nullable(Of Integer) = Nothing, Optional tier As String = Nothing, Optional os As Nullable(Of ContainerRegistryOS) = Nothing, Optional virtualNetworkSubnetResourceId As ResourceIdentifier = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryAgentPoolData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryAgentPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;int&gt; * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolData (id, name, resourceType, systemData, tags, location, count, tier, os, virtualNetworkSubnetResourceId, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="tier" Type="System.String" />
        <Parameter Name="os" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS&gt;" />
        <Parameter Name="virtualNetworkSubnetResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="count"> The count of agent machine. </param>
        <param name="tier"> The Tier of agent machine. </param>
        <param name="os"> The OS of agent machine. </param>
        <param name="virtualNetworkSubnetResourceId"> The Virtual Network Subnet Resource Id of the agent machine. </param>
        <param name="provisioningState"> The provisioning state of this agent pool. </param>
        <summary> Initializes a new instance of ContainerRegistryAgentPoolData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryAgentPoolQueueStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus ContainerRegistryAgentPoolQueueStatus (int? count = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus ContainerRegistryAgentPoolQueueStatus(valuetype System.Nullable`1&lt;int32&gt; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolQueueStatus(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryAgentPoolQueueStatus (Optional count As Nullable(Of Integer) = Nothing) As ContainerRegistryAgentPoolQueueStatus" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryAgentPoolQueueStatus : Nullable&lt;int&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolQueueStatus count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="count"> The number of pending runs in the queue. </param>
        <summary> Initializes a new instance of ContainerRegistryAgentPoolQueueStatus. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryBaseImageDependency">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency ContainerRegistryBaseImageDependency (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType? dependencyType = default, string registry = default, string repository = default, string tag = default, string digest = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency ContainerRegistryBaseImageDependency(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType&gt; dependencyType, string registry, string repository, string tag, string digest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryBaseImageDependency(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryBaseImageDependency (Optional dependencyType As Nullable(Of ContainerRegistryBaseImageDependencyType) = Nothing, Optional registry As String = Nothing, Optional repository As String = Nothing, Optional tag As String = Nothing, Optional digest As String = Nothing) As ContainerRegistryBaseImageDependency" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryBaseImageDependency : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType&gt; * string * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryBaseImageDependency (dependencyType, registry, repository, tag, digest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType&gt;" />
        <Parameter Name="registry" Type="System.String" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="digest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dependencyType"> The type of the base image dependency. </param>
        <param name="registry"> The registry login server. </param>
        <param name="repository"> The repository name. </param>
        <param name="tag"> The tag name. </param>
        <param name="digest"> The sha256-based digest of the image manifest. </param>
        <summary> Initializes a new instance of ContainerRegistryBaseImageDependency. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryData ContainerRegistryData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku sku = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string loginServer = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status = default, bool? isAdminUserEnabled = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet networkRuleSet = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies policies = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption encryption = default, bool? isDataEndpointEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; dataEndpointHostNames = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; privateEndpointConnections = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption? networkRuleBypassOptions = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy? zoneRedundancy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryData ContainerRegistryData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku sku, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string loginServer, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status, valuetype System.Nullable`1&lt;bool&gt; isAdminUserEnabled, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet networkRuleSet, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies policies, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption encryption, valuetype System.Nullable`1&lt;bool&gt; isDataEndpointEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dataEndpointHostNames, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; privateEndpointConnections, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt; networkRuleBypassOptions, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; zoneRedundancy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus,System.Nullable{System.Boolean},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As ContainerRegistrySku = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional loginServer As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional status As ContainerRegistryResourceStatus = Nothing, Optional isAdminUserEnabled As Nullable(Of Boolean) = Nothing, Optional networkRuleSet As ContainerRegistryNetworkRuleSet = Nothing, Optional policies As ContainerRegistryPolicies = Nothing, Optional encryption As ContainerRegistryEncryption = Nothing, Optional isDataEndpointEnabled As Nullable(Of Boolean) = Nothing, Optional dataEndpointHostNames As IEnumerable(Of String) = Nothing, Optional privateEndpointConnections As IEnumerable(Of ContainerRegistryPrivateEndpointConnectionData) = Nothing, Optional publicNetworkAccess As Nullable(Of ContainerRegistryPublicNetworkAccess) = Nothing, Optional networkRuleBypassOptions As Nullable(Of ContainerRegistryNetworkRuleBypassOption) = Nothing, Optional zoneRedundancy As Nullable(Of ContainerRegistryZoneRedundancy) = Nothing) As ContainerRegistryData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku * Azure.ResourceManager.Models.ManagedServiceIdentity * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus * Nullable&lt;bool&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption * Nullable&lt;bool&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryData (id, name, resourceType, systemData, tags, location, sku, identity, loginServer, createdOn, provisioningState, status, isAdminUserEnabled, networkRuleSet, policies, encryption, isDataEndpointEnabled, dataEndpointHostNames, privateEndpointConnections, publicNetworkAccess, networkRuleBypassOptions, zoneRedundancy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="sku" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="loginServer" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" />
        <Parameter Name="isAdminUserEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="networkRuleSet" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet" />
        <Parameter Name="policies" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption" />
        <Parameter Name="isDataEndpointEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="dataEndpointHostNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt;" />
        <Parameter Name="networkRuleBypassOptions" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt;" />
        <Parameter Name="zoneRedundancy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> The SKU of the container registry. </param>
        <param name="identity"> The identity of the container registry. </param>
        <param name="loginServer"> The URL that can be used to log into the container registry. </param>
        <param name="createdOn"> The creation date of the container registry in ISO8601 format. </param>
        <param name="provisioningState"> The provisioning state of the container registry at the time the operation was called. </param>
        <param name="status"> The status of the container registry at the time the operation was called. </param>
        <param name="isAdminUserEnabled"> The value that indicates whether the admin user is enabled. </param>
        <param name="networkRuleSet"> The network rule set for a container registry. </param>
        <param name="policies"> The policies for a container registry. </param>
        <param name="encryption"> The encryption settings of container registry. </param>
        <param name="isDataEndpointEnabled"> Enable a single data endpoint per region for serving data. </param>
        <param name="dataEndpointHostNames"> List of host names that will serve data when dataEndpointEnabled is true. </param>
        <param name="privateEndpointConnections"> List of private endpoint connections for a container registry. </param>
        <param name="publicNetworkAccess"> Whether or not public network access is allowed for the container registry. </param>
        <param name="networkRuleBypassOptions"> Whether to allow trusted Azure services to access a network restricted registry. </param>
        <param name="zoneRedundancy"> Whether or not zone redundancy is enabled for this container registry. </param>
        <summary> Initializes a new instance of ContainerRegistryData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryDockerBuildStep">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep ContainerRegistryDockerBuildStep (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default, System.Collections.Generic.IEnumerable&lt;string&gt; imageNames = default, bool? isPushEnabled = default, bool? noCache = default, string dockerFilePath = default, string target = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt; arguments = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep ContainerRegistryDockerBuildStep(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken, class System.Collections.Generic.IEnumerable`1&lt;string&gt; imageNames, valuetype System.Nullable`1&lt;bool&gt; isPushEnabled, valuetype System.Nullable`1&lt;bool&gt; noCache, string dockerFilePath, string target, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryDockerBuildStep(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryDockerBuildStep (Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing, Optional imageNames As IEnumerable(Of String) = Nothing, Optional isPushEnabled As Nullable(Of Boolean) = Nothing, Optional noCache As Nullable(Of Boolean) = Nothing, Optional dockerFilePath As String = Nothing, Optional target As String = Nothing, Optional arguments As IEnumerable(Of ContainerRegistryRunArgument) = Nothing) As ContainerRegistryDockerBuildStep" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryDockerBuildStep : seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryDockerBuildStep (baseImageDependencies, contextPath, contextAccessToken, imageNames, isPushEnabled, noCache, dockerFilePath, target, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
        <Parameter Name="imageNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isPushEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="noCache" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="dockerFilePath" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <param name="imageNames"> The fully qualified image names including the repository and tag. </param>
        <param name="isPushEnabled"> The value of this property indicates whether the image built should be pushed to the registry or not. </param>
        <param name="noCache"> The value of this property indicates whether the image cache is enabled or not. </param>
        <param name="dockerFilePath"> The Docker file path relative to the source context. </param>
        <param name="target"> The name of the target build stage for the docker build. </param>
        <param name="arguments"> The collection of override arguments to be used when executing this build step. </param>
        <summary> Initializes a new instance of ContainerRegistryDockerBuildStep. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryEncodedTaskStep">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep ContainerRegistryEncodedTaskStep (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default, string encodedTaskContent = default, string encodedValuesContent = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep ContainerRegistryEncodedTaskStep(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken, string encodedTaskContent, string encodedValuesContent, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryEncodedTaskStep(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryEncodedTaskStep (Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing, Optional encodedTaskContent As String = Nothing, Optional encodedValuesContent As String = Nothing, Optional values As IEnumerable(Of ContainerRegistryTaskOverridableValue) = Nothing) As ContainerRegistryEncodedTaskStep" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryEncodedTaskStep : seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string * string * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryEncodedTaskStep (baseImageDependencies, contextPath, contextAccessToken, encodedTaskContent, encodedValuesContent, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
        <Parameter Name="encodedTaskContent" Type="System.String" />
        <Parameter Name="encodedValuesContent" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt;" />
      </Parameters>
      <Docs>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <param name="encodedTaskContent"> Base64 encoded value of the template/definition file content. </param>
        <param name="encodedValuesContent"> Base64 encoded value of the parameters/values file content. </param>
        <param name="values"> The collection of overridable values that can be passed when running a task. </param>
        <summary> Initializes a new instance of ContainerRegistryEncodedTaskStep. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryFileTaskStep">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep ContainerRegistryFileTaskStep (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default, string taskFilePath = default, string valuesFilePath = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep ContainerRegistryFileTaskStep(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken, string taskFilePath, string valuesFilePath, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryFileTaskStep(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryFileTaskStep (Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing, Optional taskFilePath As String = Nothing, Optional valuesFilePath As String = Nothing, Optional values As IEnumerable(Of ContainerRegistryTaskOverridableValue) = Nothing) As ContainerRegistryFileTaskStep" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryFileTaskStep : seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string * string * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryFileTaskStep (baseImageDependencies, contextPath, contextAccessToken, taskFilePath, valuesFilePath, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
        <Parameter Name="taskFilePath" Type="System.String" />
        <Parameter Name="valuesFilePath" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt;" />
      </Parameters>
      <Docs>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <param name="taskFilePath"> The task template/definition file path relative to the source context. </param>
        <param name="valuesFilePath"> The task values/parameters file path relative to the source context. </param>
        <param name="values"> The collection of overridable values that can be passed when running a task. </param>
        <summary> Initializes a new instance of ContainerRegistryFileTaskStep. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryGenerateCredentialsResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult ContainerRegistryGenerateCredentialsResult (string username = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt; passwords = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult ContainerRegistryGenerateCredentialsResult(string username, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt; passwords) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryGenerateCredentialsResult(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryGenerateCredentialsResult (Optional username As String = Nothing, Optional passwords As IEnumerable(Of ContainerRegistryTokenPassword) = Nothing) As ContainerRegistryGenerateCredentialsResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryGenerateCredentialsResult : string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryGenerateCredentialsResult (username, passwords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwords" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt;" />
      </Parameters>
      <Docs>
        <param name="username"> The username for a container registry. </param>
        <param name="passwords"> The list of passwords for a container registry. </param>
        <summary> Initializes a new instance of ContainerRegistryGenerateCredentialsResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryKeyVaultProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties ContainerRegistryKeyVaultProperties (string keyIdentifier = default, string versionedKeyIdentifier = default, string identity = default, bool? isKeyRotationEnabled = default, DateTimeOffset? lastKeyRotationTimestamp = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties ContainerRegistryKeyVaultProperties(string keyIdentifier, string versionedKeyIdentifier, string identity, valuetype System.Nullable`1&lt;bool&gt; isKeyRotationEnabled, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastKeyRotationTimestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryKeyVaultProperties(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryKeyVaultProperties (Optional keyIdentifier As String = Nothing, Optional versionedKeyIdentifier As String = Nothing, Optional identity As String = Nothing, Optional isKeyRotationEnabled As Nullable(Of Boolean) = Nothing, Optional lastKeyRotationTimestamp As Nullable(Of DateTimeOffset) = Nothing) As ContainerRegistryKeyVaultProperties" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryKeyVaultProperties : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryKeyVaultProperties (keyIdentifier, versionedKeyIdentifier, identity, isKeyRotationEnabled, lastKeyRotationTimestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.String" />
        <Parameter Name="versionedKeyIdentifier" Type="System.String" />
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="isKeyRotationEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastKeyRotationTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"> Key vault uri to access the encryption key. </param>
        <param name="versionedKeyIdentifier"> The fully qualified key identifier that includes the version of the key that is actually used for encryption. </param>
        <param name="identity"> The client id of the identity which will be used to access key vault. </param>
        <param name="isKeyRotationEnabled"> Auto key rotation status for a CMK enabled registry. </param>
        <param name="lastKeyRotationTimestamp"> Timestamp of the last successful key rotation. </param>
        <summary> Initializes a new instance of ContainerRegistryKeyVaultProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryListCredentialsResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult ContainerRegistryListCredentialsResult (string username = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt; passwords = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult ContainerRegistryListCredentialsResult(string username, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt; passwords) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryListCredentialsResult(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryListCredentialsResult (Optional username As String = Nothing, Optional passwords As IEnumerable(Of ContainerRegistryPassword) = Nothing) As ContainerRegistryListCredentialsResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryListCredentialsResult : string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryListCredentialsResult (username, passwords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwords" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt;" />
      </Parameters>
      <Docs>
        <param name="username"> The username for a container registry. </param>
        <param name="passwords"> The list of passwords for a container registry. </param>
        <summary> Initializes a new instance of ContainerRegistryListCredentialsResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryNameAvailableResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult ContainerRegistryNameAvailableResult (bool? isNameAvailable = default, string reason = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult ContainerRegistryNameAvailableResult(valuetype System.Nullable`1&lt;bool&gt; isNameAvailable, string reason, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailableResult(System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryNameAvailableResult (Optional isNameAvailable As Nullable(Of Boolean) = Nothing, Optional reason As String = Nothing, Optional message As String = Nothing) As ContainerRegistryNameAvailableResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryNameAvailableResult : Nullable&lt;bool&gt; * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailableResult (isNameAvailable, reason, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isNameAvailable"> The value that indicates whether the name is available. </param>
        <param name="reason"> If any, the reason that the name is not available. </param>
        <param name="message"> If any, the error message that provides more detail for the reason that the name is not available. </param>
        <summary> Initializes a new instance of ContainerRegistryNameAvailableResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryPassword">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword ContainerRegistryPassword (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName? name = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword ContainerRegistryPassword(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName&gt; name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPassword(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryPassword (Optional name As Nullable(Of ContainerRegistryPasswordName) = Nothing, Optional value As String = Nothing) As ContainerRegistryPassword" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryPassword : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPassword (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The password name. </param>
        <param name="value"> The password value. </param>
        <summary> Initializes a new instance of ContainerRegistryPassword. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryPrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData ContainerRegistryPrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState connectionState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData ContainerRegistryPrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryPrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As ContainerRegistryPrivateLinkServiceConnectionState = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryPrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryPrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateEndpointConnectionData (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private endpoint. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="provisioningState"> The provisioning state of private endpoint connection resource. </param>
        <summary> Initializes a new instance of ContainerRegistryPrivateEndpointConnectionData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryPrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData ContainerRegistryPrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData ContainerRegistryPrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryPrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As ContainerRegistryPrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryPrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateLinkResourceData (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        <summary> Initializes a new instance of ContainerRegistryPrivateLinkResourceData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryReplicationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData ContainerRegistryReplicationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status = default, bool? isRegionEndpointEnabled = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy? zoneRedundancy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData ContainerRegistryReplicationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status, valuetype System.Nullable`1&lt;bool&gt; isRegionEndpointEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; zoneRedundancy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryReplicationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryReplicationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional status As ContainerRegistryResourceStatus = Nothing, Optional isRegionEndpointEnabled As Nullable(Of Boolean) = Nothing, Optional zoneRedundancy As Nullable(Of ContainerRegistryZoneRedundancy) = Nothing) As ContainerRegistryReplicationData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryReplicationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryReplicationData (id, name, resourceType, systemData, tags, location, provisioningState, status, isRegionEndpointEnabled, zoneRedundancy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" />
        <Parameter Name="isRegionEndpointEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="zoneRedundancy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The provisioning state of the replication at the time the operation was called. </param>
        <param name="status"> The status of the replication at the time the operation was called. </param>
        <param name="isRegionEndpointEnabled"> Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications. </param>
        <param name="zoneRedundancy"> Whether or not zone redundancy is enabled for this container registry replication. </param>
        <summary> Initializes a new instance of ContainerRegistryReplicationData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryResourceStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus ContainerRegistryResourceStatus (string displayStatus = default, string message = default, DateTimeOffset? timestamp = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus ContainerRegistryResourceStatus(string displayStatus, string message, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryResourceStatus(System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryResourceStatus (Optional displayStatus As String = Nothing, Optional message As String = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing) As ContainerRegistryResourceStatus" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryResourceStatus : string * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryResourceStatus (displayStatus, message, timestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayStatus" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="displayStatus"> The short label for the status. </param>
        <param name="message"> The detailed message for the status, including alerts and error messages. </param>
        <param name="timestamp"> The timestamp when the status was changed to the current value. </param>
        <summary> Initializes a new instance of ContainerRegistryResourceStatus. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryRetentionPolicy">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy ContainerRegistryRetentionPolicy (int? days = default, DateTimeOffset? lastUpdatedOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus? status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy ContainerRegistryRetentionPolicy(valuetype System.Nullable`1&lt;int32&gt; days, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRetentionPolicy(System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryRetentionPolicy (Optional days As Nullable(Of Integer) = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional status As Nullable(Of ContainerRegistryPolicyStatus) = Nothing) As ContainerRegistryRetentionPolicy" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryRetentionPolicy : Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRetentionPolicy (days, lastUpdatedOn, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="days"> The number of days to retain an untagged manifest after which it gets purged. </param>
        <param name="lastUpdatedOn"> The timestamp when the policy was last updated. </param>
        <param name="status"> The value that indicates whether the policy is enabled or not. </param>
        <summary> Initializes a new instance of ContainerRegistryRetentionPolicy. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryRunData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData ContainerRegistryRunData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string runId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus? status = default, DateTimeOffset? lastUpdatedOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType? runType = default, string agentPoolName = default, DateTimeOffset? createdOn = default, DateTimeOffset? startOn = default, DateTimeOffset? finishOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt; outputImages = default, string task = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger imageUpdateTrigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor sourceTrigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor timerTrigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform = default, int? agentCpu = default, string sourceRegistryAuth = default, System.Collections.Generic.IEnumerable&lt;string&gt; customRegistries = default, string runErrorMessage = default, string updateTriggerToken = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor logArtifact = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, bool? isArchiveEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData ContainerRegistryRunData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string runId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType&gt; runType, string agentPoolName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; finishOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt; outputImages, string task, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger imageUpdateTrigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor sourceTrigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor timerTrigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform, valuetype System.Nullable`1&lt;int32&gt; agentCpu, string sourceRegistryAuth, class System.Collections.Generic.IEnumerable`1&lt;string&gt; customRegistries, string runErrorMessage, string updateTriggerToken, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor logArtifact, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;bool&gt; isArchiveEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor},System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties,System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryRunData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional runId As String = Nothing, Optional status As Nullable(Of ContainerRegistryRunStatus) = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional runType As Nullable(Of ContainerRegistryRunType) = Nothing, Optional agentPoolName As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional finishOn As Nullable(Of DateTimeOffset) = Nothing, Optional outputImages As IEnumerable(Of ContainerRegistryImageDescriptor) = Nothing, Optional task As String = Nothing, Optional imageUpdateTrigger As ContainerRegistryImageUpdateTrigger = Nothing, Optional sourceTrigger As ContainerRegistrySourceTriggerDescriptor = Nothing, Optional timerTrigger As ContainerRegistryTimerTriggerDescriptor = Nothing, Optional platform As ContainerRegistryPlatformProperties = Nothing, Optional agentCpu As Nullable(Of Integer) = Nothing, Optional sourceRegistryAuth As String = Nothing, Optional customRegistries As IEnumerable(Of String) = Nothing, Optional runErrorMessage As String = Nothing, Optional updateTriggerToken As String = Nothing, Optional logArtifact As ContainerRegistryImageDescriptor = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional isArchiveEnabled As Nullable(Of Boolean) = Nothing) As ContainerRegistryRunData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryRunData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt; * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties * Nullable&lt;int&gt; * string * seq&lt;string&gt; * string * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunData (id, name, resourceType, systemData, runId, status, lastUpdatedOn, runType, agentPoolName, createdOn, startOn, finishOn, outputImages, task, imageUpdateTrigger, sourceTrigger, timerTrigger, platform, agentCpu, sourceRegistryAuth, customRegistries, runErrorMessage, updateTriggerToken, logArtifact, provisioningState, isArchiveEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus&gt;" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="runType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType&gt;" />
        <Parameter Name="agentPoolName" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="finishOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="outputImages" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt;" />
        <Parameter Name="task" Type="System.String" />
        <Parameter Name="imageUpdateTrigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger" />
        <Parameter Name="sourceTrigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor" />
        <Parameter Name="timerTrigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor" />
        <Parameter Name="platform" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties" />
        <Parameter Name="agentCpu" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sourceRegistryAuth" Type="System.String" />
        <Parameter Name="customRegistries" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="runErrorMessage" Type="System.String" />
        <Parameter Name="updateTriggerToken" Type="System.String" />
        <Parameter Name="logArtifact" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="isArchiveEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="runId"> The unique identifier for the run. </param>
        <param name="status"> The current status of the run. </param>
        <param name="lastUpdatedOn"> The last updated time for the run. </param>
        <param name="runType"> The type of run. </param>
        <param name="agentPoolName"> The dedicated agent pool for the run. </param>
        <param name="createdOn"> The time the run was scheduled. </param>
        <param name="startOn"> The time the run started. </param>
        <param name="finishOn"> The time the run finished. </param>
        <param name="outputImages"> The list of all images that were generated from the run. This is applicable if the run generates base image dependencies. </param>
        <param name="task"> The task against which run was scheduled. </param>
        <param name="imageUpdateTrigger"> The image update trigger that caused the run. This is applicable if the task has base image trigger configured. </param>
        <param name="sourceTrigger"> The source trigger that caused the run. </param>
        <param name="timerTrigger"> The timer trigger that caused the run. </param>
        <param name="platform"> The platform properties against which the run will happen. </param>
        <param name="agentCpu"> The machine configuration of the run agent. </param>
        <param name="sourceRegistryAuth"> The scope of the credentials that were used to login to the source registry during this run. </param>
        <param name="customRegistries"> The list of custom registries that were logged in during this run. </param>
        <param name="runErrorMessage"> The error message received from backend systems after the run is scheduled. </param>
        <param name="updateTriggerToken"> The update trigger token passed for the Run. </param>
        <param name="logArtifact"> The image description for the log artifact. </param>
        <param name="provisioningState"> The provisioning state of a run. </param>
        <param name="isArchiveEnabled"> The value that indicates whether archiving is enabled or not. </param>
        <summary> Initializes a new instance of ContainerRegistryRunData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryRunGetLogResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult ContainerRegistryRunGetLogResult (string logLink = default, string logArtifactLink = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult ContainerRegistryRunGetLogResult(string logLink, string logArtifactLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunGetLogResult(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryRunGetLogResult (Optional logLink As String = Nothing, Optional logArtifactLink As String = Nothing) As ContainerRegistryRunGetLogResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryRunGetLogResult : string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunGetLogResult (logLink, logArtifactLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLink" Type="System.String" />
        <Parameter Name="logArtifactLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logLink"> The link to logs for a run on a azure container registry. </param>
        <param name="logArtifactLink"> The link to logs in registry for a run on a azure container registry. </param>
        <summary> Initializes a new instance of ContainerRegistryRunGetLogResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistrySku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku ContainerRegistrySku (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName name = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier? tier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku ContainerRegistrySku(valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier&gt; tier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySku(Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistrySku (Optional name As ContainerRegistrySkuName = Nothing, Optional tier As Nullable(Of ContainerRegistrySkuTier) = Nothing) As ContainerRegistrySku" />
      <MemberSignature Language="F#" Value="static member ContainerRegistrySku : Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySku (name, tier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName" />
        <Parameter Name="tier" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The SKU name of the container registry. Required for registry creation. </param>
        <param name="tier"> The SKU tier based on the SKU name. </param>
        <summary> Initializes a new instance of ContainerRegistrySku. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTaskData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData ContainerRegistryTaskData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus? status = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform = default, int? agentCpu = default, string agentPoolName = default, int? timeoutInSeconds = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties step = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties trigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials credentials = default, string logTemplate = default, bool? isSystemTask = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData ContainerRegistryTaskData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus&gt; status, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform, valuetype System.Nullable`1&lt;int32&gt; agentCpu, string agentPoolName, valuetype System.Nullable`1&lt;int32&gt; timeoutInSeconds, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties step, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties trigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials credentials, string logTemplate, valuetype System.Nullable`1&lt;bool&gt; isSystemTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTaskData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional status As Nullable(Of ContainerRegistryTaskStatus) = Nothing, Optional platform As ContainerRegistryPlatformProperties = Nothing, Optional agentCpu As Nullable(Of Integer) = Nothing, Optional agentPoolName As String = Nothing, Optional timeoutInSeconds As Nullable(Of Integer) = Nothing, Optional step As ContainerRegistryTaskStepProperties = Nothing, Optional trigger As ContainerRegistryTriggerProperties = Nothing, Optional credentials As ContainerRegistryCredentials = Nothing, Optional logTemplate As String = Nothing, Optional isSystemTask As Nullable(Of Boolean) = Nothing) As ContainerRegistryTaskData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTaskData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskData (id, name, resourceType, systemData, tags, location, identity, provisioningState, createdOn, status, platform, agentCpu, agentPoolName, timeoutInSeconds, step, trigger, credentials, logTemplate, isSystemTask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus&gt;" />
        <Parameter Name="platform" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties" />
        <Parameter Name="agentCpu" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="agentPoolName" Type="System.String" />
        <Parameter Name="timeoutInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="step" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" />
        <Parameter Name="trigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials" />
        <Parameter Name="logTemplate" Type="System.String" />
        <Parameter Name="isSystemTask" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="identity"> Identity for the resource. </param>
        <param name="provisioningState"> The provisioning state of the task. </param>
        <param name="createdOn"> The creation date of task. </param>
        <param name="status"> The current status of task. </param>
        <param name="platform"> The platform properties against which the run has to happen. </param>
        <param name="agentCpu"> The machine configuration of the run agent. </param>
        <param name="agentPoolName"> The dedicated agent pool for the task. </param>
        <param name="timeoutInSeconds"> Run timeout in seconds. </param>
        <param name="step">
            The properties of a task step.
            Please note <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep" />, <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep" /> and <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep" />.
            </param>
        <param name="trigger"> The properties that describe all triggers for the task. </param>
        <param name="credentials"> The properties that describes a set of credentials that will be used when this run is invoked. </param>
        <param name="logTemplate"> The template that describes the repository and tag information for run log artifact. </param>
        <param name="isSystemTask"> The value of this property indicates whether the task resource is system task or not. </param>
        <summary> Initializes a new instance of ContainerRegistryTaskData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTaskRunData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData ContainerRegistryTaskRunData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent runRequest = default, Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData runResult = default, string forceUpdateTag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData ContainerRegistryTaskRunData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent runRequest, class Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData runResult, string forceUpdateTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskRunData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent,Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTaskRunData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional runRequest As ContainerRegistryRunContent = Nothing, Optional runResult As ContainerRegistryRunData = Nothing, Optional forceUpdateTag As String = Nothing) As ContainerRegistryTaskRunData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTaskRunData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent * Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData * string -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskRunData (id, name, resourceType, systemData, identity, location, provisioningState, runRequest, runResult, forceUpdateTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="runRequest" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent" />
        <Parameter Name="runResult" Type="Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData" />
        <Parameter Name="forceUpdateTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="identity"> Identity for the resource. </param>
        <param name="location"> The location of the resource. </param>
        <param name="provisioningState"> The provisioning state of this task run. </param>
        <param name="runRequest">
            The request (parameters) for the run
            Please note <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildContent" />, <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskRunContent" />, <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskRunContent" /> and <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskRunContent" />.
            </param>
        <param name="runResult"> The result of this task run. </param>
        <param name="forceUpdateTag"> How the run should be forced to rerun even if the run request configuration has not changed. </param>
        <summary> Initializes a new instance of ContainerRegistryTaskRunData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTaskStepProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties ContainerRegistryTaskStepProperties (string containerRegistryTaskStepType = &quot;Unknown&quot;, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties ContainerRegistryTaskStepProperties(string containerRegistryTaskStepType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskStepProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTaskStepProperties (Optional containerRegistryTaskStepType As String = &quot;Unknown&quot;, Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing) As ContainerRegistryTaskStepProperties" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTaskStepProperties : string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskStepProperties (containerRegistryTaskStepType, baseImageDependencies, contextPath, contextAccessToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerRegistryTaskStepType" Type="System.String" />
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="containerRegistryTaskStepType"> The type of the step. </param>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <summary> Initializes a new instance of ContainerRegistryTaskStepProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTokenData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData ContainerRegistryTokenData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier scopeMapId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials credentials = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus? status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData ContainerRegistryTokenData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier scopeMapId, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials credentials, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTokenData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional scopeMapId As ResourceIdentifier = Nothing, Optional credentials As ContainerRegistryTokenCredentials = Nothing, Optional status As Nullable(Of ContainerRegistryTokenStatus) = Nothing) As ContainerRegistryTokenData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTokenData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenData (id, name, resourceType, systemData, createdOn, provisioningState, scopeMapId, credentials, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="scopeMapId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="createdOn"> The creation date of scope map. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="scopeMapId"> The resource ID of the scope map to which the token will be associated with. </param>
        <param name="credentials"> The credentials that can be used for authenticating the token. </param>
        <param name="status"> The status of the token example enabled or disabled. </param>
        <summary> Initializes a new instance of ContainerRegistryTokenData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTokenPassword">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword ContainerRegistryTokenPassword (DateTimeOffset? createdOn = default, DateTimeOffset? expireOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName? name = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword ContainerRegistryTokenPassword(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; expireOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName&gt; name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenPassword(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTokenPassword (Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional expireOn As Nullable(Of DateTimeOffset) = Nothing, Optional name As Nullable(Of ContainerRegistryTokenPasswordName) = Nothing, Optional value As String = Nothing) As ContainerRegistryTokenPassword" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTokenPassword : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenPassword (createdOn, expireOn, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="name" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="createdOn"> The creation datetime of the password. </param>
        <param name="expireOn"> The expiry datetime of the password. </param>
        <param name="name"> The password name "password1" or "password2". </param>
        <param name="value"> The password value. </param>
        <summary> Initializes a new instance of ContainerRegistryTokenPassword. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryUsage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage ContainerRegistryUsage (string name = default, long? limit = default, long? currentValue = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit? unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage ContainerRegistryUsage(string name, valuetype System.Nullable`1&lt;int64&gt; limit, valuetype System.Nullable`1&lt;int64&gt; currentValue, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit&gt; unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryUsage(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryUsage (Optional name As String = Nothing, Optional limit As Nullable(Of Long) = Nothing, Optional currentValue As Nullable(Of Long) = Nothing, Optional unit As Nullable(Of ContainerRegistryUsageUnit) = Nothing) As ContainerRegistryUsage" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryUsage : string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryUsage (name, limit, currentValue, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="currentValue" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="unit" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the usage. </param>
        <param name="limit"> The limit of the usage. </param>
        <param name="currentValue"> The current value of the usage. </param>
        <param name="unit"> The unit of measurement. </param>
        <summary> Initializes a new instance of ContainerRegistryUsage. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookCallbackConfig">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig ContainerRegistryWebhookCallbackConfig (Uri serviceUri = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; customHeaders = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig ContainerRegistryWebhookCallbackConfig(class System.Uri serviceUri, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; customHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookCallbackConfig(System.Uri,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookCallbackConfig (Optional serviceUri As Uri = Nothing, Optional customHeaders As IReadOnlyDictionary(Of String, String) = Nothing) As ContainerRegistryWebhookCallbackConfig" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookCallbackConfig : Uri * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookCallbackConfig (serviceUri, customHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceUri" Type="System.Uri" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceUri"> The service URI for the webhook to post notifications. </param>
        <param name="customHeaders"> Custom headers that will be added to the webhook notifications. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookCallbackConfig. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData ContainerRegistryWebhookData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus? status = default, string scope = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; actions = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData ContainerRegistryWebhookData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt; status, string scope, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; actions, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional status As Nullable(Of ContainerRegistryWebhookStatus) = Nothing, Optional scope As String = Nothing, Optional actions As IEnumerable(Of ContainerRegistryWebhookAction) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryWebhookData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt; * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookData (id, name, resourceType, systemData, tags, location, status, scope, actions, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt;" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="status"> The status of the webhook at the time the operation was called. </param>
        <param name="scope"> The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events. </param>
        <param name="actions"> The list of actions that trigger the webhook to post notifications. </param>
        <param name="provisioningState"> The provisioning state of the webhook at the time the operation was called. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEvent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent ContainerRegistryWebhookEvent (Guid? id = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage eventRequestMessage = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage eventResponseMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent ContainerRegistryWebhookEvent(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage eventRequestMessage, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage eventResponseMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEvent(System.Nullable{System.Guid},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEvent (Optional id As Nullable(Of Guid) = Nothing, Optional eventRequestMessage As ContainerRegistryWebhookEventRequestMessage = Nothing, Optional eventResponseMessage As ContainerRegistryWebhookEventResponseMessage = Nothing) As ContainerRegistryWebhookEvent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEvent : Nullable&lt;Guid&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEvent (id, eventRequestMessage, eventResponseMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="eventRequestMessage" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage" />
        <Parameter Name="eventResponseMessage" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage" />
      </Parameters>
      <Docs>
        <param name="id"> The event ID. </param>
        <param name="eventRequestMessage"> The event request message sent to the service URI. </param>
        <param name="eventResponseMessage"> The event response message received from the service URI. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEvent. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent ContainerRegistryWebhookEventContent (Guid? id = default, DateTimeOffset? timestamp = default, string action = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget target = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent request = default, string actorName = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource source = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent ContainerRegistryWebhookEventContent(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp, string action, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget target, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent request, string actorName, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventContent(System.Nullable{System.Guid},System.Nullable{System.DateTimeOffset},System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent,System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventContent (Optional id As Nullable(Of Guid) = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing, Optional action As String = Nothing, Optional target As ContainerRegistryWebhookEventTarget = Nothing, Optional request As ContainerRegistryWebhookEventRequestContent = Nothing, Optional actorName As String = Nothing, Optional source As ContainerRegistryWebhookEventSource = Nothing) As ContainerRegistryWebhookEventContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventContent : Nullable&lt;Guid&gt; * Nullable&lt;DateTimeOffset&gt; * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventContent (id, timestamp, action, target, request, actorName, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="target" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget" />
        <Parameter Name="request" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent" />
        <Parameter Name="actorName" Type="System.String" />
        <Parameter Name="source" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource" />
      </Parameters>
      <Docs>
        <param name="id"> The event ID. </param>
        <param name="timestamp"> The time at which the event occurred. </param>
        <param name="action"> The action that encompasses the provided event. </param>
        <param name="target"> The target of the event. </param>
        <param name="request"> The request that generated the event. </param>
        <param name="actorName"> The agent that initiated the event. For most situations, this could be from the authorization context of the request. </param>
        <param name="source"> The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEventContent. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventInfo">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo ContainerRegistryWebhookEventInfo (Guid? id = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo ContainerRegistryWebhookEventInfo(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventInfo(System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventInfo (Optional id As Nullable(Of Guid) = Nothing) As ContainerRegistryWebhookEventInfo" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventInfo : Nullable&lt;Guid&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventInfo id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The event ID. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEventInfo. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventRequestContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent ContainerRegistryWebhookEventRequestContent (Guid? id = default, string addr = default, string host = default, string method = default, string userAgent = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent ContainerRegistryWebhookEventRequestContent(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id, string addr, string host, string method, string userAgent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestContent(System.Nullable{System.Guid},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventRequestContent (Optional id As Nullable(Of Guid) = Nothing, Optional addr As String = Nothing, Optional host As String = Nothing, Optional method As String = Nothing, Optional userAgent As String = Nothing) As ContainerRegistryWebhookEventRequestContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventRequestContent : Nullable&lt;Guid&gt; * string * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestContent (id, addr, host, method, userAgent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="addr" Type="System.String" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userAgent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The ID of the request that initiated the event. </param>
        <param name="addr"> The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request. </param>
        <param name="host"> The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests. </param>
        <param name="method"> The request method that generated the event. </param>
        <param name="userAgent"> The user agent header of the request. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEventRequestContent. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventRequestMessage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage ContainerRegistryWebhookEventRequestMessage (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent content = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; headers = default, string method = default, Uri requestUri = default, string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage ContainerRegistryWebhookEventRequestMessage(class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent content, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; headers, string method, class System.Uri requestUri, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestMessage(Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventRequestMessage (Optional content As ContainerRegistryWebhookEventContent = Nothing, Optional headers As IReadOnlyDictionary(Of String, String) = Nothing, Optional method As String = Nothing, Optional requestUri As Uri = Nothing, Optional version As String = Nothing) As ContainerRegistryWebhookEventRequestMessage" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventRequestMessage : Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * string * Uri * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestMessage (content, headers, method, requestUri, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent" />
        <Parameter Name="headers" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the event request message. </param>
        <param name="headers"> The headers of the event request message. </param>
        <param name="method"> The HTTP method used to send the event request message. </param>
        <param name="requestUri"> The URI used to send the event request message. </param>
        <param name="version"> The HTTP message version. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEventRequestMessage. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventResponseMessage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage ContainerRegistryWebhookEventResponseMessage (string content = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; headers = default, string reasonPhrase = default, string statusCode = default, string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage ContainerRegistryWebhookEventResponseMessage(string content, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; headers, string reasonPhrase, string statusCode, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventResponseMessage(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventResponseMessage (Optional content As String = Nothing, Optional headers As IReadOnlyDictionary(Of String, String) = Nothing, Optional reasonPhrase As String = Nothing, Optional statusCode As String = Nothing, Optional version As String = Nothing) As ContainerRegistryWebhookEventResponseMessage" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventResponseMessage : string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventResponseMessage (content, headers, reasonPhrase, statusCode, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="reasonPhrase" Type="System.String" />
        <Parameter Name="statusCode" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the event response message. </param>
        <param name="headers"> The headers of the event response message. </param>
        <param name="reasonPhrase"> The reason phrase of the event response message. </param>
        <param name="statusCode"> The status code of the event response message. </param>
        <param name="version"> The HTTP message version. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEventResponseMessage. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventSource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource ContainerRegistryWebhookEventSource (string addr = default, string instanceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource ContainerRegistryWebhookEventSource(string addr, string instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventSource (Optional addr As String = Nothing, Optional instanceId As String = Nothing) As ContainerRegistryWebhookEventSource" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventSource : string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventSource (addr, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.String" />
        <Parameter Name="instanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addr"> The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port. </param>
        <param name="instanceId"> The running instance of an application. Changes after each restart. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEventSource. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventTarget">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget ContainerRegistryWebhookEventTarget (string mediaType = default, long? size = default, string digest = default, long? length = default, string repository = default, Uri uri = default, string tag = default, string name = default, string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget ContainerRegistryWebhookEventTarget(string mediaType, valuetype System.Nullable`1&lt;int64&gt; size, string digest, valuetype System.Nullable`1&lt;int64&gt; length, string repository, class System.Uri uri, string tag, string name, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventTarget(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.String,System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventTarget (Optional mediaType As String = Nothing, Optional size As Nullable(Of Long) = Nothing, Optional digest As String = Nothing, Optional length As Nullable(Of Long) = Nothing, Optional repository As String = Nothing, Optional uri As Uri = Nothing, Optional tag As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing) As ContainerRegistryWebhookEventTarget" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventTarget : string * Nullable&lt;int64&gt; * string * Nullable&lt;int64&gt; * string * Uri * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventTarget (mediaType, size, digest, length, repository, uri, tag, name, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType"> The MIME type of the referenced object. </param>
        <param name="size"> The number of bytes of the content. Same as Length field. </param>
        <param name="digest"> The digest of the content, as defined by the Registry V2 HTTP API Specification. </param>
        <param name="length"> The number of bytes of the content. Same as Size field. </param>
        <param name="repository"> The repository name. </param>
        <param name="uri"> The direct URL to the content. </param>
        <param name="tag"> The tag name. </param>
        <param name="name"> The name of the artifact. </param>
        <param name="version"> The version of the artifact. </param>
        <summary> Initializes a new instance of ContainerRegistryWebhookEventTarget. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeMapData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ScopeMapData ScopeMapData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string description = default, string scopeMapType = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, System.Collections.Generic.IEnumerable&lt;string&gt; actions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ScopeMapData ScopeMapData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string description, string scopeMapType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class System.Collections.Generic.IEnumerable`1&lt;string&gt; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ScopeMapData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScopeMapData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional description As String = Nothing, Optional scopeMapType As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional actions As IEnumerable(Of String) = Nothing) As ScopeMapData" />
      <MemberSignature Language="F#" Value="static member ScopeMapData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ScopeMapData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ScopeMapData (id, name, resourceType, systemData, description, scopeMapType, createdOn, provisioningState, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ScopeMapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="scopeMapType" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="description"> The user friendly description of the scope map. </param>
        <param name="scopeMapType"> The type of the scope map. E.g. BuildIn scope map. </param>
        <param name="createdOn"> The creation date of scope map. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="actions">
            The list of scoped permissions for registry artifacts.
            E.g. repositories/repository-name/content/read,
            repositories/repository-name/metadata/write
            </param>
        <summary> Initializes a new instance of ScopeMapData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ScopeMapData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUploadDefinition">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition SourceUploadDefinition (Uri uploadUri = default, string relativePath = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition SourceUploadDefinition(class System.Uri uploadUri, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.SourceUploadDefinition(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceUploadDefinition (Optional uploadUri As Uri = Nothing, Optional relativePath As String = Nothing) As SourceUploadDefinition" />
      <MemberSignature Language="F#" Value="static member SourceUploadDefinition : Uri * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.SourceUploadDefinition (uploadUri, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uploadUri" Type="System.Uri" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uploadUri"> The URL where the client can upload the source. </param>
        <param name="relativePath"> The relative path to the source. This is used to submit the subsequent queue build request. </param>
        <summary> Initializes a new instance of SourceUploadDefinition. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
