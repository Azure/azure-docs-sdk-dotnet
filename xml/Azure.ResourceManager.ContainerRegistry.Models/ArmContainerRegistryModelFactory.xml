<Type Name="ArmContainerRegistryModelFactory" FullName="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmContainerRegistryModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmContainerRegistryModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmContainerRegistryModelFactory" />
  <TypeSignature Language="F#" Value="type ArmContainerRegistryModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConnectedRegistryData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ConnectedRegistryData ConnectedRegistryData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryMode? mode = default, string version = default, Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryConnectionState? connectionState = default, DateTimeOffset? lastActivityOn = default, Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryActivationStatus? activationStatus = default, Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryParent parent = default, System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceIdentifier&gt; clientTokenIds = default, Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer loginServer = default, Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLogging logging = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail&gt; statusDetails = default, System.Collections.Generic.IEnumerable&lt;string&gt; notificationsList = default, Azure.ResourceManager.ContainerRegistry.Models.GarbageCollectionProperties garbageCollection = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ConnectedRegistryData ConnectedRegistryData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryMode&gt; mode, string version, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryConnectionState&gt; connectionState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastActivityOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryActivationStatus&gt; activationStatus, class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryParent parent, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Core.ResourceIdentifier&gt; clientTokenIds, class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer loginServer, class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLogging logging, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail&gt; statusDetails, class System.Collections.Generic.IEnumerable`1&lt;string&gt; notificationsList, class Azure.ResourceManager.ContainerRegistry.Models.GarbageCollectionProperties garbageCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistryData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryMode},System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryConnectionState},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryActivationStatus},Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryParent,System.Collections.Generic.IEnumerable{Azure.Core.ResourceIdentifier},Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer,Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLogging,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail},System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.ContainerRegistry.Models.GarbageCollectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConnectedRegistryData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional mode As Nullable(Of ConnectedRegistryMode) = Nothing, Optional version As String = Nothing, Optional connectionState As Nullable(Of ConnectedRegistryConnectionState) = Nothing, Optional lastActivityOn As Nullable(Of DateTimeOffset) = Nothing, Optional activationStatus As Nullable(Of ConnectedRegistryActivationStatus) = Nothing, Optional parent As ConnectedRegistryParent = Nothing, Optional clientTokenIds As IEnumerable(Of ResourceIdentifier) = Nothing, Optional loginServer As ConnectedRegistryLoginServer = Nothing, Optional logging As ConnectedRegistryLogging = Nothing, Optional statusDetails As IEnumerable(Of ConnectedRegistryStatusDetail) = Nothing, Optional notificationsList As IEnumerable(Of String) = Nothing, Optional garbageCollection As GarbageCollectionProperties = Nothing) As ConnectedRegistryData" />
      <MemberSignature Language="F#" Value="static member ConnectedRegistryData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryMode&gt; * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryConnectionState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryActivationStatus&gt; * Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryParent * seq&lt;Azure.Core.ResourceIdentifier&gt; * Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer * Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLogging * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail&gt; * seq&lt;string&gt; * Azure.ResourceManager.ContainerRegistry.Models.GarbageCollectionProperties -&gt; Azure.ResourceManager.ContainerRegistry.ConnectedRegistryData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistryData (id, name, resourceType, systemData, provisioningState, mode, version, connectionState, lastActivityOn, activationStatus, parent, clientTokenIds, loginServer, logging, statusDetails, notificationsList, garbageCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ConnectedRegistryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="mode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryMode&gt;" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="version" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="connectionState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryConnectionState&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="lastActivityOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="activationStatus" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryActivationStatus&gt;" Index="9" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parent" Type="Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryParent" Index="10" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="clientTokenIds" Type="System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceIdentifier&gt;" Index="11" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="loginServer" Type="Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer" Index="12" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="logging" Type="Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLogging" Index="13" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="statusDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail&gt;" Index="14" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="notificationsList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="15" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="garbageCollection" Type="Azure.ResourceManager.ContainerRegistry.Models.GarbageCollectionProperties" Index="16" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="mode"> The mode of the connected registry resource that indicates the permissions of the registry. </param>
        <param name="version"> The current version of ACR runtime on the connected registry. </param>
        <param name="connectionState"> The current connection state of the connected registry. </param>
        <param name="lastActivityOn"> The last activity time of the connected registry. </param>
        <param name="activationStatus"> The activation properties of the connected registry. </param>
        <param name="parent"> The parent of the connected registry. </param>
        <param name="clientTokenIds"> The list of the ACR token resource IDs used to authenticate clients to the connected registry. </param>
        <param name="loginServer"> The login server properties of the connected registry. </param>
        <param name="logging"> The logging properties of the connected registry. </param>
        <param name="statusDetails"> The list of current statuses of the connected registry. </param>
        <param name="notificationsList"> The list of notifications subscription information for the connected registry. </param>
        <param name="garbageCollection"> The garbage collection properties of the connected registry. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ConnectedRegistryData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ConnectedRegistryData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectedRegistryLoginServer">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer ConnectedRegistryLoginServer (string host = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties tls = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer ConnectedRegistryLoginServer(string host, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties tls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistryLoginServer(System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConnectedRegistryLoginServer (Optional host As String = Nothing, Optional tls As ContainerRegistryTlsProperties = Nothing) As ConnectedRegistryLoginServer" />
      <MemberSignature Language="F#" Value="static member ConnectedRegistryLoginServer : string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties -&gt; Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistryLoginServer (host, tls)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="tls" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="host"> The host of the connected registry. Can be FQDN or IP. </param>
        <param name="tls"> The TLS properties of the connected registry login server. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryLoginServer" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectedRegistryStatusDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail ConnectedRegistryStatusDetail (string statusDetailType = default, string code = default, string description = default, DateTimeOffset? timestamp = default, Guid? correlationId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail ConnectedRegistryStatusDetail(string statusDetailType, string code, string description, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistryStatusDetail(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConnectedRegistryStatusDetail (Optional statusDetailType As String = Nothing, Optional code As String = Nothing, Optional description As String = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing, Optional correlationId As Nullable(Of Guid) = Nothing) As ConnectedRegistryStatusDetail" />
      <MemberSignature Language="F#" Value="static member ConnectedRegistryStatusDetail : string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Guid&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistryStatusDetail (statusDetailType, code, description, timestamp, correlationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusDetailType" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="code" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="description" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="correlationId" Type="System.Nullable&lt;System.Guid&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="statusDetailType"> The component of the connected registry corresponding to the status. </param>
        <param name="code"> The code of the status. </param>
        <param name="description"> The description of the status. </param>
        <param name="timestamp"> The timestamp of the status. </param>
        <param name="correlationId"> The correlation ID of the status. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryStatusDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectedRegistrySyncProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistrySyncProperties ConnectedRegistrySyncProperties (Azure.Core.ResourceIdentifier tokenId = default, string schedule = default, TimeSpan? syncWindow = default, TimeSpan messageTtl = default, DateTimeOffset? lastSyncOn = default, string gatewayEndpoint = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistrySyncProperties ConnectedRegistrySyncProperties(class Azure.Core.ResourceIdentifier tokenId, string schedule, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; syncWindow, valuetype System.TimeSpan messageTtl, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastSyncOn, string gatewayEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistrySyncProperties(Azure.Core.ResourceIdentifier,System.String,System.Nullable{System.TimeSpan},System.TimeSpan,System.Nullable{System.DateTimeOffset},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConnectedRegistrySyncProperties (Optional tokenId As ResourceIdentifier = Nothing, Optional schedule As String = Nothing, Optional syncWindow As Nullable(Of TimeSpan) = Nothing, Optional messageTtl As TimeSpan = Nothing, Optional lastSyncOn As Nullable(Of DateTimeOffset) = Nothing, Optional gatewayEndpoint As String = Nothing) As ConnectedRegistrySyncProperties" />
      <MemberSignature Language="F#" Value="static member ConnectedRegistrySyncProperties : Azure.Core.ResourceIdentifier * string * Nullable&lt;TimeSpan&gt; * TimeSpan * Nullable&lt;DateTimeOffset&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistrySyncProperties" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ConnectedRegistrySyncProperties (tokenId, schedule, syncWindow, messageTtl, lastSyncOn, gatewayEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistrySyncProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenId" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="schedule" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="syncWindow" Type="System.Nullable&lt;System.TimeSpan&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="messageTtl" Type="System.TimeSpan" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="lastSyncOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="gatewayEndpoint" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="tokenId"> The resource ID of the ACR token used to authenticate the connected registry to its parent during sync. </param>
        <param name="schedule"> The cron expression indicating the schedule that the connected registry will sync with its parent. </param>
        <param name="syncWindow"> The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601. </param>
        <param name="messageTtl"> The period of time for which a message is available to sync before it is expired. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601. </param>
        <param name="lastSyncOn"> The last time a sync occurred between the connected registry and its parent. </param>
        <param name="gatewayEndpoint"> The gateway endpoint used by the connected registry to communicate with its parent. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistrySyncProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistrySyncProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryAgentPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData ContainerRegistryAgentPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, int? count = default, string tier = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS? os = default, Azure.Core.ResourceIdentifier virtualNetworkSubnetResourceId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData ContainerRegistryAgentPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;int32&gt; count, string tier, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS&gt; os, class Azure.Core.ResourceIdentifier virtualNetworkSubnetResourceId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryAgentPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional count As Nullable(Of Integer) = Nothing, Optional tier As String = Nothing, Optional os As Nullable(Of ContainerRegistryOS) = Nothing, Optional virtualNetworkSubnetResourceId As ResourceIdentifier = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryAgentPoolData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryAgentPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;int&gt; * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolData (id, name, resourceType, systemData, tags, location, count, tier, os, virtualNetworkSubnetResourceId, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="tier" Type="System.String" />
        <Parameter Name="os" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryOS&gt;" />
        <Parameter Name="virtualNetworkSubnetResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="count"> The count of agent machine. </param>
        <param name="tier"> The Tier of agent machine. </param>
        <param name="os"> The OS of agent machine. </param>
        <param name="virtualNetworkSubnetResourceId"> The Virtual Network Subnet Resource Id of the agent machine. </param>
        <param name="provisioningState"> The provisioning state of this agent pool. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryAgentPoolQueueStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus ContainerRegistryAgentPoolQueueStatus (int? count = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus ContainerRegistryAgentPoolQueueStatus(valuetype System.Nullable`1&lt;int32&gt; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolQueueStatus(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryAgentPoolQueueStatus (Optional count As Nullable(Of Integer) = Nothing) As ContainerRegistryAgentPoolQueueStatus" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryAgentPoolQueueStatus : Nullable&lt;int&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAgentPoolQueueStatus count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="count"> The number of pending runs in the queue. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAgentPoolQueueStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryArchiveData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveData ContainerRegistryArchiveData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerRegistry.Models.ArchivePackageSourceProperties packageSource = default, string publishedVersion = default, string repositoryEndpointPrefix = default, string repositoryEndpoint = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveData ContainerRegistryArchiveData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.ContainerRegistry.Models.ArchivePackageSourceProperties packageSource, string publishedVersion, string repositoryEndpointPrefix, string repositoryEndpoint, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryArchiveData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.ContainerRegistry.Models.ArchivePackageSourceProperties,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryArchiveData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional packageSource As ArchivePackageSourceProperties = Nothing, Optional publishedVersion As String = Nothing, Optional repositoryEndpointPrefix As String = Nothing, Optional repositoryEndpoint As String = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryArchiveData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryArchiveData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.ContainerRegistry.Models.ArchivePackageSourceProperties * string * string * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryArchiveData (id, name, resourceType, systemData, packageSource, publishedVersion, repositoryEndpointPrefix, repositoryEndpoint, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="packageSource" Type="Azure.ResourceManager.ContainerRegistry.Models.ArchivePackageSourceProperties" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="publishedVersion" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="repositoryEndpointPrefix" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="repositoryEndpoint" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="packageSource"> The package source of the archive. </param>
        <param name="publishedVersion"> The published version of the archive. </param>
        <param name="repositoryEndpointPrefix" />
        <param name="repositoryEndpoint" />
        <param name="provisioningState"> The provisioning state of the archive at the time the operation was called. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryArchiveVersionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveVersionData ContainerRegistryArchiveVersionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, string archiveVersionErrorMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveVersionData ContainerRegistryArchiveVersionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, string archiveVersionErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryArchiveVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryArchiveVersionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional archiveVersionErrorMessage As String = Nothing) As ContainerRegistryArchiveVersionData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryArchiveVersionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveVersionData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryArchiveVersionData (id, name, resourceType, systemData, provisioningState, archiveVersionErrorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveVersionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="archiveVersionErrorMessage" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> The provisioning state of the archive at the time the operation was called. </param>
        <param name="archiveVersionErrorMessage"> The detailed error message for the archive version in the case of failure. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveVersionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryArchiveVersionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryAuthCredential">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential ContainerRegistryAuthCredential (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialName? name = default, string usernameSecretIdentifier = default, string passwordSecretIdentifier = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth credentialHealth = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential ContainerRegistryAuthCredential(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialName&gt; name, string usernameSecretIdentifier, string passwordSecretIdentifier, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth credentialHealth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAuthCredential(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialName},System.String,System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryAuthCredential (Optional name As Nullable(Of ContainerRegistryCredentialName) = Nothing, Optional usernameSecretIdentifier As String = Nothing, Optional passwordSecretIdentifier As String = Nothing, Optional credentialHealth As ContainerRegistryCredentialHealth = Nothing) As ContainerRegistryAuthCredential" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryAuthCredential : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialName&gt; * string * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryAuthCredential (name, usernameSecretIdentifier, passwordSecretIdentifier, credentialHealth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialName&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="usernameSecretIdentifier" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="passwordSecretIdentifier" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="credentialHealth" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the credential. </param>
        <param name="usernameSecretIdentifier"> KeyVault Secret URI for accessing the username. </param>
        <param name="passwordSecretIdentifier"> KeyVault Secret URI for accessing the password. </param>
        <param name="credentialHealth"> This provides data pertaining to the health of the auth credential. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryBaseImageDependency">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency ContainerRegistryBaseImageDependency (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType? dependencyType = default, string registry = default, string repository = default, string tag = default, string digest = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency ContainerRegistryBaseImageDependency(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType&gt; dependencyType, string registry, string repository, string tag, string digest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryBaseImageDependency(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryBaseImageDependency (Optional dependencyType As Nullable(Of ContainerRegistryBaseImageDependencyType) = Nothing, Optional registry As String = Nothing, Optional repository As String = Nothing, Optional tag As String = Nothing, Optional digest As String = Nothing) As ContainerRegistryBaseImageDependency" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryBaseImageDependency : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType&gt; * string * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryBaseImageDependency (dependencyType, registry, repository, tag, digest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependencyType&gt;" />
        <Parameter Name="registry" Type="System.String" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="digest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dependencyType"> The type of the base image dependency. </param>
        <param name="registry"> The registry login server. </param>
        <param name="repository"> The repository name. </param>
        <param name="tag"> The tag name. </param>
        <param name="digest"> The sha256-based digest of the image manifest. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryBaseImageTriggerUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerUpdateContent ContainerRegistryBaseImageTriggerUpdateContent (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerType? baseImageTriggerType = default, string updateTriggerEndpoint = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUpdateTriggerPayloadType? updateTriggerPayloadType = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus? status = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerUpdateContent ContainerRegistryBaseImageTriggerUpdateContent(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerType&gt; baseImageTriggerType, string updateTriggerEndpoint, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUpdateTriggerPayloadType&gt; updateTriggerPayloadType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; status, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryBaseImageTriggerUpdateContent(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerType},System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUpdateTriggerPayloadType},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryBaseImageTriggerUpdateContent (Optional baseImageTriggerType As Nullable(Of ContainerRegistryBaseImageTriggerType) = Nothing, Optional updateTriggerEndpoint As String = Nothing, Optional updateTriggerPayloadType As Nullable(Of ContainerRegistryUpdateTriggerPayloadType) = Nothing, Optional status As Nullable(Of ContainerRegistryTriggerStatus) = Nothing, Optional name As String = Nothing) As ContainerRegistryBaseImageTriggerUpdateContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryBaseImageTriggerUpdateContent : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerType&gt; * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUpdateTriggerPayloadType&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerUpdateContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryBaseImageTriggerUpdateContent (baseImageTriggerType, updateTriggerEndpoint, updateTriggerPayloadType, status, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseImageTriggerType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerType&gt;" />
        <Parameter Name="updateTriggerEndpoint" Type="System.String" />
        <Parameter Name="updateTriggerPayloadType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUpdateTriggerPayloadType&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt;" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseImageTriggerType"> The type of the auto trigger for base image dependency updates. </param>
        <param name="updateTriggerEndpoint"> The endpoint URL for receiving update triggers. </param>
        <param name="updateTriggerPayloadType"> Type of Payload body for Base image update triggers. </param>
        <param name="status"> The current status of trigger. </param>
        <param name="name"> The name of the trigger. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageTriggerUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryCacheRuleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryCacheRuleData ContainerRegistryCacheRuleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier credentialSetResourceId = default, string sourceRepository = default, string targetRepository = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryCacheRuleData ContainerRegistryCacheRuleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier credentialSetResourceId, string sourceRepository, string targetRepository, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryCacheRuleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryCacheRuleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional credentialSetResourceId As ResourceIdentifier = Nothing, Optional sourceRepository As String = Nothing, Optional targetRepository As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryCacheRuleData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryCacheRuleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryCacheRuleData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryCacheRuleData (id, name, resourceType, systemData, credentialSetResourceId, sourceRepository, targetRepository, createdOn, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryCacheRuleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="credentialSetResourceId" Type="Azure.Core.ResourceIdentifier" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceRepository" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetRepository" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="credentialSetResourceId"> The ARM resource ID of the credential store which is associated with the cache rule. </param>
        <param name="sourceRepository"> Source repository pulled from upstream. </param>
        <param name="targetRepository">
            Target repository specified in docker pull command.
            Eg: docker pull myregistry.azurecr.io/{targetRepository}:{tag}
            </param>
        <param name="createdOn"> The creation date of the cache rule. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryCacheRuleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryCacheRuleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryCredentialHealth">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth ContainerRegistryCredentialHealth (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealthStatus? status = default, string errorCode = default, string errorMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth ContainerRegistryCredentialHealth(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealthStatus&gt; status, string errorCode, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryCredentialHealth(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealthStatus},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryCredentialHealth (Optional status As Nullable(Of ContainerRegistryCredentialHealthStatus) = Nothing, Optional errorCode As String = Nothing, Optional errorMessage As String = Nothing) As ContainerRegistryCredentialHealth" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryCredentialHealth : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealthStatus&gt; * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryCredentialHealth (status, errorCode, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealthStatus&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="errorCode" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="errorMessage" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="status"> The health status of credential. </param>
        <param name="errorCode"> Error code representing the health check error. </param>
        <param name="errorMessage"> Descriptive message representing the health check error. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentialHealth" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryCredentialSetData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryCredentialSetData ContainerRegistryCredentialSetData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string loginServer = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential&gt; authCredentials = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryCredentialSetData ContainerRegistryCredentialSetData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string loginServer, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential&gt; authCredentials, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryCredentialSetData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryCredentialSetData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional loginServer As String = Nothing, Optional authCredentials As IEnumerable(Of ContainerRegistryAuthCredential) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryCredentialSetData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryCredentialSetData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Models.ManagedServiceIdentity * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryCredentialSetData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryCredentialSetData (id, name, resourceType, systemData, identity, loginServer, authCredentials, createdOn, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryCredentialSetData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="loginServer" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="authCredentials" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryAuthCredential&gt;" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="identity"> Identities associated with the resource. This is used to access the KeyVault secrets. </param>
        <param name="loginServer"> The credentials are stored for this upstream or login server. </param>
        <param name="authCredentials">
            List of authentication credentials stored for an upstream.
            Usually consists of a primary and an optional secondary credential.
            </param>
        <param name="createdOn"> The creation date of credential store resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryCredentialSetData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryCredentialSetData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryData ContainerRegistryData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku sku = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string loginServer = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status = default, bool? isAdminUserEnabled = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet networkRuleSet = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies policies = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption encryption = default, bool? isDataEndpointEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; dataEndpointHostNames = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; privateEndpointConnections = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption? networkRuleBypassOptions = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy? zoneRedundancy = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryData ContainerRegistryData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku sku, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string loginServer, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status, valuetype System.Nullable`1&lt;bool&gt; isAdminUserEnabled, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet networkRuleSet, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies policies, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption encryption, valuetype System.Nullable`1&lt;bool&gt; isDataEndpointEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dataEndpointHostNames, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; privateEndpointConnections, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt; networkRuleBypassOptions, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; zoneRedundancy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus,System.Nullable{System.Boolean},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As ContainerRegistrySku = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional loginServer As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional status As ContainerRegistryResourceStatus = Nothing, Optional isAdminUserEnabled As Nullable(Of Boolean) = Nothing, Optional networkRuleSet As ContainerRegistryNetworkRuleSet = Nothing, Optional policies As ContainerRegistryPolicies = Nothing, Optional encryption As ContainerRegistryEncryption = Nothing, Optional isDataEndpointEnabled As Nullable(Of Boolean) = Nothing, Optional dataEndpointHostNames As IEnumerable(Of String) = Nothing, Optional privateEndpointConnections As IEnumerable(Of ContainerRegistryPrivateEndpointConnectionData) = Nothing, Optional publicNetworkAccess As Nullable(Of ContainerRegistryPublicNetworkAccess) = Nothing, Optional networkRuleBypassOptions As Nullable(Of ContainerRegistryNetworkRuleBypassOption) = Nothing, Optional zoneRedundancy As Nullable(Of ContainerRegistryZoneRedundancy) = Nothing) As ContainerRegistryData" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku * Azure.ResourceManager.Models.ManagedServiceIdentity * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus * Nullable&lt;bool&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption * Nullable&lt;bool&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryData (id, name, resourceType, systemData, tags, location, sku, identity, loginServer, createdOn, provisioningState, status, isAdminUserEnabled, networkRuleSet, policies, encryption, isDataEndpointEnabled, dataEndpointHostNames, privateEndpointConnections, publicNetworkAccess, networkRuleBypassOptions, zoneRedundancy)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryData ContainerRegistryData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.Core.AzureLocation location, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku sku, Azure.ResourceManager.Models.ManagedServiceIdentity identity, string loginServer, DateTimeOffset? createdOn, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status, bool? isAdminUserEnabled, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet networkRuleSet, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies policies, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption encryption, bool? isDataEndpointEnabled, System.Collections.Generic.IEnumerable&lt;string&gt; dataEndpointHostNames, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; privateEndpointConnections, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess? publicNetworkAccess, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption? networkRuleBypassOptions, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy? zoneRedundancy);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), location As AzureLocation, sku As ContainerRegistrySku, identity As ManagedServiceIdentity, loginServer As String, createdOn As Nullable(Of DateTimeOffset), provisioningState As Nullable(Of ContainerRegistryProvisioningState), status As ContainerRegistryResourceStatus, isAdminUserEnabled As Nullable(Of Boolean), networkRuleSet As ContainerRegistryNetworkRuleSet, policies As ContainerRegistryPolicies, encryption As ContainerRegistryEncryption, isDataEndpointEnabled As Nullable(Of Boolean), dataEndpointHostNames As IEnumerable(Of String), privateEndpointConnections As IEnumerable(Of ContainerRegistryPrivateEndpointConnectionData), publicNetworkAccess As Nullable(Of ContainerRegistryPublicNetworkAccess), networkRuleBypassOptions As Nullable(Of ContainerRegistryNetworkRuleBypassOption), zoneRedundancy As Nullable(Of ContainerRegistryZoneRedundancy)) As ContainerRegistryData" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="sku" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="loginServer" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" />
        <Parameter Name="isAdminUserEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="networkRuleSet" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet" />
        <Parameter Name="policies" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption" />
        <Parameter Name="isDataEndpointEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="dataEndpointHostNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt;" />
        <Parameter Name="networkRuleBypassOptions" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt;" />
        <Parameter Name="zoneRedundancy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> The SKU of the container registry. </param>
        <param name="identity"> The identity of the container registry. </param>
        <param name="loginServer"> The URL that can be used to log into the container registry. </param>
        <param name="createdOn"> The creation date of the container registry in ISO8601 format. </param>
        <param name="provisioningState"> The provisioning state of the container registry at the time the operation was called. </param>
        <param name="status"> The status of the container registry at the time the operation was called. </param>
        <param name="isAdminUserEnabled"> The value that indicates whether the admin user is enabled. </param>
        <param name="networkRuleSet"> The network rule set for a container registry. </param>
        <param name="policies"> The policies for a container registry. </param>
        <param name="encryption"> The encryption settings of container registry. </param>
        <param name="isDataEndpointEnabled"> Enable a single data endpoint per region for serving data. </param>
        <param name="dataEndpointHostNames"> List of host names that will serve data when dataEndpointEnabled is true. </param>
        <param name="privateEndpointConnections"> List of private endpoint connections for a container registry. </param>
        <param name="publicNetworkAccess"> Whether or not public network access is allowed for the container registry. </param>
        <param name="networkRuleBypassOptions"> Whether to allow trusted Azure services to access a network restricted registry. </param>
        <param name="zoneRedundancy"> Whether or not zone redundancy is enabled for this container registry. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryData ContainerRegistryData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku sku = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string loginServer = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status = default, bool? isAdminUserEnabled = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet networkRuleSet = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies policies = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption encryption = default, bool? isDataEndpointEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; dataEndpointHostNames = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; privateEndpointConnections = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption? networkRuleBypassOptions = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy? zoneRedundancy = default, bool? isAnonymousPullEnabled = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryMetadataSearch? metadataSearch = default, Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope? autoGeneratedDomainNameLabelScope = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRoleAssignmentMode? roleAssignmentMode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryData ContainerRegistryData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku sku, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string loginServer, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status, valuetype System.Nullable`1&lt;bool&gt; isAdminUserEnabled, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet networkRuleSet, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies policies, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption encryption, valuetype System.Nullable`1&lt;bool&gt; isDataEndpointEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dataEndpointHostNames, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; privateEndpointConnections, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt; networkRuleBypassOptions, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; zoneRedundancy, valuetype System.Nullable`1&lt;bool&gt; isAnonymousPullEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryMetadataSearch&gt; metadataSearch, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope&gt; autoGeneratedDomainNameLabelScope, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRoleAssignmentMode&gt; roleAssignmentMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus,System.Nullable{System.Boolean},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryMetadataSearch},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRoleAssignmentMode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As ContainerRegistrySku = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional loginServer As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional status As ContainerRegistryResourceStatus = Nothing, Optional isAdminUserEnabled As Nullable(Of Boolean) = Nothing, Optional networkRuleSet As ContainerRegistryNetworkRuleSet = Nothing, Optional policies As ContainerRegistryPolicies = Nothing, Optional encryption As ContainerRegistryEncryption = Nothing, Optional isDataEndpointEnabled As Nullable(Of Boolean) = Nothing, Optional dataEndpointHostNames As IEnumerable(Of String) = Nothing, Optional privateEndpointConnections As IEnumerable(Of ContainerRegistryPrivateEndpointConnectionData) = Nothing, Optional publicNetworkAccess As Nullable(Of ContainerRegistryPublicNetworkAccess) = Nothing, Optional networkRuleBypassOptions As Nullable(Of ContainerRegistryNetworkRuleBypassOption) = Nothing, Optional zoneRedundancy As Nullable(Of ContainerRegistryZoneRedundancy) = Nothing, Optional isAnonymousPullEnabled As Nullable(Of Boolean) = Nothing, Optional metadataSearch As Nullable(Of ContainerRegistryMetadataSearch) = Nothing, Optional autoGeneratedDomainNameLabelScope As Nullable(Of AutoGeneratedDomainNameLabelScope) = Nothing, Optional roleAssignmentMode As Nullable(Of ContainerRegistryRoleAssignmentMode) = Nothing) As ContainerRegistryData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku * Azure.ResourceManager.Models.ManagedServiceIdentity * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus * Nullable&lt;bool&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption * Nullable&lt;bool&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryMetadataSearch&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRoleAssignmentMode&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryData (id, name, resourceType, systemData, tags, location, sku, identity, loginServer, createdOn, provisioningState, status, isAdminUserEnabled, networkRuleSet, policies, encryption, isDataEndpointEnabled, dataEndpointHostNames, privateEndpointConnections, publicNetworkAccess, networkRuleBypassOptions, zoneRedundancy, isAnonymousPullEnabled, metadataSearch, autoGeneratedDomainNameLabelScope, roleAssignmentMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sku" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="loginServer" Type="System.String" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="9" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="10" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" Index="11" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isAdminUserEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="12" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="networkRuleSet" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleSet" Index="13" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="policies" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicies" Index="14" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncryption" Index="15" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isDataEndpointEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="16" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="dataEndpointHostNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="17" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData&gt;" Index="18" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPublicNetworkAccess&gt;" Index="19" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="networkRuleBypassOptions" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNetworkRuleBypassOption&gt;" Index="20" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="zoneRedundancy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt;" Index="21" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isAnonymousPullEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="22" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="metadataSearch" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryMetadataSearch&gt;" Index="23" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="autoGeneratedDomainNameLabelScope" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope&gt;" Index="24" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="roleAssignmentMode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRoleAssignmentMode&gt;" Index="25" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> The SKU of the container registry. </param>
        <param name="identity"> The identity of the container registry. </param>
        <param name="loginServer"> The URL that can be used to log into the container registry. </param>
        <param name="createdOn"> The creation date of the container registry in ISO8601 format. </param>
        <param name="provisioningState"> The provisioning state of the container registry at the time the operation was called. </param>
        <param name="status"> The status of the container registry at the time the operation was called. </param>
        <param name="isAdminUserEnabled"> The value that indicates whether the admin user is enabled. </param>
        <param name="networkRuleSet"> The network rule set for a container registry. </param>
        <param name="policies"> The policies for a container registry. </param>
        <param name="encryption"> The encryption settings of container registry. </param>
        <param name="isDataEndpointEnabled"> Enable a single data endpoint per region for serving data. </param>
        <param name="dataEndpointHostNames"> List of host names that will serve data when dataEndpointEnabled is true. </param>
        <param name="privateEndpointConnections"> List of private endpoint connections for a container registry. </param>
        <param name="publicNetworkAccess"> Whether or not public network access is allowed for the container registry. </param>
        <param name="networkRuleBypassOptions"> Whether to allow trusted Azure services to access a network restricted registry. </param>
        <param name="zoneRedundancy"> Whether or not zone redundancy is enabled for this container registry. </param>
        <param name="isAnonymousPullEnabled"> Enables registry-wide pull from unauthenticated clients. </param>
        <param name="metadataSearch"> Determines whether registry artifacts are indexed for metadata search. </param>
        <param name="autoGeneratedDomainNameLabelScope"> Determines the domain name label reuse scope. </param>
        <param name="roleAssignmentMode"> Determines registry role assignment mode. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryDockerBuildStep">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep ContainerRegistryDockerBuildStep (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default, System.Collections.Generic.IEnumerable&lt;string&gt; imageNames = default, bool? isPushEnabled = default, bool? noCache = default, string dockerFilePath = default, string target = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt; arguments = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep ContainerRegistryDockerBuildStep(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken, class System.Collections.Generic.IEnumerable`1&lt;string&gt; imageNames, valuetype System.Nullable`1&lt;bool&gt; isPushEnabled, valuetype System.Nullable`1&lt;bool&gt; noCache, string dockerFilePath, string target, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryDockerBuildStep(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryDockerBuildStep (Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing, Optional imageNames As IEnumerable(Of String) = Nothing, Optional isPushEnabled As Nullable(Of Boolean) = Nothing, Optional noCache As Nullable(Of Boolean) = Nothing, Optional dockerFilePath As String = Nothing, Optional target As String = Nothing, Optional arguments As IEnumerable(Of ContainerRegistryRunArgument) = Nothing) As ContainerRegistryDockerBuildStep" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryDockerBuildStep : seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryDockerBuildStep (baseImageDependencies, contextPath, contextAccessToken, imageNames, isPushEnabled, noCache, dockerFilePath, target, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
        <Parameter Name="imageNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isPushEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="noCache" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="dockerFilePath" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <param name="imageNames"> The fully qualified image names including the repository and tag. </param>
        <param name="isPushEnabled"> The value of this property indicates whether the image built should be pushed to the registry or not. </param>
        <param name="noCache"> The value of this property indicates whether the image cache is enabled or not. </param>
        <param name="dockerFilePath"> The Docker file path relative to the source context. </param>
        <param name="target"> The name of the target build stage for the docker build. </param>
        <param name="arguments"> The collection of override arguments to be used when executing this build step. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryEncodedTaskStep">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep ContainerRegistryEncodedTaskStep (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default, string encodedTaskContent = default, string encodedValuesContent = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep ContainerRegistryEncodedTaskStep(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken, string encodedTaskContent, string encodedValuesContent, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryEncodedTaskStep(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryEncodedTaskStep (Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing, Optional encodedTaskContent As String = Nothing, Optional encodedValuesContent As String = Nothing, Optional values As IEnumerable(Of ContainerRegistryTaskOverridableValue) = Nothing) As ContainerRegistryEncodedTaskStep" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryEncodedTaskStep : seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string * string * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryEncodedTaskStep (baseImageDependencies, contextPath, contextAccessToken, encodedTaskContent, encodedValuesContent, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
        <Parameter Name="encodedTaskContent" Type="System.String" />
        <Parameter Name="encodedValuesContent" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt;" />
      </Parameters>
      <Docs>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <param name="encodedTaskContent"> Base64 encoded value of the template/definition file content. </param>
        <param name="encodedValuesContent"> Base64 encoded value of the parameters/values file content. </param>
        <param name="values"> The collection of overridable values that can be passed when running a task. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryExportPipelineData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryExportPipelineData ContainerRegistryExportPipelineData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties target = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt; options = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryExportPipelineData ContainerRegistryExportPipelineData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties target, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt; options, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryExportPipelineData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryExportPipelineData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional target As ExportPipelineTargetProperties = Nothing, Optional options As IEnumerable(Of ContainerRegistryPipelineOption) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryExportPipelineData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryExportPipelineData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryExportPipelineData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryExportPipelineData (id, name, resourceType, systemData, location, identity, target, options, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryExportPipelineData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="target" Type="Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> The location of the export pipeline. </param>
        <param name="identity"> The identity of the export pipeline. </param>
        <param name="target"> The target properties of the export pipeline. </param>
        <param name="options"> The list of all options configured for the pipeline. </param>
        <param name="provisioningState"> The provisioning state of the pipeline at the time the operation was called. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExportPipelineData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExportPipelineData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryFileTaskStep">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep ContainerRegistryFileTaskStep (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default, string taskFilePath = default, string valuesFilePath = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep ContainerRegistryFileTaskStep(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken, string taskFilePath, string valuesFilePath, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryFileTaskStep(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryFileTaskStep (Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing, Optional taskFilePath As String = Nothing, Optional valuesFilePath As String = Nothing, Optional values As IEnumerable(Of ContainerRegistryTaskOverridableValue) = Nothing) As ContainerRegistryFileTaskStep" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryFileTaskStep : seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string * string * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryFileTaskStep (baseImageDependencies, contextPath, contextAccessToken, taskFilePath, valuesFilePath, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
        <Parameter Name="taskFilePath" Type="System.String" />
        <Parameter Name="valuesFilePath" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskOverridableValue&gt;" />
      </Parameters>
      <Docs>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <param name="taskFilePath"> The task template/definition file path relative to the source context. </param>
        <param name="valuesFilePath"> The task values/parameters file path relative to the source context. </param>
        <param name="values"> The collection of overridable values that can be passed when running a task. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryGenerateCredentialsResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult ContainerRegistryGenerateCredentialsResult (string username = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt; passwords = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult ContainerRegistryGenerateCredentialsResult(string username, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt; passwords) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryGenerateCredentialsResult(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryGenerateCredentialsResult (Optional username As String = Nothing, Optional passwords As IEnumerable(Of ContainerRegistryTokenPassword) = Nothing) As ContainerRegistryGenerateCredentialsResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryGenerateCredentialsResult : string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryGenerateCredentialsResult (username, passwords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwords" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword&gt;" />
      </Parameters>
      <Docs>
        <param name="username"> The username for a container registry. </param>
        <param name="passwords"> The list of passwords for a container registry. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryGenerateCredentialsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryImportImageContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportImageContent ContainerRegistryImportImageContent (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource source = default, System.Collections.Generic.IEnumerable&lt;string&gt; targetTags = default, System.Collections.Generic.IEnumerable&lt;string&gt; untaggedTargetRepositories = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportMode? mode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportImageContent ContainerRegistryImportImageContent(class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource source, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targetTags, class System.Collections.Generic.IEnumerable`1&lt;string&gt; untaggedTargetRepositories, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportMode&gt; mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportImageContent(Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportMode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryImportImageContent (Optional source As ContainerRegistryImportSource = Nothing, Optional targetTags As IEnumerable(Of String) = Nothing, Optional untaggedTargetRepositories As IEnumerable(Of String) = Nothing, Optional mode As Nullable(Of ContainerRegistryImportMode) = Nothing) As ContainerRegistryImportImageContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryImportImageContent : Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportMode&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportImageContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportImageContent (source, targetTags, untaggedTargetRepositories, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportImageContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource" />
        <Parameter Name="targetTags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="untaggedTargetRepositories" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="mode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportMode&gt;" />
      </Parameters>
      <Docs>
        <param name="source"> The source of the image. </param>
        <param name="targetTags"> List of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted). </param>
        <param name="untaggedTargetRepositories"> List of strings of repository names to do a manifest only copy. No tag will be created. </param>
        <param name="mode"> When Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportImageContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportImageContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryImportPipelineData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryImportPipelineData ContainerRegistryImportPipelineData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties source = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus? sourceTriggerStatus = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt; options = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryImportPipelineData ContainerRegistryImportPipelineData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties source, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; sourceTriggerStatus, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt; options, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportPipelineData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryImportPipelineData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional source As ImportPipelineSourceProperties = Nothing, Optional sourceTriggerStatus As Nullable(Of ContainerRegistryTriggerStatus) = Nothing, Optional options As IEnumerable(Of ContainerRegistryPipelineOption) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryImportPipelineData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryImportPipelineData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryImportPipelineData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportPipelineData (id, name, resourceType, systemData, location, identity, source, sourceTriggerStatus, options, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryImportPipelineData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="source" Type="Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceTriggerStatus" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPipelineOption&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="9" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> The location of the import pipeline. </param>
        <param name="identity"> The identity of the import pipeline. </param>
        <param name="source"> The source properties of the import pipeline. </param>
        <param name="sourceTriggerStatus"> The properties that describe the trigger of the import pipeline. </param>
        <param name="options"> The list of all options configured for the pipeline. </param>
        <param name="provisioningState"> The provisioning state of the pipeline at the time the operation was called. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryImportPipelineData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryImportPipelineData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryImportSource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource ContainerRegistryImportSource (Azure.Core.ResourceIdentifier resourceId = default, string registryAddress = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials credentials = default, string sourceImage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource ContainerRegistryImportSource(class Azure.Core.ResourceIdentifier resourceId, string registryAddress, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials credentials, string sourceImage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportSource(Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryImportSource (Optional resourceId As ResourceIdentifier = Nothing, Optional registryAddress As String = Nothing, Optional credentials As ContainerRegistryImportSourceCredentials = Nothing, Optional sourceImage As String = Nothing) As ContainerRegistryImportSource" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryImportSource : Azure.Core.ResourceIdentifier * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportSource (resourceId, registryAddress, credentials, sourceImage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="registryAddress" Type="System.String" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials" />
        <Parameter Name="sourceImage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The resource identifier of the source Azure Container Registry. </param>
        <param name="registryAddress"> The address of the source registry (e.g. 'mcr.microsoft.com'). </param>
        <param name="credentials"> Credentials used when importing from a registry uri. </param>
        <param name="sourceImage">
            Repository name of the source image.
            Specify an image by repository ('hello-world'). This will use the 'latest' tag.
            Specify an image by tag ('hello-world:latest').
            Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123').
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSource" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryImportSourceCredentials">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials ContainerRegistryImportSourceCredentials (string username = default, string password = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials ContainerRegistryImportSourceCredentials(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportSourceCredentials(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryImportSourceCredentials (Optional username As String = Nothing, Optional password As String = Nothing) As ContainerRegistryImportSourceCredentials" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryImportSourceCredentials : string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryImportSourceCredentials (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username"> The username to authenticate with the source registry. </param>
        <param name="password"> The password used to authenticate with the source registry. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImportSourceCredentials" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryKeyVaultProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties ContainerRegistryKeyVaultProperties (string keyIdentifier = default, string versionedKeyIdentifier = default, string identity = default, bool? isKeyRotationEnabled = default, DateTimeOffset? lastKeyRotationTimestamp = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties ContainerRegistryKeyVaultProperties(string keyIdentifier, string versionedKeyIdentifier, string identity, valuetype System.Nullable`1&lt;bool&gt; isKeyRotationEnabled, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastKeyRotationTimestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryKeyVaultProperties(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryKeyVaultProperties (Optional keyIdentifier As String = Nothing, Optional versionedKeyIdentifier As String = Nothing, Optional identity As String = Nothing, Optional isKeyRotationEnabled As Nullable(Of Boolean) = Nothing, Optional lastKeyRotationTimestamp As Nullable(Of DateTimeOffset) = Nothing) As ContainerRegistryKeyVaultProperties" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryKeyVaultProperties : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryKeyVaultProperties (keyIdentifier, versionedKeyIdentifier, identity, isKeyRotationEnabled, lastKeyRotationTimestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.String" />
        <Parameter Name="versionedKeyIdentifier" Type="System.String" />
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="isKeyRotationEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastKeyRotationTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"> Key vault uri to access the encryption key. </param>
        <param name="versionedKeyIdentifier"> The fully qualified key identifier that includes the version of the key that is actually used for encryption. </param>
        <param name="identity"> The client id of the identity which will be used to access key vault. </param>
        <param name="isKeyRotationEnabled"> Auto key rotation status for a CMK enabled registry. </param>
        <param name="lastKeyRotationTimestamp"> Timestamp of the last successful key rotation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryKeyVaultProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryListCredentialsResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult ContainerRegistryListCredentialsResult (string username = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt; passwords = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult ContainerRegistryListCredentialsResult(string username, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt; passwords) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryListCredentialsResult(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryListCredentialsResult (Optional username As String = Nothing, Optional passwords As IEnumerable(Of ContainerRegistryPassword) = Nothing) As ContainerRegistryListCredentialsResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryListCredentialsResult : string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryListCredentialsResult (username, passwords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwords" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword&gt;" />
      </Parameters>
      <Docs>
        <param name="username"> The username for a container registry. </param>
        <param name="passwords"> The list of passwords for a container registry. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryListCredentialsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryNameAvailabilityContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent ContainerRegistryNameAvailabilityContent (string name = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType resourceType = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent ContainerRegistryNameAvailabilityContent(string name, valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailabilityContent(System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryNameAvailabilityContent (Optional name As String = Nothing, Optional resourceType As ContainerRegistryResourceType = Nothing) As ContainerRegistryNameAvailabilityContent" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryNameAvailabilityContent : string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailabilityContent (name, resourceType)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent ContainerRegistryNameAvailabilityContent (string name, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType resourceType);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryNameAvailabilityContent (name As String, resourceType As ContainerRegistryResourceType) As ContainerRegistryNameAvailabilityContent" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the container registry. </param>
        <param name="resourceType"> The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryNameAvailabilityContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent ContainerRegistryNameAvailabilityContent (string name = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType resourceType = default, string resourceGroupName = default, Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope? autoGeneratedDomainNameLabelScope = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent ContainerRegistryNameAvailabilityContent(string name, valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType resourceType, string resourceGroupName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope&gt; autoGeneratedDomainNameLabelScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailabilityContent(System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType,System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryNameAvailabilityContent (Optional name As String = Nothing, Optional resourceType As ContainerRegistryResourceType = Nothing, Optional resourceGroupName As String = Nothing, Optional autoGeneratedDomainNameLabelScope As Nullable(Of AutoGeneratedDomainNameLabelScope) = Nothing) As ContainerRegistryNameAvailabilityContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryNameAvailabilityContent : string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailabilityContent (name, resourceType, resourceGroupName, autoGeneratedDomainNameLabelScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceType" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceGroupName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="autoGeneratedDomainNameLabelScope" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.AutoGeneratedDomainNameLabelScope&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the container registry. </param>
        <param name="resourceType"> The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'. </param>
        <param name="resourceGroupName"> The resource group name of the container registry. </param>
        <param name="autoGeneratedDomainNameLabelScope"> The auto generated domain name label of the container registry. This value defaults to "Unsecure". </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryNameAvailableResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult ContainerRegistryNameAvailableResult (bool? isNameAvailable = default, string reason = default, string message = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult ContainerRegistryNameAvailableResult(valuetype System.Nullable`1&lt;bool&gt; isNameAvailable, string reason, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailableResult(System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryNameAvailableResult (Optional isNameAvailable As Nullable(Of Boolean) = Nothing, Optional reason As String = Nothing, Optional message As String = Nothing) As ContainerRegistryNameAvailableResult" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryNameAvailableResult : Nullable&lt;bool&gt; * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailableResult (isNameAvailable, reason, message)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult ContainerRegistryNameAvailableResult (bool? isNameAvailable, string reason, string message);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryNameAvailableResult (isNameAvailable As Nullable(Of Boolean), reason As String, message As String) As ContainerRegistryNameAvailableResult" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isNameAvailable"> The value that indicates whether the name is available. </param>
        <param name="reason"> If any, the reason that the name is not available. </param>
        <param name="message"> If any, the error message that provides more detail for the reason that the name is not available. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryNameAvailableResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult ContainerRegistryNameAvailableResult (string availableLoginServerName = default, bool? isNameAvailable = default, string reason = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult ContainerRegistryNameAvailableResult(string availableLoginServerName, valuetype System.Nullable`1&lt;bool&gt; isNameAvailable, string reason, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailableResult(System.String,System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryNameAvailableResult (Optional availableLoginServerName As String = Nothing, Optional isNameAvailable As Nullable(Of Boolean) = Nothing, Optional reason As String = Nothing, Optional message As String = Nothing) As ContainerRegistryNameAvailableResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryNameAvailableResult : string * Nullable&lt;bool&gt; * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryNameAvailableResult (availableLoginServerName, isNameAvailable, reason, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableLoginServerName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isNameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="reason" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="message" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="availableLoginServerName"> The complete login server name with domain name label (DNL) hash, if available. </param>
        <param name="isNameAvailable"> The value that indicates whether the name is available. </param>
        <param name="reason"> If any, the reason that the name is not available. </param>
        <param name="message"> If any, the error message that provides more detail for the reason that the name is not available. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryPassword">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword ContainerRegistryPassword (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName? name = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword ContainerRegistryPassword(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName&gt; name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPassword(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryPassword (Optional name As Nullable(Of ContainerRegistryPasswordName) = Nothing, Optional value As String = Nothing) As ContainerRegistryPassword" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryPassword : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPassword (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPasswordName&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The password name. </param>
        <param name="value"> The password value. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPassword" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryPipelineRunData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryPipelineRunData ContainerRegistryPipelineRunData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryPipelineRunContent request = default, Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult response = default, string forceUpdateTag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPipelineRunData ContainerRegistryPipelineRunData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryPipelineRunContent request, class Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult response, string forceUpdateTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPipelineRunData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryPipelineRunContent,Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryPipelineRunData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional request As ConnectedRegistryPipelineRunContent = Nothing, Optional response As PipelineRunResult = Nothing, Optional forceUpdateTag As String = Nothing) As ContainerRegistryPipelineRunData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryPipelineRunData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryPipelineRunContent * Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult * string -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryPipelineRunData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPipelineRunData (id, name, resourceType, systemData, provisioningState, request, response, forceUpdateTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryPipelineRunData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="request" Type="Azure.ResourceManager.ContainerRegistry.Models.ConnectedRegistryPipelineRunContent" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="response" Type="Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="forceUpdateTag" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> The provisioning state of a pipeline run. </param>
        <param name="request"> The request parameters for a pipeline run. </param>
        <param name="response"> The response of a pipeline run. </param>
        <param name="forceUpdateTag"> How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPipelineRunData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPipelineRunData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryPrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData ContainerRegistryPrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState connectionState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData ContainerRegistryPrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryPrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As ContainerRegistryPrivateLinkServiceConnectionState = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryPrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryPrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateEndpointConnectionData (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private endpoint. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="provisioningState"> The provisioning state of private endpoint connection resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryPrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData ContainerRegistryPrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData ContainerRegistryPrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryPrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As ContainerRegistryPrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryPrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryPrivateLinkResourceData (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryReplicationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData ContainerRegistryReplicationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status = default, bool? isRegionEndpointEnabled = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy? zoneRedundancy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData ContainerRegistryReplicationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus status, valuetype System.Nullable`1&lt;bool&gt; isRegionEndpointEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; zoneRedundancy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryReplicationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryReplicationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional status As ContainerRegistryResourceStatus = Nothing, Optional isRegionEndpointEnabled As Nullable(Of Boolean) = Nothing, Optional zoneRedundancy As Nullable(Of ContainerRegistryZoneRedundancy) = Nothing) As ContainerRegistryReplicationData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryReplicationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryReplicationData (id, name, resourceType, systemData, tags, location, provisioningState, status, isRegionEndpointEnabled, zoneRedundancy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="status" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" />
        <Parameter Name="isRegionEndpointEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="zoneRedundancy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryZoneRedundancy&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The provisioning state of the replication at the time the operation was called. </param>
        <param name="status"> The status of the replication at the time the operation was called. </param>
        <param name="isRegionEndpointEnabled"> Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications. </param>
        <param name="zoneRedundancy"> Whether or not zone redundancy is enabled for this container registry replication. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryResourceStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus ContainerRegistryResourceStatus (string displayStatus = default, string message = default, DateTimeOffset? timestamp = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus ContainerRegistryResourceStatus(string displayStatus, string message, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryResourceStatus(System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryResourceStatus (Optional displayStatus As String = Nothing, Optional message As String = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing) As ContainerRegistryResourceStatus" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryResourceStatus : string * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryResourceStatus (displayStatus, message, timestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayStatus" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="displayStatus"> The short label for the status. </param>
        <param name="message"> The detailed message for the status, including alerts and error messages. </param>
        <param name="timestamp"> The timestamp when the status was changed to the current value. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryResourceStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryRetentionPolicy">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy ContainerRegistryRetentionPolicy (int? days = default, DateTimeOffset? lastUpdatedOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus? status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy ContainerRegistryRetentionPolicy(valuetype System.Nullable`1&lt;int32&gt; days, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRetentionPolicy(System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryRetentionPolicy (Optional days As Nullable(Of Integer) = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional status As Nullable(Of ContainerRegistryPolicyStatus) = Nothing) As ContainerRegistryRetentionPolicy" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryRetentionPolicy : Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRetentionPolicy (days, lastUpdatedOn, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="days"> The number of days to retain an untagged manifest after which it gets purged. </param>
        <param name="lastUpdatedOn"> The timestamp when the policy was last updated. </param>
        <param name="status"> The value that indicates whether the policy is enabled or not. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRetentionPolicy" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryRunData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData ContainerRegistryRunData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string runId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus? status = default, DateTimeOffset? lastUpdatedOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType? runType = default, string agentPoolName = default, DateTimeOffset? createdOn = default, DateTimeOffset? startOn = default, DateTimeOffset? finishOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt; outputImages = default, string task = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger imageUpdateTrigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor sourceTrigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor timerTrigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform = default, int? agentCpu = default, string sourceRegistryAuth = default, System.Collections.Generic.IEnumerable&lt;string&gt; customRegistries = default, string runErrorMessage = default, string updateTriggerToken = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor logArtifact = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, bool? isArchiveEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData ContainerRegistryRunData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string runId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType&gt; runType, string agentPoolName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; finishOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt; outputImages, string task, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger imageUpdateTrigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor sourceTrigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor timerTrigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform, valuetype System.Nullable`1&lt;int32&gt; agentCpu, string sourceRegistryAuth, class System.Collections.Generic.IEnumerable`1&lt;string&gt; customRegistries, string runErrorMessage, string updateTriggerToken, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor logArtifact, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;bool&gt; isArchiveEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor},System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties,System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryRunData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional runId As String = Nothing, Optional status As Nullable(Of ContainerRegistryRunStatus) = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional runType As Nullable(Of ContainerRegistryRunType) = Nothing, Optional agentPoolName As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional finishOn As Nullable(Of DateTimeOffset) = Nothing, Optional outputImages As IEnumerable(Of ContainerRegistryImageDescriptor) = Nothing, Optional task As String = Nothing, Optional imageUpdateTrigger As ContainerRegistryImageUpdateTrigger = Nothing, Optional sourceTrigger As ContainerRegistrySourceTriggerDescriptor = Nothing, Optional timerTrigger As ContainerRegistryTimerTriggerDescriptor = Nothing, Optional platform As ContainerRegistryPlatformProperties = Nothing, Optional agentCpu As Nullable(Of Integer) = Nothing, Optional sourceRegistryAuth As String = Nothing, Optional customRegistries As IEnumerable(Of String) = Nothing, Optional runErrorMessage As String = Nothing, Optional updateTriggerToken As String = Nothing, Optional logArtifact As ContainerRegistryImageDescriptor = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional isArchiveEnabled As Nullable(Of Boolean) = Nothing) As ContainerRegistryRunData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryRunData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt; * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties * Nullable&lt;int&gt; * string * seq&lt;string&gt; * string * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunData (id, name, resourceType, systemData, runId, status, lastUpdatedOn, runType, agentPoolName, createdOn, startOn, finishOn, outputImages, task, imageUpdateTrigger, sourceTrigger, timerTrigger, platform, agentCpu, sourceRegistryAuth, customRegistries, runErrorMessage, updateTriggerToken, logArtifact, provisioningState, isArchiveEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunStatus&gt;" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="runType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunType&gt;" />
        <Parameter Name="agentPoolName" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="finishOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="outputImages" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor&gt;" />
        <Parameter Name="task" Type="System.String" />
        <Parameter Name="imageUpdateTrigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageUpdateTrigger" />
        <Parameter Name="sourceTrigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerDescriptor" />
        <Parameter Name="timerTrigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerDescriptor" />
        <Parameter Name="platform" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties" />
        <Parameter Name="agentCpu" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sourceRegistryAuth" Type="System.String" />
        <Parameter Name="customRegistries" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="runErrorMessage" Type="System.String" />
        <Parameter Name="updateTriggerToken" Type="System.String" />
        <Parameter Name="logArtifact" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryImageDescriptor" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="isArchiveEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="runId"> The unique identifier for the run. </param>
        <param name="status"> The current status of the run. </param>
        <param name="lastUpdatedOn"> The last updated time for the run. </param>
        <param name="runType"> The type of run. </param>
        <param name="agentPoolName"> The dedicated agent pool for the run. </param>
        <param name="createdOn"> The time the run was scheduled. </param>
        <param name="startOn"> The time the run started. </param>
        <param name="finishOn"> The time the run finished. </param>
        <param name="outputImages"> The list of all images that were generated from the run. This is applicable if the run generates base image dependencies. </param>
        <param name="task"> The task against which run was scheduled. </param>
        <param name="imageUpdateTrigger"> The image update trigger that caused the run. This is applicable if the task has base image trigger configured. </param>
        <param name="sourceTrigger"> The source trigger that caused the run. </param>
        <param name="timerTrigger"> The timer trigger that caused the run. </param>
        <param name="platform"> The platform properties against which the run will happen. </param>
        <param name="agentCpu"> The machine configuration of the run agent. </param>
        <param name="sourceRegistryAuth"> The scope of the credentials that were used to login to the source registry during this run. </param>
        <param name="customRegistries"> The list of custom registries that were logged in during this run. </param>
        <param name="runErrorMessage"> The error message received from backend systems after the run is scheduled. </param>
        <param name="updateTriggerToken"> The update trigger token passed for the Run. </param>
        <param name="logArtifact"> The image description for the log artifact. </param>
        <param name="provisioningState"> The provisioning state of a run. </param>
        <param name="isArchiveEnabled"> The value that indicates whether archiving is enabled or not. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryRunGetLogResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult ContainerRegistryRunGetLogResult (string logLink = default, string logArtifactLink = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult ContainerRegistryRunGetLogResult(string logLink, string logArtifactLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunGetLogResult(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryRunGetLogResult (Optional logLink As String = Nothing, Optional logArtifactLink As String = Nothing) As ContainerRegistryRunGetLogResult" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryRunGetLogResult : string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryRunGetLogResult (logLink, logArtifactLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLink" Type="System.String" />
        <Parameter Name="logArtifactLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logLink"> The link to logs for a run on a azure container registry. </param>
        <param name="logArtifactLink"> The link to logs in registry for a run on a azure container registry. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunGetLogResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistrySku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku ContainerRegistrySku (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName name = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier? tier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku ContainerRegistrySku(valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier&gt; tier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySku(Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistrySku (Optional name As ContainerRegistrySkuName = Nothing, Optional tier As Nullable(Of ContainerRegistrySkuTier) = Nothing) As ContainerRegistrySku" />
      <MemberSignature Language="F#" Value="static member ContainerRegistrySku : Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySku (name, tier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuName" />
        <Parameter Name="tier" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySkuTier&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The SKU name of the container registry. Required for registry creation. </param>
        <param name="tier"> The SKU tier based on the SKU name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistrySoftDeletePolicy">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySoftDeletePolicy ContainerRegistrySoftDeletePolicy (int? retentionDays = default, DateTimeOffset? lastUpdatedOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus? status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySoftDeletePolicy ContainerRegistrySoftDeletePolicy(valuetype System.Nullable`1&lt;int32&gt; retentionDays, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySoftDeletePolicy(System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistrySoftDeletePolicy (Optional retentionDays As Nullable(Of Integer) = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional status As Nullable(Of ContainerRegistryPolicyStatus) = Nothing) As ContainerRegistrySoftDeletePolicy" />
      <MemberSignature Language="F#" Value="static member ContainerRegistrySoftDeletePolicy : Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySoftDeletePolicy" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySoftDeletePolicy (retentionDays, lastUpdatedOn, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySoftDeletePolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="retentionDays" Type="System.Nullable&lt;System.Int32&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPolicyStatus&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="retentionDays"> The number of days after which a soft-deleted item is permanently deleted. </param>
        <param name="lastUpdatedOn"> The timestamp when the policy was last updated. </param>
        <param name="status"> The value that indicates whether the policy is enabled or not. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySoftDeletePolicy" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySoftDeletePolicy" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistrySourceTriggerUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerUpdateContent ContainerRegistrySourceTriggerUpdateContent (Azure.ResourceManager.ContainerRegistry.Models.SourceCodeRepoUpdateContent sourceRepository = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerEvent&gt; sourceTriggerEvents = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus? status = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerUpdateContent ContainerRegistrySourceTriggerUpdateContent(class Azure.ResourceManager.ContainerRegistry.Models.SourceCodeRepoUpdateContent sourceRepository, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerEvent&gt; sourceTriggerEvents, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; status, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySourceTriggerUpdateContent(Azure.ResourceManager.ContainerRegistry.Models.SourceCodeRepoUpdateContent,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerEvent},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistrySourceTriggerUpdateContent (Optional sourceRepository As SourceCodeRepoUpdateContent = Nothing, Optional sourceTriggerEvents As IEnumerable(Of ContainerRegistrySourceTriggerEvent) = Nothing, Optional status As Nullable(Of ContainerRegistryTriggerStatus) = Nothing, Optional name As String = Nothing) As ContainerRegistrySourceTriggerUpdateContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistrySourceTriggerUpdateContent : Azure.ResourceManager.ContainerRegistry.Models.SourceCodeRepoUpdateContent * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerEvent&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerUpdateContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistrySourceTriggerUpdateContent (sourceRepository, sourceTriggerEvents, status, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceRepository" Type="Azure.ResourceManager.ContainerRegistry.Models.SourceCodeRepoUpdateContent" />
        <Parameter Name="sourceTriggerEvents" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerEvent&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt;" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceRepository"> The properties that describes the source(code) for the task. </param>
        <param name="sourceTriggerEvents"> The source event corresponding to the trigger. </param>
        <param name="status"> The current status of trigger. </param>
        <param name="name"> The name of the trigger. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistrySourceTriggerUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTaskData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData ContainerRegistryTaskData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus? status = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform = default, int? agentCpu = default, string agentPoolName = default, int? timeoutInSeconds = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties step = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties trigger = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials credentials = default, string logTemplate = default, bool? isSystemTask = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData ContainerRegistryTaskData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus&gt; status, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties platform, valuetype System.Nullable`1&lt;int32&gt; agentCpu, string agentPoolName, valuetype System.Nullable`1&lt;int32&gt; timeoutInSeconds, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties step, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties trigger, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials credentials, string logTemplate, valuetype System.Nullable`1&lt;bool&gt; isSystemTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTaskData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional status As Nullable(Of ContainerRegistryTaskStatus) = Nothing, Optional platform As ContainerRegistryPlatformProperties = Nothing, Optional agentCpu As Nullable(Of Integer) = Nothing, Optional agentPoolName As String = Nothing, Optional timeoutInSeconds As Nullable(Of Integer) = Nothing, Optional step As ContainerRegistryTaskStepProperties = Nothing, Optional trigger As ContainerRegistryTriggerProperties = Nothing, Optional credentials As ContainerRegistryCredentials = Nothing, Optional logTemplate As String = Nothing, Optional isSystemTask As Nullable(Of Boolean) = Nothing) As ContainerRegistryTaskData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTaskData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskData (id, name, resourceType, systemData, tags, location, identity, provisioningState, createdOn, status, platform, agentCpu, agentPoolName, timeoutInSeconds, step, trigger, credentials, logTemplate, isSystemTask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStatus&gt;" />
        <Parameter Name="platform" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryPlatformProperties" />
        <Parameter Name="agentCpu" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="agentPoolName" Type="System.String" />
        <Parameter Name="timeoutInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="step" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" />
        <Parameter Name="trigger" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerProperties" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCredentials" />
        <Parameter Name="logTemplate" Type="System.String" />
        <Parameter Name="isSystemTask" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="identity"> Identity for the resource. </param>
        <param name="provisioningState"> The provisioning state of the task. </param>
        <param name="createdOn"> The creation date of task. </param>
        <param name="status"> The current status of task. </param>
        <param name="platform"> The platform properties against which the run has to happen. </param>
        <param name="agentCpu"> The machine configuration of the run agent. </param>
        <param name="agentPoolName"> The dedicated agent pool for the task. </param>
        <param name="timeoutInSeconds"> Run timeout in seconds. </param>
        <param name="step">
            The properties of a task step.
            Please note <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildStep" />, <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskStep" /> and <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskStep" />.
            </param>
        <param name="trigger"> The properties that describe all triggers for the task. </param>
        <param name="credentials"> The properties that describes a set of credentials that will be used when this run is invoked. </param>
        <param name="logTemplate"> The template that describes the repository and tag information for run log artifact. </param>
        <param name="isSystemTask"> The value of this property indicates whether the task resource is system task or not. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTaskRunData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData ContainerRegistryTaskRunData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent runRequest = default, Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData runResult = default, string forceUpdateTag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData ContainerRegistryTaskRunData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent runRequest, class Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData runResult, string forceUpdateTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskRunData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent,Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTaskRunData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional runRequest As ContainerRegistryRunContent = Nothing, Optional runResult As ContainerRegistryRunData = Nothing, Optional forceUpdateTag As String = Nothing) As ContainerRegistryTaskRunData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTaskRunData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent * Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData * string -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskRunData (id, name, resourceType, systemData, identity, location, provisioningState, runRequest, runResult, forceUpdateTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="runRequest" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent" />
        <Parameter Name="runResult" Type="Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunData" />
        <Parameter Name="forceUpdateTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="identity"> Identity for the resource. </param>
        <param name="location"> The location of the resource. </param>
        <param name="provisioningState"> The provisioning state of this task run. </param>
        <param name="runRequest">
            The request (parameters) for the run
            Please note <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryRunContent" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryDockerBuildContent" />, <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryEncodedTaskRunContent" />, <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryFileTaskRunContent" /> and <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskRunContent" />.
            </param>
        <param name="runResult"> The result of this task run. </param>
        <param name="forceUpdateTag"> How the run should be forced to rerun even if the run request configuration has not changed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTaskStepProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties ContainerRegistryTaskStepProperties (string containerRegistryTaskStepType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies = default, string contextPath = default, string contextAccessToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties ContainerRegistryTaskStepProperties(string containerRegistryTaskStepType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; baseImageDependencies, string contextPath, string contextAccessToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskStepProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTaskStepProperties (Optional containerRegistryTaskStepType As String = Nothing, Optional baseImageDependencies As IEnumerable(Of ContainerRegistryBaseImageDependency) = Nothing, Optional contextPath As String = Nothing, Optional contextAccessToken As String = Nothing) As ContainerRegistryTaskStepProperties" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTaskStepProperties : string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt; * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTaskStepProperties (containerRegistryTaskStepType, baseImageDependencies, contextPath, contextAccessToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerRegistryTaskStepType" Type="System.String" />
        <Parameter Name="baseImageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryBaseImageDependency&gt;" />
        <Parameter Name="contextPath" Type="System.String" />
        <Parameter Name="contextAccessToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="containerRegistryTaskStepType"> The type of the step. </param>
        <param name="baseImageDependencies"> List of base image dependencies for a step. </param>
        <param name="contextPath"> The URL(absolute or relative) of the source context for the task step. </param>
        <param name="contextAccessToken"> The token (git PAT or SAS token of storage account blob) associated with the context for a step. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTaskStepProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTimerTriggerUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerUpdateContent ContainerRegistryTimerTriggerUpdateContent (string schedule = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus? status = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerUpdateContent ContainerRegistryTimerTriggerUpdateContent(string schedule, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; status, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTimerTriggerUpdateContent(System.String,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTimerTriggerUpdateContent (Optional schedule As String = Nothing, Optional status As Nullable(Of ContainerRegistryTriggerStatus) = Nothing, Optional name As String = Nothing) As ContainerRegistryTimerTriggerUpdateContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTimerTriggerUpdateContent : string * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerUpdateContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTimerTriggerUpdateContent (schedule, status, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schedule" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTriggerStatus&gt;" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schedule"> The CRON expression for the task schedule. </param>
        <param name="status"> The current status of trigger. </param>
        <param name="name"> The name of the trigger. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTimerTriggerUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTlsCertificateProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties ContainerRegistryTlsCertificateProperties (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCertificateType? certificateType = default, string certificateLocation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties ContainerRegistryTlsCertificateProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCertificateType&gt; certificateType, string certificateLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTlsCertificateProperties(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCertificateType},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTlsCertificateProperties (Optional certificateType As Nullable(Of ContainerRegistryCertificateType) = Nothing, Optional certificateLocation As String = Nothing) As ContainerRegistryTlsCertificateProperties" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTlsCertificateProperties : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCertificateType&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTlsCertificateProperties (certificateType, certificateLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryCertificateType&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="certificateLocation" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="certificateType"> The type of certificate location. </param>
        <param name="certificateLocation"> Indicates the location of the certificates. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTlsProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties ContainerRegistryTlsProperties (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsStatus? status = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties certificate = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties ContainerRegistryTlsProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsStatus&gt; status, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTlsProperties(System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsStatus},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTlsProperties (Optional status As Nullable(Of ContainerRegistryTlsStatus) = Nothing, Optional certificate As ContainerRegistryTlsCertificateProperties = Nothing) As ContainerRegistryTlsProperties" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTlsProperties : Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsStatus&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTlsProperties (status, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsStatus&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="certificate" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsCertificateProperties" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="status"> Indicates whether HTTPS is enabled for the login server. </param>
        <param name="certificate"> The certificate used to configure HTTPS for the login server. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTlsProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTokenData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData ContainerRegistryTokenData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier scopeMapId = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials credentials = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus? status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData ContainerRegistryTokenData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier scopeMapId, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials credentials, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTokenData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional scopeMapId As ResourceIdentifier = Nothing, Optional credentials As ContainerRegistryTokenCredentials = Nothing, Optional status As Nullable(Of ContainerRegistryTokenStatus) = Nothing) As ContainerRegistryTokenData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTokenData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenData (id, name, resourceType, systemData, createdOn, provisioningState, scopeMapId, credentials, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="scopeMapId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenCredentials" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="createdOn"> The creation date of scope map. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="scopeMapId"> The resource ID of the scope map to which the token will be associated with. </param>
        <param name="credentials"> The credentials that can be used for authenticating the token. </param>
        <param name="status"> The status of the token example enabled or disabled. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTokenData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryTokenPassword">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword ContainerRegistryTokenPassword (DateTimeOffset? createdOn = default, DateTimeOffset? expireOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName? name = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword ContainerRegistryTokenPassword(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; expireOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName&gt; name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenPassword(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryTokenPassword (Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional expireOn As Nullable(Of DateTimeOffset) = Nothing, Optional name As Nullable(Of ContainerRegistryTokenPasswordName) = Nothing, Optional value As String = Nothing) As ContainerRegistryTokenPassword" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryTokenPassword : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryTokenPassword (createdOn, expireOn, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="name" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPasswordName&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="createdOn"> The creation datetime of the password. </param>
        <param name="expireOn"> The expiry datetime of the password. </param>
        <param name="name"> The password name "password1" or "password2". </param>
        <param name="value"> The password value. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryTokenPassword" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryUsage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage ContainerRegistryUsage (string name = default, long? limit = default, long? currentValue = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit? unit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage ContainerRegistryUsage(string name, valuetype System.Nullable`1&lt;int64&gt; limit, valuetype System.Nullable`1&lt;int64&gt; currentValue, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit&gt; unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryUsage(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryUsage (Optional name As String = Nothing, Optional limit As Nullable(Of Long) = Nothing, Optional currentValue As Nullable(Of Long) = Nothing, Optional unit As Nullable(Of ContainerRegistryUsageUnit) = Nothing) As ContainerRegistryUsage" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryUsage : string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryUsage (name, limit, currentValue, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="currentValue" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="unit" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsageUnit&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the usage. </param>
        <param name="limit"> The limit of the usage. </param>
        <param name="currentValue"> The current value of the usage. </param>
        <param name="unit"> The unit of measurement. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryUsage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookCallbackConfig">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig ContainerRegistryWebhookCallbackConfig (Uri serviceUri = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; customHeaders = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig ContainerRegistryWebhookCallbackConfig(class System.Uri serviceUri, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; customHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookCallbackConfig(System.Uri,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookCallbackConfig (Optional serviceUri As Uri = Nothing, Optional customHeaders As IReadOnlyDictionary(Of String, String) = Nothing) As ContainerRegistryWebhookCallbackConfig" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookCallbackConfig : Uri * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookCallbackConfig (serviceUri, customHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceUri" Type="System.Uri" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceUri"> The service URI for the webhook to post notifications. </param>
        <param name="customHeaders"> Custom headers that will be added to the webhook notifications. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCallbackConfig" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCreateOrUpdateContent ContainerRegistryWebhookCreateOrUpdateContent (System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Uri serviceUri = default, System.Collections.Generic.IDictionary&lt;string,string&gt; customHeaders = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus? status = default, string scope = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; actions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCreateOrUpdateContent ContainerRegistryWebhookCreateOrUpdateContent(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Uri serviceUri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; customHeaders, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt; status, string scope, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookCreateOrUpdateContent(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookCreateOrUpdateContent (Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional serviceUri As Uri = Nothing, Optional customHeaders As IDictionary(Of String, String) = Nothing, Optional status As Nullable(Of ContainerRegistryWebhookStatus) = Nothing, Optional scope As String = Nothing, Optional actions As IEnumerable(Of ContainerRegistryWebhookAction) = Nothing) As ContainerRegistryWebhookCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookCreateOrUpdateContent : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt; * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCreateOrUpdateContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookCreateOrUpdateContent (tags, location, serviceUri, customHeaders, status, scope, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="serviceUri" Type="System.Uri" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt;" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt;" />
      </Parameters>
      <Docs>
        <param name="tags"> The tags for the webhook. </param>
        <param name="location"> The location of the webhook. This cannot be changed after the resource is created. </param>
        <param name="serviceUri"> The service URI for the webhook to post notifications. </param>
        <param name="customHeaders"> Custom headers that will be added to the webhook notifications. </param>
        <param name="status"> The status of the webhook at the time the operation was called. </param>
        <param name="scope"> The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events. </param>
        <param name="actions"> The list of actions that trigger the webhook to post notifications. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData ContainerRegistryWebhookData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus? status = default, string scope = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; actions = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData ContainerRegistryWebhookData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt; status, string scope, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; actions, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional status As Nullable(Of ContainerRegistryWebhookStatus) = Nothing, Optional scope As String = Nothing, Optional actions As IEnumerable(Of ContainerRegistryWebhookAction) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing) As ContainerRegistryWebhookData" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt; * string * seq&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookData (id, name, resourceType, systemData, tags, location, status, scope, actions, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookStatus&gt;" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookAction&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="status"> The status of the webhook at the time the operation was called. </param>
        <param name="scope"> The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events. </param>
        <param name="actions"> The list of actions that trigger the webhook to post notifications. </param>
        <param name="provisioningState"> The provisioning state of the webhook at the time the operation was called. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEvent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent ContainerRegistryWebhookEvent (Guid? id = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage eventRequestMessage = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage eventResponseMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent ContainerRegistryWebhookEvent(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage eventRequestMessage, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage eventResponseMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEvent(System.Nullable{System.Guid},Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEvent (Optional id As Nullable(Of Guid) = Nothing, Optional eventRequestMessage As ContainerRegistryWebhookEventRequestMessage = Nothing, Optional eventResponseMessage As ContainerRegistryWebhookEventResponseMessage = Nothing) As ContainerRegistryWebhookEvent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEvent : Nullable&lt;Guid&gt; * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEvent (id, eventRequestMessage, eventResponseMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="eventRequestMessage" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage" />
        <Parameter Name="eventResponseMessage" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage" />
      </Parameters>
      <Docs>
        <param name="id"> The event ID. </param>
        <param name="eventRequestMessage"> The event request message sent to the service URI. </param>
        <param name="eventResponseMessage"> The event response message received from the service URI. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent ContainerRegistryWebhookEventContent (Guid? id = default, DateTimeOffset? timestamp = default, string action = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget target = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent request = default, string actorName = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource source = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent ContainerRegistryWebhookEventContent(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp, string action, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget target, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent request, string actorName, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventContent(System.Nullable{System.Guid},System.Nullable{System.DateTimeOffset},System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent,System.String,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventContent (Optional id As Nullable(Of Guid) = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing, Optional action As String = Nothing, Optional target As ContainerRegistryWebhookEventTarget = Nothing, Optional request As ContainerRegistryWebhookEventRequestContent = Nothing, Optional actorName As String = Nothing, Optional source As ContainerRegistryWebhookEventSource = Nothing) As ContainerRegistryWebhookEventContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventContent : Nullable&lt;Guid&gt; * Nullable&lt;DateTimeOffset&gt; * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent * string * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventContent (id, timestamp, action, target, request, actorName, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="target" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget" />
        <Parameter Name="request" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent" />
        <Parameter Name="actorName" Type="System.String" />
        <Parameter Name="source" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource" />
      </Parameters>
      <Docs>
        <param name="id"> The event ID. </param>
        <param name="timestamp"> The time at which the event occurred. </param>
        <param name="action"> The action that encompasses the provided event. </param>
        <param name="target"> The target of the event. </param>
        <param name="request"> The request that generated the event. </param>
        <param name="actorName"> The agent that initiated the event. For most situations, this could be from the authorization context of the request. </param>
        <param name="source"> The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventInfo">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo ContainerRegistryWebhookEventInfo (Guid? id = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo ContainerRegistryWebhookEventInfo(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventInfo(System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventInfo (Optional id As Nullable(Of Guid) = Nothing) As ContainerRegistryWebhookEventInfo" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventInfo : Nullable&lt;Guid&gt; -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventInfo id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The event ID. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventRequestContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent ContainerRegistryWebhookEventRequestContent (Guid? id = default, string addr = default, string host = default, string method = default, string userAgent = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent ContainerRegistryWebhookEventRequestContent(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id, string addr, string host, string method, string userAgent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestContent(System.Nullable{System.Guid},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventRequestContent (Optional id As Nullable(Of Guid) = Nothing, Optional addr As String = Nothing, Optional host As String = Nothing, Optional method As String = Nothing, Optional userAgent As String = Nothing) As ContainerRegistryWebhookEventRequestContent" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventRequestContent : Nullable&lt;Guid&gt; * string * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestContent (id, addr, host, method, userAgent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="addr" Type="System.String" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userAgent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The ID of the request that initiated the event. </param>
        <param name="addr"> The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request. </param>
        <param name="host"> The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests. </param>
        <param name="method"> The request method that generated the event. </param>
        <param name="userAgent"> The user agent header of the request. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventRequestMessage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage ContainerRegistryWebhookEventRequestMessage (Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent content = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; headers = default, string method = default, Uri requestUri = default, string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage ContainerRegistryWebhookEventRequestMessage(class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent content, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; headers, string method, class System.Uri requestUri, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestMessage(Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventRequestMessage (Optional content As ContainerRegistryWebhookEventContent = Nothing, Optional headers As IReadOnlyDictionary(Of String, String) = Nothing, Optional method As String = Nothing, Optional requestUri As Uri = Nothing, Optional version As String = Nothing) As ContainerRegistryWebhookEventRequestMessage" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventRequestMessage : Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * string * Uri * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventRequestMessage (content, headers, method, requestUri, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventContent" />
        <Parameter Name="headers" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the event request message. </param>
        <param name="headers"> The headers of the event request message. </param>
        <param name="method"> The HTTP method used to send the event request message. </param>
        <param name="requestUri"> The URI used to send the event request message. </param>
        <param name="version"> The HTTP message version. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventRequestMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventResponseMessage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage ContainerRegistryWebhookEventResponseMessage (string content = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; headers = default, string reasonPhrase = default, string statusCode = default, string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage ContainerRegistryWebhookEventResponseMessage(string content, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; headers, string reasonPhrase, string statusCode, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventResponseMessage(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventResponseMessage (Optional content As String = Nothing, Optional headers As IReadOnlyDictionary(Of String, String) = Nothing, Optional reasonPhrase As String = Nothing, Optional statusCode As String = Nothing, Optional version As String = Nothing) As ContainerRegistryWebhookEventResponseMessage" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventResponseMessage : string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventResponseMessage (content, headers, reasonPhrase, statusCode, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="reasonPhrase" Type="System.String" />
        <Parameter Name="statusCode" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the event response message. </param>
        <param name="headers"> The headers of the event response message. </param>
        <param name="reasonPhrase"> The reason phrase of the event response message. </param>
        <param name="statusCode"> The status code of the event response message. </param>
        <param name="version"> The HTTP message version. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventResponseMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventSource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource ContainerRegistryWebhookEventSource (string addr = default, string instanceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource ContainerRegistryWebhookEventSource(string addr, string instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventSource (Optional addr As String = Nothing, Optional instanceId As String = Nothing) As ContainerRegistryWebhookEventSource" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventSource : string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventSource (addr, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.String" />
        <Parameter Name="instanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addr"> The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port. </param>
        <param name="instanceId"> The running instance of an application. Changes after each restart. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventSource" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerRegistryWebhookEventTarget">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget ContainerRegistryWebhookEventTarget (string mediaType = default, long? size = default, string digest = default, long? length = default, string repository = default, Uri uri = default, string tag = default, string name = default, string version = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget ContainerRegistryWebhookEventTarget(string mediaType, valuetype System.Nullable`1&lt;int64&gt; size, string digest, valuetype System.Nullable`1&lt;int64&gt; length, string repository, class System.Uri uri, string tag, string name, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventTarget(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.String,System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerRegistryWebhookEventTarget (Optional mediaType As String = Nothing, Optional size As Nullable(Of Long) = Nothing, Optional digest As String = Nothing, Optional length As Nullable(Of Long) = Nothing, Optional repository As String = Nothing, Optional uri As Uri = Nothing, Optional tag As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing) As ContainerRegistryWebhookEventTarget" />
      <MemberSignature Language="F#" Value="static member ContainerRegistryWebhookEventTarget : string * Nullable&lt;int64&gt; * string * Nullable&lt;int64&gt; * string * Uri * string * string * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ContainerRegistryWebhookEventTarget (mediaType, size, digest, length, repository, uri, tag, name, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType"> The MIME type of the referenced object. </param>
        <param name="size"> The number of bytes of the content. Same as Length field. </param>
        <param name="digest"> The digest of the content, as defined by the Registry V2 HTTP API Specification. </param>
        <param name="length"> The number of bytes of the content. Same as Size field. </param>
        <param name="repository"> The repository name. </param>
        <param name="uri"> The direct URL to the content. </param>
        <param name="tag"> The tag name. </param>
        <param name="name"> The name of the artifact. </param>
        <param name="version"> The version of the artifact. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryWebhookEventTarget" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PipelineRunResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult PipelineRunResult (string status = default, System.Collections.Generic.IEnumerable&lt;string&gt; importedArtifacts = default, string progressPercentage = default, DateTimeOffset? startOn = default, DateTimeOffset? finishOn = default, Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties source = default, Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties target = default, string catalogDigest = default, DateTimeOffset? sourceTriggerTimestamp = default, string pipelineRunErrorMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult PipelineRunResult(string status, class System.Collections.Generic.IEnumerable`1&lt;string&gt; importedArtifacts, string progressPercentage, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; finishOn, class Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties source, class Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties target, string catalogDigest, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sourceTriggerTimestamp, string pipelineRunErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.PipelineRunResult(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties,Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties,System.String,System.Nullable{System.DateTimeOffset},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PipelineRunResult (Optional status As String = Nothing, Optional importedArtifacts As IEnumerable(Of String) = Nothing, Optional progressPercentage As String = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional finishOn As Nullable(Of DateTimeOffset) = Nothing, Optional source As ImportPipelineSourceProperties = Nothing, Optional target As ExportPipelineTargetProperties = Nothing, Optional catalogDigest As String = Nothing, Optional sourceTriggerTimestamp As Nullable(Of DateTimeOffset) = Nothing, Optional pipelineRunErrorMessage As String = Nothing) As PipelineRunResult" />
      <MemberSignature Language="F#" Value="static member PipelineRunResult : string * seq&lt;string&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties * Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties * string * Nullable&lt;DateTimeOffset&gt; * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.PipelineRunResult (status, importedArtifacts, progressPercentage, startOn, finishOn, source, target, catalogDigest, sourceTriggerTimestamp, pipelineRunErrorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="importedArtifacts" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="progressPercentage" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="finishOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="source" Type="Azure.ResourceManager.ContainerRegistry.Models.ImportPipelineSourceProperties" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="target" Type="Azure.ResourceManager.ContainerRegistry.Models.ExportPipelineTargetProperties" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="catalogDigest" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sourceTriggerTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="pipelineRunErrorMessage" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="status"> The current status of the pipeline run. </param>
        <param name="importedArtifacts"> The artifacts imported in the pipeline run. </param>
        <param name="progressPercentage"> The current progress of the copy operation. </param>
        <param name="startOn"> The time the pipeline run started. </param>
        <param name="finishOn"> The time the pipeline run finished. </param>
        <param name="source"> The source of the pipeline run. </param>
        <param name="target"> The target of the pipeline run. </param>
        <param name="catalogDigest"> The digest of the tar used to transfer the artifacts. </param>
        <param name="sourceTriggerTimestamp"> The trigger that caused the pipeline run. </param>
        <param name="pipelineRunErrorMessage"> The detailed error message for the pipeline run in the case of failure. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.PipelineRunResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeMapData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ScopeMapData ScopeMapData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string description = default, string scopeMapType = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState? provisioningState = default, System.Collections.Generic.IEnumerable&lt;string&gt; actions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ScopeMapData ScopeMapData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string description, string scopeMapType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; provisioningState, class System.Collections.Generic.IEnumerable`1&lt;string&gt; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ScopeMapData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScopeMapData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional description As String = Nothing, Optional scopeMapType As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ContainerRegistryProvisioningState) = Nothing, Optional actions As IEnumerable(Of String) = Nothing) As ScopeMapData" />
      <MemberSignature Language="F#" Value="static member ScopeMapData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerRegistry.ScopeMapData" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.ScopeMapData (id, name, resourceType, systemData, description, scopeMapType, createdOn, provisioningState, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ScopeMapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="scopeMapType" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryProvisioningState&gt;" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="description"> The user friendly description of the scope map. </param>
        <param name="scopeMapType"> The type of the scope map. E.g. BuildIn scope map. </param>
        <param name="createdOn"> The creation date of scope map. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="actions">
            The list of scoped permissions for registry artifacts.
            E.g. repositories/repository-name/content/read,
            repositories/repository-name/metadata/write
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.ScopeMapData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.ScopeMapData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUploadDefinition">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition SourceUploadDefinition (Uri uploadUri = default, string relativePath = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition SourceUploadDefinition(class System.Uri uploadUri, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.SourceUploadDefinition(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceUploadDefinition (Optional uploadUri As Uri = Nothing, Optional relativePath As String = Nothing) As SourceUploadDefinition" />
      <MemberSignature Language="F#" Value="static member SourceUploadDefinition : Uri * string -&gt; Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition" Usage="Azure.ResourceManager.ContainerRegistry.Models.ArmContainerRegistryModelFactory.SourceUploadDefinition (uploadUri, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uploadUri" Type="System.Uri" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uploadUri"> The URL where the client can upload the source. </param>
        <param name="relativePath"> The relative path to the source. This is used to submit the subsequent queue build request. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerRegistry.Models.SourceUploadDefinition" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
