<Type Name="FeatureTagHelper" FullName="Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper">
  <TypeSignature Language="C#" Value="public class FeatureTagHelper : Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FeatureTagHelper extends Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class FeatureTagHelper&#xA;Inherits TagHelper" />
  <TypeSignature Language="F#" Value="type FeatureTagHelper = class&#xA;    inherit TagHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.TagHelpers.TagHelper</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides a <![CDATA[<feature>]]> tag that can be used to conditionally render content based on a feature's state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureTagHelper (Microsoft.FeatureManagement.IFeatureManagerSnapshot featureManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.FeatureManagement.IFeatureManagerSnapshot featureManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.#ctor(Microsoft.FeatureManagement.IFeatureManagerSnapshot)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (featureManager As IFeatureManagerSnapshot)" />
      <MemberSignature Language="F#" Value="new Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper : Microsoft.FeatureManagement.IFeatureManagerSnapshot -&gt; Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper" Usage="new Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper featureManager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="featureManager" Type="Microsoft.FeatureManagement.IFeatureManagerSnapshot" />
      </Parameters>
      <Docs>
        <param name="featureManager">The feature manager snapshot to use to evaluate feature state.</param>
        <summary>
            Creates a feature tag helper.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A feature name, or comma separated list of feature names, for which the content should be rendered. By default, all specified features must be enabled to render the content, but this requirement can be controlled by the <see cref="P:Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.Requirement" /> property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public bool Negate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Negate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.Negate" />
      <MemberSignature Language="VB.NET" Value="Public Property Negate As Boolean" />
      <MemberSignature Language="F#" Value="member this.Negate : bool with get, set" Usage="Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.Negate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Negates the evaluation for whether or not a feature tag should display content. This is used to display alternate content when a feature or set of features are disabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task ProcessAsync (Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext context, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task ProcessAsync(class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext context, class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProcessAsync (context As TagHelperContext, output As TagHelperOutput) As Task" />
      <MemberSignature Language="F#" Value="override this.ProcessAsync : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext * Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput -&gt; System.Threading.Tasks.Task" Usage="featureTagHelper.ProcessAsync (context, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext" />
        <Parameter Name="output" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput" />
      </Parameters>
      <Docs>
        <param name="context">The tag helper context.</param>
        <param name="output">The tag helper output.</param>
        <summary>
            Processes the tag helper context to evaluate if the feature's content should be rendered.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Requirement">
      <MemberSignature Language="C#" Value="public Microsoft.FeatureManagement.RequirementType Requirement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.FeatureManagement.RequirementType Requirement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.Requirement" />
      <MemberSignature Language="VB.NET" Value="Public Property Requirement As RequirementType" />
      <MemberSignature Language="F#" Value="member this.Requirement : Microsoft.FeatureManagement.RequirementType with get, set" Usage="Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper.Requirement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FeatureManagement.RequirementType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls whether 'All' or 'Any' feature in a list of features should be enabled to render the content within the feature tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
