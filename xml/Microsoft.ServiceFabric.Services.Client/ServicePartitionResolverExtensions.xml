<Type Name="ServicePartitionResolverExtensions" FullName="Microsoft.ServiceFabric.Services.Client.ServicePartitionResolverExtensions">
  <TypeSignature Language="C#" Value="public static class ServicePartitionResolverExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServicePartitionResolverExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolverExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServicePartitionResolverExtensions" />
  <TypeSignature Language="F#" Value="type ServicePartitionResolverExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Services</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class adds extensions methods to initialize <see cref="T:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DisableNotification">
      <MemberSignature Language="C#" Value="public static Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver DisableNotification (this Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver partitionResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver DisableNotification(class Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver partitionResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolverExtensions.DisableNotification(Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisableNotification (partitionResolver As ServicePartitionResolver) As ServicePartitionResolver" />
      <MemberSignature Language="F#" Value="static member DisableNotification : Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver -&gt; Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver" Usage="Microsoft.ServiceFabric.Services.Client.ServicePartitionResolverExtensions.DisableNotification partitionResolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Services</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionResolver" Type="Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver" RefType="this" />
      </Parameters>
      <Docs>
        <param name="partitionResolver"></param>
        <summary>
            An extension method that disables the notification for this particular instance of <see cref="T:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver" />
            By default, service partition Resolver register for notification.There is a cache of service endpoints in the client that gets updated by notifications and 
            this same cache is used to satisfy complaint based resolution requests.
            If you interested in only complain based resolution, then you could  use this extension to disable it.
            </summary>
        <returns>ServicePartitionResolver</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>