<Type Name="MockableDataProtectionBackupResourceGroupResource" FullName="Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableDataProtectionBackupResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataProtectionBackupResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataProtectionBackupResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataProtectionBackupResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataProtectionBackupResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDataProtectionBackupVaultNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt; CheckDataProtectionBackupVaultNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt; CheckDataProtectionBackupVaultNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.CheckDataProtectionBackupVaultNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDataProtectionBackupVaultNameAvailability (location As AzureLocation, content As DataProtectionBackupNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckDataProtectionBackupVaultNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;&#xA;override this.CheckDataProtectionBackupVaultNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.CheckDataProtectionBackupVaultNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location in which uniqueness will be verified. </param>
        <param name="content"> Check name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API to check for resource name availability
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>BackupVaults_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckDataProtectionBackupVaultNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;&gt; CheckDataProtectionBackupVaultNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;&gt; CheckDataProtectionBackupVaultNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.CheckDataProtectionBackupVaultNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDataProtectionBackupVaultNameAvailabilityAsync (location As AzureLocation, content As DataProtectionBackupNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckDataProtectionBackupVaultNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;&gt;&#xA;override this.CheckDataProtectionBackupVaultNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.CheckDataProtectionBackupVaultNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location in which uniqueness will be verified. </param>
        <param name="content"> Check name availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            API to check for resource name availability
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>BackupVaults_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCrossRegionRestoreJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetCrossRegionRestoreJob (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetCrossRegionRestoreJob(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJob(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossRegionRestoreJob (location As AzureLocation, content As CrossRegionRestoreJobContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossRegionRestoreJob : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&#xA;override this.GetCrossRegionRestoreJob : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJob (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches the Cross Region Restore Job
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJob</description></item><item><term>Operation Id</term><description>FetchCrossRegionRestoreJob_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCrossRegionRestoreJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt; GetCrossRegionRestoreJobAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt; GetCrossRegionRestoreJobAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJobAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossRegionRestoreJobAsync (location As AzureLocation, content As CrossRegionRestoreJobContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupJobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCrossRegionRestoreJobAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt;&#xA;override this.GetCrossRegionRestoreJobAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJobAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches the Cross Region Restore Job
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJob</description></item><item><term>Operation Id</term><description>FetchCrossRegionRestoreJob_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCrossRegionRestoreJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetCrossRegionRestoreJobs (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent content, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetCrossRegionRestoreJobs(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent content, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJobs(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossRegionRestoreJobs (location As AzureLocation, content As CrossRegionRestoreJobsContent, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataProtectionBackupJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossRegionRestoreJobs : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&#xA;override this.GetCrossRegionRestoreJobs : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJobs (location, content, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Request body for operation. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches list of Cross Region Restore job belonging to the vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJobs</description></item><item><term>Operation Id</term><description>FetchCrossRegionRestoreJobs_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCrossRegionRestoreJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetCrossRegionRestoreJobsAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent content, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetCrossRegionRestoreJobsAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent content, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJobsAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossRegionRestoreJobsAsync (location As AzureLocation, content As CrossRegionRestoreJobsContent, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataProtectionBackupJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossRegionRestoreJobsAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&#xA;override this.GetCrossRegionRestoreJobsAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetCrossRegionRestoreJobsAsync (location, content, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreJobsContent" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Request body for operation. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches list of Cross Region Restore job belonging to the vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJobs</description></item><item><term>Operation Id</term><description>FetchCrossRegionRestoreJobs_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupVault">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; GetDataProtectionBackupVault (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; GetDataProtectionBackupVault(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetDataProtectionBackupVault(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupVault (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupVault : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&#xA;override this.GetDataProtectionBackupVault : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetDataProtectionBackupVault (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the backup vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a resource belonging to a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupVaultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; GetDataProtectionBackupVaultAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; GetDataProtectionBackupVaultAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetDataProtectionBackupVaultAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupVaultAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupVaultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;&#xA;override this.GetDataProtectionBackupVaultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetDataProtectionBackupVaultAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the backup vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a resource belonging to a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupVaults">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultCollection GetDataProtectionBackupVaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultCollection GetDataProtectionBackupVaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetDataProtectionBackupVaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupVaults () As DataProtectionBackupVaultCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupVaults : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultCollection&#xA;override this.GetDataProtectionBackupVaults : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultCollection" Usage="mockableDataProtectionBackupResourceGroupResource.GetDataProtectionBackupVaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataProtectionBackupVaultResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of DataProtectionBackupVaultResources and their operations over a DataProtectionBackupVaultResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuard">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt; GetResourceGuard (string resourceGuardsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt; GetResourceGuard(string resourceGuardsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetResourceGuard(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuard (resourceGuardsName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGuardResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuard : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;&#xA;override this.GetResourceGuard : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetResourceGuard (resourceGuardsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGuardsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGuardsName"> The name of ResourceGuard. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a ResourceGuard belonging to a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}</description></item><item><term>Operation Id</term><description>ResourceGuards_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGuardsName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceGuardsName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuardAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;&gt; GetResourceGuardAsync (string resourceGuardsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;&gt; GetResourceGuardAsync(string resourceGuardsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetResourceGuardAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuardAsync (resourceGuardsName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGuardResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuardAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;&gt;&#xA;override this.GetResourceGuardAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetResourceGuardAsync (resourceGuardsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGuardsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGuardsName"> The name of ResourceGuard. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a ResourceGuard belonging to a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}</description></item><item><term>Operation Id</term><description>ResourceGuards_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.ResourceGuardResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGuardsName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceGuardsName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuards">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.ResourceGuardCollection GetResourceGuards ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataProtectionBackup.ResourceGuardCollection GetResourceGuards() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetResourceGuards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuards () As ResourceGuardCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuards : unit -&gt; Azure.ResourceManager.DataProtectionBackup.ResourceGuardCollection&#xA;override this.GetResourceGuards : unit -&gt; Azure.ResourceManager.DataProtectionBackup.ResourceGuardCollection" Usage="mockableDataProtectionBackupResourceGroupResource.GetResourceGuards " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.ResourceGuardCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ResourceGuardResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ResourceGuardResources and their operations over a ResourceGuardResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecondaryRecoveryPoints">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt; GetSecondaryRecoveryPoints (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent content, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt; GetSecondaryRecoveryPoints(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent content, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetSecondaryRecoveryPoints(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecondaryRecoveryPoints (location As AzureLocation, content As FetchSecondaryRPsRequestContent, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataProtectionBackupRecoveryPointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecondaryRecoveryPoints : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt;&#xA;override this.GetSecondaryRecoveryPoints : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetSecondaryRecoveryPoints (location, content, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Request body for operation. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of Secondary Recovery Points for a DataSource in a vault, that can be used for Cross Region Restore.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchSecondaryRecoveryPoints</description></item><item><term>Operation Id</term><description>FetchSecondaryRecoveryPoints_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecondaryRecoveryPointsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt; GetSecondaryRecoveryPointsAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent content, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt; GetSecondaryRecoveryPointsAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent content, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.GetSecondaryRecoveryPointsAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecondaryRecoveryPointsAsync (location As AzureLocation, content As FetchSecondaryRPsRequestContent, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataProtectionBackupRecoveryPointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecondaryRecoveryPointsAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt;&#xA;override this.GetSecondaryRecoveryPointsAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.GetSecondaryRecoveryPointsAsync (location, content, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.FetchSecondaryRPsRequestContent" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> Request body for operation. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of Secondary Recovery Points for a DataSource in a vault, that can be used for Cross Region Restore.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchSecondaryRecoveryPoints</description></item><item><term>Operation Id</term><description>FetchSecondaryRecoveryPoints_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupRecoveryPointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerCrossRegionRestoreBackupInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt; TriggerCrossRegionRestoreBackupInstance (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject crossRegionRestoreRequestObject, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt; TriggerCrossRegionRestoreBackupInstance(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject crossRegionRestoreRequestObject, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.TriggerCrossRegionRestoreBackupInstance(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerCrossRegionRestoreBackupInstance (waitUntil As WaitUntil, location As AzureLocation, crossRegionRestoreRequestObject As CrossRegionRestoreRequestObject, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataProtectionOperationJobExtendedInfo)" />
      <MemberSignature Language="F#" Value="abstract member TriggerCrossRegionRestoreBackupInstance : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&#xA;override this.TriggerCrossRegionRestoreBackupInstance : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.TriggerCrossRegionRestoreBackupInstance (waitUntil, location, crossRegionRestoreRequestObject, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="crossRegionRestoreRequestObject" Type="Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="crossRegionRestoreRequestObject"> Request body for trigger CRR operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers Cross Region Restore for BackupInstance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/crossRegionRestore</description></item><item><term>Operation Id</term><description>BackupInstances_TriggerCrossRegionRestore</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="crossRegionRestoreRequestObject" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerCrossRegionRestoreBackupInstanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt; TriggerCrossRegionRestoreBackupInstanceAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject crossRegionRestoreRequestObject, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt; TriggerCrossRegionRestoreBackupInstanceAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject crossRegionRestoreRequestObject, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.TriggerCrossRegionRestoreBackupInstanceAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerCrossRegionRestoreBackupInstanceAsync (waitUntil As WaitUntil, location As AzureLocation, crossRegionRestoreRequestObject As CrossRegionRestoreRequestObject, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataProtectionOperationJobExtendedInfo))" />
      <MemberSignature Language="F#" Value="abstract member TriggerCrossRegionRestoreBackupInstanceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;&#xA;override this.TriggerCrossRegionRestoreBackupInstanceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.TriggerCrossRegionRestoreBackupInstanceAsync (waitUntil, location, crossRegionRestoreRequestObject, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="crossRegionRestoreRequestObject" Type="Azure.ResourceManager.DataProtectionBackup.Models.CrossRegionRestoreRequestObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="crossRegionRestoreRequestObject"> Request body for trigger CRR operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers Cross Region Restore for BackupInstance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/crossRegionRestore</description></item><item><term>Operation Id</term><description>BackupInstances_TriggerCrossRegionRestore</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="crossRegionRestoreRequestObject" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateCrossRegionRestoreBackupInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt; ValidateCrossRegionRestoreBackupInstance (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject validateCrossRegionRestoreRequestObject, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt; ValidateCrossRegionRestoreBackupInstance(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject validateCrossRegionRestoreRequestObject, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.ValidateCrossRegionRestoreBackupInstance(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateCrossRegionRestoreBackupInstance (waitUntil As WaitUntil, location As AzureLocation, validateCrossRegionRestoreRequestObject As ValidateCrossRegionRestoreRequestObject, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataProtectionOperationJobExtendedInfo)" />
      <MemberSignature Language="F#" Value="abstract member ValidateCrossRegionRestoreBackupInstance : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&#xA;override this.ValidateCrossRegionRestoreBackupInstance : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.ValidateCrossRegionRestoreBackupInstance (waitUntil, location, validateCrossRegionRestoreRequestObject, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="validateCrossRegionRestoreRequestObject" Type="Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="validateCrossRegionRestoreRequestObject"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Validates whether Cross Region Restore can be triggered for DataSource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/validateCrossRegionRestore</description></item><item><term>Operation Id</term><description>BackupInstances_ValidateCrossRegionRestore</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="validateCrossRegionRestoreRequestObject" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateCrossRegionRestoreBackupInstanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt; ValidateCrossRegionRestoreBackupInstanceAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject validateCrossRegionRestoreRequestObject, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt; ValidateCrossRegionRestoreBackupInstanceAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject validateCrossRegionRestoreRequestObject, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.Mocking.MockableDataProtectionBackupResourceGroupResource.ValidateCrossRegionRestoreBackupInstanceAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateCrossRegionRestoreBackupInstanceAsync (waitUntil As WaitUntil, location As AzureLocation, validateCrossRegionRestoreRequestObject As ValidateCrossRegionRestoreRequestObject, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataProtectionOperationJobExtendedInfo))" />
      <MemberSignature Language="F#" Value="abstract member ValidateCrossRegionRestoreBackupInstanceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;&#xA;override this.ValidateCrossRegionRestoreBackupInstanceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;" Usage="mockableDataProtectionBackupResourceGroupResource.ValidateCrossRegionRestoreBackupInstanceAsync (waitUntil, location, validateCrossRegionRestoreRequestObject, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="validateCrossRegionRestoreRequestObject" Type="Azure.ResourceManager.DataProtectionBackup.Models.ValidateCrossRegionRestoreRequestObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="validateCrossRegionRestoreRequestObject"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Validates whether Cross Region Restore can be triggered for DataSource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/validateCrossRegionRestore</description></item><item><term>Operation Id</term><description>BackupInstances_ValidateCrossRegionRestore</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="validateCrossRegionRestoreRequestObject" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
