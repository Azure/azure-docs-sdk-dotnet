<Type Name="ISupportsProofOfPossession" FullName="Azure.Core.ISupportsProofOfPossession">
  <TypeSignature Language="C#" Value="public interface ISupportsProofOfPossession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISupportsProofOfPossession" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.ISupportsProofOfPossession" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISupportsProofOfPossession" />
  <TypeSignature Language="F#" Value="type ISupportsProofOfPossession = interface" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core.Experimental</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            An interface used to decorate a <see cref="T:Azure.Core.TokenCredential" /> that supports <see href="https://learn.microsoft.com/entra/msal/dotnet/advanced/proof-of-possession-tokens">Proof of Possession tokens</see> for authenticating to Microsoft Entra ID.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public Azure.Core.AccessToken GetToken (Azure.Core.PopTokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Core.AccessToken GetToken(valuetype Azure.Core.PopTokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.ISupportsProofOfPossession.GetToken(Azure.Core.PopTokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken (requestContext As PopTokenRequestContext, cancellationToken As CancellationToken) As AccessToken" />
      <MemberSignature Language="F#" Value="abstract member GetToken : Azure.Core.PopTokenRequestContext * System.Threading.CancellationToken -&gt; Azure.Core.AccessToken" Usage="iSupportsProofOfPossession.GetToken (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.AccessToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.PopTokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The <see cref="T:Azure.Core.PopTokenRequestContext" /> with authentication information.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            Gets an <see cref="T:Azure.Core.AccessToken" /> for the specified set of scopes.
            </summary>
        <returns>A valid <see cref="T:Azure.Core.AccessToken" />.</returns>
        <remarks>Caching and management of the lifespan for the <see cref="T:Azure.Core.AccessToken" /> is considered the responsibility of the caller. Each call should request a fresh token.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt; GetTokenAsync (Azure.Core.PopTokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Azure.Core.AccessToken&gt; GetTokenAsync(valuetype Azure.Core.PopTokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.ISupportsProofOfPossession.GetTokenAsync(Azure.Core.PopTokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAsync (requestContext As PopTokenRequestContext, cancellationToken As CancellationToken) As ValueTask(Of AccessToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTokenAsync : Azure.Core.PopTokenRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;" Usage="iSupportsProofOfPossession.GetTokenAsync (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.PopTokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The <see cref="T:Azure.Core.PopTokenRequestContext" /> with authentication information.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            Gets an <see cref="T:Azure.Core.AccessToken" /> for the specified set of scopes.
            </summary>
        <returns>A valid <see cref="T:Azure.Core.AccessToken" />.</returns>
        <remarks>Caching and management of the lifespan for the <see cref="T:Azure.Core.AccessToken" /> is considered the responsibility of the caller. Each call should request a fresh token.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
