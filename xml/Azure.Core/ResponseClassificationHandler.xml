<Type Name="ResponseClassificationHandler" FullName="Azure.Core.ResponseClassificationHandler">
  <TypeSignature Language="C#" Value="public abstract class ResponseClassificationHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResponseClassificationHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.ResponseClassificationHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResponseClassificationHandler" />
  <TypeSignature Language="F#" Value="type ResponseClassificationHandler = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core</AssemblyName>
    <AssemblyVersion>1.23.0.0</AssemblyVersion>
    <AssemblyVersion>1.24.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A type that analyzes an HTTP message and determines if the response it holds
            should be treated as an error response. A classifier of this type may use information
            from the request, the response, or other message property to decide
            whether and how to classify the message.
            <para />
            This type's <code>TryClassify</code> method allows chaining together handlers before
            applying default classifier logic.
            If a handler in the chain returns false from <code>TryClassify</code>,
            the next handler will be tried, and so on.  The first handler that returns true
            will determine whether the response is an error.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResponseClassificationHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.ResponseClassificationHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.23.0.0</AssemblyVersion>
        <AssemblyVersion>1.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryClassify">
      <MemberSignature Language="C#" Value="public abstract bool TryClassify (Azure.Core.HttpMessage message, out bool isError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryClassify(class Azure.Core.HttpMessage message, [out] bool&amp; isError) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.ResponseClassificationHandler.TryClassify(Azure.Core.HttpMessage,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryClassify (message As HttpMessage, ByRef isError As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryClassify : Azure.Core.HttpMessage * bool -&gt; bool" Usage="responseClassificationHandler.TryClassify (message, isError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.23.0.0</AssemblyVersion>
        <AssemblyVersion>1.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
        <Parameter Name="isError" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">The message to classify.</param>
        <param name="isError">Whether the message's response should be considered an error.</param>
        <summary>
            Populates the <code>isError</code> out parameter to indicate whether or not
            to classify the message's response as an error.
            </summary>
        <returns>
          <code>true</code> if the handler had a classification for this message; <code>false</code> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
