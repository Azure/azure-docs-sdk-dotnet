<Type Name="TokenRequestContext" FullName="Azure.Core.TokenRequestContext">
  <TypeSignature Language="C#" Value="public readonly struct TokenRequestContext" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TokenRequestContext extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.TokenRequestContext" />
  <TypeSignature Language="VB.NET" Value="Public Structure TokenRequestContext" />
  <TypeSignature Language="F#" Value="type TokenRequestContext = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core</AssemblyName>
    <AssemblyVersion>1.13.0.0</AssemblyVersion>
    <AssemblyVersion>1.14.0.0</AssemblyVersion>
    <AssemblyVersion>1.15.0.0</AssemblyVersion>
    <AssemblyVersion>1.16.0.0</AssemblyVersion>
    <AssemblyVersion>1.17.0.0</AssemblyVersion>
    <AssemblyVersion>1.18.0.0</AssemblyVersion>
    <AssemblyVersion>1.19.0.0</AssemblyVersion>
    <AssemblyVersion>1.20.0.0</AssemblyVersion>
    <AssemblyVersion>1.21.0.0</AssemblyVersion>
    <AssemblyVersion>1.22.0.0</AssemblyVersion>
    <AssemblyVersion>1.23.0.0</AssemblyVersion>
    <AssemblyVersion>1.24.0.0</AssemblyVersion>
    <AssemblyVersion>1.25.0.0</AssemblyVersion>
    <AssemblyVersion>1.26.0.0</AssemblyVersion>
    <AssemblyVersion>1.27.0.0</AssemblyVersion>
    <AssemblyVersion>1.28.0.0</AssemblyVersion>
    <AssemblyVersion>1.29.0.0</AssemblyVersion>
    <AssemblyVersion>1.30.0.0</AssemblyVersion>
    <AssemblyVersion>1.31.0.0</AssemblyVersion>
    <AssemblyVersion>1.32.0.0</AssemblyVersion>
    <AssemblyVersion>1.33.0.0</AssemblyVersion>
    <AssemblyVersion>1.34.0.0</AssemblyVersion>
    <AssemblyVersion>1.35.0.0</AssemblyVersion>
    <AssemblyVersion>1.36.0.0</AssemblyVersion>
    <AssemblyVersion>1.37.0.0</AssemblyVersion>
    <AssemblyVersion>1.38.0.0</AssemblyVersion>
    <AssemblyVersion>1.39.0.0</AssemblyVersion>
    <AssemblyVersion>1.40.0.0</AssemblyVersion>
    <AssemblyVersion>1.41.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains the details of an authentication token request.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenRequestContext (string[] scopes, string? parentRequestId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] scopes, string parentRequestId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.TokenRequestContext.#ctor(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopes As String(), parentRequestId As String)" />
      <MemberSignature Language="F#" Value="new Azure.Core.TokenRequestContext : string[] * string -&gt; Azure.Core.TokenRequestContext" Usage="new Azure.Core.TokenRequestContext (scopes, parentRequestId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="parentRequestId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scopes">The scopes required for the token.</param>
        <param name="parentRequestId">The <see cref="P:Azure.Core.Request.ClientRequestId" /> of the request requiring a token for authentication, if applicable.</param>
        <summary>
            Creates a new TokenRequest with the specified scopes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenRequestContext (string[] scopes, string? parentRequestId, string? claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] scopes, string parentRequestId, string claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.TokenRequestContext.#ctor(System.String[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopes As String(), parentRequestId As String, claims As String)" />
      <MemberSignature Language="F#" Value="new Azure.Core.TokenRequestContext : string[] * string * string -&gt; Azure.Core.TokenRequestContext" Usage="new Azure.Core.TokenRequestContext (scopes, parentRequestId, claims)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="parentRequestId" Type="System.String" />
        <Parameter Name="claims" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scopes">The scopes required for the token.</param>
        <param name="parentRequestId">The <see cref="P:Azure.Core.Request.ClientRequestId" /> of the request requiring a token for authentication, if applicable.</param>
        <param name="claims">Additional claims to be included in the token.</param>
        <summary>
            Creates a new TokenRequest with the specified scopes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenRequestContext (string[] scopes, string? parentRequestId, string? claims, string? tenantId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] scopes, string parentRequestId, string claims, string tenantId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.TokenRequestContext.#ctor(System.String[],System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopes As String(), parentRequestId As String, claims As String, tenantId As String)" />
      <MemberSignature Language="F#" Value="new Azure.Core.TokenRequestContext : string[] * string * string * string -&gt; Azure.Core.TokenRequestContext" Usage="new Azure.Core.TokenRequestContext (scopes, parentRequestId, claims, tenantId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="parentRequestId" Type="System.String" />
        <Parameter Name="claims" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scopes">The scopes required for the token.</param>
        <param name="parentRequestId">The <see cref="P:Azure.Core.Request.ClientRequestId" /> of the request requiring a token for authentication, if applicable.</param>
        <param name="claims">Additional claims to be included in the token.</param>
        <param name="tenantId"> The tenantId to be included in the token request. </param>
        <summary>
            Creates a new TokenRequest with the specified scopes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenRequestContext (string[] scopes, string? parentRequestId = default, string? claims = default, string? tenantId = default, bool isCaeEnabled = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] scopes, string parentRequestId, string claims, string tenantId, bool isCaeEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.TokenRequestContext.#ctor(System.String[],System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopes As String(), Optional parentRequestId As String = Nothing, Optional claims As String = Nothing, Optional tenantId As String = Nothing, Optional isCaeEnabled As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Azure.Core.TokenRequestContext : string[] * string * string * string * bool -&gt; Azure.Core.TokenRequestContext" Usage="new Azure.Core.TokenRequestContext (scopes, parentRequestId, claims, tenantId, isCaeEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="parentRequestId" Type="System.String" />
        <Parameter Name="claims" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="isCaeEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scopes">The scopes required for the token.</param>
        <param name="parentRequestId">The <see cref="P:Azure.Core.Request.ClientRequestId" /> of the request requiring a token for authentication, if applicable.</param>
        <param name="claims">Additional claims to be included in the token.</param>
        <param name="tenantId"> The tenantId to be included in the token request.</param>
        <param name="isCaeEnabled">Indicates whether to enable Continuous Access Evaluation (CAE) for the requested token.</param>
        <summary>
            Creates a new TokenRequest with the specified scopes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public string? Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Claims" />
      <MemberSignature Language="DocId" Value="P:Azure.Core.TokenRequestContext.Claims" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Claims As String" />
      <MemberSignature Language="F#" Value="member this.Claims : string" Usage="Azure.Core.TokenRequestContext.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Additional claims to be included in the token. See <see href="https://openid.net/specs/openid-connect-core-1_0-final.html#ClaimsParameter">https://openid.net/specs/openid-connect-core-1_0-final.html#ClaimsParameter</see> for more information on format and content.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCaeEnabled">
      <MemberSignature Language="C#" Value="public bool IsCaeEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCaeEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.Core.TokenRequestContext.IsCaeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCaeEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsCaeEnabled : bool" Usage="Azure.Core.TokenRequestContext.IsCaeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether to enable Continuous Access Evaluation (CAE) for the requested token.
            </summary>
        <value>To be added.</value>
        <remarks>
            If a resource API implements CAE and your application declares it can handle CAE, your app receives CAE tokens for that resource.
            For this reason, if you declare your app CAE ready, your application must handle the CAE claim challenge for all resource APIs that accept Microsoft Identity access tokens.
            If you don't handle CAE responses in these API calls, your app could end up in a loop retrying an API call with a token that is still in the returned lifespan of the token but has been revoked due to CAE.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRequestId">
      <MemberSignature Language="C#" Value="public string? ParentRequestId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentRequestId" />
      <MemberSignature Language="DocId" Value="P:Azure.Core.TokenRequestContext.ParentRequestId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRequestId As String" />
      <MemberSignature Language="F#" Value="member this.ParentRequestId : string" Usage="Azure.Core.TokenRequestContext.ParentRequestId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Azure.Core.Request.ClientRequestId" /> of the request requiring a token for authentication, if applicable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scopes">
      <MemberSignature Language="C#" Value="public string[] Scopes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Scopes" />
      <MemberSignature Language="DocId" Value="P:Azure.Core.TokenRequestContext.Scopes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scopes As String()" />
      <MemberSignature Language="F#" Value="member this.Scopes : string[]" Usage="Azure.Core.TokenRequestContext.Scopes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The scopes required for the token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TenantId">
      <MemberSignature Language="C#" Value="public string? TenantId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TenantId" />
      <MemberSignature Language="DocId" Value="P:Azure.Core.TokenRequestContext.TenantId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TenantId As String" />
      <MemberSignature Language="F#" Value="member this.TenantId : string" Usage="Azure.Core.TokenRequestContext.TenantId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.41.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The tenantId to be included in the token request.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
