<Type Name="PrivateCloudResource" FullName="Azure.ResourceManager.Avs.PrivateCloudResource">
  <TypeSignature Language="C#" Value="public class PrivateCloudResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrivateCloudResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Avs.PrivateCloudResource" />
  <TypeSignature Language="VB.NET" Value="Public Class PrivateCloudResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type PrivateCloudResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a PrivateCloud along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Avs.PrivateCloudResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetPrivateCloudResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetPrivateCloud method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrivateCloudResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Avs.PrivateCloudResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateCloudResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;" Usage="privateCloudResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateCloudResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;" Usage="privateCloudResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string privateCloudName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string privateCloudName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, privateCloudName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Avs.PrivateCloudResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, privateCloudName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="privateCloudName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="privateCloudName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Avs.PrivateCloudResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.PrivateCloudData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Avs.PrivateCloudData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Avs.PrivateCloudResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As PrivateCloudData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Avs.PrivateCloudData" Usage="Azure.ResourceManager.Avs.PrivateCloudResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.PrivateCloudData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="privateCloudResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="privateCloudResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateCloudResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;" Usage="privateCloudResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddon">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt; GetAddon (string addonName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.AddonResource&gt; GetAddon(string addonName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetAddon(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddon (addonName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AddonResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAddon : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt;&#xA;override this.GetAddon : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt;" Usage="privateCloudResource.GetAddon (addonName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addonName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="addonName"> Name of the addon for the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an addon by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}
            Operation Id: Addons_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="addonName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="addonName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAddonAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt;&gt; GetAddonAsync (string addonName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.AddonResource&gt;&gt; GetAddonAsync(string addonName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetAddonAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddonAsync (addonName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AddonResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAddonAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt;&gt;&#xA;override this.GetAddonAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt;&gt;" Usage="privateCloudResource.GetAddonAsync (addonName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.AddonResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addonName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="addonName"> Name of the addon for the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an addon by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}
            Operation Id: Addons_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="addonName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="addonName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAddons">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.AddonCollection GetAddons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.AddonCollection GetAddons() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetAddons" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddons () As AddonCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAddons : unit -&gt; Azure.ResourceManager.Avs.AddonCollection&#xA;override this.GetAddons : unit -&gt; Azure.ResourceManager.Avs.AddonCollection" Usage="privateCloudResource.GetAddons " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.AddonCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AddonResources in the PrivateCloud. </summary>
        <returns> An object representing collection of AddonResources and their operations over a AddonResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdminCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt; GetAdminCredentials (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.Models.AdminCredentials&gt; GetAdminCredentials(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetAdminCredentials(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdminCredentials (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AdminCredentials)" />
      <MemberSignature Language="F#" Value="abstract member GetAdminCredentials : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt;&#xA;override this.GetAdminCredentials : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt;" Usage="privateCloudResource.GetAdminCredentials cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the admin credentials for the private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials
            Operation Id: PrivateClouds_ListAdminCredentials
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdminCredentialsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt;&gt; GetAdminCredentialsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.Models.AdminCredentials&gt;&gt; GetAdminCredentialsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetAdminCredentialsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdminCredentialsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AdminCredentials))" />
      <MemberSignature Language="F#" Value="abstract member GetAdminCredentialsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt;&gt;&#xA;override this.GetAdminCredentialsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt;&gt;" Usage="privateCloudResource.GetAdminCredentialsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.Models.AdminCredentials&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the admin credentials for the private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials
            Operation Id: PrivateClouds_ListAdminCredentials
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateCloudResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;" Usage="privateCloudResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudLink">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt; GetCloudLink (string cloudLinkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.CloudLinkResource&gt; GetCloudLink(string cloudLinkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetCloudLink(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudLink (cloudLinkName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCloudLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt;&#xA;override this.GetCloudLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt;" Usage="privateCloudResource.GetCloudLink (cloudLinkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudLinkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudLinkName"> Name of the cloud link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an cloud link by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks/{cloudLinkName}
            Operation Id: CloudLinks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="cloudLinkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cloudLinkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudLinkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt;&gt; GetCloudLinkAsync (string cloudLinkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.CloudLinkResource&gt;&gt; GetCloudLinkAsync(string cloudLinkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetCloudLinkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudLinkAsync (cloudLinkName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCloudLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt;&gt;&#xA;override this.GetCloudLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt;&gt;" Usage="privateCloudResource.GetCloudLinkAsync (cloudLinkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.CloudLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudLinkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudLinkName"> Name of the cloud link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an cloud link by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks/{cloudLinkName}
            Operation Id: CloudLinks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="cloudLinkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cloudLinkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.CloudLinkCollection GetCloudLinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.CloudLinkCollection GetCloudLinks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetCloudLinks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudLinks () As CloudLinkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCloudLinks : unit -&gt; Azure.ResourceManager.Avs.CloudLinkCollection&#xA;override this.GetCloudLinks : unit -&gt; Azure.ResourceManager.Avs.CloudLinkCollection" Usage="privateCloudResource.GetCloudLinks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.CloudLinkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CloudLinkResources in the PrivateCloud. </summary>
        <returns> An object representing collection of CloudLinkResources and their operations over a CloudLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt; GetCluster (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ClusterResource&gt; GetCluster(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCluster (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt;&#xA;override this.GetCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt;" Usage="privateCloudResource.GetCluster (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Name of the cluster in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a cluster by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt;&gt; GetClusterAsync (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ClusterResource&gt;&gt; GetClusterAsync(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterAsync (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt;&gt;&#xA;override this.GetClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt;&gt;" Usage="privateCloudResource.GetClusterAsync (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Name of the cluster in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a cluster by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ClusterCollection GetClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ClusterCollection GetClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusters () As ClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetClusters : unit -&gt; Azure.ResourceManager.Avs.ClusterCollection&#xA;override this.GetClusters : unit -&gt; Azure.ResourceManager.Avs.ClusterCollection" Usage="privateCloudResource.GetClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ClusterResources in the PrivateCloud. </summary>
        <returns> An object representing collection of ClusterResources and their operations over a ClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteAuthorization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt; GetExpressRouteAuthorization (string authorizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt; GetExpressRouteAuthorization(string authorizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetExpressRouteAuthorization(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteAuthorization (authorizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRouteAuthorizationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteAuthorization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;&#xA;override this.GetExpressRouteAuthorization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;" Usage="privateCloudResource.GetExpressRouteAuthorization (authorizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authorizationName"> Name of the ExpressRoute Circuit Authorization in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an ExpressRoute Circuit Authorization by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations/{authorizationName}
            Operation Id: Authorizations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="authorizationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authorizationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteAuthorizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;&gt; GetExpressRouteAuthorizationAsync (string authorizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;&gt; GetExpressRouteAuthorizationAsync(string authorizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetExpressRouteAuthorizationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteAuthorizationAsync (authorizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRouteAuthorizationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteAuthorizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;&gt;&#xA;override this.GetExpressRouteAuthorizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;&gt;" Usage="privateCloudResource.GetExpressRouteAuthorizationAsync (authorizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ExpressRouteAuthorizationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authorizationName"> Name of the ExpressRoute Circuit Authorization in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an ExpressRoute Circuit Authorization by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations/{authorizationName}
            Operation Id: Authorizations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="authorizationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authorizationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteAuthorizations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ExpressRouteAuthorizationCollection GetExpressRouteAuthorizations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ExpressRouteAuthorizationCollection GetExpressRouteAuthorizations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetExpressRouteAuthorizations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteAuthorizations () As ExpressRouteAuthorizationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteAuthorizations : unit -&gt; Azure.ResourceManager.Avs.ExpressRouteAuthorizationCollection&#xA;override this.GetExpressRouteAuthorizations : unit -&gt; Azure.ResourceManager.Avs.ExpressRouteAuthorizationCollection" Usage="privateCloudResource.GetExpressRouteAuthorizations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ExpressRouteAuthorizationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRouteAuthorizationResources in the PrivateCloud. </summary>
        <returns> An object representing collection of ExpressRouteAuthorizationResources and their operations over a ExpressRouteAuthorizationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalReachConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt; GetGlobalReachConnection (string globalReachConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt; GetGlobalReachConnection(string globalReachConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetGlobalReachConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalReachConnection (globalReachConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GlobalReachConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalReachConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;&#xA;override this.GetGlobalReachConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;" Usage="privateCloudResource.GetGlobalReachConnection (globalReachConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="globalReachConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="globalReachConnectionName"> Name of the global reach connection in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a global reach connection by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections/{globalReachConnectionName}
            Operation Id: GlobalReachConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="globalReachConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="globalReachConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalReachConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;&gt; GetGlobalReachConnectionAsync (string globalReachConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;&gt; GetGlobalReachConnectionAsync(string globalReachConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetGlobalReachConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalReachConnectionAsync (globalReachConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GlobalReachConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalReachConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;&gt;&#xA;override this.GetGlobalReachConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;&gt;" Usage="privateCloudResource.GetGlobalReachConnectionAsync (globalReachConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.GlobalReachConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="globalReachConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="globalReachConnectionName"> Name of the global reach connection in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a global reach connection by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections/{globalReachConnectionName}
            Operation Id: GlobalReachConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="globalReachConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="globalReachConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalReachConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.GlobalReachConnectionCollection GetGlobalReachConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.GlobalReachConnectionCollection GetGlobalReachConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetGlobalReachConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalReachConnections () As GlobalReachConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalReachConnections : unit -&gt; Azure.ResourceManager.Avs.GlobalReachConnectionCollection&#xA;override this.GetGlobalReachConnections : unit -&gt; Azure.ResourceManager.Avs.GlobalReachConnectionCollection" Usage="privateCloudResource.GetGlobalReachConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.GlobalReachConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of GlobalReachConnectionResources in the PrivateCloud. </summary>
        <returns> An object representing collection of GlobalReachConnectionResources and their operations over a GlobalReachConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHcxEnterpriseSite">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt; GetHcxEnterpriseSite (string hcxEnterpriseSiteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt; GetHcxEnterpriseSite(string hcxEnterpriseSiteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetHcxEnterpriseSite(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHcxEnterpriseSite (hcxEnterpriseSiteName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HcxEnterpriseSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHcxEnterpriseSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;&#xA;override this.GetHcxEnterpriseSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;" Usage="privateCloudResource.GetHcxEnterpriseSite (hcxEnterpriseSiteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hcxEnterpriseSiteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hcxEnterpriseSiteName"> Name of the HCX Enterprise Site in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an HCX Enterprise Site by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}
            Operation Id: HcxEnterpriseSites_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hcxEnterpriseSiteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hcxEnterpriseSiteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHcxEnterpriseSiteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;&gt; GetHcxEnterpriseSiteAsync (string hcxEnterpriseSiteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;&gt; GetHcxEnterpriseSiteAsync(string hcxEnterpriseSiteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetHcxEnterpriseSiteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHcxEnterpriseSiteAsync (hcxEnterpriseSiteName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HcxEnterpriseSiteResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHcxEnterpriseSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;&gt;&#xA;override this.GetHcxEnterpriseSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;&gt;" Usage="privateCloudResource.GetHcxEnterpriseSiteAsync (hcxEnterpriseSiteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.HcxEnterpriseSiteResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hcxEnterpriseSiteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hcxEnterpriseSiteName"> Name of the HCX Enterprise Site in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an HCX Enterprise Site by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}
            Operation Id: HcxEnterpriseSites_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hcxEnterpriseSiteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hcxEnterpriseSiteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHcxEnterpriseSites">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.HcxEnterpriseSiteCollection GetHcxEnterpriseSites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.HcxEnterpriseSiteCollection GetHcxEnterpriseSites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetHcxEnterpriseSites" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHcxEnterpriseSites () As HcxEnterpriseSiteCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHcxEnterpriseSites : unit -&gt; Azure.ResourceManager.Avs.HcxEnterpriseSiteCollection&#xA;override this.GetHcxEnterpriseSites : unit -&gt; Azure.ResourceManager.Avs.HcxEnterpriseSiteCollection" Usage="privateCloudResource.GetHcxEnterpriseSites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.HcxEnterpriseSiteCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of HcxEnterpriseSiteResources in the PrivateCloud. </summary>
        <returns> An object representing collection of HcxEnterpriseSiteResources and their operations over a HcxEnterpriseSiteResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptExecution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt; GetScriptExecution (string scriptExecutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ScriptExecutionResource&gt; GetScriptExecution(string scriptExecutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetScriptExecution(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptExecution (scriptExecutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScriptExecutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScriptExecution : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt;&#xA;override this.GetScriptExecution : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt;" Usage="privateCloudResource.GetScriptExecution (scriptExecutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptExecutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptExecutionName"> Name of the user-invoked script execution resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an script execution by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}
            Operation Id: ScriptExecutions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptExecutionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptExecutionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScriptExecutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt;&gt; GetScriptExecutionAsync (string scriptExecutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ScriptExecutionResource&gt;&gt; GetScriptExecutionAsync(string scriptExecutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetScriptExecutionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptExecutionAsync (scriptExecutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScriptExecutionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetScriptExecutionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt;&gt;&#xA;override this.GetScriptExecutionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt;&gt;" Usage="privateCloudResource.GetScriptExecutionAsync (scriptExecutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptExecutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptExecutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptExecutionName"> Name of the user-invoked script execution resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an script execution by name in a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}
            Operation Id: ScriptExecutions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptExecutionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptExecutionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScriptExecutions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ScriptExecutionCollection GetScriptExecutions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ScriptExecutionCollection GetScriptExecutions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetScriptExecutions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptExecutions () As ScriptExecutionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetScriptExecutions : unit -&gt; Azure.ResourceManager.Avs.ScriptExecutionCollection&#xA;override this.GetScriptExecutions : unit -&gt; Azure.ResourceManager.Avs.ScriptExecutionCollection" Usage="privateCloudResource.GetScriptExecutions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ScriptExecutionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ScriptExecutionResources in the PrivateCloud. </summary>
        <returns> An object representing collection of ScriptExecutionResources and their operations over a ScriptExecutionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptPackage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt; GetScriptPackage (string scriptPackageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ScriptPackageResource&gt; GetScriptPackage(string scriptPackageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetScriptPackage(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptPackage (scriptPackageName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScriptPackageResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScriptPackage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt;&#xA;override this.GetScriptPackage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt;" Usage="privateCloudResource.GetScriptPackage (scriptPackageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptPackageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptPackageName"> Name of the script package in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a script package available to run on a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}
            Operation Id: ScriptPackages_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptPackageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptPackageName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScriptPackageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt;&gt; GetScriptPackageAsync (string scriptPackageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.ScriptPackageResource&gt;&gt; GetScriptPackageAsync(string scriptPackageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetScriptPackageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptPackageAsync (scriptPackageName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScriptPackageResource))" />
      <MemberSignature Language="F#" Value="abstract member GetScriptPackageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt;&gt;&#xA;override this.GetScriptPackageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt;&gt;" Usage="privateCloudResource.GetScriptPackageAsync (scriptPackageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.ScriptPackageResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptPackageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptPackageName"> Name of the script package in the private cloud. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a script package available to run on a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}
            Operation Id: ScriptPackages_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptPackageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptPackageName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScriptPackages">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.ScriptPackageCollection GetScriptPackages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.ScriptPackageCollection GetScriptPackages() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetScriptPackages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptPackages () As ScriptPackageCollection" />
      <MemberSignature Language="F#" Value="abstract member GetScriptPackages : unit -&gt; Azure.ResourceManager.Avs.ScriptPackageCollection&#xA;override this.GetScriptPackages : unit -&gt; Azure.ResourceManager.Avs.ScriptPackageCollection" Usage="privateCloudResource.GetScriptPackages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.ScriptPackageCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ScriptPackageResources in the PrivateCloud. </summary>
        <returns> An object representing collection of ScriptPackageResources and their operations over a ScriptPackageResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDhcp">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt; GetWorkloadNetworkDhcp (string dhcpId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt; GetWorkloadNetworkDhcp(string dhcpId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDhcp(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDhcp (dhcpId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkDhcpResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDhcp : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;&#xA;override this.GetWorkloadNetworkDhcp : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkDhcp (dhcpId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dhcpId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dhcpId"> NSX DHCP identifier. Generally the same as the DHCP display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get dhcp by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}
            Operation Id: WorkloadNetworks_GetDhcp
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dhcpId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dhcpId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDhcpAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;&gt; GetWorkloadNetworkDhcpAsync (string dhcpId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;&gt; GetWorkloadNetworkDhcpAsync(string dhcpId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDhcpAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDhcpAsync (dhcpId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkDhcpResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDhcpAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;&gt;&#xA;override this.GetWorkloadNetworkDhcpAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkDhcpAsync (dhcpId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDhcpResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dhcpId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dhcpId"> NSX DHCP identifier. Generally the same as the DHCP display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get dhcp by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}
            Operation Id: WorkloadNetworks_GetDhcp
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dhcpId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dhcpId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDhcps">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkDhcpCollection GetWorkloadNetworkDhcps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkDhcpCollection GetWorkloadNetworkDhcps() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDhcps" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDhcps () As WorkloadNetworkDhcpCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDhcps : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDhcpCollection&#xA;override this.GetWorkloadNetworkDhcps : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDhcpCollection" Usage="privateCloudResource.GetWorkloadNetworkDhcps " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkDhcpCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkDhcpResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkDhcpResources and their operations over a WorkloadNetworkDhcpResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsService">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt; GetWorkloadNetworkDnsService (string dnsServiceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt; GetWorkloadNetworkDnsService(string dnsServiceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDnsService(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsService (dnsServiceId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkDnsServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsService : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;&#xA;override this.GetWorkloadNetworkDnsService : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkDnsService (dnsServiceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsServiceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsServiceId"> NSX DNS Service identifier. Generally the same as the DNS Service's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DNS service by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices/{dnsServiceId}
            Operation Id: WorkloadNetworks_GetDnsService
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsServiceId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsServiceId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsServiceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;&gt; GetWorkloadNetworkDnsServiceAsync (string dnsServiceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;&gt; GetWorkloadNetworkDnsServiceAsync(string dnsServiceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDnsServiceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsServiceAsync (dnsServiceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkDnsServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsServiceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;&gt;&#xA;override this.GetWorkloadNetworkDnsServiceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkDnsServiceAsync (dnsServiceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsServiceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsServiceId"> NSX DNS Service identifier. Generally the same as the DNS Service's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DNS service by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices/{dnsServiceId}
            Operation Id: WorkloadNetworks_GetDnsService
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsServiceId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsServiceId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsServices">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceCollection GetWorkloadNetworkDnsServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceCollection GetWorkloadNetworkDnsServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDnsServices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsServices () As WorkloadNetworkDnsServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsServices : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceCollection&#xA;override this.GetWorkloadNetworkDnsServices : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceCollection" Usage="privateCloudResource.GetWorkloadNetworkDnsServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkDnsServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkDnsServiceResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkDnsServiceResources and their operations over a WorkloadNetworkDnsServiceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsZone">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt; GetWorkloadNetworkDnsZone (string dnsZoneId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt; GetWorkloadNetworkDnsZone(string dnsZoneId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDnsZone(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsZone (dnsZoneId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkDnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsZone : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;&#xA;override this.GetWorkloadNetworkDnsZone : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkDnsZone (dnsZoneId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsZoneId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsZoneId"> NSX DNS Zone identifier. Generally the same as the DNS Zone's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DNS zone by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones/{dnsZoneId}
            Operation Id: WorkloadNetworks_GetDnsZone
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsZoneId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsZoneId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsZoneAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;&gt; GetWorkloadNetworkDnsZoneAsync (string dnsZoneId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;&gt; GetWorkloadNetworkDnsZoneAsync(string dnsZoneId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDnsZoneAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsZoneAsync (dnsZoneId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkDnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsZoneAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;&gt;&#xA;override this.GetWorkloadNetworkDnsZoneAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkDnsZoneAsync (dnsZoneId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsZoneId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dnsZoneId"> NSX DNS Zone identifier. Generally the same as the DNS Zone's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a DNS zone by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones/{dnsZoneId}
            Operation Id: WorkloadNetworks_GetDnsZone
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dnsZoneId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dnsZoneId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkDnsZones">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneCollection GetWorkloadNetworkDnsZones ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneCollection GetWorkloadNetworkDnsZones() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkDnsZones" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkDnsZones () As WorkloadNetworkDnsZoneCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkDnsZones : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneCollection&#xA;override this.GetWorkloadNetworkDnsZones : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneCollection" Usage="privateCloudResource.GetWorkloadNetworkDnsZones " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkDnsZoneCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkDnsZoneResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkDnsZoneResources and their operations over a WorkloadNetworkDnsZoneResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt; GetWorkloadNetworkGateway (string gatewayId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt; GetWorkloadNetworkGateway(string gatewayId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkGateway (gatewayId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;&#xA;override this.GetWorkloadNetworkGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkGateway (gatewayId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayId"> NSX Gateway identifier. Generally the same as the Gateway's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a gateway by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways/{gatewayId}
            Operation Id: WorkloadNetworks_GetGateway
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;&gt; GetWorkloadNetworkGatewayAsync (string gatewayId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;&gt; GetWorkloadNetworkGatewayAsync(string gatewayId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkGatewayAsync (gatewayId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;&gt;&#xA;override this.GetWorkloadNetworkGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkGatewayAsync (gatewayId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayId"> NSX Gateway identifier. Generally the same as the Gateway's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a gateway by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways/{gatewayId}
            Operation Id: WorkloadNetworks_GetGateway
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkGatewayCollection GetWorkloadNetworkGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkGatewayCollection GetWorkloadNetworkGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkGateways () As WorkloadNetworkGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkGateways : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkGatewayCollection&#xA;override this.GetWorkloadNetworkGateways : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkGatewayCollection" Usage="privateCloudResource.GetWorkloadNetworkGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkGatewayResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkGatewayResources and their operations over a WorkloadNetworkGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPortMirroring">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt; GetWorkloadNetworkPortMirroring (string portMirroringId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt; GetWorkloadNetworkPortMirroring(string portMirroringId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkPortMirroring(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPortMirroring (portMirroringId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkPortMirroringResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPortMirroring : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;&#xA;override this.GetWorkloadNetworkPortMirroring : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkPortMirroring (portMirroringId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portMirroringId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="portMirroringId"> NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a port mirroring profile by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}
            Operation Id: WorkloadNetworks_GetPortMirroring
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="portMirroringId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portMirroringId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPortMirroringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;&gt; GetWorkloadNetworkPortMirroringAsync (string portMirroringId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;&gt; GetWorkloadNetworkPortMirroringAsync(string portMirroringId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkPortMirroringAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPortMirroringAsync (portMirroringId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkPortMirroringResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPortMirroringAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;&gt;&#xA;override this.GetWorkloadNetworkPortMirroringAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkPortMirroringAsync (portMirroringId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portMirroringId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="portMirroringId"> NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a port mirroring profile by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}
            Operation Id: WorkloadNetworks_GetPortMirroring
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="portMirroringId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portMirroringId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPortMirrorings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringCollection GetWorkloadNetworkPortMirrorings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringCollection GetWorkloadNetworkPortMirrorings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkPortMirrorings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPortMirrorings () As WorkloadNetworkPortMirroringCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPortMirrorings : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringCollection&#xA;override this.GetWorkloadNetworkPortMirrorings : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringCollection" Usage="privateCloudResource.GetWorkloadNetworkPortMirrorings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkPortMirroringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkPortMirroringResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkPortMirroringResources and their operations over a WorkloadNetworkPortMirroringResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPublicIP">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt; GetWorkloadNetworkPublicIP (string publicIPId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt; GetWorkloadNetworkPublicIP(string publicIPId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkPublicIP(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPublicIP (publicIPId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkPublicIPResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPublicIP : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;&#xA;override this.GetWorkloadNetworkPublicIP : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkPublicIP (publicIPId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicIPId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publicIPId"> NSX Public IP Block identifier. Generally the same as the Public IP Block's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Public IP Block by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs/{publicIPId}
            Operation Id: WorkloadNetworks_GetPublicIP
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicIPId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publicIPId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPublicIPAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;&gt; GetWorkloadNetworkPublicIPAsync (string publicIPId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;&gt; GetWorkloadNetworkPublicIPAsync(string publicIPId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkPublicIPAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPublicIPAsync (publicIPId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkPublicIPResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPublicIPAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;&gt;&#xA;override this.GetWorkloadNetworkPublicIPAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkPublicIPAsync (publicIPId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkPublicIPResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicIPId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publicIPId"> NSX Public IP Block identifier. Generally the same as the Public IP Block's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Public IP Block by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs/{publicIPId}
            Operation Id: WorkloadNetworks_GetPublicIP
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicIPId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publicIPId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkPublicIPs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkPublicIPCollection GetWorkloadNetworkPublicIPs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkPublicIPCollection GetWorkloadNetworkPublicIPs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkPublicIPs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkPublicIPs () As WorkloadNetworkPublicIPCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkPublicIPs : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPublicIPCollection&#xA;override this.GetWorkloadNetworkPublicIPs : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkPublicIPCollection" Usage="privateCloudResource.GetWorkloadNetworkPublicIPs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkPublicIPCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkPublicIPResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkPublicIPResources and their operations over a WorkloadNetworkPublicIPResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkSegment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt; GetWorkloadNetworkSegment (string segmentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt; GetWorkloadNetworkSegment(string segmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkSegment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkSegment (segmentId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkSegmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkSegment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;&#xA;override this.GetWorkloadNetworkSegment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkSegment (segmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="segmentId"> NSX Segment identifier. Generally the same as the Segment's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a segment by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}
            Operation Id: WorkloadNetworks_GetSegment
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="segmentId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="segmentId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkSegmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;&gt; GetWorkloadNetworkSegmentAsync (string segmentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;&gt; GetWorkloadNetworkSegmentAsync(string segmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkSegmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkSegmentAsync (segmentId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkSegmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkSegmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;&gt;&#xA;override this.GetWorkloadNetworkSegmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkSegmentAsync (segmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkSegmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="segmentId"> NSX Segment identifier. Generally the same as the Segment's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a segment by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}
            Operation Id: WorkloadNetworks_GetSegment
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="segmentId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="segmentId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkSegments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkSegmentCollection GetWorkloadNetworkSegments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkSegmentCollection GetWorkloadNetworkSegments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkSegments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkSegments () As WorkloadNetworkSegmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkSegments : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkSegmentCollection&#xA;override this.GetWorkloadNetworkSegments : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkSegmentCollection" Usage="privateCloudResource.GetWorkloadNetworkSegments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkSegmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkSegmentResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkSegmentResources and their operations over a WorkloadNetworkSegmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVirtualMachine">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt; GetWorkloadNetworkVirtualMachine (string virtualMachineId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt; GetWorkloadNetworkVirtualMachine(string virtualMachineId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkVirtualMachine(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVirtualMachine (virtualMachineId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkVirtualMachineResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVirtualMachine : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;&#xA;override this.GetWorkloadNetworkVirtualMachine : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkVirtualMachine (virtualMachineId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineId"> Virtual Machine identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a virtual machine by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines/{virtualMachineId}
            Operation Id: WorkloadNetworks_GetVirtualMachine
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVirtualMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;&gt; GetWorkloadNetworkVirtualMachineAsync (string virtualMachineId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;&gt; GetWorkloadNetworkVirtualMachineAsync(string virtualMachineId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkVirtualMachineAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVirtualMachineAsync (virtualMachineId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkVirtualMachineResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVirtualMachineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;&gt;&#xA;override this.GetWorkloadNetworkVirtualMachineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkVirtualMachineAsync (virtualMachineId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineId"> Virtual Machine identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a virtual machine by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines/{virtualMachineId}
            Operation Id: WorkloadNetworks_GetVirtualMachine
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVirtualMachines">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineCollection GetWorkloadNetworkVirtualMachines ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineCollection GetWorkloadNetworkVirtualMachines() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkVirtualMachines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVirtualMachines () As WorkloadNetworkVirtualMachineCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVirtualMachines : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineCollection&#xA;override this.GetWorkloadNetworkVirtualMachines : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineCollection" Usage="privateCloudResource.GetWorkloadNetworkVirtualMachines " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkVirtualMachineCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkVirtualMachineResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkVirtualMachineResources and their operations over a WorkloadNetworkVirtualMachineResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVmGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt; GetWorkloadNetworkVmGroup (string vmGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt; GetWorkloadNetworkVmGroup(string vmGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkVmGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVmGroup (vmGroupId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkloadNetworkVmGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVmGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;&#xA;override this.GetWorkloadNetworkVmGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;" Usage="privateCloudResource.GetWorkloadNetworkVmGroup (vmGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmGroupId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vmGroupId"> NSX VM Group identifier. Generally the same as the VM Group's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a vm group by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}
            Operation Id: WorkloadNetworks_GetVMGroup
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vmGroupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vmGroupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVmGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;&gt; GetWorkloadNetworkVmGroupAsync (string vmGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;&gt; GetWorkloadNetworkVmGroupAsync(string vmGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkVmGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVmGroupAsync (vmGroupId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkloadNetworkVmGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVmGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;&gt;&#xA;override this.GetWorkloadNetworkVmGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;&gt;" Usage="privateCloudResource.GetWorkloadNetworkVmGroupAsync (vmGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.WorkloadNetworkVmGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vmGroupId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vmGroupId"> NSX VM Group identifier. Generally the same as the VM Group's display name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a vm group by id in a private cloud workload network.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}
            Operation Id: WorkloadNetworks_GetVMGroup
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vmGroupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vmGroupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadNetworkVmGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Avs.WorkloadNetworkVmGroupCollection GetWorkloadNetworkVmGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Avs.WorkloadNetworkVmGroupCollection GetWorkloadNetworkVmGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.GetWorkloadNetworkVmGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkloadNetworkVmGroups () As WorkloadNetworkVmGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkloadNetworkVmGroups : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVmGroupCollection&#xA;override this.GetWorkloadNetworkVmGroups : unit -&gt; Azure.ResourceManager.Avs.WorkloadNetworkVmGroupCollection" Usage="privateCloudResource.GetWorkloadNetworkVmGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Avs.WorkloadNetworkVmGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkloadNetworkVmGroupResources in the PrivateCloud. </summary>
        <returns> An object representing collection of WorkloadNetworkVmGroupResources and their operations over a WorkloadNetworkVmGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Avs.PrivateCloudResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Avs.PrivateCloudResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateCloudResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;" Usage="privateCloudResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateCloudResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;" Usage="privateCloudResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Avs.PrivateCloudResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Avs.PrivateCloudResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateNsxtPassword">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation RotateNsxtPassword (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation RotateNsxtPassword(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.RotateNsxtPassword(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateNsxtPassword (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member RotateNsxtPassword : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.RotateNsxtPassword : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="privateCloudResource.RotateNsxtPassword (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Rotate the NSX-T Manager password
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateNsxtPassword
            Operation Id: PrivateClouds_RotateNsxtPassword
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateNsxtPasswordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; RotateNsxtPasswordAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; RotateNsxtPasswordAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.RotateNsxtPasswordAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateNsxtPasswordAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member RotateNsxtPasswordAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.RotateNsxtPasswordAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="privateCloudResource.RotateNsxtPasswordAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Rotate the NSX-T Manager password
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateNsxtPassword
            Operation Id: PrivateClouds_RotateNsxtPassword
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateVcenterPassword">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation RotateVcenterPassword (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation RotateVcenterPassword(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.RotateVcenterPassword(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateVcenterPassword (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member RotateVcenterPassword : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.RotateVcenterPassword : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="privateCloudResource.RotateVcenterPassword (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Rotate the vCenter password
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateVcenterPassword
            Operation Id: PrivateClouds_RotateVcenterPassword
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateVcenterPasswordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; RotateVcenterPasswordAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; RotateVcenterPasswordAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.RotateVcenterPasswordAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateVcenterPasswordAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member RotateVcenterPasswordAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.RotateVcenterPasswordAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="privateCloudResource.RotateVcenterPasswordAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Rotate the vCenter password
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateVcenterPassword
            Operation Id: PrivateClouds_RotateVcenterPassword
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateCloudResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;" Usage="privateCloudResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateCloudResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;" Usage="privateCloudResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Avs.Models.PrivateCloudPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Avs.Models.PrivateCloudPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.Update(Azure.WaitUntil,Azure.ResourceManager.Avs.Models.PrivateCloudPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As PrivateCloudPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of PrivateCloudResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Avs.Models.PrivateCloudPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Avs.Models.PrivateCloudPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;" Usage="privateCloudResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Avs.Models.PrivateCloudPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The private cloud properties to be updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Avs.Models.PrivateCloudPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Avs.Models.PrivateCloudPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Avs.PrivateCloudResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Avs.Models.PrivateCloudPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As PrivateCloudPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of PrivateCloudResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Avs.Models.PrivateCloudPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Avs.Models.PrivateCloudPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;" Usage="privateCloudResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Avs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Avs.PrivateCloudResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Avs.Models.PrivateCloudPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> The private cloud properties to be updated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a private cloud
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}
            Operation Id: PrivateClouds_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
