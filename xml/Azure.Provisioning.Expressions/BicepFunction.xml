<Type Name="BicepFunction" FullName="Azure.Provisioning.Expressions.BicepFunction">
  <TypeSignature Language="C#" Value="public static class BicepFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BicepFunction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Expressions.BicepFunction" />
  <TypeSignature Language="VB.NET" Value="Public Class BicepFunction" />
  <TypeSignature Language="F#" Value="type BicepFunction = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides access to standard Bicep functions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsString">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; AsString (Azure.Provisioning.BicepValue&lt;object&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; AsString(class Azure.Provisioning.BicepValue`1&lt;object&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.AsString(Azure.Provisioning.BicepValue{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsString (value As BicepValue(Of Object)) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member AsString : Azure.Provisioning.BicepValue&lt;obj&gt; -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.AsString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Provisioning.BicepValue&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
            The value to convert to string.  Any type of value can be converted,
            including objects and arrays.
            </param>
        <summary>
            Converts the specified value to a string.  Strings are returned as-is.
            Other types are converted to their equivalent JSON representation.
            This represents the <c>string</c> Bicep function.
            </summary>
        <returns>A string of the converted value.</returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-string#string">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; Concat (params Azure.Provisioning.BicepValue&lt;string&gt;[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; Concat(class Azure.Provisioning.BicepValue`1&lt;string&gt;[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.Concat(Azure.Provisioning.BicepValue{System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (ParamArray values As BicepValue(Of String)()) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member Concat : Azure.Provisioning.BicepValue&lt;string&gt;[] -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.Concat values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Azure.Provisioning.BicepValue&lt;System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">Strings in sequential order for concatenation.</param>
        <summary>
            Combines multiple string values <paramref name="values" /> and returns
            the concatenated string.  This represents the <c>concat</c> Bicep
            function.  To improve readability, prefer
            <see cref="M:Azure.Provisioning.Expressions.BicepFunction.Interpolate(Azure.Provisioning.Expressions.BicepInterpolatedStringHandler)" /> instead of
            <see cref="M:Azure.Provisioning.Expressions.BicepFunction.Concat(Azure.Provisioning.BicepValue{System.String}[])" />.
            </summary>
        <returns>A string or array of concatenated values.</returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-string#concat">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGuid">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; CreateGuid (params Azure.Provisioning.BicepValue&lt;string&gt;[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; CreateGuid(class Azure.Provisioning.BicepValue`1&lt;string&gt;[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.CreateGuid(Azure.Provisioning.BicepValue{System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateGuid (ParamArray values As BicepValue(Of String)()) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member CreateGuid : Azure.Provisioning.BicepValue&lt;string&gt;[] -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.CreateGuid values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Azure.Provisioning.BicepValue&lt;System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">
            The value used in the hash function to create the GUID.  At least one
            value is required.
            </param>
        <summary>
            Creates a value in the format of a globally unique identifier based on
            the values provided as parameters.  This represents the <c>guid</c>
            Bicep function.
            </summary>
        <returns>
            A string containing 36 characters in the format of a globally unique
            identifier.
            </returns>
        <remarks>
          <para>
            This function is helpful when you need to create a value in the format
            of a globally unique identifier. You provide parameter values that
            limit the scope of uniqueness for the result. You can specify whether
            the name is unique down to subscription, resource group, or deployment.
            </para>
          <para>
            The returned value isn't a random string, but rather the result of a
            hash function on the parameters.  The returned value is 36 characters
            long.  It isn't globally unique.
            </para>
          <para>
            NOTE: The order of the parameters affects the returned value.  For
            example, <c>CreateGuid("Hello", "World")</c> and
            <c>CreateGuid("World", "Hello")</c> don't return the same value.
            </para>
          <para>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-string#guid">
            Bicep Functions Reference</see> for more.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeployment">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.Resources.ArmDeployment GetDeployment ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.Resources.ArmDeployment GetDeployment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.GetDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDeployment () As ArmDeployment" />
      <MemberSignature Language="F#" Value="static member GetDeployment : unit -&gt; Azure.Provisioning.Resources.ArmDeployment" Usage="Azure.Provisioning.Expressions.BicepFunction.GetDeployment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Resources.ArmDeployment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns information about the current deployment operation.  This
            represents the <c>deployment</c> Bicep function.
            </summary>
        <returns>
            This function returns the object that is passed during deployment.  The
            properties in the returned object differ based on whether you are
            deploying a local Bicep file or deploying to a resource group /
            subscription / management group / tenant.
            </returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.comazure/azure-resource-manager/bicep/bicep-functions-deployment#deployment">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroup">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.Resources.ResourceGroup GetResourceGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.Resources.ResourceGroup GetResourceGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.GetResourceGroup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetResourceGroup () As ResourceGroup" />
      <MemberSignature Language="F#" Value="static member GetResourceGroup : unit -&gt; Azure.Provisioning.Resources.ResourceGroup" Usage="Azure.Provisioning.Expressions.BicepFunction.GetResourceGroup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Resources.ResourceGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an object that represents the current resource group.  This
            represents the <c>resourceGroup</c> Bicep function.
            </summary>
        <returns>Properties of the current resource group.</returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-scope#resourcegroup">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscription">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.Resources.Subscription GetSubscription ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.Resources.Subscription GetSubscription() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.GetSubscription" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSubscription () As Subscription" />
      <MemberSignature Language="F#" Value="static member GetSubscription : unit -&gt; Azure.Provisioning.Resources.Subscription" Usage="Azure.Provisioning.Expressions.BicepFunction.GetSubscription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Resources.Subscription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns details about the subscription for the current deployment.  This
            represents the <c>subscription</c> Bicep function.
            </summary>
        <returns>
            Returns details about the subscription for the current deployment.
            </returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-scope#subscription">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionResourceId">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;Azure.Core.ResourceIdentifier&gt; GetSubscriptionResourceId (params Azure.Provisioning.BicepValue&lt;string&gt;[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;class Azure.Core.ResourceIdentifier&gt; GetSubscriptionResourceId(class Azure.Provisioning.BicepValue`1&lt;string&gt;[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.GetSubscriptionResourceId(Azure.Provisioning.BicepValue{System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSubscriptionResourceId (ParamArray values As BicepValue(Of String)()) As BicepValue(Of ResourceIdentifier)" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionResourceId : Azure.Provisioning.BicepValue&lt;string&gt;[] -&gt; Azure.Provisioning.BicepValue&lt;Azure.Core.ResourceIdentifier&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.GetSubscriptionResourceId values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;Azure.Core.ResourceIdentifier&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Azure.Provisioning.BicepValue&lt;System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">
            Optional subscription id, resource types, and resource names used to
            construct the resource ID.  At least two values are required.
            </param>
        <summary>
            Returns the unique identifier for a resource deployed at the
            subscription level.  This represents the <c>subscriptionResourceId</c>
            Bicep function.
            </summary>
        <returns>
            The unique identifier for a resource deployed at the subscription level.
            </returns>
        <remarks>
          <para>
            The identifier is returned in the following format:
            <c>/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</c></para>
          <para>
            You use this function to get the resource ID for resources that are
            deployed to the subscription rather than a resource group.  The
            returned ID differs from the value returned by the resourceId function
            by not including a resource group value.
            </para>
          <para>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-resource#subscriptionresourceid">
            Bicep Functions Reference</see> for more.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenant">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.Resources.Tenant GetTenant ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.Resources.Tenant GetTenant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.GetTenant" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTenant () As Tenant" />
      <MemberSignature Language="F#" Value="static member GetTenant : unit -&gt; Azure.Provisioning.Resources.Tenant" Usage="Azure.Provisioning.Expressions.BicepFunction.GetTenant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Resources.Tenant</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the tenant of the user.  This represents the <c>tenant</c>
            Bicep function.
            </summary>
        <returns>Properties of the current tenant.</returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-scope#tenant">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueString">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; GetUniqueString (params Azure.Provisioning.BicepValue&lt;string&gt;[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; GetUniqueString(class Azure.Provisioning.BicepValue`1&lt;string&gt;[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.GetUniqueString(Azure.Provisioning.BicepValue{System.String}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueString (ParamArray values As BicepValue(Of String)()) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member GetUniqueString : Azure.Provisioning.BicepValue&lt;string&gt;[] -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.GetUniqueString values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Azure.Provisioning.BicepValue&lt;System.String&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">
            The value used in the hash function to create a unique string.  At
            least one value is required.
            </param>
        <summary>
            Creates a deterministic hash string based on the <paramref name="values" />
            provided as parameters.  This represents the <c>uniqueString</c> Bicep
            function.
            </summary>
        <returns>A string containing 13 characters.</returns>
        <remarks>
          <para>
            This function is helpful when you need to create a unique name for a
            resource.  You provide parameter values that limit the scope of
            uniqueness for the result.  You can specify whether the name is unique
            down to subscription, resource group, or deployment.
            </para>
          <para>
            The returned value isn't a random string, but rather the result of a
            hash function.  The returned value is 13 characters long.  It isn't
            globally unique.  You may want to combine the value with a prefix from
            your naming convention to create a name that is meaningful.
            </para>
          <para>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-string#uniquestring">
            Bicep Functions Reference</see> for more.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interpolate">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; Interpolate (Azure.Provisioning.Expressions.BicepInterpolatedStringHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; Interpolate(valuetype Azure.Provisioning.Expressions.BicepInterpolatedStringHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.Interpolate(Azure.Provisioning.Expressions.BicepInterpolatedStringHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Interpolate (handler As BicepInterpolatedStringHandler) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member Interpolate : Azure.Provisioning.Expressions.BicepInterpolatedStringHandler -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.Interpolate handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Azure.Provisioning.Expressions.BicepInterpolatedStringHandler" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="handler">A bicep interpolated string handler.</param>
        <summary>
            Convert a formattable string with literal text, C# expressions, and
            Bicep expressions into an interpolated Bicep string.
            </summary>
        <returns>An interpolated string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interpolate">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; Interpolate (FormattableString text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; Interpolate(class System.FormattableString text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.Interpolate(System.FormattableString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Interpolate (text As FormattableString) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member Interpolate : FormattableString -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.Interpolate text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.FormattableString" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="text">The formattable string.</param>
        <summary>
            Convert a formattable string with literal text, C# expressions, and
            Bicep expressions into an interpolated Bicep string.
            </summary>
        <returns>An interpolated string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseJson">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;object&gt; ParseJson (Azure.Provisioning.BicepValue&lt;object&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;object&gt; ParseJson(class Azure.Provisioning.BicepValue`1&lt;object&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.ParseJson(Azure.Provisioning.BicepValue{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseJson (value As BicepValue(Of Object)) As BicepValue(Of Object)" />
      <MemberSignature Language="F#" Value="static member ParseJson : Azure.Provisioning.BicepValue&lt;obj&gt; -&gt; Azure.Provisioning.BicepValue&lt;obj&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.ParseJson value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Provisioning.BicepValue&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
            The value to convert to JSON. The string must be a properly formatted
            JSON string.
            </param>
        <summary>
            Converts a valid JSON string into a JSON data type.  This represents
            the <c>json</c> Bicep function.
            </summary>
        <returns>
            The JSON data type from the specified string, or an empty value when
            null is specified.
            </returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-object#json">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; Take (Azure.Provisioning.BicepValue&lt;string&gt; text, Azure.Provisioning.BicepValue&lt;int&gt; size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; Take(class Azure.Provisioning.BicepValue`1&lt;string&gt; text, class Azure.Provisioning.BicepValue`1&lt;int32&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.Take(Azure.Provisioning.BicepValue{System.String},Azure.Provisioning.BicepValue{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Take (text As BicepValue(Of String), size As BicepValue(Of Integer)) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member Take : Azure.Provisioning.BicepValue&lt;string&gt; * Azure.Provisioning.BicepValue&lt;int&gt; -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.Take (text, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Azure.Provisioning.BicepValue&lt;System.String&gt;" />
        <Parameter Name="size" Type="Azure.Provisioning.BicepValue&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="text">The string to take the elements from.</param>
        <param name="size">
            The number of characters to take.  If this value is 0 or less, an empty
            string is returned.  If it's larger than the length of the given
            string, all the characters in the string are returned.
            </param>
        <summary>
            Returns a string with the specified number of characters from the start
            of the string.  This represents the <c>take</c> Bicep function.
            </summary>
        <returns>A (possibly) shortened string.</returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-string#take">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; ToLower (Azure.Provisioning.BicepValue&lt;object&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; ToLower(class Azure.Provisioning.BicepValue`1&lt;object&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.ToLower(Azure.Provisioning.BicepValue{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (value As BicepValue(Of Object)) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member ToLower : Azure.Provisioning.BicepValue&lt;obj&gt; -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.ToLower value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Provisioning.BicepValue&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert to lower case.</param>
        <summary>
            Converts the specified string to lower case.  This represents the
            <c>toLower</c> Bicep function.
            </summary>
        <returns>The string converted to lower case.</returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-string#tolower">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static Azure.Provisioning.BicepValue&lt;string&gt; ToUpper (Azure.Provisioning.BicepValue&lt;object&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Provisioning.BicepValue`1&lt;string&gt; ToUpper(class Azure.Provisioning.BicepValue`1&lt;object&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Expressions.BicepFunction.ToUpper(Azure.Provisioning.BicepValue{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (value As BicepValue(Of Object)) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="static member ToUpper : Azure.Provisioning.BicepValue&lt;obj&gt; -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="Azure.Provisioning.Expressions.BicepFunction.ToUpper value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Provisioning.BicepValue&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert to upper case.</param>
        <summary>
            Converts the specified string to upper case.  This represents the
            <c>toUpper</c> Bicep function.
            </summary>
        <returns>The string converted to upper case.</returns>
        <remarks>
            See the
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/bicep/bicep-functions-string#toupper">
            Bicep Functions Reference</see> for more.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
