<Type Name="BinaryBicepOperator" FullName="Azure.Provisioning.Expressions.BinaryBicepOperator">
  <TypeSignature Language="C#" Value="public enum BinaryBicepOperator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BinaryBicepOperator extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Expressions.BinaryBicepOperator" />
  <TypeSignature Language="VB.NET" Value="Public Enum BinaryBicepOperator" />
  <TypeSignature Language="F#" Value="type BinaryBicepOperator = " />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="Add" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Add = int32(11)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Add" />
      <MemberSignature Language="VB.NET" Value="Add" />
      <MemberSignature Language="F#" Value="Add = 11" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Add" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="And" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator And = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.And" />
      <MemberSignature Language="VB.NET" Value="And" />
      <MemberSignature Language="F#" Value="And = 0" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.And" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Coalesce">
      <MemberSignature Language="C#" Value="Coalesce" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Coalesce = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Coalesce" />
      <MemberSignature Language="VB.NET" Value="Coalesce" />
      <MemberSignature Language="F#" Value="Coalesce = 2" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Coalesce" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="Divide" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Divide = int32(14)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Divide" />
      <MemberSignature Language="VB.NET" Value="Divide" />
      <MemberSignature Language="F#" Value="Divide = 14" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Divide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="Equal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Equal = int32(3)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Equal" />
      <MemberSignature Language="VB.NET" Value="Equal" />
      <MemberSignature Language="F#" Value="Equal = 3" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Equal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="EqualIgnoreCase">
      <MemberSignature Language="C#" Value="EqualIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator EqualIgnoreCase = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.EqualIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="EqualIgnoreCase" />
      <MemberSignature Language="F#" Value="EqualIgnoreCase = 4" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.EqualIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Greater">
      <MemberSignature Language="C#" Value="Greater" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Greater = int32(7)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Greater" />
      <MemberSignature Language="VB.NET" Value="Greater" />
      <MemberSignature Language="F#" Value="Greater = 7" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Greater" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterOrEqual">
      <MemberSignature Language="C#" Value="GreaterOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator GreaterOrEqual = int32(8)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.GreaterOrEqual" />
      <MemberSignature Language="VB.NET" Value="GreaterOrEqual" />
      <MemberSignature Language="F#" Value="GreaterOrEqual = 8" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.GreaterOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Less">
      <MemberSignature Language="C#" Value="Less" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Less = int32(9)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Less" />
      <MemberSignature Language="VB.NET" Value="Less" />
      <MemberSignature Language="F#" Value="Less = 9" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Less" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="LessOrEqual">
      <MemberSignature Language="C#" Value="LessOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator LessOrEqual = int32(10)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.LessOrEqual" />
      <MemberSignature Language="VB.NET" Value="LessOrEqual" />
      <MemberSignature Language="F#" Value="LessOrEqual = 10" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.LessOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="Modulo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Modulo = int32(15)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Modulo" />
      <MemberSignature Language="VB.NET" Value="Modulo" />
      <MemberSignature Language="F#" Value="Modulo = 15" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Modulo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="Multiply" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Multiply = int32(13)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Multiply" />
      <MemberSignature Language="VB.NET" Value="Multiply" />
      <MemberSignature Language="F#" Value="Multiply = 13" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Multiply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="NotEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator NotEqual = int32(5)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.NotEqual" />
      <MemberSignature Language="VB.NET" Value="NotEqual" />
      <MemberSignature Language="F#" Value="NotEqual = 5" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.NotEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotEqualIgnoreCase">
      <MemberSignature Language="C#" Value="NotEqualIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator NotEqualIgnoreCase = int32(6)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.NotEqualIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="NotEqualIgnoreCase" />
      <MemberSignature Language="F#" Value="NotEqualIgnoreCase = 6" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.NotEqualIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="Or" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Or = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Or" />
      <MemberSignature Language="VB.NET" Value="Or" />
      <MemberSignature Language="F#" Value="Or = 1" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Or" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="Subtract" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Provisioning.Expressions.BinaryBicepOperator Subtract = int32(12)" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.Expressions.BinaryBicepOperator.Subtract" />
      <MemberSignature Language="VB.NET" Value="Subtract" />
      <MemberSignature Language="F#" Value="Subtract = 12" Usage="Azure.Provisioning.Expressions.BinaryBicepOperator.Subtract" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Expressions.BinaryBicepOperator</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
