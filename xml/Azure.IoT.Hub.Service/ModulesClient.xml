<Type Name="ModulesClient" FullName="Azure.IoT.Hub.Service.ModulesClient">
  <TypeSignature Language="C#" Value="public class ModulesClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModulesClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.IoT.Hub.Service.ModulesClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ModulesClient" />
  <TypeSignature Language="F#" Value="type ModulesClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Modules client to interact with device modules and module twins including CRUD operations and method invocations.
            See <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-portal-csharp-module-twin-getstarted"> Getting started with module identity</see>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModulesClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of ModulesClient.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentities (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentities(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.CreateIdentities(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.ModuleIdentity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentities (moduleIdentities As IEnumerable(Of ModuleIdentity), Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.CreateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="modulesClient.CreateIdentities (moduleIdentities, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentities">The module identities to create.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple modules. A maximum of 100 creations can be done per call, and each module identity must be unique.
            All devices that these modules will belong to must already exist. Multiple modules can be created at a time on a single device.
            For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.CreateIdentitiesAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.ModuleIdentity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentitiesAsync (moduleIdentities As IEnumerable(Of ModuleIdentity), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.CreateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="modulesClient.CreateIdentitiesAsync (moduleIdentities, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentities">The module identities to create.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple modules. A maximum of 100 creations can be done per call, and each module identity must be unique.
            All devices that these modules will belong to must already exist. Multiple modules can be created at a time on a single device.
            For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentitiesWithTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentitiesWithTwin (System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt; modules, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentitiesWithTwin(class System.Collections.Generic.IDictionary`2&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity, class Azure.IoT.Hub.Service.Models.TwinData&gt; modules, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.CreateIdentitiesWithTwin(System.Collections.Generic.IDictionary{Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.Models.TwinData},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentitiesWithTwin (modules As IDictionary(Of ModuleIdentity, TwinData), Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentitiesWithTwin : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.CreateIdentitiesWithTwin : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="modulesClient.CreateIdentitiesWithTwin (modules, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modules" Type="System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modules">The pairs of modules and their twins that will be created. For fields such as deviceId
            where device and twin have a definition, the device value will override the twin value.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple modules with an initial twin. A maximum of 100 creations can be done per call,
            and each creation must have a unique module identity. Multiple modules may be created on a single device.
            All devices that these new modules will belong to must already exist.
            For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentitiesWithTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesWithTwinAsync (System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt; modules, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesWithTwinAsync(class System.Collections.Generic.IDictionary`2&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity, class Azure.IoT.Hub.Service.Models.TwinData&gt; modules, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.CreateIdentitiesWithTwinAsync(System.Collections.Generic.IDictionary{Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.Models.TwinData},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentitiesWithTwinAsync (modules As IDictionary(Of ModuleIdentity, TwinData), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentitiesWithTwinAsync : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.CreateIdentitiesWithTwinAsync : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="modulesClient.CreateIdentitiesWithTwinAsync (modules, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modules" Type="System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modules">The pairs of modules and their twins that will be created. For fields such as deviceId
            where device and twin have a definition, the device value will override the twin value.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple modules with an initial twin. A maximum of 100 creations can be done per call,
            and each creation must have a unique module identity. Multiple modules may be created on a single device.
            All devices that these new modules will belong to must already exist.
            For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIdentity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; CreateOrUpdateIdentity (Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; CreateOrUpdateIdentity(class Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.CreateOrUpdateIdentity(Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIdentity (moduleIdentity As ModuleIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ModuleIdentity)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIdentity : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&#xA;override this.CreateOrUpdateIdentity : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" Usage="modulesClient.CreateOrUpdateIdentity (moduleIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentity" Type="Azure.IoT.Hub.Service.Models.ModuleIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentity">The module identity to create or update.</param>
        <param name="precondition">The condition on which to perform this operation.
            In case of create, the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch" />.
            In case of update, if no ETag is present on the device, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />.
            </param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create a module identity.
            </summary>
        <returns>The created module identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIdentityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt; CreateOrUpdateIdentityAsync (Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt; CreateOrUpdateIdentityAsync(class Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.CreateOrUpdateIdentityAsync(Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIdentityAsync (moduleIdentity As ModuleIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ModuleIdentity))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIdentityAsync : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&#xA;override this.CreateOrUpdateIdentityAsync : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;" Usage="modulesClient.CreateOrUpdateIdentityAsync (moduleIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentity" Type="Azure.IoT.Hub.Service.Models.ModuleIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentity">The module identity to create or update.</param>
        <param name="precondition">The condition on which to perform this operation.
            In case of create, the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch" />.
            In case of update, if no ETag is present on the device, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />.
            </param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create a module identity.
            </summary>
        <returns>The created module identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; DeleteIdentities (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; DeleteIdentities(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.DeleteIdentities(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.ModuleIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentities (moduleIdentities As IEnumerable(Of ModuleIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentities : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.DeleteIdentities : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="modulesClient.DeleteIdentities (moduleIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentities">The devices to delete.</param>
        <param name="precondition">The condition on which to delete each device identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete multiple modules. A maximum of 100 deletions can be done per call. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk deletion and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; DeleteIdentitiesAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; DeleteIdentitiesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.DeleteIdentitiesAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.ModuleIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentitiesAsync (moduleIdentities As IEnumerable(Of ModuleIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.DeleteIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="modulesClient.DeleteIdentitiesAsync (moduleIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentities">The modules to delete.</param>
        <param name="precondition">The condition on which to delete each device identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete multiple modules. A maximum of 100 deletions can be done per call. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk deletion and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIdentity (Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIdentity(class Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.DeleteIdentity(Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentity (moduleIdentity As ModuleIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentity : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIdentity : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response" Usage="modulesClient.DeleteIdentity (moduleIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentity" Type="Azure.IoT.Hub.Service.Models.ModuleIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentity">The module identity to delete. If no ETag is present on the module identity, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />.</param>
        <param name="precondition">The condition on which to delete the module identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete a single module identity.
            </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIdentityAsync (Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIdentityAsync(class Azure.IoT.Hub.Service.Models.ModuleIdentity moduleIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.DeleteIdentityAsync(Azure.IoT.Hub.Service.Models.ModuleIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentityAsync (moduleIdentity As ModuleIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentityAsync : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIdentityAsync : Azure.IoT.Hub.Service.Models.ModuleIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="modulesClient.DeleteIdentityAsync (moduleIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentity" Type="Azure.IoT.Hub.Service.Models.ModuleIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentity">The module identity to delete. If no ETag is present on the module identity, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />.</param>
        <param name="precondition">The condition on which to delete the module identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete a single module identity.
            </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt; GetIdentities (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt; GetIdentities(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetIdentities(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentities (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of ModuleIdentity))" />
      <MemberSignature Language="F#" Value="abstract member GetIdentities : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&#xA;override this.GetIdentities : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;" Usage="modulesClient.GetIdentities (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a set of module identities for a specific device.
            </summary>
        <returns>A list of modules identities within a device and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&gt; GetIdentitiesAsync (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&gt; GetIdentitiesAsync(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetIdentitiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentitiesAsync (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of ModuleIdentity)))" />
      <MemberSignature Language="F#" Value="abstract member GetIdentitiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&gt;&#xA;override this.GetIdentitiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&gt;" Usage="modulesClient.GetIdentitiesAsync (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a set of module identities for a specific device.
            </summary>
        <returns>A list of modules identities within a device and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; GetIdentity (string deviceId, string moduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; GetIdentity(string deviceId, string moduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetIdentity(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentity (deviceId As String, moduleId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ModuleIdentity)" />
      <MemberSignature Language="F#" Value="abstract member GetIdentity : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&#xA;override this.GetIdentity : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" Usage="modulesClient.GetIdentity (deviceId, moduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity.</param>
        <param name="moduleId">The unique identifier of the module to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a single module identity.
            </summary>
        <returns>The retrieved module identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt; GetIdentityAsync (string deviceId, string moduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt; GetIdentityAsync(string deviceId, string moduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetIdentityAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityAsync (deviceId As String, moduleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ModuleIdentity))" />
      <MemberSignature Language="F#" Value="abstract member GetIdentityAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;&#xA;override this.GetIdentityAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;" Usage="modulesClient.GetIdentityAsync (deviceId, moduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity.</param>
        <param name="moduleId">The unique identifier of the module to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a single module identity.
            </summary>
        <returns>The retrieved module identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwin (string deviceId, string moduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwin(string deviceId, string moduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetTwin(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwin (deviceId As String, moduleId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member GetTwin : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.GetTwin : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="modulesClient.GetTwin (deviceId, moduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity.</param>
        <param name="moduleId">The unique identifier of the module identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a module's twin.
            </summary>
        <returns>The module's twin, including reported properties and desired properties and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; GetTwinAsync (string deviceId, string moduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; GetTwinAsync(string deviceId, string moduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetTwinAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwinAsync (deviceId As String, moduleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TwinData))" />
      <MemberSignature Language="F#" Value="abstract member GetTwinAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;&#xA;override this.GetTwinAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;" Usage="modulesClient.GetTwinAsync (deviceId, moduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity.</param>
        <param name="moduleId">The unique identifier of the module identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a module's twin.
            </summary>
        <returns>The module's twin, including reported properties and desired properties and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwins">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwins (int? pageSize = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwins(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetTwins(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwins (Optional pageSize As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member GetTwins : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.GetTwins : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="modulesClient.GetTwins (pageSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize">The size of each page to be retrieved from the service. Service may override this size.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            List a set of module twins.
            </summary>
        <returns>A pageable set of module twins <see cref="T:Azure.Pageable`1" />.</returns>
        <remarks>
            This service request returns the full set of module twins. To get a subset of module twins, you can use the <see cref="M:Azure.IoT.Hub.Service.QueryClient.Query(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">query API</see> that this method uses but with additional qualifiers for selection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwinsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwinsAsync (int? pageSize = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwinsAsync(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.GetTwinsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwinsAsync (Optional pageSize As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member GetTwinsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.GetTwinsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="modulesClient.GetTwinsAsync (pageSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize">The size of each page to be retrieved from the service. Service may override this size.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            List a set of module twins.
            </summary>
        <returns>A pageable set of module twins <see cref="T:Azure.AsyncPageable`1" />.</returns>
        <remarks>
            This service request returns the full set of module twins. To get a subset of module twins, you can use the <see cref="M:Azure.IoT.Hub.Service.QueryClient.QueryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">query API</see> that this method uses but with additional qualifiers for selection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethod">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt; InvokeMethod (string deviceId, string moduleId, Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt; InvokeMethod(string deviceId, string moduleId, class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.InvokeMethod(System.String,System.String,Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeMethod (deviceId As String, moduleId As String, directMethodRequest As CloudToDeviceMethodRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudToDeviceMethodResponse)" />
      <MemberSignature Language="F#" Value="abstract member InvokeMethod : string * string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&#xA;override this.InvokeMethod : string * string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;" Usage="modulesClient.InvokeMethod (deviceId, moduleId, directMethodRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="directMethodRequest" Type="Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device.</param>
        <param name="moduleId">The unique identifier of the module identity to invoke the method on.</param>
        <param name="directMethodRequest">The details of the method to invoke.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Invoke a method on a module.
            </summary>
        <returns>The result of the method invocation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethodAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt; InvokeMethodAsync (string deviceId, string moduleId, Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt; InvokeMethodAsync(string deviceId, string moduleId, class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.InvokeMethodAsync(System.String,System.String,Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeMethodAsync (deviceId As String, moduleId As String, directMethodRequest As CloudToDeviceMethodRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudToDeviceMethodResponse))" />
      <MemberSignature Language="F#" Value="abstract member InvokeMethodAsync : string * string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt;&#xA;override this.InvokeMethodAsync : string * string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt;" Usage="modulesClient.InvokeMethodAsync (deviceId, moduleId, directMethodRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="directMethodRequest" Type="Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device.</param>
        <param name="moduleId">The unique identifier of the module identity to invoke the method on.</param>
        <param name="directMethodRequest">The details of the method to invoke.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Invoke a method on a module.
            </summary>
        <returns>The result of the method invocation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateIdentities (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateIdentities(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.UpdateIdentities(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.ModuleIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIdentities (moduleIdentities As IEnumerable(Of ModuleIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.UpdateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="modulesClient.UpdateIdentities (moduleIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentities">The modules to update.</param>
        <param name="precondition">The condition on which to update each module identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple modules. A maximum of 100 updates can be done per call, and each operation must be done on a different module identity. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>..
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateIdentitiesAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateIdentitiesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; moduleIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.UpdateIdentitiesAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.ModuleIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIdentitiesAsync (moduleIdentities As IEnumerable(Of ModuleIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.UpdateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="modulesClient.UpdateIdentitiesAsync (moduleIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.ModuleIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleIdentities">The modules to update.</param>
        <param name="precondition">The condition on which to update each module identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple modules. A maximum of 100 updates can be done per call, and each operation must be done on a different module identity. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>..
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; UpdateTwin (Azure.IoT.Hub.Service.Models.TwinData twinUpdate, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; UpdateTwin(class Azure.IoT.Hub.Service.Models.TwinData twinUpdate, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.UpdateTwin(Azure.IoT.Hub.Service.Models.TwinData,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwin (twinUpdate As TwinData, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwin : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.UpdateTwin : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="modulesClient.UpdateTwin (twinUpdate, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdate" Type="Azure.IoT.Hub.Service.Models.TwinData" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdate">The properties to update. Any existing properties not referenced by this patch will be unaffected by this patch.</param>
        <param name="precondition">The condition for which this operation will execute.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update a module's twin.
            </summary>
        <returns>The new representation of the module's twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; UpdateTwinAsync (Azure.IoT.Hub.Service.Models.TwinData twinUpdate, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; UpdateTwinAsync(class Azure.IoT.Hub.Service.Models.TwinData twinUpdate, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.UpdateTwinAsync(Azure.IoT.Hub.Service.Models.TwinData,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwinAsync (twinUpdate As TwinData, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TwinData))" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwinAsync : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;&#xA;override this.UpdateTwinAsync : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;" Usage="modulesClient.UpdateTwinAsync (twinUpdate, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdate" Type="Azure.IoT.Hub.Service.Models.TwinData" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdate">The properties to update. Any existing properties not referenced by this patch will be unaffected by this patch.</param>
        <param name="precondition">The condition for which this operation will execute.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update a module's twin.
            </summary>
        <returns>The new representation of the module's twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwins">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateTwins (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateTwins(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.UpdateTwins(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.TwinData},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwins (twinUpdates As IEnumerable(Of TwinData), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwins : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.UpdateTwins : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="modulesClient.UpdateTwins (twinUpdates, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdates" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdates">The new twins to replace the twins on existing devices.</param>
        <param name="precondition">The condition on which to update each device twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple modules' twins. A maximum of 100 updates can be done per call, and each operation must be done on a different device twin. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwinsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateTwinsAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateTwinsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.ModulesClient.UpdateTwinsAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.TwinData},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwinsAsync (twinUpdates As IEnumerable(Of TwinData), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwinsAsync : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.UpdateTwinsAsync : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="modulesClient.UpdateTwinsAsync (twinUpdates, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdates" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdates">The new twins to replace the twins on existing devices.</param>
        <param name="precondition">The condition on which to update each device twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple modules' twins. A maximum of 100 updates can be done per call, and each operation must be done on a different module twin. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
