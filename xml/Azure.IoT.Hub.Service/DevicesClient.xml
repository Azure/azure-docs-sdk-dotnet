<Type Name="DevicesClient" FullName="Azure.IoT.Hub.Service.DevicesClient">
  <TypeSignature Language="C#" Value="public class DevicesClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DevicesClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.IoT.Hub.Service.DevicesClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DevicesClient" />
  <TypeSignature Language="F#" Value="type DevicesClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Devices client to interact with devices and device twins including CRUD operations and method invocations.
            See <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-csharp-csharp-twin-getstarted"> Getting started with device identity</see>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DevicesClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of DevicesClient.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentities (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentities(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.CreateIdentities(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.DeviceIdentity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentities (deviceIdentities As IEnumerable(Of DeviceIdentity), Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.CreateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="devicesClient.CreateIdentities (deviceIdentities, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentities">The device identities to create.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple devices. A maximum of 100 creations can be done per call, and each device identity must be unique. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.CreateIdentitiesAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.DeviceIdentity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentitiesAsync (deviceIdentities As IEnumerable(Of DeviceIdentity), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.CreateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="devicesClient.CreateIdentitiesAsync (deviceIdentities, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentities">The device identities to create.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple devices. A maximum of 100 creations can be done per call, and each device identity must be unique. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentitiesWithTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentitiesWithTwin (System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt; devices, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; CreateIdentitiesWithTwin(class System.Collections.Generic.IDictionary`2&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity, class Azure.IoT.Hub.Service.Models.TwinData&gt; devices, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.CreateIdentitiesWithTwin(System.Collections.Generic.IDictionary{Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.Models.TwinData},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentitiesWithTwin (devices As IDictionary(Of DeviceIdentity, TwinData), Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentitiesWithTwin : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.CreateIdentitiesWithTwin : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="devicesClient.CreateIdentitiesWithTwin (devices, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devices" Type="System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devices">The pairs of devices and their twins that will be created. For fields such as deviceId
            where device and twin have a definition, the device value will override the twin value.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple devices with an initial twin. A maximum of 100 creations can be done per call, and each creation must have a unique device identity. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentitiesWithTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesWithTwinAsync (System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt; devices, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; CreateIdentitiesWithTwinAsync(class System.Collections.Generic.IDictionary`2&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity, class Azure.IoT.Hub.Service.Models.TwinData&gt; devices, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.CreateIdentitiesWithTwinAsync(System.Collections.Generic.IDictionary{Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.Models.TwinData},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIdentitiesWithTwinAsync (devices As IDictionary(Of DeviceIdentity, TwinData), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreateIdentitiesWithTwinAsync : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.CreateIdentitiesWithTwinAsync : System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity, Azure.IoT.Hub.Service.Models.TwinData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="devicesClient.CreateIdentitiesWithTwinAsync (devices, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devices" Type="System.Collections.Generic.IDictionary&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devices">The pairs of devices and their twins that will be created. For fields such as deviceId
            where device and twin have a definition, the device value will override the twin value.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create multiple devices with an initial twin. A maximum of 100 creations can be done per call, and each creation must have a unique device identity. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIdentity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; CreateOrUpdateIdentity (Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; CreateOrUpdateIdentity(class Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.CreateOrUpdateIdentity(Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIdentity (deviceIdentity As DeviceIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeviceIdentity)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIdentity : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&#xA;override this.CreateOrUpdateIdentity : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" Usage="devicesClient.CreateOrUpdateIdentity (deviceIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentity" Type="Azure.IoT.Hub.Service.Models.DeviceIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentity">the device identity to create or update.</param>
        <param name="precondition">The condition on which to perform this operation.
            In case of create, the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch" />.
            In case of update, if no ETag is present on the device, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />.
            </param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create or update a device identity.
            </summary>
        <returns>The created device identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIdentityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt; CreateOrUpdateIdentityAsync (Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt; CreateOrUpdateIdentityAsync(class Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.CreateOrUpdateIdentityAsync(Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIdentityAsync (deviceIdentity As DeviceIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeviceIdentity))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIdentityAsync : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt;&#xA;override this.CreateOrUpdateIdentityAsync : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt;" Usage="devicesClient.CreateOrUpdateIdentityAsync (deviceIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentity" Type="Azure.IoT.Hub.Service.Models.DeviceIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentity">the device identity to create or update.</param>
        <param name="precondition">The condition on which to perform this operation.
             In case of create, the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch" />.
             In case of update, if no ETag is present on the device, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />.
             </param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Create or update a device identity.
             </summary>
        <returns>The created device identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
        <code snippet="Snippet:IotHubCreateDeviceIdentity" language="csharp">
             Response&lt;DeviceIdentity&gt; response = await IoTHubServiceClient.Devices.CreateOrUpdateIdentityAsync(deviceIdentity);
            
             SampleLogger.PrintSuccess($"Successfully create a new device identity with Id: '{response.Value.DeviceId}', ETag: '{response.Value.Etag}'");
             </code>
        <code snippet="Snippet:IotHubUpdateDeviceIdentity" language="csharp">
             Response&lt;DeviceIdentity&gt; getResponse = await IoTHubServiceClient.Devices.GetIdentityAsync(deviceId);
            
             DeviceIdentity deviceIdentity = getResponse.Value;
             Console.WriteLine($"Current device identity: DeviceId: '{deviceIdentity.DeviceId}', Status: '{deviceIdentity.Status}', ETag: '{deviceIdentity.Etag}'");
            
             Console.WriteLine($"Updating device identity with Id: '{deviceIdentity.DeviceId}'. Disabling device so it cannot connect to IoT Hub.");
             deviceIdentity.Status = DeviceStatus.Disabled;
            
             Response&lt;DeviceIdentity&gt; response = await IoTHubServiceClient.Devices.CreateOrUpdateIdentityAsync(deviceIdentity);
            
             DeviceIdentity updatedDevice = response.Value;
            
             SampleLogger.PrintSuccess($"Successfully updated device identity: DeviceId: '{updatedDevice.DeviceId}', DeviceId: '{updatedDevice.DeviceId}', Status: '{updatedDevice.Status}', ETag: '{updatedDevice.Etag}'");
             </code>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; DeleteIdentities (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; DeleteIdentities(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.DeleteIdentities(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.DeviceIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentities (deviceIdentities As IEnumerable(Of DeviceIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentities : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.DeleteIdentities : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="devicesClient.DeleteIdentities (deviceIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentities">The devices to delete.</param>
        <param name="precondition">The condition on which to delete each device identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete multiple devices. A maximum of 100 deletions can be done per call. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk deletion and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; DeleteIdentitiesAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; DeleteIdentitiesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.DeleteIdentitiesAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.DeviceIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentitiesAsync (deviceIdentities As IEnumerable(Of DeviceIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.DeleteIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="devicesClient.DeleteIdentitiesAsync (deviceIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentities">The devices to delete.</param>
        <param name="precondition">The condition on which to delete each device identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete multiple devices. A maximum of 100 deletions can be done per call. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk deletion and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIdentity (Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIdentity(class Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.DeleteIdentity(Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentity (deviceIdentity As DeviceIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentity : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIdentity : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response" Usage="devicesClient.DeleteIdentity (deviceIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentity" Type="Azure.IoT.Hub.Service.Models.DeviceIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentity">the device identity to delete. If no ETag is present on the device, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />.</param>
        <param name="precondition">The condition on which to delete the device.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete a single device identity.
            </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIdentityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIdentityAsync (Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIdentityAsync(class Azure.IoT.Hub.Service.Models.DeviceIdentity deviceIdentity, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.DeleteIdentityAsync(Azure.IoT.Hub.Service.Models.DeviceIdentity,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIdentityAsync (deviceIdentity As DeviceIdentity, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIdentityAsync : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIdentityAsync : Azure.IoT.Hub.Service.Models.DeviceIdentity * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="devicesClient.DeleteIdentityAsync (deviceIdentity, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentity" Type="Azure.IoT.Hub.Service.Models.DeviceIdentity" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentity">the device identity to delete. If no ETag is present on the device, then the condition must be equal to <see cref="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />."/&gt;.</param>
        <param name="precondition">The condition on which to delete the device.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Delete a single device identity.
             </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
        <code snippet="Snippet:IotHubDeleteDeviceIdentity" language="csharp">
             Response response = await IoTHubServiceClient.Devices.DeleteIdentityAsync(deviceIdentity);
            
             SampleLogger.PrintSuccess($"Successfully deleted device identity with Id: '{deviceIdentity.DeviceId}'");
             </code>
      </Docs>
    </Member>
    <Member MemberName="GetIdentity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; GetIdentity (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; GetIdentity(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.GetIdentity(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentity (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeviceIdentity)" />
      <MemberSignature Language="F#" Value="abstract member GetIdentity : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&#xA;override this.GetIdentity : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" Usage="devicesClient.GetIdentity (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a single device identity.
            </summary>
        <returns>The retrieved device identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt; GetIdentityAsync (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt; GetIdentityAsync(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.GetIdentityAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityAsync (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeviceIdentity))" />
      <MemberSignature Language="F#" Value="abstract member GetIdentityAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt;&#xA;override this.GetIdentityAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt;" Usage="devicesClient.GetIdentityAsync (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Get a single device identity.
             </summary>
        <returns>The retrieved device identity and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
        <code snippet="Snippet:IotHubGetDeviceIdentity" language="csharp">
             Response&lt;DeviceIdentity&gt; response = await IoTHubServiceClient.Devices.GetIdentityAsync(deviceId);
            
             DeviceIdentity deviceIdentity = response.Value;
            
             SampleLogger.PrintSuccess($"\t- Device Id: '{deviceIdentity.DeviceId}', ETag: '{deviceIdentity.Etag}'");
             </code>
      </Docs>
    </Member>
    <Member MemberName="GetTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwin (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwin(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.GetTwin(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwin (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member GetTwin : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.GetTwin : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="devicesClient.GetTwin (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity to get the twin of.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a device's twin.
            </summary>
        <returns>The device's twin, including reported properties and desired properties.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; GetTwinAsync (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; GetTwinAsync(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.GetTwinAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwinAsync (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TwinData))" />
      <MemberSignature Language="F#" Value="abstract member GetTwinAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;&#xA;override this.GetTwinAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;" Usage="devicesClient.GetTwinAsync (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity to get the twin of.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Get a device's twin.
             </summary>
        <returns>The device's twin, including reported properties and desired properties and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
        <code snippet="Snippet:IotHubGetDeviceTwin" language="csharp">
             Response&lt;TwinData&gt; response = await IoTHubServiceClient.Devices.GetTwinAsync(deviceId);
            
             SampleLogger.PrintSuccess($"\t- Device Twin: DeviceId: '{response.Value.DeviceId}', Status: '{response.Value.Status}', ETag: '{response.Value.Etag}'");
             </code>
      </Docs>
    </Member>
    <Member MemberName="GetTwins">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwins (int? pageSize = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwins(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.GetTwins(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwins (Optional pageSize As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member GetTwins : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.GetTwins : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="devicesClient.GetTwins (pageSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize">The size of each page to be retrieved from the service. Service may override this size.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            List a set of device twins.
            </summary>
        <returns>A pageable set of device twins <see cref="T:Azure.Pageable`1" />.</returns>
        <remarks>
            This service request returns the full set of device twins. To get a subset of device twins, you can use the <see cref="M:Azure.IoT.Hub.Service.QueryClient.Query(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">query API</see> that this method uses but with additional qualifiers for selection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwinsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwinsAsync (int? pageSize = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; GetTwinsAsync(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.GetTwinsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTwinsAsync (Optional pageSize As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member GetTwinsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.GetTwinsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="devicesClient.GetTwinsAsync (pageSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize">The size of each page to be retrieved from the service. Service may override this size.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            List a set of device twins.
            </summary>
        <returns>A pageable set of device twins <see cref="T:Azure.AsyncPageable`1" />.</returns>
        <remarks>
            This service request returns the full set of device twins. To get a subset of device twins, you can use the <see cref="M:Azure.IoT.Hub.Service.QueryClient.QueryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">query API</see> that this method uses but with additional qualifiers for selection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethod">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt; InvokeMethod (string deviceId, Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt; InvokeMethod(string deviceId, class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.InvokeMethod(System.String,Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeMethod (deviceId As String, directMethodRequest As CloudToDeviceMethodRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudToDeviceMethodResponse)" />
      <MemberSignature Language="F#" Value="abstract member InvokeMethod : string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&#xA;override this.InvokeMethod : string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;" Usage="devicesClient.InvokeMethod (deviceId, directMethodRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="directMethodRequest" Type="Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity to invoke the method on.</param>
        <param name="directMethodRequest">The details of the method to invoke.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Invoke a method on a device.
            </summary>
        <returns>The result of the method invocation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethodAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt; InvokeMethodAsync (string deviceId, Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt; InvokeMethodAsync(string deviceId, class Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest directMethodRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.InvokeMethodAsync(System.String,Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeMethodAsync (deviceId As String, directMethodRequest As CloudToDeviceMethodRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudToDeviceMethodResponse))" />
      <MemberSignature Language="F#" Value="abstract member InvokeMethodAsync : string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt;&#xA;override this.InvokeMethodAsync : string * Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt;" Usage="devicesClient.InvokeMethodAsync (deviceId, directMethodRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.CloudToDeviceMethodResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="directMethodRequest" Type="Azure.IoT.Hub.Service.Models.CloudToDeviceMethodRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity to invoke the method on.</param>
        <param name="directMethodRequest">The details of the method to invoke.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Invoke a method on a device.
            </summary>
        <returns>The result of the method invocation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateIdentities (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateIdentities(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.UpdateIdentities(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.DeviceIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIdentities (deviceIdentities As IEnumerable(Of DeviceIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.UpdateIdentities : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="devicesClient.UpdateIdentities (deviceIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentities">The devices to update.</param>
        <param name="precondition">The condition on which to update each device identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple devices. A maximum of 100 updates can be done per call, and each operation must be done on a different identity. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateIdentitiesAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateIdentitiesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; deviceIdentities, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.UpdateIdentitiesAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.DeviceIdentity},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIdentitiesAsync (deviceIdentities As IEnumerable(Of DeviceIdentity), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.UpdateIdentitiesAsync : seq&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="devicesClient.UpdateIdentitiesAsync (deviceIdentities, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.DeviceIdentity&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceIdentities">The devices to update.</param>
        <param name="precondition">The condition on which to update each device identity.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple devices. A maximum of 100 updates can be done per call, and each operation must be done on a different identity. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>..
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; UpdateTwin (Azure.IoT.Hub.Service.Models.TwinData twinUpdate, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; UpdateTwin(class Azure.IoT.Hub.Service.Models.TwinData twinUpdate, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.UpdateTwin(Azure.IoT.Hub.Service.Models.TwinData,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwin (twinUpdate As TwinData, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TwinData)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwin : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&#xA;override this.UpdateTwin : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" Usage="devicesClient.UpdateTwin (twinUpdate, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdate" Type="Azure.IoT.Hub.Service.Models.TwinData" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdate">The properties to update. Any existing properties not referenced by this patch will be unaffected by this patch.</param>
        <param name="precondition">The condition for which this operation will execute.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update a device's twin.
            </summary>
        <returns>The new representation of the device twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; UpdateTwinAsync (Azure.IoT.Hub.Service.Models.TwinData twinUpdate, Azure.IoT.Hub.Service.IfMatchPrecondition precondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt;&gt; UpdateTwinAsync(class Azure.IoT.Hub.Service.Models.TwinData twinUpdate, valuetype Azure.IoT.Hub.Service.IfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.UpdateTwinAsync(Azure.IoT.Hub.Service.Models.TwinData,Azure.IoT.Hub.Service.IfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwinAsync (twinUpdate As TwinData, Optional precondition As IfMatchPrecondition = Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TwinData))" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwinAsync : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;&#xA;override this.UpdateTwinAsync : Azure.IoT.Hub.Service.Models.TwinData * Azure.IoT.Hub.Service.IfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;" Usage="devicesClient.UpdateTwinAsync (twinUpdate, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdate" Type="Azure.IoT.Hub.Service.Models.TwinData" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.IfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdate">The properties to update. Any existing properties not referenced by this patch will be unaffected by this patch.</param>
        <param name="precondition">The condition for which this operation will execute.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Update a device's twin.
             </summary>
        <returns>The new representation of the device twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
        <code snippet="Snippet:IotHubUpdateDeviceTwin" language="csharp">
             Response&lt;TwinData&gt; getResponse = await IoTHubServiceClient.Devices.GetTwinAsync(deviceId);
             TwinData deviceTwin = getResponse.Value;
            
             Console.WriteLine($"Updating device twin: DeviceId: '{deviceTwin.DeviceId}', ETag: '{deviceTwin.Etag}'");
             Console.WriteLine($"Setting a new desired property {userPropName} to: '{Environment.UserName}'");
            
             deviceTwin.Properties.Desired.Add(new KeyValuePair&lt;string, object&gt;(userPropName, Environment.UserName));
            
             Response&lt;TwinData&gt; response = await IoTHubServiceClient.Devices.UpdateTwinAsync(deviceTwin);
            
             TwinData updatedTwin = response.Value;
            
             var userPropValue = (string)updatedTwin.Properties.Desired
                 .Where(p =&gt; p.Key == userPropName)
                 .First()
                 .Value;
            
             SampleLogger.PrintSuccess($"Successfully updated device twin: DeviceId: '{updatedTwin.DeviceId}', desired property: ['{userPropName}': '{userPropValue}'], ETag: '{updatedTwin.Etag}',");
             </code>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwins">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateTwins (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt; UpdateTwins(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.UpdateTwins(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.TwinData},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwins (twinUpdates As IEnumerable(Of TwinData), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BulkRegistryOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwins : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&#xA;override this.UpdateTwins : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;" Usage="devicesClient.UpdateTwins (twinUpdates, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdates" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdates">The new twins to replace the twins on existing devices.</param>
        <param name="precondition">The condition on which to update each device twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple devices' twins. A maximum of 100 updates can be done per call, and each operation must be done on a different device twin. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTwinsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateTwinsAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt; UpdateTwinsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.Hub.Service.Models.TwinData&gt; twinUpdates, valuetype Azure.IoT.Hub.Service.BulkIfMatchPrecondition precondition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.Hub.Service.DevicesClient.UpdateTwinsAsync(System.Collections.Generic.IEnumerable{Azure.IoT.Hub.Service.Models.TwinData},Azure.IoT.Hub.Service.BulkIfMatchPrecondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateTwinsAsync (twinUpdates As IEnumerable(Of TwinData), Optional precondition As BulkIfMatchPrecondition = Azure.IoT.Hub.Service.BulkIfMatchPrecondition.IfMatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BulkRegistryOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member UpdateTwinsAsync : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;&#xA;override this.UpdateTwinsAsync : seq&lt;Azure.IoT.Hub.Service.Models.TwinData&gt; * Azure.IoT.Hub.Service.BulkIfMatchPrecondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;" Usage="devicesClient.UpdateTwinsAsync (twinUpdates, precondition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.Hub.Service.Models.BulkRegistryOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twinUpdates" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.Hub.Service.Models.TwinData&gt;" />
        <Parameter Name="precondition" Type="Azure.IoT.Hub.Service.BulkIfMatchPrecondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twinUpdates">The new twins to replace the twins on existing devices.</param>
        <param name="precondition">The condition on which to update each device twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update multiple devices' twins. A maximum of 100 updates can be done per call, and each operation must be done on a different device twin. For larger scale operations, consider using <see href="https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities">IoT Hub jobs</see>.
            </summary>
        <returns>The result of the bulk operation and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
