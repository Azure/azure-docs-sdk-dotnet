<Type Name="IfMatchPrecondition" FullName="Azure.IoT.Hub.Service.IfMatchPrecondition">
  <TypeSignature Language="C#" Value="public enum IfMatchPrecondition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IfMatchPrecondition extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Azure.IoT.Hub.Service.IfMatchPrecondition" />
  <TypeSignature Language="VB.NET" Value="Public Enum IfMatchPrecondition" />
  <TypeSignature Language="F#" Value="type IfMatchPrecondition = " />
  <AssemblyInfo>
    <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            The condition on which an operation will be executed against a service resource. Each value maps to a possible use of the If-Match header. The If-Match header is described in RFC7232.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IfMatch">
      <MemberSignature Language="C#" Value="IfMatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.IoT.Hub.Service.IfMatchPrecondition IfMatch = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch" />
      <MemberSignature Language="VB.NET" Value="IfMatch" />
      <MemberSignature Language="F#" Value="IfMatch = 1" Usage="Azure.IoT.Hub.Service.IfMatchPrecondition.IfMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.IoT.Hub.Service.IfMatchPrecondition</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Perform this operation only if the resource exists in the service, and the provided resource's ETag
            matches the service's ETag. This enum will cause the HTTP request to be sent with an ifMatch header with value equal to the provided resource's ETag.
            If the request's provided ETag is out of date, or incorrect, the service will not carry out this operation and will respond to the reqeust with a 412 error code.
            In order to get the latest ETag for a resource, get the resource from the service.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="UnconditionalIfMatch">
      <MemberSignature Language="C#" Value="UnconditionalIfMatch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.IoT.Hub.Service.IfMatchPrecondition UnconditionalIfMatch = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />
      <MemberSignature Language="VB.NET" Value="UnconditionalIfMatch" />
      <MemberSignature Language="F#" Value="UnconditionalIfMatch = 0" Usage="Azure.IoT.Hub.Service.IfMatchPrecondition.UnconditionalIfMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.Hub.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.IoT.Hub.Service.IfMatchPrecondition</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            Perform this operation as long as the provided resource exists in the service. This will cause the HTTP request to be sent with an ifMatch header with value "*". For create or update
            operations, if the resource does not exist, then the service will not execute the operation and will respond to the request with a 412 error code. For delete operations, if the resource
            does not exist, then the service will respond to the request with a 412 status code.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
