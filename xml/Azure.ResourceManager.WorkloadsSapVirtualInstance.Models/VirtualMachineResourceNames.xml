<Type Name="VirtualMachineResourceNames" FullName="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames">
  <TypeSignature Language="C#" Value="public class VirtualMachineResourceNames : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VirtualMachineResourceNames extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualMachineResourceNames&#xA;Implements IJsonModel(Of VirtualMachineResourceNames), IPersistableModel(Of VirtualMachineResourceNames)" />
  <TypeSignature Language="F#" Value="type VirtualMachineResourceNames = class&#xA;    interface IJsonModel&lt;VirtualMachineResourceNames&gt;&#xA;    interface IPersistableModel&lt;VirtualMachineResourceNames&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The resource names object for virtual machine and related resources. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualMachineResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataDiskNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; DataDiskNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; DataDiskNames" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.DataDiskNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDiskNames As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="F#" Value="member this.DataDiskNames : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.DataDiskNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The full resource names for virtual machine data disks. This is a dictionary containing list of names of data disks per volume. Currently supported volumes for database layer are ['hana/data', 'hana/log', hana/shared', 'usr/sap', 'os', 'backup']. For application and cs layers, only 'default' volume is supported. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public string HostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.HostName" />
      <MemberSignature Language="VB.NET" Value="Public Property HostName As String" />
      <MemberSignature Language="F#" Value="member this.HostName : string with get, set" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The full name for virtual-machine's host (computer name). Currently, ACSS only supports host names which are less than or equal to 13 characters long. If this value is not provided, vmName will be used as host name. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="virtualMachineResourceNames.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.NetworkInterfaceResourceNames&gt; NetworkInterfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.NetworkInterfaceResourceNames&gt; NetworkInterfaces" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.NetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkInterfaces As IList(Of NetworkInterfaceResourceNames)" />
      <MemberSignature Language="F#" Value="member this.NetworkInterfaces : System.Collections.Generic.IList&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.NetworkInterfaceResourceNames&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.NetworkInterfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.NetworkInterfaceResourceNames&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The list of network interface name objects for the selected virtual machine. Currently, only one network interface is supported per virtual machine. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSDiskName">
      <MemberSignature Language="C#" Value="public string OSDiskName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSDiskName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.OSDiskName" />
      <MemberSignature Language="VB.NET" Value="Public Property OSDiskName As String" />
      <MemberSignature Language="F#" Value="member this.OSDiskName : string with get, set" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.OSDiskName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The full name for OS disk attached to the VM. If this value is not provided, it will be named by ARM as per its default naming standards (prefixed with vm name). There is only one OS disk attached per Virtual Machine. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames IJsonModel&lt;VirtualMachineResourceNames&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#WorkloadsSapVirtualInstance#Models#VirtualMachineResourceNames&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As VirtualMachineResourceNames Implements IJsonModel(Of VirtualMachineResourceNames).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames" Usage="virtualMachineResourceNames.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;VirtualMachineResourceNames&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#WorkloadsSapVirtualInstance#Models#VirtualMachineResourceNames&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of VirtualMachineResourceNames).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="virtualMachineResourceNames.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames IPersistableModel&lt;VirtualMachineResourceNames&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#WorkloadsSapVirtualInstance#Models#VirtualMachineResourceNames&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As VirtualMachineResourceNames Implements IPersistableModel(Of VirtualMachineResourceNames).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames" Usage="virtualMachineResourceNames.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;VirtualMachineResourceNames&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#WorkloadsSapVirtualInstance#Models#VirtualMachineResourceNames&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of VirtualMachineResourceNames).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="virtualMachineResourceNames.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;VirtualMachineResourceNames&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#WorkloadsSapVirtualInstance#Models#VirtualMachineResourceNames&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of VirtualMachineResourceNames).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="virtualMachineResourceNames.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VmName">
      <MemberSignature Language="C#" Value="public string VmName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.VmName" />
      <MemberSignature Language="VB.NET" Value="Public Property VmName As String" />
      <MemberSignature Language="F#" Value="member this.VmName : string with get, set" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.VirtualMachineResourceNames.VmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The full name for virtual machine. The length of this field can be upto 64 characters. If name is not provided, service uses a default name based on the deployment type. For SingleServer, default name is {SID}vm. In case of HA-AvZone systems, default name will be {SID}{app/ascs/db}z{a/b}vm with an incrementor at the end in case of more than 1 vm per layer. For distributed and HA-AvSet systems, default name will be {SID}{app/ascs/db}vm with an incrementor at the end in case of more than 1 vm per layer. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
