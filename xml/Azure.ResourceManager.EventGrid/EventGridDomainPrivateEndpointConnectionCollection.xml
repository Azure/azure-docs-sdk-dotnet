<Type Name="EventGridDomainPrivateEndpointConnectionCollection" FullName="Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection">
  <TypeSignature Language="C#" Value="public class EventGridDomainPrivateEndpointConnectionCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventGridDomainPrivateEndpointConnectionCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class EventGridDomainPrivateEndpointConnectionCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type EventGridDomainPrivateEndpointConnectionCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection" /> instance call the GetEventGridDomainPrivateEndpointConnections method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventGridDomainPrivateEndpointConnectionCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string parentName, string privateEndpointConnectionName, Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string parentName, string privateEndpointConnectionName, class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, parentName As String, privateEndpointConnectionName As String, data As EventGridPrivateEndpointConnectionData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of EventGridPrivateEndpointConnectionData)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * string * Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * string * Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.CreateOrUpdate (waitUntil, parentName, privateEndpointConnectionName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="data"> The private endpoint connection object to update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a specific private endpoint connection under a topic, domain or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string parentName, string privateEndpointConnectionName, Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string parentName, string privateEndpointConnectionName, class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, parentName As String, privateEndpointConnectionName As String, data As EventGridPrivateEndpointConnectionData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of EventGridPrivateEndpointConnectionData))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.CreateOrUpdateAsync (waitUntil, parentName, privateEndpointConnectionName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="data"> The private endpoint connection object to update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a specific private endpoint connection under a topic, domain or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.Exists(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.Exists (parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.ExistsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.ExistsAsync (parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; Get (string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; Get(string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventGridPrivateEndpointConnectionData)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.Get (parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetAll (string parentName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetAll(string parentName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.GetAll(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (parentName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventGridPrivateEndpointConnectionData)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&#xA;override this.GetAll : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.GetAll (parentName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all private endpoint connections under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections
            Operation Id: PrivateEndpointConnections_ListByResource
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetAllAsync (string parentName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetAllAsync(string parentName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.GetAllAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (parentName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventGridPrivateEndpointConnectionData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&#xA;override this.GetAllAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.GetAllAsync (parentName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all private endpoint connections under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections
            Operation Id: PrivateEndpointConnections_ListByResource
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetAsync (string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetAsync(string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventGridPrivateEndpointConnectionData))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;" Usage="eventGridDomainPrivateEndpointConnectionCollection.GetAsync (parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
