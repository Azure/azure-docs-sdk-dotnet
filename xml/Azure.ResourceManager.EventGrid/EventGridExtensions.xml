<Type Name="EventGridExtensions" FullName="Azure.ResourceManager.EventGrid.EventGridExtensions">
  <TypeSignature Language="C#" Value="public static class EventGridExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventGridExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.EventGridExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EventGridExtensions" />
  <TypeSignature Language="F#" Value="type EventGridExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.EventGrid. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetChannelResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.ChannelResource GetChannelResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.ChannelResource GetChannelResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetChannelResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChannelResource (client As ArmClient, id As ResourceIdentifier) As ChannelResource" />
      <MemberSignature Language="F#" Value="static member GetChannelResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.ChannelResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetChannelResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.ChannelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.ChannelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.ChannelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.ChannelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.ChannelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomain">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.DomainResource&gt; GetDomain (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.DomainResource&gt; GetDomain(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomain(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomain (resourceGroupResource As ResourceGroupResource, domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DomainResource)" />
      <MemberSignature Language="F#" Value="static member GetDomain : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomain (resourceGroupResource, domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="domainName"> Name of the domain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a domain.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}
            Operation Id: Domains_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDomainAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;&gt; GetDomainAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.DomainResource&gt;&gt; GetDomainAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomainAsync (resourceGroupResource As ResourceGroupResource, domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DomainResource))" />
      <MemberSignature Language="F#" Value="static member GetDomainAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainAsync (resourceGroupResource, domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="domainName"> Name of the domain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a domain.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}
            Operation Id: Domains_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDomainEventSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource GetDomainEventSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource GetDomainEventSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainEventSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomainEventSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As DomainEventSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetDomainEventSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainEventSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.DomainEventSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.DomainResource GetDomainResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.DomainResource GetDomainResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomainResource (client As ArmClient, id As ResourceIdentifier) As DomainResource" />
      <MemberSignature Language="F#" Value="static member GetDomainResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.DomainResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.DomainResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.DomainResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.DomainResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.DomainResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.DomainResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomains">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.DomainCollection GetDomains (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.DomainCollection GetDomains(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomains(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomains (resourceGroupResource As ResourceGroupResource) As DomainCollection" />
      <MemberSignature Language="F#" Value="static member GetDomains : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EventGrid.DomainCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomains resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.DomainCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of DomainResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of DomainResources and their operations over a DomainResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomains">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.DomainResource&gt; GetDomains (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.DomainResource&gt; GetDomains(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomains(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomains (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DomainResource)" />
      <MemberSignature Language="F#" Value="static member GetDomains : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomains (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the domains under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/domains
            Operation Id: Domains_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.DomainResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.DomainResource&gt; GetDomainsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.DomainResource&gt; GetDomainsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomainsAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DomainResource)" />
      <MemberSignature Language="F#" Value="static member GetDomainsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainsAsync (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.DomainResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the domains under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/domains
            Operation Id: Domains_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.DomainResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainTopicEventSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource GetDomainTopicEventSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource GetDomainTopicEventSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainTopicEventSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomainTopicEventSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As DomainTopicEventSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetDomainTopicEventSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainTopicEventSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.DomainTopicEventSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainTopicResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.DomainTopicResource GetDomainTopicResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.DomainTopicResource GetDomainTopicResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainTopicResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDomainTopicResource (client As ArmClient, id As ResourceIdentifier) As DomainTopicResource" />
      <MemberSignature Language="F#" Value="static member GetDomainTopicResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.DomainTopicResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetDomainTopicResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.DomainTopicResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.DomainTopicResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.DomainTopicResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.DomainTopicResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.DomainTopicResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetEventGridDomainPrivateEndpointConnection (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetEventGridDomainPrivateEndpointConnection(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnection(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateEndpointConnection (resourceGroupResource As ResourceGroupResource, parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventGridPrivateEndpointConnectionData)" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateEndpointConnection : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnection (resourceGroupResource, parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetEventGridDomainPrivateEndpointConnectionAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetEventGridDomainPrivateEndpointConnectionAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnectionAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateEndpointConnectionAsync (resourceGroupResource As ResourceGroupResource, parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventGridPrivateEndpointConnectionData))" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateEndpointConnectionAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnectionAsync (resourceGroupResource, parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource GetEventGridDomainPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource GetEventGridDomainPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As EventGridDomainPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection GetEventGridDomainPrivateEndpointConnections (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection GetEventGridDomainPrivateEndpointConnections(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnections(Azure.ResourceManager.Resources.ResourceGroupResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateEndpointConnections (resourceGroupResource As ResourceGroupResource, parentName As String) As EventGridDomainPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateEndpointConnections : Azure.ResourceManager.Resources.ResourceGroupResource * string -&gt; Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateEndpointConnections (resourceGroupResource, parentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridDomainPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <summary> Gets a collection of EventGridDomainPrivateEndpointConnectionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of EventGridDomainPrivateEndpointConnectionResources and their operations over a EventGridDomainPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource GetEventGridDomainPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource GetEventGridDomainPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As EventGridDomainPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt; GetEventGridDomainPrivateLinkResource (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt; GetEventGridDomainPrivateLinkResource(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResource(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateLinkResource (resourceGroupResource As ResourceGroupResource, parentName As String, privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventGridPrivateLinkResourceData)" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateLinkResource : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResource (resourceGroupResource, parentName, privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateLinkResourceName"> The name of private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt; GetEventGridDomainPrivateLinkResourceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt; GetEventGridDomainPrivateLinkResourceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResourceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateLinkResourceAsync (resourceGroupResource As ResourceGroupResource, parentName As String, privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventGridPrivateLinkResourceData))" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateLinkResourceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResourceAsync (resourceGroupResource, parentName, privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateLinkResourceName"> The name of private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridDomainPrivateLinkResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResourceCollection GetEventGridDomainPrivateLinkResources (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResourceCollection GetEventGridDomainPrivateLinkResources(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResources(Azure.ResourceManager.Resources.ResourceGroupResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridDomainPrivateLinkResources (resourceGroupResource As ResourceGroupResource, parentName As String) As EventGridDomainPrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetEventGridDomainPrivateLinkResources : Azure.ResourceManager.Resources.ResourceGroupResource * string -&gt; Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResourceCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridDomainPrivateLinkResources (resourceGroupResource, parentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridDomainPrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <summary> Gets a collection of EventGridDomainPrivateLinkResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of EventGridDomainPrivateLinkResources and their operations over a EventGridDomainPrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridPartnerNamespacePrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetEventGridPartnerNamespacePrivateEndpointConnection (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetEventGridPartnerNamespacePrivateEndpointConnection(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnection(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridPartnerNamespacePrivateEndpointConnection (resourceGroupResource As ResourceGroupResource, parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventGridPrivateEndpointConnectionData)" />
      <MemberSignature Language="F#" Value="static member GetEventGridPartnerNamespacePrivateEndpointConnection : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnection (resourceGroupResource, parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridPartnerNamespacePrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetEventGridPartnerNamespacePrivateEndpointConnectionAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetEventGridPartnerNamespacePrivateEndpointConnectionAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnectionAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridPartnerNamespacePrivateEndpointConnectionAsync (resourceGroupResource As ResourceGroupResource, parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventGridPrivateEndpointConnectionData))" />
      <MemberSignature Language="F#" Value="static member GetEventGridPartnerNamespacePrivateEndpointConnectionAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnectionAsync (resourceGroupResource, parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridPartnerNamespacePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource GetEventGridPartnerNamespacePrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource GetEventGridPartnerNamespacePrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridPartnerNamespacePrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As EventGridPartnerNamespacePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetEventGridPartnerNamespacePrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridPartnerNamespacePrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionCollection GetEventGridPartnerNamespacePrivateEndpointConnections (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionCollection GetEventGridPartnerNamespacePrivateEndpointConnections(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnections(Azure.ResourceManager.Resources.ResourceGroupResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridPartnerNamespacePrivateEndpointConnections (resourceGroupResource As ResourceGroupResource, parentName As String) As EventGridPartnerNamespacePrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="static member GetEventGridPartnerNamespacePrivateEndpointConnections : Azure.ResourceManager.Resources.ResourceGroupResource * string -&gt; Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridPartnerNamespacePrivateEndpointConnections (resourceGroupResource, parentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridPartnerNamespacePrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <summary> Gets a collection of EventGridPartnerNamespacePrivateEndpointConnectionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of EventGridPartnerNamespacePrivateEndpointConnectionResources and their operations over a EventGridPartnerNamespacePrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetEventGridTopicPrivateEndpointConnection (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt; GetEventGridTopicPrivateEndpointConnection(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnection(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateEndpointConnection (resourceGroupResource As ResourceGroupResource, parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventGridPrivateEndpointConnectionData)" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateEndpointConnection : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnection (resourceGroupResource, parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetEventGridTopicPrivateEndpointConnectionAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt; GetEventGridTopicPrivateEndpointConnectionAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnectionAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateEndpointConnectionAsync (resourceGroupResource As ResourceGroupResource, parentName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventGridPrivateEndpointConnectionData))" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateEndpointConnectionAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnectionAsync (resourceGroupResource, parentName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateEndpointConnectionData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific private endpoint connection under a topic, domain, or partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource GetEventGridTopicPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource GetEventGridTopicPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As EventGridTopicPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionCollection GetEventGridTopicPrivateEndpointConnections (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionCollection GetEventGridTopicPrivateEndpointConnections(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnections(Azure.ResourceManager.Resources.ResourceGroupResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateEndpointConnections (resourceGroupResource As ResourceGroupResource, parentName As String) As EventGridTopicPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateEndpointConnections : Azure.ResourceManager.Resources.ResourceGroupResource * string -&gt; Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateEndpointConnections (resourceGroupResource, parentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridTopicPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <summary> Gets a collection of EventGridTopicPrivateEndpointConnectionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of EventGridTopicPrivateEndpointConnectionResources and their operations over a EventGridTopicPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource GetEventGridTopicPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource GetEventGridTopicPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As EventGridTopicPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt; GetEventGridTopicPrivateLinkResource (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt; GetEventGridTopicPrivateLinkResource(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResource(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateLinkResource (resourceGroupResource As ResourceGroupResource, parentName As String, privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventGridPrivateLinkResourceData)" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateLinkResource : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResource (resourceGroupResource, parentName, privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateLinkResourceName"> The name of private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt; GetEventGridTopicPrivateLinkResourceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt; GetEventGridTopicPrivateLinkResourceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResourceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateLinkResourceAsync (resourceGroupResource As ResourceGroupResource, parentName As String, privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventGridPrivateLinkResourceData))" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateLinkResourceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResourceAsync (resourceGroupResource, parentName, privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateLinkResourceName"> The name of private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventGridTopicPrivateLinkResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResourceCollection GetEventGridTopicPrivateLinkResources (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResourceCollection GetEventGridTopicPrivateLinkResources(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResources(Azure.ResourceManager.Resources.ResourceGroupResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventGridTopicPrivateLinkResources (resourceGroupResource As ResourceGroupResource, parentName As String) As EventGridTopicPrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetEventGridTopicPrivateLinkResources : Azure.ResourceManager.Resources.ResourceGroupResource * string -&gt; Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResourceCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventGridTopicPrivateLinkResources (resourceGroupResource, parentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventGridTopicPrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <summary> Gets a collection of EventGridTopicPrivateLinkResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of EventGridTopicPrivateLinkResources and their operations over a EventGridTopicPrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventSubscription">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetEventSubscription (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string eventSubscriptionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetEventSubscription(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string eventSubscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscription(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventSubscription (client As ArmClient, scope As ResourceIdentifier, eventSubscriptionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetEventSubscription : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscription (client, scope, eventSubscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="eventSubscriptionName"> Name of the event subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of an event subscription.
            Request Path: /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}
            Operation Id: EventSubscriptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventSubscriptionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventSubscriptionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventSubscriptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;&gt; GetEventSubscriptionAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string eventSubscriptionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;&gt; GetEventSubscriptionAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string eventSubscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscriptionAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventSubscriptionAsync (client As ArmClient, scope As ResourceIdentifier, eventSubscriptionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventSubscriptionResource))" />
      <MemberSignature Language="F#" Value="static member GetEventSubscriptionAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscriptionAsync (client, scope, eventSubscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="eventSubscriptionName"> Name of the event subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of an event subscription.
            Request Path: /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}
            Operation Id: EventSubscriptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventSubscriptionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventSubscriptionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventSubscriptionResource GetEventSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventSubscriptionResource GetEventSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As EventSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetEventSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.EventSubscriptionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.EventSubscriptionResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventSubscriptions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.EventSubscriptionCollection GetEventSubscriptions (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.EventSubscriptionCollection GetEventSubscriptions(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscriptions(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventSubscriptions (client As ArmClient, scope As ResourceIdentifier) As EventSubscriptionCollection" />
      <MemberSignature Language="F#" Value="static member GetEventSubscriptions : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.EventSubscriptionCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventSubscriptions (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.EventSubscriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of EventSubscriptionResources in the ArmResource. </summary>
        <returns> An object representing collection of EventSubscriptionResources and their operations over a EventSubscriptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventTypesTopics">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.Models.EventType&gt; GetEventTypesTopics (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerNamespace, string resourceTypeName, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.Models.EventType&gt; GetEventTypesTopics(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerNamespace, string resourceTypeName, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventTypesTopics(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventTypesTopics (resourceGroupResource As ResourceGroupResource, providerNamespace As String, resourceTypeName As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventType)" />
      <MemberSignature Language="F#" Value="static member GetEventTypesTopics : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.Models.EventType&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventTypesTopics (resourceGroupResource, providerNamespace, resourceTypeName, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.Models.EventType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="providerNamespace" Type="System.String" />
        <Parameter Name="resourceTypeName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="providerNamespace"> Namespace of the provider of the topic. </param>
        <param name="resourceTypeName"> Name of the topic type. </param>
        <param name="resourceName"> Name of the topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List event types for a topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes
            Operation Id: Topics_ListEventTypes
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.Models.EventType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerNamespace" />, <paramref name="resourceTypeName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerNamespace" />, <paramref name="resourceTypeName" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventTypesTopicsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.Models.EventType&gt; GetEventTypesTopicsAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerNamespace, string resourceTypeName, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.Models.EventType&gt; GetEventTypesTopicsAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string providerNamespace, string resourceTypeName, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventTypesTopicsAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventTypesTopicsAsync (resourceGroupResource As ResourceGroupResource, providerNamespace As String, resourceTypeName As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventType)" />
      <MemberSignature Language="F#" Value="static member GetEventTypesTopicsAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.Models.EventType&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetEventTypesTopicsAsync (resourceGroupResource, providerNamespace, resourceTypeName, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.Models.EventType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="providerNamespace" Type="System.String" />
        <Parameter Name="resourceTypeName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="providerNamespace"> Namespace of the provider of the topic. </param>
        <param name="resourceTypeName"> Name of the topic type. </param>
        <param name="resourceName"> Name of the topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List event types for a topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes
            Operation Id: Topics_ListEventTypes
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.Models.EventType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerNamespace" />, <paramref name="resourceTypeName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerNamespace" />, <paramref name="resourceTypeName" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionTopic">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.ExtensionTopicResource GetExtensionTopic (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.ExtensionTopicResource GetExtensionTopic(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetExtensionTopic(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExtensionTopic (client As ArmClient, scope As ResourceIdentifier) As ExtensionTopicResource" />
      <MemberSignature Language="F#" Value="static member GetExtensionTopic : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.ExtensionTopicResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetExtensionTopic (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.ExtensionTopicResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a ExtensionTopicResource along with the instance operations that can be performed on it in the ArmResource. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.ExtensionTopicResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionTopicResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.ExtensionTopicResource GetExtensionTopicResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.ExtensionTopicResource GetExtensionTopicResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetExtensionTopicResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExtensionTopicResource (client As ArmClient, id As ResourceIdentifier) As ExtensionTopicResource" />
      <MemberSignature Language="F#" Value="static member GetExtensionTopicResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.ExtensionTopicResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetExtensionTopicResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.ExtensionTopicResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EventGrid.ExtensionTopicResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.ExtensionTopicResource.CreateResourceIdentifier(System.String)" /> to create an <see cref="T:Azure.ResourceManager.EventGrid.ExtensionTopicResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.ExtensionTopicResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalByResourceGroupForTopicTypeEventSubscriptions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalByResourceGroupForTopicTypeEventSubscriptions (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalByResourceGroupForTopicTypeEventSubscriptions(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalByResourceGroupForTopicTypeEventSubscriptions(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGlobalByResourceGroupForTopicTypeEventSubscriptions (resourceGroupResource As ResourceGroupResource, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetGlobalByResourceGroupForTopicTypeEventSubscriptions : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalByResourceGroupForTopicTypeEventSubscriptions (resourceGroupResource, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all global event subscriptions under a resource group for a specific topic type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListGlobalByResourceGroupForTopicType
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalByResourceGroupForTopicTypeEventSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalByResourceGroupForTopicTypeEventSubscriptionsAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalByResourceGroupForTopicTypeEventSubscriptionsAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalByResourceGroupForTopicTypeEventSubscriptionsAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGlobalByResourceGroupForTopicTypeEventSubscriptionsAsync (resourceGroupResource As ResourceGroupResource, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetGlobalByResourceGroupForTopicTypeEventSubscriptionsAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalByResourceGroupForTopicTypeEventSubscriptionsAsync (resourceGroupResource, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all global event subscriptions under a resource group for a specific topic type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListGlobalByResourceGroupForTopicType
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalBySubscriptionForTopicTypeEventSubscriptions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalBySubscriptionForTopicTypeEventSubscriptions (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalBySubscriptionForTopicTypeEventSubscriptions(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalBySubscriptionForTopicTypeEventSubscriptions(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGlobalBySubscriptionForTopicTypeEventSubscriptions (subscriptionResource As SubscriptionResource, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetGlobalBySubscriptionForTopicTypeEventSubscriptions : Azure.ResourceManager.Resources.SubscriptionResource * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalBySubscriptionForTopicTypeEventSubscriptions (subscriptionResource, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all global event subscriptions under an Azure subscription for a topic type.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListGlobalBySubscriptionForTopicType
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalBySubscriptionForTopicTypeEventSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalBySubscriptionForTopicTypeEventSubscriptionsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetGlobalBySubscriptionForTopicTypeEventSubscriptionsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalBySubscriptionForTopicTypeEventSubscriptionsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGlobalBySubscriptionForTopicTypeEventSubscriptionsAsync (subscriptionResource As SubscriptionResource, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetGlobalBySubscriptionForTopicTypeEventSubscriptionsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetGlobalBySubscriptionForTopicTypeEventSubscriptionsAsync (subscriptionResource, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all global event subscriptions under an Azure subscription for a topic type.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListGlobalBySubscriptionForTopicType
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerConfigurationResource GetPartnerConfiguration (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerConfigurationResource GetPartnerConfiguration(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfiguration(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerConfiguration (resourceGroupResource As ResourceGroupResource) As PartnerConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetPartnerConfiguration : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EventGrid.PartnerConfigurationResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfiguration resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets an object representing a PartnerConfigurationResource along with the instance operations that can be performed on it in the ResourceGroupResource. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.PartnerConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerConfigurationResource GetPartnerConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerConfigurationResource GetPartnerConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerConfigurationResource (client As ArmClient, id As ResourceIdentifier) As PartnerConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetPartnerConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.PartnerConfigurationResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.PartnerConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.PartnerConfigurationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.PartnerConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.PartnerConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerConfigurations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt; GetPartnerConfigurations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt; GetPartnerConfigurations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfigurations(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerConfigurations (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PartnerConfigurationResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerConfigurations : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfigurations (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner configurations under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerConfigurations
            Operation Id: PartnerConfigurations_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerConfigurationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt; GetPartnerConfigurationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt; GetPartnerConfigurationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfigurationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerConfigurationsAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PartnerConfigurationResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerConfigurationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerConfigurationsAsync (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner configurations under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerConfigurations
            Operation Id: PartnerConfigurations_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerConfigurationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespace">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt; GetPartnerNamespace (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerNamespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt; GetPartnerNamespace(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerNamespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespace(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespace (resourceGroupResource As ResourceGroupResource, partnerNamespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PartnerNamespaceResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespace : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespace (resourceGroupResource, partnerNamespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="partnerNamespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="partnerNamespaceName"> Name of the partner namespace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}
            Operation Id: PartnerNamespaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerNamespaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerNamespaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;&gt; GetPartnerNamespaceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerNamespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;&gt; GetPartnerNamespaceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerNamespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespaceAsync (resourceGroupResource As ResourceGroupResource, partnerNamespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PartnerNamespaceResource))" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespaceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaceAsync (resourceGroupResource, partnerNamespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="partnerNamespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="partnerNamespaceName"> Name of the partner namespace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a partner namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}
            Operation Id: PartnerNamespaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerNamespaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerNamespaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespacePrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource GetPartnerNamespacePrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource GetPartnerNamespacePrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespacePrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As PartnerNamespacePrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespacePrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespacePrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt; GetPartnerNamespacePrivateLinkResource (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt; GetPartnerNamespacePrivateLinkResource(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResource(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespacePrivateLinkResource (resourceGroupResource As ResourceGroupResource, parentName As String, privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventGridPrivateLinkResourceData)" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespacePrivateLinkResource : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResource (resourceGroupResource, parentName, privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateLinkResourceName"> The name of private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespacePrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt; GetPartnerNamespacePrivateLinkResourceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt; GetPartnerNamespacePrivateLinkResourceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName, string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResourceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespacePrivateLinkResourceAsync (resourceGroupResource As ResourceGroupResource, parentName As String, privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventGridPrivateLinkResourceData))" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespacePrivateLinkResourceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResourceAsync (resourceGroupResource, parentName, privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.EventGridPrivateLinkResourceData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <param name="privateLinkResourceName"> The name of private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> or <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespacePrivateLinkResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResourceCollection GetPartnerNamespacePrivateLinkResources (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResourceCollection GetPartnerNamespacePrivateLinkResources(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResources(Azure.ResourceManager.Resources.ResourceGroupResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespacePrivateLinkResources (resourceGroupResource As ResourceGroupResource, parentName As String) As PartnerNamespacePrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespacePrivateLinkResources : Azure.ResourceManager.Resources.ResourceGroupResource * string -&gt; Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResourceCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacePrivateLinkResources (resourceGroupResource, parentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerNamespacePrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentName"> The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name). </param>
        <summary> Gets a collection of PartnerNamespacePrivateLinkResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PartnerNamespacePrivateLinkResources and their operations over a PartnerNamespacePrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespaceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerNamespaceResource GetPartnerNamespaceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerNamespaceResource GetPartnerNamespaceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespaceResource (client As ArmClient, id As ResourceIdentifier) As PartnerNamespaceResource" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespaceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.PartnerNamespaceResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerNamespaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.PartnerNamespaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerNamespaceCollection GetPartnerNamespaces (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerNamespaceCollection GetPartnerNamespaces(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaces(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespaces (resourceGroupResource As ResourceGroupResource) As PartnerNamespaceCollection" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespaces : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EventGrid.PartnerNamespaceCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaces resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerNamespaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of PartnerNamespaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PartnerNamespaceResources and their operations over a PartnerNamespaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt; GetPartnerNamespaces (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt; GetPartnerNamespaces(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaces(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespaces (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PartnerNamespaceResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespaces : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespaces (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner namespaces under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerNamespaces
            Operation Id: PartnerNamespaces_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerNamespacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt; GetPartnerNamespacesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt; GetPartnerNamespacesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerNamespacesAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PartnerNamespaceResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerNamespacesAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerNamespacesAsync (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner namespaces under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerNamespaces
            Operation Id: PartnerNamespaces_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerRegistration">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt; GetPartnerRegistration (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerRegistrationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt; GetPartnerRegistration(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerRegistrationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistration(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerRegistration (resourceGroupResource As ResourceGroupResource, partnerRegistrationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PartnerRegistrationResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerRegistration : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistration (resourceGroupResource, partnerRegistrationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="partnerRegistrationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="partnerRegistrationName"> Name of the partner registration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a partner registration with the specified parameters.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}
            Operation Id: PartnerRegistrations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerRegistrationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerRegistrationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerRegistrationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;&gt; GetPartnerRegistrationAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerRegistrationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;&gt; GetPartnerRegistrationAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerRegistrationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerRegistrationAsync (resourceGroupResource As ResourceGroupResource, partnerRegistrationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PartnerRegistrationResource))" />
      <MemberSignature Language="F#" Value="static member GetPartnerRegistrationAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrationAsync (resourceGroupResource, partnerRegistrationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="partnerRegistrationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="partnerRegistrationName"> Name of the partner registration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a partner registration with the specified parameters.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}
            Operation Id: PartnerRegistrations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerRegistrationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerRegistrationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerRegistrationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerRegistrationResource GetPartnerRegistrationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerRegistrationResource GetPartnerRegistrationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerRegistrationResource (client As ArmClient, id As ResourceIdentifier) As PartnerRegistrationResource" />
      <MemberSignature Language="F#" Value="static member GetPartnerRegistrationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.PartnerRegistrationResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerRegistrationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.PartnerRegistrationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.PartnerRegistrationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.PartnerRegistrationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.PartnerRegistrationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerRegistrations">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerRegistrationCollection GetPartnerRegistrations (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerRegistrationCollection GetPartnerRegistrations(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrations(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerRegistrations (resourceGroupResource As ResourceGroupResource) As PartnerRegistrationCollection" />
      <MemberSignature Language="F#" Value="static member GetPartnerRegistrations : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EventGrid.PartnerRegistrationCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrations resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerRegistrationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of PartnerRegistrationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PartnerRegistrationResources and their operations over a PartnerRegistrationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerRegistrations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt; GetPartnerRegistrations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt; GetPartnerRegistrations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrations(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerRegistrations (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PartnerRegistrationResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerRegistrations : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrations (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner registrations under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerRegistrations
            Operation Id: PartnerRegistrations_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerRegistrationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerRegistrationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt; GetPartnerRegistrationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt; GetPartnerRegistrationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerRegistrationsAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PartnerRegistrationResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerRegistrationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerRegistrationsAsync (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerRegistrationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner registrations under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerRegistrations
            Operation Id: PartnerRegistrations_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerRegistrationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerTopic">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt; GetPartnerTopic (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerTopicName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.PartnerTopicResource&gt; GetPartnerTopic(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerTopicName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopic(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerTopic (resourceGroupResource As ResourceGroupResource, partnerTopicName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PartnerTopicResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerTopic : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopic (resourceGroupResource, partnerTopicName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="partnerTopicName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="partnerTopicName"> Name of the partner topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a partner topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}
            Operation Id: PartnerTopics_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerTopicName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerTopicName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerTopicAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;&gt; GetPartnerTopicAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerTopicName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;&gt; GetPartnerTopicAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string partnerTopicName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerTopicAsync (resourceGroupResource As ResourceGroupResource, partnerTopicName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PartnerTopicResource))" />
      <MemberSignature Language="F#" Value="static member GetPartnerTopicAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicAsync (resourceGroupResource, partnerTopicName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="partnerTopicName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="partnerTopicName"> Name of the partner topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a partner topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}
            Operation Id: PartnerTopics_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerTopicName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerTopicName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerTopicEventSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource GetPartnerTopicEventSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource GetPartnerTopicEventSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicEventSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerTopicEventSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As PartnerTopicEventSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetPartnerTopicEventSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicEventSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicEventSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerTopicResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerTopicResource GetPartnerTopicResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerTopicResource GetPartnerTopicResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerTopicResource (client As ArmClient, id As ResourceIdentifier) As PartnerTopicResource" />
      <MemberSignature Language="F#" Value="static member GetPartnerTopicResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.PartnerTopicResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerTopicResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.PartnerTopicResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerTopics">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.PartnerTopicCollection GetPartnerTopics (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.PartnerTopicCollection GetPartnerTopics(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopics(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerTopics (resourceGroupResource As ResourceGroupResource) As PartnerTopicCollection" />
      <MemberSignature Language="F#" Value="static member GetPartnerTopics : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EventGrid.PartnerTopicCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopics resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.PartnerTopicCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of PartnerTopicResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PartnerTopicResources and their operations over a PartnerTopicResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerTopics">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt; GetPartnerTopics (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerTopicResource&gt; GetPartnerTopics(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopics(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerTopics (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PartnerTopicResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerTopics : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopics (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner topics under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerTopics
            Operation Id: PartnerTopics_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartnerTopicsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt; GetPartnerTopicsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.PartnerTopicResource&gt; GetPartnerTopicsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPartnerTopicsAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PartnerTopicResource)" />
      <MemberSignature Language="F#" Value="static member GetPartnerTopicsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetPartnerTopicsAsync (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.PartnerTopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the partner topics under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerTopics
            Operation Id: PartnerTopics_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.PartnerTopicResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalByResourceGroupEventSubscriptions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupEventSubscriptions (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation location, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupEventSubscriptions(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupEventSubscriptions(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalByResourceGroupEventSubscriptions (resourceGroupResource As ResourceGroupResource, location As AzureLocation, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalByResourceGroupEventSubscriptions : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupEventSubscriptions (resourceGroupResource, location, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalByResourceGroup
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalByResourceGroupEventSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupEventSubscriptionsAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation location, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupEventSubscriptionsAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupEventSubscriptionsAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalByResourceGroupEventSubscriptionsAsync (resourceGroupResource As ResourceGroupResource, location As AzureLocation, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalByResourceGroupEventSubscriptionsAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupEventSubscriptionsAsync (resourceGroupResource, location, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalByResourceGroup
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalByResourceGroupForTopicTypeEventSubscriptions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupForTopicTypeEventSubscriptions (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation location, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupForTopicTypeEventSubscriptions(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation location, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupForTopicTypeEventSubscriptions(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalByResourceGroupForTopicTypeEventSubscriptions (resourceGroupResource As ResourceGroupResource, location As AzureLocation, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalByResourceGroupForTopicTypeEventSubscriptions : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupForTopicTypeEventSubscriptions (resourceGroupResource, location, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalByResourceGroupForTopicType
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalByResourceGroupForTopicTypeEventSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupForTopicTypeEventSubscriptionsAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation location, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalByResourceGroupForTopicTypeEventSubscriptionsAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation location, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupForTopicTypeEventSubscriptionsAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalByResourceGroupForTopicTypeEventSubscriptionsAsync (resourceGroupResource As ResourceGroupResource, location As AzureLocation, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalByResourceGroupForTopicTypeEventSubscriptionsAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalByResourceGroupForTopicTypeEventSubscriptionsAsync (resourceGroupResource, location, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalByResourceGroupForTopicType
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalBySubscriptionEventSubscriptions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionEventSubscriptions (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionEventSubscriptions(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionEventSubscriptions(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalBySubscriptionEventSubscriptions (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalBySubscriptionEventSubscriptions : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionEventSubscriptions (subscriptionResource, location, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalBySubscriptionEventSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionEventSubscriptionsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionEventSubscriptionsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionEventSubscriptionsAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalBySubscriptionEventSubscriptionsAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalBySubscriptionEventSubscriptionsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionEventSubscriptionsAsync (subscriptionResource, location, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalBySubscriptionForTopicTypeEventSubscriptions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionForTopicTypeEventSubscriptions (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionForTopicTypeEventSubscriptions(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionForTopicTypeEventSubscriptions(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalBySubscriptionForTopicTypeEventSubscriptions (subscriptionResource As SubscriptionResource, location As AzureLocation, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalBySubscriptionForTopicTypeEventSubscriptions : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionForTopicTypeEventSubscriptions (subscriptionResource, location, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription and topic type.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalBySubscriptionForTopicType
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegionalBySubscriptionForTopicTypeEventSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionForTopicTypeEventSubscriptionsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string topicTypeName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt; GetRegionalBySubscriptionForTopicTypeEventSubscriptionsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string topicTypeName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionForTopicTypeEventSubscriptionsAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegionalBySubscriptionForTopicTypeEventSubscriptionsAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, topicTypeName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventSubscriptionResource)" />
      <MemberSignature Language="F#" Value="static member GetRegionalBySubscriptionForTopicTypeEventSubscriptionsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetRegionalBySubscriptionForTopicTypeEventSubscriptionsAsync (subscriptionResource, location, topicTypeName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.EventSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> Name of the location. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all event subscriptions from the given location under a specific Azure subscription and topic type.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions
            Operation Id: EventSubscriptions_ListRegionalBySubscriptionForTopicType
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.EventSubscriptionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTopic">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt; GetSystemTopic (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string systemTopicName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.SystemTopicResource&gt; GetSystemTopic(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string systemTopicName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopic(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSystemTopic (resourceGroupResource As ResourceGroupResource, systemTopicName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SystemTopicResource)" />
      <MemberSignature Language="F#" Value="static member GetSystemTopic : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopic (resourceGroupResource, systemTopicName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="systemTopicName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="systemTopicName"> Name of the system topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a system topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}
            Operation Id: SystemTopics_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="systemTopicName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="systemTopicName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTopicAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;&gt; GetSystemTopicAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string systemTopicName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.SystemTopicResource&gt;&gt; GetSystemTopicAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string systemTopicName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSystemTopicAsync (resourceGroupResource As ResourceGroupResource, systemTopicName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SystemTopicResource))" />
      <MemberSignature Language="F#" Value="static member GetSystemTopicAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicAsync (resourceGroupResource, systemTopicName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="systemTopicName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="systemTopicName"> Name of the system topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a system topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}
            Operation Id: SystemTopics_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="systemTopicName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="systemTopicName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTopicEventSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource GetSystemTopicEventSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource GetSystemTopicEventSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicEventSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSystemTopicEventSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As SystemTopicEventSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetSystemTopicEventSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicEventSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicEventSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTopicResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.SystemTopicResource GetSystemTopicResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.SystemTopicResource GetSystemTopicResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSystemTopicResource (client As ArmClient, id As ResourceIdentifier) As SystemTopicResource" />
      <MemberSignature Language="F#" Value="static member GetSystemTopicResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.SystemTopicResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.SystemTopicResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.SystemTopicResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTopics">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.SystemTopicCollection GetSystemTopics (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.SystemTopicCollection GetSystemTopics(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopics(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSystemTopics (resourceGroupResource As ResourceGroupResource) As SystemTopicCollection" />
      <MemberSignature Language="F#" Value="static member GetSystemTopics : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EventGrid.SystemTopicCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopics resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.SystemTopicCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of SystemTopicResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SystemTopicResources and their operations over a SystemTopicResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTopics">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt; GetSystemTopics (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.SystemTopicResource&gt; GetSystemTopics(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopics(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSystemTopics (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SystemTopicResource)" />
      <MemberSignature Language="F#" Value="static member GetSystemTopics : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopics (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the system topics under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/systemTopics
            Operation Id: SystemTopics_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTopicsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt; GetSystemTopicsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.SystemTopicResource&gt; GetSystemTopicsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSystemTopicsAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SystemTopicResource)" />
      <MemberSignature Language="F#" Value="static member GetSystemTopicsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetSystemTopicsAsync (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.SystemTopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the system topics under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/systemTopics
            Operation Id: SystemTopics_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.SystemTopicResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopic">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicResource&gt; GetTopic (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.TopicResource&gt; GetTopic(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopic(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopic (resourceGroupResource As ResourceGroupResource, topicName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TopicResource)" />
      <MemberSignature Language="F#" Value="static member GetTopic : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopic (resourceGroupResource, topicName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="topicName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="topicName"> Name of the topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}
            Operation Id: Topics_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopicAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;&gt; GetTopicAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.TopicResource&gt;&gt; GetTopicAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string topicName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicAsync (resourceGroupResource As ResourceGroupResource, topicName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TopicResource))" />
      <MemberSignature Language="F#" Value="static member GetTopicAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicAsync (resourceGroupResource, topicName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="topicName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="topicName"> Name of the topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a topic.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}
            Operation Id: Topics_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopicEventSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource GetTopicEventSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource GetTopicEventSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicEventSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicEventSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As TopicEventSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetTopicEventSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicEventSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.TopicEventSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopicResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.TopicResource GetTopicResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.TopicResource GetTopicResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicResource (client As ArmClient, id As ResourceIdentifier) As TopicResource" />
      <MemberSignature Language="F#" Value="static member GetTopicResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.TopicResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.TopicResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.TopicResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.TopicResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.TopicResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.TopicResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopics">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.TopicCollection GetTopics (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.TopicCollection GetTopics(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopics(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopics (resourceGroupResource As ResourceGroupResource) As TopicCollection" />
      <MemberSignature Language="F#" Value="static member GetTopics : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EventGrid.TopicCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopics resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.TopicCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of TopicResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of TopicResources and their operations over a TopicResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopics">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventGrid.TopicResource&gt; GetTopics (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventGrid.TopicResource&gt; GetTopics(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopics(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopics (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TopicResource)" />
      <MemberSignature Language="F#" Value="static member GetTopics : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopics (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the topics under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics
            Operation Id: Topics_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventGrid.TopicResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopicsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.TopicResource&gt; GetTopicsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventGrid.TopicResource&gt; GetTopicsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicsAsync (subscriptionResource As SubscriptionResource, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TopicResource)" />
      <MemberSignature Language="F#" Value="static member GetTopicsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicsAsync (subscriptionResource, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventGrid.TopicResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'. </param>
        <param name="top"> The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the topics under an Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics
            Operation Id: Topics_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventGrid.TopicResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopicTypeInfo">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt; GetTopicTypeInfo (this Azure.ResourceManager.Resources.TenantResource tenantResource, string topicTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt; GetTopicTypeInfo(class Azure.ResourceManager.Resources.TenantResource tenantResource, string topicTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfo(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicTypeInfo (tenantResource As TenantResource, topicTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TopicTypeInfoResource)" />
      <MemberSignature Language="F#" Value="static member GetTopicTypeInfo : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfo (tenantResource, topicTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information about a topic type.
            Request Path: /providers/Microsoft.EventGrid/topicTypes/{topicTypeName}
            Operation Id: TopicTypes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopicTypeInfoAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt;&gt; GetTopicTypeInfoAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string topicTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt;&gt; GetTopicTypeInfoAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string topicTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfoAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicTypeInfoAsync (tenantResource As TenantResource, topicTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TopicTypeInfoResource))" />
      <MemberSignature Language="F#" Value="static member GetTopicTypeInfoAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfoAsync (tenantResource, topicTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.TopicTypeInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="topicTypeName"> Name of the topic type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information about a topic type.
            Request Path: /providers/Microsoft.EventGrid/topicTypes/{topicTypeName}
            Operation Id: TopicTypes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topicTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopicTypeInfoResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.TopicTypeInfoResource GetTopicTypeInfoResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.TopicTypeInfoResource GetTopicTypeInfoResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfoResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicTypeInfoResource (client As ArmClient, id As ResourceIdentifier) As TopicTypeInfoResource" />
      <MemberSignature Language="F#" Value="static member GetTopicTypeInfoResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.TopicTypeInfoResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfoResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.TopicTypeInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.TopicTypeInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.TopicTypeInfoResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.TopicTypeInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.TopicTypeInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopicTypeInfos">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.TopicTypeInfoCollection GetTopicTypeInfos (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.TopicTypeInfoCollection GetTopicTypeInfos(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfos(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTopicTypeInfos (tenantResource As TenantResource) As TopicTypeInfoCollection" />
      <MemberSignature Language="F#" Value="static member GetTopicTypeInfos : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.EventGrid.TopicTypeInfoCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetTopicTypeInfos tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.TopicTypeInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of TopicTypeInfoResources in the TenantResource. </summary>
        <returns> An object representing collection of TopicTypeInfoResources and their operations over a TopicTypeInfoResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVerifiedPartner">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt; GetVerifiedPartner (this Azure.ResourceManager.Resources.TenantResource tenantResource, string verifiedPartnerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt; GetVerifiedPartner(class Azure.ResourceManager.Resources.TenantResource tenantResource, string verifiedPartnerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartner(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVerifiedPartner (tenantResource As TenantResource, verifiedPartnerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VerifiedPartnerResource)" />
      <MemberSignature Language="F#" Value="static member GetVerifiedPartner : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartner (tenantResource, verifiedPartnerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="verifiedPartnerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="verifiedPartnerName"> Name of the verified partner. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a verified partner.
            Request Path: /providers/Microsoft.EventGrid/verifiedPartners/{verifiedPartnerName}
            Operation Id: VerifiedPartners_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="verifiedPartnerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="verifiedPartnerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVerifiedPartnerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt;&gt; GetVerifiedPartnerAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string verifiedPartnerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt;&gt; GetVerifiedPartnerAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string verifiedPartnerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartnerAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVerifiedPartnerAsync (tenantResource As TenantResource, verifiedPartnerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VerifiedPartnerResource))" />
      <MemberSignature Language="F#" Value="static member GetVerifiedPartnerAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt;&gt;" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartnerAsync (tenantResource, verifiedPartnerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventGrid.VerifiedPartnerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="verifiedPartnerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="verifiedPartnerName"> Name of the verified partner. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of a verified partner.
            Request Path: /providers/Microsoft.EventGrid/verifiedPartners/{verifiedPartnerName}
            Operation Id: VerifiedPartners_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="verifiedPartnerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="verifiedPartnerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVerifiedPartnerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.VerifiedPartnerResource GetVerifiedPartnerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.VerifiedPartnerResource GetVerifiedPartnerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartnerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVerifiedPartnerResource (client As ArmClient, id As ResourceIdentifier) As VerifiedPartnerResource" />
      <MemberSignature Language="F#" Value="static member GetVerifiedPartnerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventGrid.VerifiedPartnerResource" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartnerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.VerifiedPartnerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.EventGrid.VerifiedPartnerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EventGrid.VerifiedPartnerResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.EventGrid.VerifiedPartnerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventGrid.VerifiedPartnerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVerifiedPartners">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventGrid.VerifiedPartnerCollection GetVerifiedPartners (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventGrid.VerifiedPartnerCollection GetVerifiedPartners(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartners(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVerifiedPartners (tenantResource As TenantResource) As VerifiedPartnerCollection" />
      <MemberSignature Language="F#" Value="static member GetVerifiedPartners : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.EventGrid.VerifiedPartnerCollection" Usage="Azure.ResourceManager.EventGrid.EventGridExtensions.GetVerifiedPartners tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventGrid.VerifiedPartnerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of VerifiedPartnerResources in the TenantResource. </summary>
        <returns> An object representing collection of VerifiedPartnerResources and their operations over a VerifiedPartnerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
