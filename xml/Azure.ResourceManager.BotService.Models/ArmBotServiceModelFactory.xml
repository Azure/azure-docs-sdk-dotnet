<Type Name="ArmBotServiceModelFactory" FullName="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmBotServiceModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmBotServiceModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmBotServiceModelFactory" />
  <TypeSignature Language="F#" Value="type ArmBotServiceModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcsChatChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.AcsChatChannel AcsChatChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.AcsChatChannel AcsChatChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.AcsChatChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AcsChatChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As AcsChatChannel" />
      <MemberSignature Language="F#" Value="static member AcsChatChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.BotService.Models.AcsChatChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.AcsChatChannel (etag, provisioningState, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.AcsChatChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.AcsChatChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.AcsChatChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlexaChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.AlexaChannel AlexaChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.AlexaChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.AlexaChannel AlexaChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.AlexaChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.AlexaChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.AlexaChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AlexaChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As AlexaChannelProperties = Nothing) As AlexaChannel" />
      <MemberSignature Language="F#" Value="static member AlexaChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.AlexaChannelProperties -&gt; Azure.ResourceManager.BotService.Models.AlexaChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.AlexaChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.AlexaChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.AlexaChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Alexa channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.AlexaChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.AlexaChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlexaChannelProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.AlexaChannelProperties AlexaChannelProperties (string alexaSkillId = default, string uriFragment = default, Uri serviceEndpointUri = default, bool isEnabled = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.AlexaChannelProperties AlexaChannelProperties(string alexaSkillId, string uriFragment, class System.Uri serviceEndpointUri, bool isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.AlexaChannelProperties(System.String,System.String,System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AlexaChannelProperties (Optional alexaSkillId As String = Nothing, Optional uriFragment As String = Nothing, Optional serviceEndpointUri As Uri = Nothing, Optional isEnabled As Boolean = false) As AlexaChannelProperties" />
      <MemberSignature Language="F#" Value="static member AlexaChannelProperties : string * string * Uri * bool -&gt; Azure.ResourceManager.BotService.Models.AlexaChannelProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.AlexaChannelProperties (alexaSkillId, uriFragment, serviceEndpointUri, isEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.AlexaChannelProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alexaSkillId" Type="System.String" />
        <Parameter Name="uriFragment" Type="System.String" />
        <Parameter Name="serviceEndpointUri" Type="System.Uri" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alexaSkillId"> The Alexa skill Id. </param>
        <param name="uriFragment"> Url fragment used in part of the Uri configured in Alexa. </param>
        <param name="serviceEndpointUri"> Full Uri used to configured the skill in Alexa. </param>
        <param name="isEnabled"> Whether this channel is enabled for the bot. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.AlexaChannelProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.AlexaChannelProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotChannelData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.BotChannelData BotChannelData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.BotService.Models.BotChannelProperties properties = default, Azure.ResourceManager.BotService.Models.BotServiceSku sku = default, Azure.ResourceManager.BotService.Models.BotServiceKind? kind = default, Azure.ETag? etag = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.BotChannelData BotChannelData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.BotService.Models.BotChannelProperties properties, class Azure.ResourceManager.BotService.Models.BotServiceSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotServiceKind&gt; kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.BotService.Models.BotChannelProperties,Azure.ResourceManager.BotService.Models.BotServiceSku,System.Nullable{Azure.ResourceManager.BotService.Models.BotServiceKind},System.Nullable{Azure.ETag},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotChannelData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As BotChannelProperties = Nothing, Optional sku As BotServiceSku = Nothing, Optional kind As Nullable(Of BotServiceKind) = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional zones As IEnumerable(Of String) = Nothing) As BotChannelData" />
      <MemberSignature Language="F#" Value="static member BotChannelData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.BotService.Models.BotChannelProperties * Azure.ResourceManager.BotService.Models.BotServiceSku * Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt; * Nullable&lt;Azure.ETag&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.BotService.BotChannelData" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelData (id, name, resourceType, systemData, tags, location, properties, sku, kind, etag, zones)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.BotChannelData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.BotChannelProperties" />
        <Parameter Name="sku" Type="Azure.ResourceManager.BotService.Models.BotServiceSku" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties">
            The set of properties specific to bot channel resource
            Please note <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.BotService.Models.AcsChatChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.AlexaChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.EmailChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.FacebookChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.KikChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.LineChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.M365Extensions" />, <see cref="T:Azure.ResourceManager.BotService.Models.MsTeamsChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.Omnichannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.OutlookChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SearchAssistant" />, <see cref="T:Azure.ResourceManager.BotService.Models.SkypeChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SlackChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SmsChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.TelegramChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.TelephonyChannel" /> and <see cref="T:Azure.ResourceManager.BotService.Models.WebChatChannel" />.
            </param>
        <param name="sku"> Gets or sets the SKU of the resource. </param>
        <param name="kind"> Required. Gets or sets the Kind of the resource. </param>
        <param name="etag"> Entity Tag. </param>
        <param name="zones"> Entity zones. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.BotChannelData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.BotChannelData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotChannelGetWithKeysResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotChannelGetWithKeysResult BotChannelGetWithKeysResult (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.BotService.Models.BotChannelProperties resource = default, Azure.ResourceManager.BotService.Models.BotChannelSettings setting = default, string provisioningState = default, string entityTag = default, string changedTime = default, Azure.ResourceManager.BotService.Models.BotChannelProperties properties = default, Azure.ResourceManager.BotService.Models.BotServiceSku sku = default, Azure.ResourceManager.BotService.Models.BotServiceKind? kind = default, Azure.ETag? etag = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotChannelGetWithKeysResult BotChannelGetWithKeysResult(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.BotService.Models.BotChannelProperties resource, class Azure.ResourceManager.BotService.Models.BotChannelSettings setting, string provisioningState, string entityTag, string changedTime, class Azure.ResourceManager.BotService.Models.BotChannelProperties properties, class Azure.ResourceManager.BotService.Models.BotServiceSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotServiceKind&gt; kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelGetWithKeysResult(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.BotService.Models.BotChannelProperties,Azure.ResourceManager.BotService.Models.BotChannelSettings,System.String,System.String,System.String,Azure.ResourceManager.BotService.Models.BotChannelProperties,Azure.ResourceManager.BotService.Models.BotServiceSku,System.Nullable{Azure.ResourceManager.BotService.Models.BotServiceKind},System.Nullable{Azure.ETag},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotChannelGetWithKeysResult (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional resource As BotChannelProperties = Nothing, Optional setting As BotChannelSettings = Nothing, Optional provisioningState As String = Nothing, Optional entityTag As String = Nothing, Optional changedTime As String = Nothing, Optional properties As BotChannelProperties = Nothing, Optional sku As BotServiceSku = Nothing, Optional kind As Nullable(Of BotServiceKind) = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional zones As IEnumerable(Of String) = Nothing) As BotChannelGetWithKeysResult" />
      <MemberSignature Language="F#" Value="static member BotChannelGetWithKeysResult : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.BotService.Models.BotChannelProperties * Azure.ResourceManager.BotService.Models.BotChannelSettings * string * string * string * Azure.ResourceManager.BotService.Models.BotChannelProperties * Azure.ResourceManager.BotService.Models.BotServiceSku * Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt; * Nullable&lt;Azure.ETag&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.BotService.Models.BotChannelGetWithKeysResult" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelGetWithKeysResult (id, name, resourceType, systemData, tags, location, resource, setting, provisioningState, entityTag, changedTime, properties, sku, kind, etag, zones)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotChannelGetWithKeysResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resource" Type="Azure.ResourceManager.BotService.Models.BotChannelProperties" />
        <Parameter Name="setting" Type="Azure.ResourceManager.BotService.Models.BotChannelSettings" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="entityTag" Type="System.String" />
        <Parameter Name="changedTime" Type="System.String" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.BotChannelProperties" />
        <Parameter Name="sku" Type="Azure.ResourceManager.BotService.Models.BotServiceSku" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="resource">
            The set of properties specific to bot channel resource
            Please note <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.BotService.Models.AcsChatChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.AlexaChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.EmailChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.FacebookChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.KikChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.LineChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.M365Extensions" />, <see cref="T:Azure.ResourceManager.BotService.Models.MsTeamsChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.Omnichannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.OutlookChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SearchAssistant" />, <see cref="T:Azure.ResourceManager.BotService.Models.SkypeChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SlackChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SmsChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.TelegramChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.TelephonyChannel" /> and <see cref="T:Azure.ResourceManager.BotService.Models.WebChatChannel" />.
            </param>
        <param name="setting"> Channel settings. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="entityTag"> Entity tag of the resource. </param>
        <param name="changedTime"> Changed time of the resource. </param>
        <param name="properties">
            The set of properties specific to bot channel resource
            Please note <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.BotService.Models.AcsChatChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.AlexaChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.EmailChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.FacebookChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.KikChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.LineChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.M365Extensions" />, <see cref="T:Azure.ResourceManager.BotService.Models.MsTeamsChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.Omnichannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.OutlookChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SearchAssistant" />, <see cref="T:Azure.ResourceManager.BotService.Models.SkypeChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SlackChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.SmsChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.TelegramChannel" />, <see cref="T:Azure.ResourceManager.BotService.Models.TelephonyChannel" /> and <see cref="T:Azure.ResourceManager.BotService.Models.WebChatChannel" />.
            </param>
        <param name="sku"> Gets or sets the SKU of the resource. </param>
        <param name="kind"> Required. Gets or sets the Kind of the resource. </param>
        <param name="etag"> Entity Tag. </param>
        <param name="zones"> Entity zones. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelGetWithKeysResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelGetWithKeysResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotChannelProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotChannelProperties BotChannelProperties (string channelName = default, Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotChannelProperties BotChannelProperties(string channelName, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelProperties(System.String,System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotChannelProperties (Optional channelName As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As BotChannelProperties" />
      <MemberSignature Language="F#" Value="static member BotChannelProperties : string * Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.BotService.Models.BotChannelProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelProperties (channelName, etag, provisioningState, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotChannelProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelName" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="channelName"> The channel name. </param>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotChannelSite">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotChannelSite BotChannelSite (Guid? tenantId = default, string siteId = default, string siteName = default, string key = default, string key2 = default, bool isEnabled = false, bool? isTokenEnabled = default, bool? isEndpointParametersEnabled = default, bool? isDetailedLoggingEnabled = default, bool? isBlockUserUploadEnabled = default, bool? isNoStorageEnabled = default, Azure.ETag? etag = default, string appId = default, bool? isV1Enabled = default, bool? isV3Enabled = default, bool? isSecureSiteEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; trustedOrigins = default, bool? isWebChatSpeechEnabled = default, bool? isWebchatPreviewEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotChannelSite BotChannelSite(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, string siteId, string siteName, string key, string key2, bool isEnabled, valuetype System.Nullable`1&lt;bool&gt; isTokenEnabled, valuetype System.Nullable`1&lt;bool&gt; isEndpointParametersEnabled, valuetype System.Nullable`1&lt;bool&gt; isDetailedLoggingEnabled, valuetype System.Nullable`1&lt;bool&gt; isBlockUserUploadEnabled, valuetype System.Nullable`1&lt;bool&gt; isNoStorageEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string appId, valuetype System.Nullable`1&lt;bool&gt; isV1Enabled, valuetype System.Nullable`1&lt;bool&gt; isV3Enabled, valuetype System.Nullable`1&lt;bool&gt; isSecureSiteEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; trustedOrigins, valuetype System.Nullable`1&lt;bool&gt; isWebChatSpeechEnabled, valuetype System.Nullable`1&lt;bool&gt; isWebchatPreviewEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelSite(System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotChannelSite (Optional tenantId As Nullable(Of Guid) = Nothing, Optional siteId As String = Nothing, Optional siteName As String = Nothing, Optional key As String = Nothing, Optional key2 As String = Nothing, Optional isEnabled As Boolean = false, Optional isTokenEnabled As Nullable(Of Boolean) = Nothing, Optional isEndpointParametersEnabled As Nullable(Of Boolean) = Nothing, Optional isDetailedLoggingEnabled As Nullable(Of Boolean) = Nothing, Optional isBlockUserUploadEnabled As Nullable(Of Boolean) = Nothing, Optional isNoStorageEnabled As Nullable(Of Boolean) = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional appId As String = Nothing, Optional isV1Enabled As Nullable(Of Boolean) = Nothing, Optional isV3Enabled As Nullable(Of Boolean) = Nothing, Optional isSecureSiteEnabled As Nullable(Of Boolean) = Nothing, Optional trustedOrigins As IEnumerable(Of String) = Nothing, Optional isWebChatSpeechEnabled As Nullable(Of Boolean) = Nothing, Optional isWebchatPreviewEnabled As Nullable(Of Boolean) = Nothing) As BotChannelSite" />
      <MemberSignature Language="F#" Value="static member BotChannelSite : Nullable&lt;Guid&gt; * string * string * string * string * bool * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.BotService.Models.BotChannelSite" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotChannelSite (tenantId, siteId, siteName, key, key2, isEnabled, isTokenEnabled, isEndpointParametersEnabled, isDetailedLoggingEnabled, isBlockUserUploadEnabled, isNoStorageEnabled, etag, appId, isV1Enabled, isV3Enabled, isSecureSiteEnabled, trustedOrigins, isWebChatSpeechEnabled, isWebchatPreviewEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotChannelSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="siteId" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="key2" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
        <Parameter Name="isTokenEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isEndpointParametersEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isDetailedLoggingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isBlockUserUploadEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isNoStorageEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="isV1Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isSecureSiteEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="trustedOrigins" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isWebChatSpeechEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isWebchatPreviewEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="tenantId"> Tenant Id. </param>
        <param name="siteId"> Site Id. </param>
        <param name="siteName"> Site name. </param>
        <param name="key"> Primary key. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="key2"> Secondary key. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="isEnabled"> Whether this site is enabled for DirectLine channel. </param>
        <param name="isTokenEnabled"> Whether this site is token enabled for channel. </param>
        <param name="isEndpointParametersEnabled"> Whether this site is EndpointParameters enabled for channel. </param>
        <param name="isDetailedLoggingEnabled"> Whether this site is disabled detailed logging for. </param>
        <param name="isBlockUserUploadEnabled"> Whether this site is enabled for block user upload. </param>
        <param name="isNoStorageEnabled"> Whether this no-storage site is disabled detailed logging for. </param>
        <param name="etag"> Entity Tag. </param>
        <param name="appId"> DirectLine application id. </param>
        <param name="isV1Enabled"> Whether this site is enabled for Bot Framework V1 protocol. </param>
        <param name="isV3Enabled"> Whether this site is enabled for Bot Framework V3 protocol. </param>
        <param name="isSecureSiteEnabled"> Whether this site is enabled for authentication with Bot Framework. </param>
        <param name="trustedOrigins"> List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True. </param>
        <param name="isWebChatSpeechEnabled"> Whether this site is enabled for Webchat Speech. </param>
        <param name="isWebchatPreviewEnabled"> Whether this site is enabled for preview versions of Webchat. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelSite" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotChannelSite" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotConnectionSettingData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.BotConnectionSettingData BotConnectionSettingData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties properties = default, Azure.ResourceManager.BotService.Models.BotServiceSku sku = default, Azure.ResourceManager.BotService.Models.BotServiceKind? kind = default, Azure.ETag? etag = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.BotConnectionSettingData BotConnectionSettingData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties properties, class Azure.ResourceManager.BotService.Models.BotServiceSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotServiceKind&gt; kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotConnectionSettingData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties,Azure.ResourceManager.BotService.Models.BotServiceSku,System.Nullable{Azure.ResourceManager.BotService.Models.BotServiceKind},System.Nullable{Azure.ETag},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotConnectionSettingData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As BotConnectionSettingProperties = Nothing, Optional sku As BotServiceSku = Nothing, Optional kind As Nullable(Of BotServiceKind) = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional zones As IEnumerable(Of String) = Nothing) As BotConnectionSettingData" />
      <MemberSignature Language="F#" Value="static member BotConnectionSettingData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties * Azure.ResourceManager.BotService.Models.BotServiceSku * Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt; * Nullable&lt;Azure.ETag&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.BotService.BotConnectionSettingData" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotConnectionSettingData (id, name, resourceType, systemData, tags, location, properties, sku, kind, etag, zones)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.BotConnectionSettingData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties" />
        <Parameter Name="sku" Type="Azure.ResourceManager.BotService.Models.BotServiceSku" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties"> The set of properties specific to bot channel resource. </param>
        <param name="sku"> Gets or sets the SKU of the resource. </param>
        <param name="kind"> Required. Gets or sets the Kind of the resource. </param>
        <param name="etag"> Entity Tag. </param>
        <param name="zones"> Entity zones. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.BotConnectionSettingData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.BotConnectionSettingData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotConnectionSettingProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties BotConnectionSettingProperties (string clientId = default, string settingId = default, string clientSecret = default, string scopes = default, string serviceProviderId = default, string serviceProviderDisplayName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.BotConnectionSettingParameter&gt; parameters = default, string provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties BotConnectionSettingProperties(string clientId, string settingId, string clientSecret, string scopes, string serviceProviderId, string serviceProviderDisplayName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.BotService.Models.BotConnectionSettingParameter&gt; parameters, string provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotConnectionSettingProperties(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.BotService.Models.BotConnectionSettingParameter},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotConnectionSettingProperties (Optional clientId As String = Nothing, Optional settingId As String = Nothing, Optional clientSecret As String = Nothing, Optional scopes As String = Nothing, Optional serviceProviderId As String = Nothing, Optional serviceProviderDisplayName As String = Nothing, Optional parameters As IEnumerable(Of BotConnectionSettingParameter) = Nothing, Optional provisioningState As String = Nothing) As BotConnectionSettingProperties" />
      <MemberSignature Language="F#" Value="static member BotConnectionSettingProperties : string * string * string * string * string * string * seq&lt;Azure.ResourceManager.BotService.Models.BotConnectionSettingParameter&gt; * string -&gt; Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotConnectionSettingProperties (clientId, settingId, clientSecret, scopes, serviceProviderId, serviceProviderDisplayName, parameters, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="settingId" Type="System.String" />
        <Parameter Name="clientSecret" Type="System.String" />
        <Parameter Name="scopes" Type="System.String" />
        <Parameter Name="serviceProviderId" Type="System.String" />
        <Parameter Name="serviceProviderDisplayName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.BotConnectionSettingParameter&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientId"> Client Id associated with the Connection Setting. </param>
        <param name="settingId"> Setting Id set by the service for the Connection Setting. </param>
        <param name="clientSecret"> Client Secret associated with the Connection Setting. </param>
        <param name="scopes"> Scopes associated with the Connection Setting. </param>
        <param name="serviceProviderId"> Service Provider Id associated with the Connection Setting. </param>
        <param name="serviceProviderDisplayName"> Service Provider Display Name associated with the Connection Setting. </param>
        <param name="parameters"> Service Provider Parameters associated with the Connection Setting. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotConnectionSettingProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotCreateEmailSignInUriResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotCreateEmailSignInUriResult BotCreateEmailSignInUriResult (Azure.Core.ResourceIdentifier id = default, Azure.Core.AzureLocation? location = default, Uri createEmailSignInUrlResponseUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotCreateEmailSignInUriResult BotCreateEmailSignInUriResult(class Azure.Core.ResourceIdentifier id, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class System.Uri createEmailSignInUrlResponseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotCreateEmailSignInUriResult(Azure.Core.ResourceIdentifier,System.Nullable{Azure.Core.AzureLocation},System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotCreateEmailSignInUriResult (Optional id As ResourceIdentifier = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional createEmailSignInUrlResponseUri As Uri = Nothing) As BotCreateEmailSignInUriResult" />
      <MemberSignature Language="F#" Value="static member BotCreateEmailSignInUriResult : Azure.Core.ResourceIdentifier * Nullable&lt;Azure.Core.AzureLocation&gt; * Uri -&gt; Azure.ResourceManager.BotService.Models.BotCreateEmailSignInUriResult" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotCreateEmailSignInUriResult (id, location, createEmailSignInUrlResponseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotCreateEmailSignInUriResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="createEmailSignInUrlResponseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="id"> Specifies the resource ID. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="createEmailSignInUrlResponseUri"> The set of properties specific to sign in url. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotCreateEmailSignInUriResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotCreateEmailSignInUriResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.BotData BotData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.BotService.Models.BotProperties properties = default, Azure.ResourceManager.BotService.Models.BotServiceSku sku = default, Azure.ResourceManager.BotService.Models.BotServiceKind? kind = default, Azure.ETag? etag = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.BotData BotData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.BotService.Models.BotProperties properties, class Azure.ResourceManager.BotService.Models.BotServiceSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotServiceKind&gt; kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.BotService.Models.BotProperties,Azure.ResourceManager.BotService.Models.BotServiceSku,System.Nullable{Azure.ResourceManager.BotService.Models.BotServiceKind},System.Nullable{Azure.ETag},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As BotProperties = Nothing, Optional sku As BotServiceSku = Nothing, Optional kind As Nullable(Of BotServiceKind) = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional zones As IEnumerable(Of String) = Nothing) As BotData" />
      <MemberSignature Language="F#" Value="static member BotData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.BotService.Models.BotProperties * Azure.ResourceManager.BotService.Models.BotServiceSku * Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt; * Nullable&lt;Azure.ETag&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.BotService.BotData" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotData (id, name, resourceType, systemData, tags, location, properties, sku, kind, etag, zones)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.BotData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.BotProperties" />
        <Parameter Name="sku" Type="Azure.ResourceManager.BotService.Models.BotServiceSku" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceKind&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties"> The set of properties specific to bot resource. </param>
        <param name="sku"> Gets or sets the SKU of the resource. </param>
        <param name="kind"> Required. Gets or sets the Kind of the resource. </param>
        <param name="etag"> Entity Tag. </param>
        <param name="zones"> Entity zones. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.BotData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.BotData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotProperties BotProperties (string displayName = default, string description = default, Uri iconUri = default, Uri endpoint = default, string endpointVersion = default, System.Collections.Generic.IDictionary&lt;string,string&gt; allSettings = default, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters = default, Uri manifestUri = default, Azure.ResourceManager.BotService.Models.BotMsaAppType? msaAppType = default, string msaAppId = default, string msaAppTenantId = default, Azure.Core.ResourceIdentifier msaAppMSIResourceId = default, System.Collections.Generic.IEnumerable&lt;string&gt; configuredChannels = default, System.Collections.Generic.IEnumerable&lt;string&gt; enabledChannels = default, string developerAppInsightKey = default, string developerAppInsightsApiKey = default, string developerAppInsightsApplicationId = default, System.Collections.Generic.IEnumerable&lt;string&gt; luisAppIds = default, string luisKey = default, bool? isCmekEnabled = default, Uri cmekKeyVaultUri = default, string cmekEncryptionStatus = default, Guid? tenantId = default, Azure.ResourceManager.BotService.Models.BotServicePublicNetworkAccess? publicNetworkAccess = default, bool? isStreamingSupported = default, bool? isDeveloperAppInsightsApiKeySet = default, string migrationToken = default, bool? isLocalAuthDisabled = default, string schemaTransformationVersion = default, Azure.Core.ResourceIdentifier storageResourceId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData&gt; privateEndpointConnections = default, string openWithHint = default, string appPasswordHint = default, string provisioningState = default, string publishingCredentials = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotProperties BotProperties(string displayName, string description, class System.Uri iconUri, class System.Uri endpoint, string endpointVersion, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; allSettings, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, class System.Uri manifestUri, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotMsaAppType&gt; msaAppType, string msaAppId, string msaAppTenantId, class Azure.Core.ResourceIdentifier msaAppMSIResourceId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; configuredChannels, class System.Collections.Generic.IEnumerable`1&lt;string&gt; enabledChannels, string developerAppInsightKey, string developerAppInsightsApiKey, string developerAppInsightsApplicationId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; luisAppIds, string luisKey, valuetype System.Nullable`1&lt;bool&gt; isCmekEnabled, class System.Uri cmekKeyVaultUri, string cmekEncryptionStatus, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotServicePublicNetworkAccess&gt; publicNetworkAccess, valuetype System.Nullable`1&lt;bool&gt; isStreamingSupported, valuetype System.Nullable`1&lt;bool&gt; isDeveloperAppInsightsApiKeySet, string migrationToken, valuetype System.Nullable`1&lt;bool&gt; isLocalAuthDisabled, string schemaTransformationVersion, class Azure.Core.ResourceIdentifier storageResourceId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData&gt; privateEndpointConnections, string openWithHint, string appPasswordHint, string provisioningState, string publishingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotProperties(System.String,System.String,System.Uri,System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Uri,System.Nullable{Azure.ResourceManager.BotService.Models.BotMsaAppType},System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Uri,System.String,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.BotService.Models.BotServicePublicNetworkAccess},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotProperties (Optional displayName As String = Nothing, Optional description As String = Nothing, Optional iconUri As Uri = Nothing, Optional endpoint As Uri = Nothing, Optional endpointVersion As String = Nothing, Optional allSettings As IDictionary(Of String, String) = Nothing, Optional parameters As IDictionary(Of String, String) = Nothing, Optional manifestUri As Uri = Nothing, Optional msaAppType As Nullable(Of BotMsaAppType) = Nothing, Optional msaAppId As String = Nothing, Optional msaAppTenantId As String = Nothing, Optional msaAppMSIResourceId As ResourceIdentifier = Nothing, Optional configuredChannels As IEnumerable(Of String) = Nothing, Optional enabledChannels As IEnumerable(Of String) = Nothing, Optional developerAppInsightKey As String = Nothing, Optional developerAppInsightsApiKey As String = Nothing, Optional developerAppInsightsApplicationId As String = Nothing, Optional luisAppIds As IEnumerable(Of String) = Nothing, Optional luisKey As String = Nothing, Optional isCmekEnabled As Nullable(Of Boolean) = Nothing, Optional cmekKeyVaultUri As Uri = Nothing, Optional cmekEncryptionStatus As String = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional publicNetworkAccess As Nullable(Of BotServicePublicNetworkAccess) = Nothing, Optional isStreamingSupported As Nullable(Of Boolean) = Nothing, Optional isDeveloperAppInsightsApiKeySet As Nullable(Of Boolean) = Nothing, Optional migrationToken As String = Nothing, Optional isLocalAuthDisabled As Nullable(Of Boolean) = Nothing, Optional schemaTransformationVersion As String = Nothing, Optional storageResourceId As ResourceIdentifier = Nothing, Optional privateEndpointConnections As IEnumerable(Of BotServicePrivateEndpointConnectionData) = Nothing, Optional openWithHint As String = Nothing, Optional appPasswordHint As String = Nothing, Optional provisioningState As String = Nothing, Optional publishingCredentials As String = Nothing) As BotProperties" />
      <MemberSignature Language="F#" Value="static member BotProperties : string * string * Uri * Uri * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Uri * Nullable&lt;Azure.ResourceManager.BotService.Models.BotMsaAppType&gt; * string * string * Azure.Core.ResourceIdentifier * seq&lt;string&gt; * seq&lt;string&gt; * string * string * string * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Uri * string * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.BotService.Models.BotServicePublicNetworkAccess&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * string * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData&gt; * string * string * string * string -&gt; Azure.ResourceManager.BotService.Models.BotProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotProperties (displayName, description, iconUri, endpoint, endpointVersion, allSettings, parameters, manifestUri, msaAppType, msaAppId, msaAppTenantId, msaAppMSIResourceId, configuredChannels, enabledChannels, developerAppInsightKey, developerAppInsightsApiKey, developerAppInsightsApplicationId, luisAppIds, luisKey, isCmekEnabled, cmekKeyVaultUri, cmekEncryptionStatus, tenantId, publicNetworkAccess, isStreamingSupported, isDeveloperAppInsightsApiKeySet, migrationToken, isLocalAuthDisabled, schemaTransformationVersion, storageResourceId, privateEndpointConnections, openWithHint, appPasswordHint, provisioningState, publishingCredentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="iconUri" Type="System.Uri" />
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="endpointVersion" Type="System.String" />
        <Parameter Name="allSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="manifestUri" Type="System.Uri" />
        <Parameter Name="msaAppType" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotMsaAppType&gt;" />
        <Parameter Name="msaAppId" Type="System.String" />
        <Parameter Name="msaAppTenantId" Type="System.String" />
        <Parameter Name="msaAppMSIResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="configuredChannels" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="enabledChannels" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="developerAppInsightKey" Type="System.String" />
        <Parameter Name="developerAppInsightsApiKey" Type="System.String" />
        <Parameter Name="developerAppInsightsApplicationId" Type="System.String" />
        <Parameter Name="luisAppIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="luisKey" Type="System.String" />
        <Parameter Name="isCmekEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cmekKeyVaultUri" Type="System.Uri" />
        <Parameter Name="cmekEncryptionStatus" Type="System.String" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotServicePublicNetworkAccess&gt;" />
        <Parameter Name="isStreamingSupported" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isDeveloperAppInsightsApiKeySet" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="migrationToken" Type="System.String" />
        <Parameter Name="isLocalAuthDisabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="schemaTransformationVersion" Type="System.String" />
        <Parameter Name="storageResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData&gt;" />
        <Parameter Name="openWithHint" Type="System.String" />
        <Parameter Name="appPasswordHint" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="publishingCredentials" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName"> The Name of the bot. </param>
        <param name="description"> The description of the bot. </param>
        <param name="iconUri"> The Icon Url of the bot. </param>
        <param name="endpoint"> The bot's endpoint. </param>
        <param name="endpointVersion"> The bot's endpoint version. </param>
        <param name="allSettings"> Contains resource all settings defined as key/value pairs. </param>
        <param name="parameters"> Contains resource parameters defined as key/value pairs. </param>
        <param name="manifestUri"> The bot's manifest url. </param>
        <param name="msaAppType"> Microsoft App Type for the bot. </param>
        <param name="msaAppId"> Microsoft App Id for the bot. </param>
        <param name="msaAppTenantId"> Microsoft App Tenant Id for the bot. </param>
        <param name="msaAppMSIResourceId"> Microsoft App Managed Identity Resource Id for the bot. </param>
        <param name="configuredChannels"> Collection of channels for which the bot is configured. </param>
        <param name="enabledChannels"> Collection of channels for which the bot is enabled. </param>
        <param name="developerAppInsightKey"> The Application Insights key. </param>
        <param name="developerAppInsightsApiKey"> The Application Insights Api Key. </param>
        <param name="developerAppInsightsApplicationId"> The Application Insights App Id. </param>
        <param name="luisAppIds"> Collection of LUIS App Ids. </param>
        <param name="luisKey"> The LUIS Key. </param>
        <param name="isCmekEnabled"> Whether Cmek is enabled. </param>
        <param name="cmekKeyVaultUri"> The CMK Url. </param>
        <param name="cmekEncryptionStatus"> The CMK encryption status. </param>
        <param name="tenantId"> The Tenant Id for the bot. </param>
        <param name="publicNetworkAccess"> Whether the bot is in an isolated network. </param>
        <param name="isStreamingSupported"> Whether the bot is streaming supported. </param>
        <param name="isDeveloperAppInsightsApiKeySet"> Whether the bot is developerAppInsightsApiKey set. </param>
        <param name="migrationToken"> Token used to migrate non Azure bot to azure subscription. </param>
        <param name="isLocalAuthDisabled"> Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication. </param>
        <param name="schemaTransformationVersion"> The channel schema transformation version for the bot. </param>
        <param name="storageResourceId"> The storage resourceId for the bot. </param>
        <param name="privateEndpointConnections"> List of Private Endpoint Connections configured for the bot. </param>
        <param name="openWithHint"> The hint to browser (e.g. protocol handler) on how to open the bot for authoring. </param>
        <param name="appPasswordHint"> The hint (e.g. keyVault secret resourceId) on how to fetch the app secret. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="publishingCredentials"> Publishing credentials of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServiceHostSettingsResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotServiceHostSettingsResult BotServiceHostSettingsResult (Uri oAuthUri = default, Uri toBotFromChannelOpenIdMetadataUri = default, string toBotFromChannelTokenIssuer = default, Uri toBotFromEmulatorOpenIdMetadataUri = default, Uri toChannelFromBotLoginUri = default, string toChannelFromBotOAuthScope = default, bool? validateAuthority = default, string botOpenIdMetadata = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotServiceHostSettingsResult BotServiceHostSettingsResult(class System.Uri oAuthUri, class System.Uri toBotFromChannelOpenIdMetadataUri, string toBotFromChannelTokenIssuer, class System.Uri toBotFromEmulatorOpenIdMetadataUri, class System.Uri toChannelFromBotLoginUri, string toChannelFromBotOAuthScope, valuetype System.Nullable`1&lt;bool&gt; validateAuthority, string botOpenIdMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceHostSettingsResult(System.Uri,System.Uri,System.String,System.Uri,System.Uri,System.String,System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServiceHostSettingsResult (Optional oAuthUri As Uri = Nothing, Optional toBotFromChannelOpenIdMetadataUri As Uri = Nothing, Optional toBotFromChannelTokenIssuer As String = Nothing, Optional toBotFromEmulatorOpenIdMetadataUri As Uri = Nothing, Optional toChannelFromBotLoginUri As Uri = Nothing, Optional toChannelFromBotOAuthScope As String = Nothing, Optional validateAuthority As Nullable(Of Boolean) = Nothing, Optional botOpenIdMetadata As String = Nothing) As BotServiceHostSettingsResult" />
      <MemberSignature Language="F#" Value="static member BotServiceHostSettingsResult : Uri * Uri * string * Uri * Uri * string * Nullable&lt;bool&gt; * string -&gt; Azure.ResourceManager.BotService.Models.BotServiceHostSettingsResult" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceHostSettingsResult (oAuthUri, toBotFromChannelOpenIdMetadataUri, toBotFromChannelTokenIssuer, toBotFromEmulatorOpenIdMetadataUri, toChannelFromBotLoginUri, toChannelFromBotOAuthScope, validateAuthority, botOpenIdMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotServiceHostSettingsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oAuthUri" Type="System.Uri" />
        <Parameter Name="toBotFromChannelOpenIdMetadataUri" Type="System.Uri" />
        <Parameter Name="toBotFromChannelTokenIssuer" Type="System.String" />
        <Parameter Name="toBotFromEmulatorOpenIdMetadataUri" Type="System.Uri" />
        <Parameter Name="toChannelFromBotLoginUri" Type="System.Uri" />
        <Parameter Name="toChannelFromBotOAuthScope" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="botOpenIdMetadata" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oAuthUri"> For in-conversation bot user authentication. </param>
        <param name="toBotFromChannelOpenIdMetadataUri"> For verifying incoming tokens from the channels. </param>
        <param name="toBotFromChannelTokenIssuer"> For verifying incoming tokens from the channels. </param>
        <param name="toBotFromEmulatorOpenIdMetadataUri"> For verifying incoming tokens from bot emulator. </param>
        <param name="toChannelFromBotLoginUri"> For getting access token to channels from bot host. </param>
        <param name="toChannelFromBotOAuthScope"> For getting access token to channels from bot host. </param>
        <param name="validateAuthority"> Per cloud OAuth setting on whether authority is validated. </param>
        <param name="botOpenIdMetadata"> Same as toBotFromChannelOpenIdMetadataUrl, used by SDK &lt; v4.12. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceHostSettingsResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceHostSettingsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServiceNameAvailabilityResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotServiceNameAvailabilityResult BotServiceNameAvailabilityResult (bool? isValid = default, string message = default, string absCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotServiceNameAvailabilityResult BotServiceNameAvailabilityResult(valuetype System.Nullable`1&lt;bool&gt; isValid, string message, string absCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceNameAvailabilityResult(System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServiceNameAvailabilityResult (Optional isValid As Nullable(Of Boolean) = Nothing, Optional message As String = Nothing, Optional absCode As String = Nothing) As BotServiceNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="static member BotServiceNameAvailabilityResult : Nullable&lt;bool&gt; * string * string -&gt; Azure.ResourceManager.BotService.Models.BotServiceNameAvailabilityResult" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceNameAvailabilityResult (isValid, message, absCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotServiceNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isValid" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="absCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isValid"> indicates if the bot name is valid. </param>
        <param name="message"> additional message from the bot management api showing why a bot name is not available. </param>
        <param name="absCode"> response code from ABS. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceNameAvailabilityResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceNameAvailabilityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServicePrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData BotServicePrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.BotService.Models.BotServicePrivateLinkServiceConnectionState connectionState = default, Azure.ResourceManager.BotService.Models.BotServicePrivateEndpointConnectionProvisioningState? provisioningState = default, System.Collections.Generic.IEnumerable&lt;string&gt; groupIds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData BotServicePrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.BotService.Models.BotServicePrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotServicePrivateEndpointConnectionProvisioningState&gt; provisioningState, class System.Collections.Generic.IEnumerable`1&lt;string&gt; groupIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServicePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.BotService.Models.BotServicePrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.BotService.Models.BotServicePrivateEndpointConnectionProvisioningState},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServicePrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As BotServicePrivateLinkServiceConnectionState = Nothing, Optional provisioningState As Nullable(Of BotServicePrivateEndpointConnectionProvisioningState) = Nothing, Optional groupIds As IEnumerable(Of String) = Nothing) As BotServicePrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member BotServicePrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.BotService.Models.BotServicePrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.BotService.Models.BotServicePrivateEndpointConnectionProvisioningState&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServicePrivateEndpointConnectionData (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState, groupIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.BotService.Models.BotServicePrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotServicePrivateEndpointConnectionProvisioningState&gt;" />
        <Parameter Name="groupIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private end point. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
        <param name="groupIds"> Group ids. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.BotServicePrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServicePrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotServicePrivateLinkResourceData BotServicePrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotServicePrivateLinkResourceData BotServicePrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServicePrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServicePrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As BotServicePrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member BotServicePrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.BotService.Models.BotServicePrivateLinkResourceData" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServicePrivateLinkResourceData (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotServicePrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotServicePrivateLinkResourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotServicePrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServiceProvider">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotServiceProvider BotServiceProvider (Azure.ResourceManager.BotService.Models.BotServiceProviderProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotServiceProvider BotServiceProvider(class Azure.ResourceManager.BotService.Models.BotServiceProviderProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceProvider(Azure.ResourceManager.BotService.Models.BotServiceProviderProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServiceProvider (Optional properties As BotServiceProviderProperties = Nothing) As BotServiceProvider" />
      <MemberSignature Language="F#" Value="static member BotServiceProvider : Azure.ResourceManager.BotService.Models.BotServiceProviderProperties -&gt; Azure.ResourceManager.BotService.Models.BotServiceProvider" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceProvider properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.BotServiceProviderProperties" />
      </Parameters>
      <Docs>
        <param name="properties"> The Properties of a Service Provider Object. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceProvider" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceProvider" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServiceProviderParameter">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotServiceProviderParameter BotServiceProviderParameter (string name = default, string serviceProviderParameterType = default, string displayName = default, string description = default, Uri helpUri = default, string default = default, bool? isRequired = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotServiceProviderParameter BotServiceProviderParameter(string name, string serviceProviderParameterType, string displayName, string description, class System.Uri helpUri, string default, valuetype System.Nullable`1&lt;bool&gt; isRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceProviderParameter(System.String,System.String,System.String,System.String,System.Uri,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServiceProviderParameter (Optional name As String = Nothing, Optional serviceProviderParameterType As String = Nothing, Optional displayName As String = Nothing, Optional description As String = Nothing, Optional helpUri As Uri = Nothing, Optional default As String = Nothing, Optional isRequired As Nullable(Of Boolean) = Nothing) As BotServiceProviderParameter" />
      <MemberSignature Language="F#" Value="static member BotServiceProviderParameter : string * string * string * string * Uri * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.BotService.Models.BotServiceProviderParameter" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceProviderParameter (name, serviceProviderParameterType, displayName, description, helpUri, default, isRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotServiceProviderParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceProviderParameterType" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="helpUri" Type="System.Uri" />
        <Parameter Name="default" Type="System.String" />
        <Parameter Name="isRequired" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the Service Provider. </param>
        <param name="serviceProviderParameterType"> Type of the Service Provider. </param>
        <param name="displayName"> Display Name of the Service Provider. </param>
        <param name="description"> Description of the Service Provider. </param>
        <param name="helpUri"> Help Url for the  Service Provider. </param>
        <param name="default"> Default Name for the Service Provider. </param>
        <param name="isRequired"> Meta data for the Service Provider. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceProviderParameter" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceProviderParameter" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServiceProviderProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotServiceProviderProperties BotServiceProviderProperties (string id = default, string displayName = default, string serviceProviderName = default, Uri devPortalUri = default, Uri iconUri = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.BotServiceProviderParameter&gt; parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotServiceProviderProperties BotServiceProviderProperties(string id, string displayName, string serviceProviderName, class System.Uri devPortalUri, class System.Uri iconUri, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.BotService.Models.BotServiceProviderParameter&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceProviderProperties(System.String,System.String,System.String,System.Uri,System.Uri,System.Collections.Generic.IEnumerable{Azure.ResourceManager.BotService.Models.BotServiceProviderParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServiceProviderProperties (Optional id As String = Nothing, Optional displayName As String = Nothing, Optional serviceProviderName As String = Nothing, Optional devPortalUri As Uri = Nothing, Optional iconUri As Uri = Nothing, Optional parameters As IEnumerable(Of BotServiceProviderParameter) = Nothing) As BotServiceProviderProperties" />
      <MemberSignature Language="F#" Value="static member BotServiceProviderProperties : string * string * string * Uri * Uri * seq&lt;Azure.ResourceManager.BotService.Models.BotServiceProviderParameter&gt; -&gt; Azure.ResourceManager.BotService.Models.BotServiceProviderProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceProviderProperties (id, displayName, serviceProviderName, devPortalUri, iconUri, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotServiceProviderProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="serviceProviderName" Type="System.String" />
        <Parameter Name="devPortalUri" Type="System.Uri" />
        <Parameter Name="iconUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.BotServiceProviderParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Id for Service Provider. </param>
        <param name="displayName"> Display Name of the Service Provider. </param>
        <param name="serviceProviderName"> Name of the Service Provider. </param>
        <param name="devPortalUri"> URL of Dev Portal. </param>
        <param name="iconUri"> The URL of icon. </param>
        <param name="parameters"> The list of parameters for the Service Provider. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceProviderProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceProviderProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BotServiceSku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.BotServiceSku BotServiceSku (Azure.ResourceManager.BotService.Models.BotServiceSkuName name = default, Azure.ResourceManager.BotService.Models.BotServiceSkuTier? tier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.BotServiceSku BotServiceSku(valuetype Azure.ResourceManager.BotService.Models.BotServiceSkuName name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.BotService.Models.BotServiceSkuTier&gt; tier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceSku(Azure.ResourceManager.BotService.Models.BotServiceSkuName,System.Nullable{Azure.ResourceManager.BotService.Models.BotServiceSkuTier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BotServiceSku (Optional name As BotServiceSkuName = Nothing, Optional tier As Nullable(Of BotServiceSkuTier) = Nothing) As BotServiceSku" />
      <MemberSignature Language="F#" Value="static member BotServiceSku : Azure.ResourceManager.BotService.Models.BotServiceSkuName * Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceSkuTier&gt; -&gt; Azure.ResourceManager.BotService.Models.BotServiceSku" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.BotServiceSku (name, tier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.BotServiceSku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Azure.ResourceManager.BotService.Models.BotServiceSkuName" />
        <Parameter Name="tier" Type="System.Nullable&lt;Azure.ResourceManager.BotService.Models.BotServiceSkuTier&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The sku name. </param>
        <param name="tier"> Gets the sku tier. This is based on the SKU name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceSku" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.BotServiceSku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectLineChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.DirectLineChannel DirectLineChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.DirectLineChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.DirectLineChannel DirectLineChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.DirectLineChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.DirectLineChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.DirectLineChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DirectLineChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As DirectLineChannelProperties = Nothing) As DirectLineChannel" />
      <MemberSignature Language="F#" Value="static member DirectLineChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.DirectLineChannelProperties -&gt; Azure.ResourceManager.BotService.Models.DirectLineChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.DirectLineChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.DirectLineChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.DirectLineChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Direct Line channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectLineSite">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.DirectLineSite DirectLineSite (Guid? tenantId = default, string siteId = default, string siteName = default, string key = default, string key2 = default, bool isEnabled = false, bool? isTokenEnabled = default, bool? isEndpointParametersEnabled = default, bool? isDetailedLoggingEnabled = default, bool? isBlockUserUploadEnabled = default, bool? isNoStorageEnabled = default, Azure.ETag? etag = default, string appId = default, bool? isV1Enabled = default, bool? isV3Enabled = default, bool? isSecureSiteEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; trustedOrigins = default, bool? isWebChatSpeechEnabled = default, bool? isWebchatPreviewEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.DirectLineSite DirectLineSite(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, string siteId, string siteName, string key, string key2, bool isEnabled, valuetype System.Nullable`1&lt;bool&gt; isTokenEnabled, valuetype System.Nullable`1&lt;bool&gt; isEndpointParametersEnabled, valuetype System.Nullable`1&lt;bool&gt; isDetailedLoggingEnabled, valuetype System.Nullable`1&lt;bool&gt; isBlockUserUploadEnabled, valuetype System.Nullable`1&lt;bool&gt; isNoStorageEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string appId, valuetype System.Nullable`1&lt;bool&gt; isV1Enabled, valuetype System.Nullable`1&lt;bool&gt; isV3Enabled, valuetype System.Nullable`1&lt;bool&gt; isSecureSiteEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; trustedOrigins, valuetype System.Nullable`1&lt;bool&gt; isWebChatSpeechEnabled, valuetype System.Nullable`1&lt;bool&gt; isWebchatPreviewEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.DirectLineSite(System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DirectLineSite (Optional tenantId As Nullable(Of Guid) = Nothing, Optional siteId As String = Nothing, Optional siteName As String = Nothing, Optional key As String = Nothing, Optional key2 As String = Nothing, Optional isEnabled As Boolean = false, Optional isTokenEnabled As Nullable(Of Boolean) = Nothing, Optional isEndpointParametersEnabled As Nullable(Of Boolean) = Nothing, Optional isDetailedLoggingEnabled As Nullable(Of Boolean) = Nothing, Optional isBlockUserUploadEnabled As Nullable(Of Boolean) = Nothing, Optional isNoStorageEnabled As Nullable(Of Boolean) = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional appId As String = Nothing, Optional isV1Enabled As Nullable(Of Boolean) = Nothing, Optional isV3Enabled As Nullable(Of Boolean) = Nothing, Optional isSecureSiteEnabled As Nullable(Of Boolean) = Nothing, Optional trustedOrigins As IEnumerable(Of String) = Nothing, Optional isWebChatSpeechEnabled As Nullable(Of Boolean) = Nothing, Optional isWebchatPreviewEnabled As Nullable(Of Boolean) = Nothing) As DirectLineSite" />
      <MemberSignature Language="F#" Value="static member DirectLineSite : Nullable&lt;Guid&gt; * string * string * string * string * bool * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.BotService.Models.DirectLineSite" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.DirectLineSite (tenantId, siteId, siteName, key, key2, isEnabled, isTokenEnabled, isEndpointParametersEnabled, isDetailedLoggingEnabled, isBlockUserUploadEnabled, isNoStorageEnabled, etag, appId, isV1Enabled, isV3Enabled, isSecureSiteEnabled, trustedOrigins, isWebChatSpeechEnabled, isWebchatPreviewEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.DirectLineSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="siteId" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="key2" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
        <Parameter Name="isTokenEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isEndpointParametersEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isDetailedLoggingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isBlockUserUploadEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isNoStorageEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="isV1Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isSecureSiteEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="trustedOrigins" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isWebChatSpeechEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isWebchatPreviewEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="tenantId"> Tenant Id. </param>
        <param name="siteId"> Site Id. </param>
        <param name="siteName"> Site name. </param>
        <param name="key"> Primary key. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="key2"> Secondary key. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="isEnabled"> Whether this site is enabled for DirectLine channel. </param>
        <param name="isTokenEnabled"> Whether this site is token enabled for channel. </param>
        <param name="isEndpointParametersEnabled"> Whether this site is EndpointParameters enabled for channel. </param>
        <param name="isDetailedLoggingEnabled"> Whether this site is disabled detailed logging for. </param>
        <param name="isBlockUserUploadEnabled"> Whether this site is enabled for block user upload. </param>
        <param name="isNoStorageEnabled"> Whether this no-storage site is disabled detailed logging for. </param>
        <param name="etag"> Entity Tag. </param>
        <param name="appId"> DirectLine application id. </param>
        <param name="isV1Enabled"> Whether this site is enabled for Bot Framework V1 protocol. </param>
        <param name="isV3Enabled"> Whether this site is enabled for Bot Framework V3 protocol. </param>
        <param name="isSecureSiteEnabled"> Whether this site is enabled for authentication with Bot Framework. </param>
        <param name="trustedOrigins"> List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True. </param>
        <param name="isWebChatSpeechEnabled"> Whether this site is enabled for Webchat Speech. </param>
        <param name="isWebchatPreviewEnabled"> Whether this site is enabled for preview versions of Webchat. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineSite" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineSite" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectLineSpeechChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel DirectLineSpeechChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.DirectLineSpeechChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel DirectLineSpeechChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.DirectLineSpeechChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.DirectLineSpeechChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.DirectLineSpeechChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DirectLineSpeechChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As DirectLineSpeechChannelProperties = Nothing) As DirectLineSpeechChannel" />
      <MemberSignature Language="F#" Value="static member DirectLineSpeechChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.DirectLineSpeechChannelProperties -&gt; Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.DirectLineSpeechChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.DirectLineSpeechChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to DirectLine Speech channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.DirectLineSpeechChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.EmailChannel EmailChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.EmailChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.EmailChannel EmailChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.EmailChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.EmailChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.EmailChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EmailChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As EmailChannelProperties = Nothing) As EmailChannel" />
      <MemberSignature Language="F#" Value="static member EmailChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.EmailChannelProperties -&gt; Azure.ResourceManager.BotService.Models.EmailChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.EmailChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.EmailChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.EmailChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to email channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.EmailChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.EmailChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FacebookChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.FacebookChannel FacebookChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.FacebookChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.FacebookChannel FacebookChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.FacebookChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.FacebookChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.FacebookChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FacebookChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As FacebookChannelProperties = Nothing) As FacebookChannel" />
      <MemberSignature Language="F#" Value="static member FacebookChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.FacebookChannelProperties -&gt; Azure.ResourceManager.BotService.Models.FacebookChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.FacebookChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.FacebookChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.FacebookChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to bot facebook channel. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.FacebookChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.FacebookChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FacebookChannelProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.FacebookChannelProperties FacebookChannelProperties (string verifyToken = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.FacebookPage&gt; pages = default, string appId = default, string appSecret = default, Uri callbackUri = default, bool isEnabled = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.FacebookChannelProperties FacebookChannelProperties(string verifyToken, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.BotService.Models.FacebookPage&gt; pages, string appId, string appSecret, class System.Uri callbackUri, bool isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.FacebookChannelProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.BotService.Models.FacebookPage},System.String,System.String,System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FacebookChannelProperties (Optional verifyToken As String = Nothing, Optional pages As IEnumerable(Of FacebookPage) = Nothing, Optional appId As String = Nothing, Optional appSecret As String = Nothing, Optional callbackUri As Uri = Nothing, Optional isEnabled As Boolean = false) As FacebookChannelProperties" />
      <MemberSignature Language="F#" Value="static member FacebookChannelProperties : string * seq&lt;Azure.ResourceManager.BotService.Models.FacebookPage&gt; * string * string * Uri * bool -&gt; Azure.ResourceManager.BotService.Models.FacebookChannelProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.FacebookChannelProperties (verifyToken, pages, appId, appSecret, callbackUri, isEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.FacebookChannelProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifyToken" Type="System.String" />
        <Parameter Name="pages" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.FacebookPage&gt;" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="appSecret" Type="System.String" />
        <Parameter Name="callbackUri" Type="System.Uri" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifyToken"> Verify token. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="pages"> The list of Facebook pages. </param>
        <param name="appId"> Facebook application id. </param>
        <param name="appSecret"> Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="callbackUri"> Callback Url. </param>
        <param name="isEnabled"> Whether this channel is enabled for the bot. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.FacebookChannelProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.FacebookChannelProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBotServiceQnAMakerEndpointKeyResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.GetBotServiceQnAMakerEndpointKeyResult GetBotServiceQnAMakerEndpointKeyResult (string primaryEndpointKey = default, string secondaryEndpointKey = default, string installedVersion = default, string lastStableVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.GetBotServiceQnAMakerEndpointKeyResult GetBotServiceQnAMakerEndpointKeyResult(string primaryEndpointKey, string secondaryEndpointKey, string installedVersion, string lastStableVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.GetBotServiceQnAMakerEndpointKeyResult(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBotServiceQnAMakerEndpointKeyResult (Optional primaryEndpointKey As String = Nothing, Optional secondaryEndpointKey As String = Nothing, Optional installedVersion As String = Nothing, Optional lastStableVersion As String = Nothing) As GetBotServiceQnAMakerEndpointKeyResult" />
      <MemberSignature Language="F#" Value="static member GetBotServiceQnAMakerEndpointKeyResult : string * string * string * string -&gt; Azure.ResourceManager.BotService.Models.GetBotServiceQnAMakerEndpointKeyResult" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.GetBotServiceQnAMakerEndpointKeyResult (primaryEndpointKey, secondaryEndpointKey, installedVersion, lastStableVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.GetBotServiceQnAMakerEndpointKeyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryEndpointKey" Type="System.String" />
        <Parameter Name="secondaryEndpointKey" Type="System.String" />
        <Parameter Name="installedVersion" Type="System.String" />
        <Parameter Name="lastStableVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primaryEndpointKey"> Primary Access Key. </param>
        <param name="secondaryEndpointKey"> Secondary Access Key. </param>
        <param name="installedVersion"> Current version of runtime. </param>
        <param name="lastStableVersion"> Latest version of runtime. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.GetBotServiceQnAMakerEndpointKeyResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.GetBotServiceQnAMakerEndpointKeyResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KikChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.KikChannel KikChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.KikChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.KikChannel KikChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.KikChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.KikChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.KikChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KikChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As KikChannelProperties = Nothing) As KikChannel" />
      <MemberSignature Language="F#" Value="static member KikChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.KikChannelProperties -&gt; Azure.ResourceManager.BotService.Models.KikChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.KikChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.KikChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.KikChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Kik channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.KikChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.KikChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.LineChannel LineChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.LineChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.LineChannel LineChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.LineChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.LineChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.LineChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LineChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As LineChannelProperties = Nothing) As LineChannel" />
      <MemberSignature Language="F#" Value="static member LineChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.LineChannelProperties -&gt; Azure.ResourceManager.BotService.Models.LineChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.LineChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.LineChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.LineChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to line channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.LineChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.LineChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineChannelProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.LineChannelProperties LineChannelProperties (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.LineRegistration&gt; lineRegistrations = default, Uri callbackUri = default, bool? isValidated = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.LineChannelProperties LineChannelProperties(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.BotService.Models.LineRegistration&gt; lineRegistrations, class System.Uri callbackUri, valuetype System.Nullable`1&lt;bool&gt; isValidated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.LineChannelProperties(System.Collections.Generic.IEnumerable{Azure.ResourceManager.BotService.Models.LineRegistration},System.Uri,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LineChannelProperties (Optional lineRegistrations As IEnumerable(Of LineRegistration) = Nothing, Optional callbackUri As Uri = Nothing, Optional isValidated As Nullable(Of Boolean) = Nothing) As LineChannelProperties" />
      <MemberSignature Language="F#" Value="static member LineChannelProperties : seq&lt;Azure.ResourceManager.BotService.Models.LineRegistration&gt; * Uri * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.BotService.Models.LineChannelProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.LineChannelProperties (lineRegistrations, callbackUri, isValidated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.LineChannelProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineRegistrations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.LineRegistration&gt;" />
        <Parameter Name="callbackUri" Type="System.Uri" />
        <Parameter Name="isValidated" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="lineRegistrations"> The list of line channel registrations. </param>
        <param name="callbackUri"> Callback Url to enter in line registration. </param>
        <param name="isValidated"> Whether this channel is validated for the bot. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.LineChannelProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.LineChannelProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineRegistration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.LineRegistration LineRegistration (string generatedId = default, string channelSecret = default, string channelAccessToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.LineRegistration LineRegistration(string generatedId, string channelSecret, string channelAccessToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.LineRegistration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LineRegistration (Optional generatedId As String = Nothing, Optional channelSecret As String = Nothing, Optional channelAccessToken As String = Nothing) As LineRegistration" />
      <MemberSignature Language="F#" Value="static member LineRegistration : string * string * string -&gt; Azure.ResourceManager.BotService.Models.LineRegistration" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.LineRegistration (generatedId, channelSecret, channelAccessToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.LineRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatedId" Type="System.String" />
        <Parameter Name="channelSecret" Type="System.String" />
        <Parameter Name="channelAccessToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="generatedId"> Id generated for the line channel registration. </param>
        <param name="channelSecret"> Secret for the line channel registration. </param>
        <param name="channelAccessToken"> Access token for the line channel registration. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.LineRegistration" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.LineRegistration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="M365Extensions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.M365Extensions M365Extensions (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.M365Extensions M365Extensions(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.M365Extensions(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function M365Extensions (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As M365Extensions" />
      <MemberSignature Language="F#" Value="static member M365Extensions : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.BotService.Models.M365Extensions" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.M365Extensions (etag, provisioningState, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.M365Extensions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.M365Extensions" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.M365Extensions" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MsTeamsChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.MsTeamsChannel MsTeamsChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.MsTeamsChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.MsTeamsChannel MsTeamsChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.MsTeamsChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.MsTeamsChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.MsTeamsChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MsTeamsChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As MsTeamsChannelProperties = Nothing) As MsTeamsChannel" />
      <MemberSignature Language="F#" Value="static member MsTeamsChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.MsTeamsChannelProperties -&gt; Azure.ResourceManager.BotService.Models.MsTeamsChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.MsTeamsChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.MsTeamsChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.MsTeamsChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Microsoft Teams channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.MsTeamsChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.MsTeamsChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Omnichannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.Omnichannel Omnichannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.Omnichannel Omnichannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.Omnichannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Omnichannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As Omnichannel" />
      <MemberSignature Language="F#" Value="static member Omnichannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.BotService.Models.Omnichannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.Omnichannel (etag, provisioningState, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.Omnichannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.Omnichannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.Omnichannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlookChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.OutlookChannel OutlookChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.OutlookChannel OutlookChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.OutlookChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OutlookChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As OutlookChannel" />
      <MemberSignature Language="F#" Value="static member OutlookChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.BotService.Models.OutlookChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.OutlookChannel (etag, provisioningState, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.OutlookChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.OutlookChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.OutlookChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchAssistant">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.SearchAssistant SearchAssistant (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.SearchAssistant SearchAssistant(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SearchAssistant(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SearchAssistant (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As SearchAssistant" />
      <MemberSignature Language="F#" Value="static member SearchAssistant : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.BotService.Models.SearchAssistant" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SearchAssistant (etag, provisioningState, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.SearchAssistant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.SearchAssistant" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.SearchAssistant" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkypeChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.SkypeChannel SkypeChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.SkypeChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.SkypeChannel SkypeChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.SkypeChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SkypeChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.SkypeChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkypeChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As SkypeChannelProperties = Nothing) As SkypeChannel" />
      <MemberSignature Language="F#" Value="static member SkypeChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.SkypeChannelProperties -&gt; Azure.ResourceManager.BotService.Models.SkypeChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SkypeChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.SkypeChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.SkypeChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Skype channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.SkypeChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.SkypeChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SlackChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.SlackChannel SlackChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.SlackChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.SlackChannel SlackChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.SlackChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SlackChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.SlackChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SlackChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As SlackChannelProperties = Nothing) As SlackChannel" />
      <MemberSignature Language="F#" Value="static member SlackChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.SlackChannelProperties -&gt; Azure.ResourceManager.BotService.Models.SlackChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SlackChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.SlackChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.SlackChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Slack channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.SlackChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.SlackChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SlackChannelProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.SlackChannelProperties SlackChannelProperties (string clientId = default, string clientSecret = default, string verificationToken = default, string scopes = default, Uri landingPageUri = default, string redirectAction = default, string lastSubmissionId = default, bool? registerBeforeOAuthFlow = default, bool? isValidated = default, string signingSecret = default, bool isEnabled = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.SlackChannelProperties SlackChannelProperties(string clientId, string clientSecret, string verificationToken, string scopes, class System.Uri landingPageUri, string redirectAction, string lastSubmissionId, valuetype System.Nullable`1&lt;bool&gt; registerBeforeOAuthFlow, valuetype System.Nullable`1&lt;bool&gt; isValidated, string signingSecret, bool isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SlackChannelProperties(System.String,System.String,System.String,System.String,System.Uri,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SlackChannelProperties (Optional clientId As String = Nothing, Optional clientSecret As String = Nothing, Optional verificationToken As String = Nothing, Optional scopes As String = Nothing, Optional landingPageUri As Uri = Nothing, Optional redirectAction As String = Nothing, Optional lastSubmissionId As String = Nothing, Optional registerBeforeOAuthFlow As Nullable(Of Boolean) = Nothing, Optional isValidated As Nullable(Of Boolean) = Nothing, Optional signingSecret As String = Nothing, Optional isEnabled As Boolean = false) As SlackChannelProperties" />
      <MemberSignature Language="F#" Value="static member SlackChannelProperties : string * string * string * string * Uri * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * bool -&gt; Azure.ResourceManager.BotService.Models.SlackChannelProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SlackChannelProperties (clientId, clientSecret, verificationToken, scopes, landingPageUri, redirectAction, lastSubmissionId, registerBeforeOAuthFlow, isValidated, signingSecret, isEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.SlackChannelProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="clientSecret" Type="System.String" />
        <Parameter Name="verificationToken" Type="System.String" />
        <Parameter Name="scopes" Type="System.String" />
        <Parameter Name="landingPageUri" Type="System.Uri" />
        <Parameter Name="redirectAction" Type="System.String" />
        <Parameter Name="lastSubmissionId" Type="System.String" />
        <Parameter Name="registerBeforeOAuthFlow" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isValidated" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="signingSecret" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clientId"> The Slack client id. </param>
        <param name="clientSecret"> The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="verificationToken"> The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="scopes"> The Slack permission scopes. </param>
        <param name="landingPageUri"> The Slack landing page Url. </param>
        <param name="redirectAction"> The Slack redirect action. </param>
        <param name="lastSubmissionId"> The Sms auth token. </param>
        <param name="registerBeforeOAuthFlow"> Whether to register the settings before OAuth validation is performed. Recommended to True. </param>
        <param name="isValidated"> Whether this channel is validated for the bot. </param>
        <param name="signingSecret"> The Slack signing secret. </param>
        <param name="isEnabled"> Whether this channel is enabled for the bot. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.SlackChannelProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.SlackChannelProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmsChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.SmsChannel SmsChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.SmsChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.SmsChannel SmsChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.SmsChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SmsChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.SmsChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SmsChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As SmsChannelProperties = Nothing) As SmsChannel" />
      <MemberSignature Language="F#" Value="static member SmsChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.SmsChannelProperties -&gt; Azure.ResourceManager.BotService.Models.SmsChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.SmsChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.SmsChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.SmsChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Sms channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.SmsChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.SmsChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TelegramChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.TelegramChannel TelegramChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.TelegramChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.TelegramChannel TelegramChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.TelegramChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.TelegramChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.TelegramChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TelegramChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As TelegramChannelProperties = Nothing) As TelegramChannel" />
      <MemberSignature Language="F#" Value="static member TelegramChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.TelegramChannelProperties -&gt; Azure.ResourceManager.BotService.Models.TelegramChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.TelegramChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.TelegramChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.TelegramChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Telegram channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.TelegramChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.TelegramChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TelephonyChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.TelephonyChannel TelephonyChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.TelephonyChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.TelephonyChannel TelephonyChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.TelephonyChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.TelephonyChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.TelephonyChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TelephonyChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As TelephonyChannelProperties = Nothing) As TelephonyChannel" />
      <MemberSignature Language="F#" Value="static member TelephonyChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.TelephonyChannelProperties -&gt; Azure.ResourceManager.BotService.Models.TelephonyChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.TelephonyChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.TelephonyChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.TelephonyChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Telephony channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.TelephonyChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.TelephonyChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebChatChannel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.WebChatChannel WebChatChannel (Azure.ETag? etag = default, string provisioningState = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.BotService.Models.WebChatChannelProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.WebChatChannel WebChatChannel(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.BotService.Models.WebChatChannelProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.WebChatChannel(System.Nullable{Azure.ETag},System.String,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.BotService.Models.WebChatChannelProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WebChatChannel (Optional etag As Nullable(Of ETag) = Nothing, Optional provisioningState As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As WebChatChannelProperties = Nothing) As WebChatChannel" />
      <MemberSignature Language="F#" Value="static member WebChatChannel : Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.BotService.Models.WebChatChannelProperties -&gt; Azure.ResourceManager.BotService.Models.WebChatChannel" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.WebChatChannel (etag, provisioningState, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.WebChatChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.BotService.Models.WebChatChannelProperties" />
      </Parameters>
      <Docs>
        <param name="etag"> Entity Tag of the resource. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <param name="location"> Specifies the location of the resource. </param>
        <param name="properties"> The set of properties specific to Web Chat channel resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.WebChatChannel" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.WebChatChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebChatChannelProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.WebChatChannelProperties WebChatChannelProperties (string webChatEmbedCode = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.WebChatSite&gt; sites = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.WebChatChannelProperties WebChatChannelProperties(string webChatEmbedCode, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.BotService.Models.WebChatSite&gt; sites) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.WebChatChannelProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.BotService.Models.WebChatSite})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WebChatChannelProperties (Optional webChatEmbedCode As String = Nothing, Optional sites As IEnumerable(Of WebChatSite) = Nothing) As WebChatChannelProperties" />
      <MemberSignature Language="F#" Value="static member WebChatChannelProperties : string * seq&lt;Azure.ResourceManager.BotService.Models.WebChatSite&gt; -&gt; Azure.ResourceManager.BotService.Models.WebChatChannelProperties" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.WebChatChannelProperties (webChatEmbedCode, sites)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.WebChatChannelProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webChatEmbedCode" Type="System.String" />
        <Parameter Name="sites" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.BotService.Models.WebChatSite&gt;" />
      </Parameters>
      <Docs>
        <param name="webChatEmbedCode"> Web chat control embed code. </param>
        <param name="sites"> The list of Web Chat sites. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.WebChatChannelProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.WebChatChannelProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebChatSite">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.BotService.Models.WebChatSite WebChatSite (Guid? tenantId = default, string siteId = default, string siteName = default, string key = default, string key2 = default, bool isEnabled = false, bool? isTokenEnabled = default, bool? isEndpointParametersEnabled = default, bool? isDetailedLoggingEnabled = default, bool? isBlockUserUploadEnabled = default, bool? isNoStorageEnabled = default, Azure.ETag? etag = default, string appId = default, bool? isV1Enabled = default, bool? isV3Enabled = default, bool? isSecureSiteEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; trustedOrigins = default, bool? isWebChatSpeechEnabled = default, bool? isWebchatPreviewEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.BotService.Models.WebChatSite WebChatSite(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, string siteId, string siteName, string key, string key2, bool isEnabled, valuetype System.Nullable`1&lt;bool&gt; isTokenEnabled, valuetype System.Nullable`1&lt;bool&gt; isEndpointParametersEnabled, valuetype System.Nullable`1&lt;bool&gt; isDetailedLoggingEnabled, valuetype System.Nullable`1&lt;bool&gt; isBlockUserUploadEnabled, valuetype System.Nullable`1&lt;bool&gt; isNoStorageEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, string appId, valuetype System.Nullable`1&lt;bool&gt; isV1Enabled, valuetype System.Nullable`1&lt;bool&gt; isV3Enabled, valuetype System.Nullable`1&lt;bool&gt; isSecureSiteEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; trustedOrigins, valuetype System.Nullable`1&lt;bool&gt; isWebChatSpeechEnabled, valuetype System.Nullable`1&lt;bool&gt; isWebchatPreviewEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.WebChatSite(System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WebChatSite (Optional tenantId As Nullable(Of Guid) = Nothing, Optional siteId As String = Nothing, Optional siteName As String = Nothing, Optional key As String = Nothing, Optional key2 As String = Nothing, Optional isEnabled As Boolean = false, Optional isTokenEnabled As Nullable(Of Boolean) = Nothing, Optional isEndpointParametersEnabled As Nullable(Of Boolean) = Nothing, Optional isDetailedLoggingEnabled As Nullable(Of Boolean) = Nothing, Optional isBlockUserUploadEnabled As Nullable(Of Boolean) = Nothing, Optional isNoStorageEnabled As Nullable(Of Boolean) = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional appId As String = Nothing, Optional isV1Enabled As Nullable(Of Boolean) = Nothing, Optional isV3Enabled As Nullable(Of Boolean) = Nothing, Optional isSecureSiteEnabled As Nullable(Of Boolean) = Nothing, Optional trustedOrigins As IEnumerable(Of String) = Nothing, Optional isWebChatSpeechEnabled As Nullable(Of Boolean) = Nothing, Optional isWebchatPreviewEnabled As Nullable(Of Boolean) = Nothing) As WebChatSite" />
      <MemberSignature Language="F#" Value="static member WebChatSite : Nullable&lt;Guid&gt; * string * string * string * string * bool * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ETag&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.BotService.Models.WebChatSite" Usage="Azure.ResourceManager.BotService.Models.ArmBotServiceModelFactory.WebChatSite (tenantId, siteId, siteName, key, key2, isEnabled, isTokenEnabled, isEndpointParametersEnabled, isDetailedLoggingEnabled, isBlockUserUploadEnabled, isNoStorageEnabled, etag, appId, isV1Enabled, isV3Enabled, isSecureSiteEnabled, trustedOrigins, isWebChatSpeechEnabled, isWebchatPreviewEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.BotService</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.BotService.Models.WebChatSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="siteId" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="key2" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
        <Parameter Name="isTokenEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isEndpointParametersEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isDetailedLoggingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isBlockUserUploadEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isNoStorageEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="isV1Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isSecureSiteEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="trustedOrigins" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isWebChatSpeechEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isWebchatPreviewEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="tenantId"> Tenant Id. </param>
        <param name="siteId"> Site Id. </param>
        <param name="siteName"> Site name. </param>
        <param name="key"> Primary key. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="key2"> Secondary key. Value only returned through POST to the action Channel List API, otherwise empty. </param>
        <param name="isEnabled"> Whether this site is enabled for DirectLine channel. </param>
        <param name="isTokenEnabled"> Whether this site is token enabled for channel. </param>
        <param name="isEndpointParametersEnabled"> Whether this site is EndpointParameters enabled for channel. </param>
        <param name="isDetailedLoggingEnabled"> Whether this site is disabled detailed logging for. </param>
        <param name="isBlockUserUploadEnabled"> Whether this site is enabled for block user upload. </param>
        <param name="isNoStorageEnabled"> Whether this no-storage site is disabled detailed logging for. </param>
        <param name="etag"> Entity Tag. </param>
        <param name="appId"> DirectLine application id. </param>
        <param name="isV1Enabled"> Whether this site is enabled for Bot Framework V1 protocol. </param>
        <param name="isV3Enabled"> Whether this site is enabled for Bot Framework V3 protocol. </param>
        <param name="isSecureSiteEnabled"> Whether this site is enabled for authentication with Bot Framework. </param>
        <param name="trustedOrigins"> List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True. </param>
        <param name="isWebChatSpeechEnabled"> Whether this site is enabled for Webchat Speech. </param>
        <param name="isWebchatPreviewEnabled"> Whether this site is enabled for preview versions of Webchat. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.BotService.Models.WebChatSite" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.BotService.Models.WebChatSite" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
