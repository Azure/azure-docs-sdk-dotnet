<Type Name="WorkspaceResource" FullName="Azure.ResourceManager.Synapse.WorkspaceResource">
  <TypeSignature Language="C#" Value="public class WorkspaceResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkspaceResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.WorkspaceResource" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkspaceResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type WorkspaceResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a Workspace along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetWorkspaceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetWorkspace method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkspaceResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="workspaceResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;" Usage="workspaceResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string workspaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string workspaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, workspaceName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Synapse.WorkspaceResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, workspaceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="workspaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="workspaceName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.WorkspaceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Synapse.WorkspaceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.WorkspaceResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As WorkspaceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Synapse.WorkspaceData" Usage="Azure.ResourceManager.Synapse.WorkspaceResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspaceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="workspaceResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of WorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;" Usage="workspaceResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="workspaceResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;" Usage="workspaceResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureADOnlyAuthentication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt; GetAzureADOnlyAuthentication (Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName azureADOnlyAuthenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt; GetAzureADOnlyAuthentication(valuetype Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName azureADOnlyAuthenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetAzureADOnlyAuthentication(Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureADOnlyAuthentication (azureADOnlyAuthenticationName As AzureADOnlyAuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AzureADOnlyAuthenticationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureADOnlyAuthentication : Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;&#xA;override this.GetAzureADOnlyAuthentication : Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;" Usage="workspaceResource.GetAzureADOnlyAuthentication (azureADOnlyAuthenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureADOnlyAuthenticationName" Type="Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureADOnlyAuthenticationName"> name of the property. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Azure Active Directory only authentication property
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications/{azureADOnlyAuthenticationName}
            Operation Id: AzureADOnlyAuthentications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureADOnlyAuthenticationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;&gt; GetAzureADOnlyAuthenticationAsync (Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName azureADOnlyAuthenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;&gt; GetAzureADOnlyAuthenticationAsync(valuetype Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName azureADOnlyAuthenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetAzureADOnlyAuthenticationAsync(Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureADOnlyAuthenticationAsync (azureADOnlyAuthenticationName As AzureADOnlyAuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AzureADOnlyAuthenticationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;&gt;&#xA;override this.GetAzureADOnlyAuthenticationAsync : Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;&gt;" Usage="workspaceResource.GetAzureADOnlyAuthenticationAsync (azureADOnlyAuthenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureADOnlyAuthenticationName" Type="Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureADOnlyAuthenticationName"> name of the property. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Azure Active Directory only authentication property
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications/{azureADOnlyAuthenticationName}
            Operation Id: AzureADOnlyAuthentications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureADOnlyAuthentications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationCollection GetAzureADOnlyAuthentications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationCollection GetAzureADOnlyAuthentications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetAzureADOnlyAuthentications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureADOnlyAuthentications () As AzureADOnlyAuthenticationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationCollection&#xA;override this.GetAzureADOnlyAuthentications : unit -&gt; Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationCollection" Usage="workspaceResource.GetAzureADOnlyAuthentications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AzureADOnlyAuthenticationResources in the Workspace. </summary>
        <returns> An object representing collection of AzureADOnlyAuthenticationResources and their operations over a AzureADOnlyAuthenticationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBigDataPoolResourceInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt; GetBigDataPoolResourceInfo (string bigDataPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt; GetBigDataPoolResourceInfo(string bigDataPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetBigDataPoolResourceInfo(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBigDataPoolResourceInfo (bigDataPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BigDataPoolResourceInfoResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBigDataPoolResourceInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;&#xA;override this.GetBigDataPoolResourceInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;" Usage="workspaceResource.GetBigDataPoolResourceInfo (bigDataPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bigDataPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bigDataPoolName"> Big Data pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Big Data pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}
            Operation Id: BigDataPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="bigDataPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bigDataPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBigDataPoolResourceInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;&gt; GetBigDataPoolResourceInfoAsync (string bigDataPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;&gt; GetBigDataPoolResourceInfoAsync(string bigDataPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetBigDataPoolResourceInfoAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBigDataPoolResourceInfoAsync (bigDataPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BigDataPoolResourceInfoResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBigDataPoolResourceInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;&gt;&#xA;override this.GetBigDataPoolResourceInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;&gt;" Usage="workspaceResource.GetBigDataPoolResourceInfoAsync (bigDataPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bigDataPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bigDataPoolName"> Big Data pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Big Data pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}
            Operation Id: BigDataPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="bigDataPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bigDataPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBigDataPoolResourceInfos">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.BigDataPoolResourceInfoCollection GetBigDataPoolResourceInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.BigDataPoolResourceInfoCollection GetBigDataPoolResourceInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetBigDataPoolResourceInfos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBigDataPoolResourceInfos () As BigDataPoolResourceInfoCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBigDataPoolResourceInfos : unit -&gt; Azure.ResourceManager.Synapse.BigDataPoolResourceInfoCollection&#xA;override this.GetBigDataPoolResourceInfos : unit -&gt; Azure.ResourceManager.Synapse.BigDataPoolResourceInfoCollection" Usage="workspaceResource.GetBigDataPoolResourceInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.BigDataPoolResourceInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BigDataPoolResourceInfoResources in the Workspace. </summary>
        <returns> An object representing collection of BigDataPoolResourceInfoResources and their operations over a BigDataPoolResourceInfoResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDedicatedSQLminimalTlsSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt; GetDedicatedSQLminimalTlsSetting (string dedicatedSQLminimalTlsSettingsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt; GetDedicatedSQLminimalTlsSetting(string dedicatedSQLminimalTlsSettingsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetDedicatedSQLminimalTlsSetting(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDedicatedSQLminimalTlsSetting (dedicatedSQLminimalTlsSettingsName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DedicatedSQLminimalTlsSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDedicatedSQLminimalTlsSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;&#xA;override this.GetDedicatedSQLminimalTlsSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;" Usage="workspaceResource.GetDedicatedSQLminimalTlsSetting (dedicatedSQLminimalTlsSettingsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dedicatedSQLminimalTlsSettingsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dedicatedSQLminimalTlsSettingsName"> The name of the dedicated sql minimal tls settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's minimal tls settings.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/dedicatedSQLminimalTlsSettings/{dedicatedSQLminimalTlsSettingsName}
            Operation Id: WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDedicatedSQLminimalTlsSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;&gt; GetDedicatedSQLminimalTlsSettingAsync (string dedicatedSQLminimalTlsSettingsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;&gt; GetDedicatedSQLminimalTlsSettingAsync(string dedicatedSQLminimalTlsSettingsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetDedicatedSQLminimalTlsSettingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDedicatedSQLminimalTlsSettingAsync (dedicatedSQLminimalTlsSettingsName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DedicatedSQLminimalTlsSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDedicatedSQLminimalTlsSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;&gt;&#xA;override this.GetDedicatedSQLminimalTlsSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;&gt;" Usage="workspaceResource.GetDedicatedSQLminimalTlsSettingAsync (dedicatedSQLminimalTlsSettingsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dedicatedSQLminimalTlsSettingsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dedicatedSQLminimalTlsSettingsName"> The name of the dedicated sql minimal tls settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's minimal tls settings.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/dedicatedSQLminimalTlsSettings/{dedicatedSQLminimalTlsSettingsName}
            Operation Id: WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDedicatedSQLminimalTlsSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingCollection GetDedicatedSQLminimalTlsSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingCollection GetDedicatedSQLminimalTlsSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetDedicatedSQLminimalTlsSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDedicatedSQLminimalTlsSettings () As DedicatedSQLminimalTlsSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDedicatedSQLminimalTlsSettings : unit -&gt; Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingCollection&#xA;override this.GetDedicatedSQLminimalTlsSettings : unit -&gt; Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingCollection" Usage="workspaceResource.GetDedicatedSQLminimalTlsSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DedicatedSQLminimalTlsSettingResources in the Workspace. </summary>
        <returns> An object representing collection of DedicatedSQLminimalTlsSettingResources and their operations over a DedicatedSQLminimalTlsSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtector">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt; GetEncryptionProtector (Azure.ResourceManager.Synapse.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt; GetEncryptionProtector(valuetype Azure.ResourceManager.Synapse.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetEncryptionProtector(Azure.ResourceManager.Synapse.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionProtector (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EncryptionProtectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionProtector : Azure.ResourceManager.Synapse.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;&#xA;override this.GetEncryptionProtector : Azure.ResourceManager.Synapse.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;" Usage="workspaceResource.GetEncryptionProtector (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Synapse.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's encryption protector.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}
            Operation Id: WorkspaceManagedSqlServerEncryptionProtector_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtectorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;&gt; GetEncryptionProtectorAsync (Azure.ResourceManager.Synapse.Models.EncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;&gt; GetEncryptionProtectorAsync(valuetype Azure.ResourceManager.Synapse.Models.EncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetEncryptionProtectorAsync(Azure.ResourceManager.Synapse.Models.EncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionProtectorAsync (encryptionProtectorName As EncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EncryptionProtectorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionProtectorAsync : Azure.ResourceManager.Synapse.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;&gt;&#xA;override this.GetEncryptionProtectorAsync : Azure.ResourceManager.Synapse.Models.EncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;&gt;" Usage="workspaceResource.GetEncryptionProtectorAsync (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.EncryptionProtectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Synapse.Models.EncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's encryption protector.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}
            Operation Id: WorkspaceManagedSqlServerEncryptionProtector_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtectors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.EncryptionProtectorCollection GetEncryptionProtectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.EncryptionProtectorCollection GetEncryptionProtectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetEncryptionProtectors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionProtectors () As EncryptionProtectorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionProtectors : unit -&gt; Azure.ResourceManager.Synapse.EncryptionProtectorCollection&#xA;override this.GetEncryptionProtectors : unit -&gt; Azure.ResourceManager.Synapse.EncryptionProtectorCollection" Usage="workspaceResource.GetEncryptionProtectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.EncryptionProtectorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of EncryptionProtectorResources in the Workspace. </summary>
        <returns> An object representing collection of EncryptionProtectorResources and their operations over a EncryptionProtectorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyCollection GetExtendedServerBlobAuditingPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyCollection GetExtendedServerBlobAuditingPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetExtendedServerBlobAuditingPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedServerBlobAuditingPolicies () As ExtendedServerBlobAuditingPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyCollection&#xA;override this.GetExtendedServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyCollection" Usage="workspaceResource.GetExtendedServerBlobAuditingPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExtendedServerBlobAuditingPolicyResources in the Workspace. </summary>
        <returns> An object representing collection of ExtendedServerBlobAuditingPolicyResources and their operations over a ExtendedServerBlobAuditingPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt; GetExtendedServerBlobAuditingPolicy (Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt; GetExtendedServerBlobAuditingPolicy(valuetype Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetExtendedServerBlobAuditingPolicy(Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedServerBlobAuditingPolicy (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExtendedServerBlobAuditingPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;&#xA;override this.GetExtendedServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;" Usage="workspaceResource.GetExtendedServerBlobAuditingPolicy (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace SQL server's extended blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings/{blobAuditingPolicyName}
            Operation Id: WorkspaceManagedSqlServerExtendedBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;&gt; GetExtendedServerBlobAuditingPolicyAsync (Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;&gt; GetExtendedServerBlobAuditingPolicyAsync(valuetype Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetExtendedServerBlobAuditingPolicyAsync(Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedServerBlobAuditingPolicyAsync (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExtendedServerBlobAuditingPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;&gt;&#xA;override this.GetExtendedServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;&gt;" Usage="workspaceResource.GetExtendedServerBlobAuditingPolicyAsync (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace SQL server's extended blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings/{blobAuditingPolicyName}
            Operation Id: WorkspaceManagedSqlServerExtendedBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationRuntimeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt; GetIntegrationRuntimeResource (string integrationRuntimeName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt; GetIntegrationRuntimeResource(string integrationRuntimeName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetIntegrationRuntimeResource(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationRuntimeResource (integrationRuntimeName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationRuntimeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationRuntimeResource : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;&#xA;override this.GetIntegrationRuntimeResource : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;" Usage="workspaceResource.GetIntegrationRuntimeResource (integrationRuntimeName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="integrationRuntimeName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="integrationRuntimeName"> Integration runtime name. </param>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an integration runtime
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationRuntimeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationRuntimeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationRuntimeResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;&gt; GetIntegrationRuntimeResourceAsync (string integrationRuntimeName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;&gt; GetIntegrationRuntimeResourceAsync(string integrationRuntimeName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetIntegrationRuntimeResourceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationRuntimeResourceAsync (integrationRuntimeName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationRuntimeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationRuntimeResourceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;&gt;&#xA;override this.GetIntegrationRuntimeResourceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;&gt;" Usage="workspaceResource.GetIntegrationRuntimeResourceAsync (integrationRuntimeName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IntegrationRuntimeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="integrationRuntimeName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="integrationRuntimeName"> Integration runtime name. </param>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an integration runtime
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}
            Operation Id: IntegrationRuntimes_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationRuntimeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationRuntimeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationRuntimeResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.IntegrationRuntimeResourceCollection GetIntegrationRuntimeResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.IntegrationRuntimeResourceCollection GetIntegrationRuntimeResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetIntegrationRuntimeResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationRuntimeResources () As IntegrationRuntimeResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationRuntimeResources : unit -&gt; Azure.ResourceManager.Synapse.IntegrationRuntimeResourceCollection&#xA;override this.GetIntegrationRuntimeResources : unit -&gt; Azure.ResourceManager.Synapse.IntegrationRuntimeResourceCollection" Usage="workspaceResource.GetIntegrationRuntimeResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.IntegrationRuntimeResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationRuntimeResources in the Workspace. </summary>
        <returns> An object representing collection of IntegrationRuntimeResources and their operations over a IntegrationRuntimeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPFirewallRuleInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt; GetIPFirewallRuleInfo (string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt; GetIPFirewallRuleInfo(string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetIPFirewallRuleInfo(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPFirewallRuleInfo (ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IPFirewallRuleInfoResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIPFirewallRuleInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;&#xA;override this.GetIPFirewallRuleInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;" Usage="workspaceResource.GetIPFirewallRuleInfo (ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleName"> The IP firewall rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a firewall rule
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}
            Operation Id: IpFirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPFirewallRuleInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;&gt; GetIPFirewallRuleInfoAsync (string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;&gt; GetIPFirewallRuleInfoAsync(string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetIPFirewallRuleInfoAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPFirewallRuleInfoAsync (ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IPFirewallRuleInfoResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIPFirewallRuleInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;&gt;&#xA;override this.GetIPFirewallRuleInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;&gt;" Usage="workspaceResource.GetIPFirewallRuleInfoAsync (ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleName"> The IP firewall rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a firewall rule
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}
            Operation Id: IpFirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPFirewallRuleInfos">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.IPFirewallRuleInfoCollection GetIPFirewallRuleInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.IPFirewallRuleInfoCollection GetIPFirewallRuleInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetIPFirewallRuleInfos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPFirewallRuleInfos () As IPFirewallRuleInfoCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIPFirewallRuleInfos : unit -&gt; Azure.ResourceManager.Synapse.IPFirewallRuleInfoCollection&#xA;override this.GetIPFirewallRuleInfos : unit -&gt; Azure.ResourceManager.Synapse.IPFirewallRuleInfoCollection" Usage="workspaceResource.GetIPFirewallRuleInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.IPFirewallRuleInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IPFirewallRuleInfoResources in the Workspace. </summary>
        <returns> An object representing collection of IPFirewallRuleInfoResources and their operations over a IPFirewallRuleInfoResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt; GetKey (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.KeyResource&gt; GetKey(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt;&#xA;override this.GetKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt;" Usage="workspaceResource.GetKey (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the workspace key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace key
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}
            Operation Id: Keys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt;&gt; GetKeyAsync (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.KeyResource&gt;&gt; GetKeyAsync(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyAsync (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt;&gt;&#xA;override this.GetKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt;&gt;" Usage="workspaceResource.GetKeyAsync (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KeyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the workspace key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace key
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}
            Operation Id: Keys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.KeyCollection GetKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.KeyCollection GetKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeys () As KeyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetKeys : unit -&gt; Azure.ResourceManager.Synapse.KeyCollection&#xA;override this.GetKeys : unit -&gt; Azure.ResourceManager.Synapse.KeyCollection" Usage="workspaceResource.GetKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.KeyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of KeyResources in the Workspace. </summary>
        <returns> An object representing collection of KeyResources and their operations over a KeyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt; GetKustoPool (string kustoPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.KustoPoolResource&gt; GetKustoPool(string kustoPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetKustoPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoPool (kustoPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKustoPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt;&#xA;override this.GetKustoPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt;" Usage="workspaceResource.GetKustoPool (kustoPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kustoPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kustoPoolName"> The name of the Kusto pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}
            Operation Id: KustoPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="kustoPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="kustoPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt;&gt; GetKustoPoolAsync (string kustoPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.KustoPoolResource&gt;&gt; GetKustoPoolAsync(string kustoPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetKustoPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoPoolAsync (kustoPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetKustoPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt;&gt;&#xA;override this.GetKustoPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt;&gt;" Usage="workspaceResource.GetKustoPoolAsync (kustoPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.KustoPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kustoPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kustoPoolName"> The name of the Kusto pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}
            Operation Id: KustoPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="kustoPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="kustoPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.KustoPoolCollection GetKustoPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.KustoPoolCollection GetKustoPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetKustoPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoPools () As KustoPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetKustoPools : unit -&gt; Azure.ResourceManager.Synapse.KustoPoolCollection&#xA;override this.GetKustoPools : unit -&gt; Azure.ResourceManager.Synapse.KustoPoolCollection" Usage="workspaceResource.GetKustoPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.KustoPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of KustoPoolResources in the Workspace. </summary>
        <returns> An object representing collection of KustoPoolResources and their operations over a KustoPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLibraryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt; GetLibraryResource (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.LibraryResource&gt; GetLibraryResource(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetLibraryResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLibraryResource (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LibraryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLibraryResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt;&#xA;override this.GetLibraryResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt;" Usage="workspaceResource.GetLibraryResource (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> Library name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get library by name in a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries/{libraryName}
            Operation Id: Library_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="libraryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLibraryResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt;&gt; GetLibraryResourceAsync (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.LibraryResource&gt;&gt; GetLibraryResourceAsync(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetLibraryResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLibraryResourceAsync (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LibraryResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLibraryResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt;&gt;&#xA;override this.GetLibraryResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt;&gt;" Usage="workspaceResource.GetLibraryResourceAsync (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.LibraryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> Library name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get library by name in a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries/{libraryName}
            Operation Id: Library_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="libraryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLibraryResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.LibraryResourceCollection GetLibraryResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.LibraryResourceCollection GetLibraryResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetLibraryResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLibraryResources () As LibraryResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLibraryResources : unit -&gt; Azure.ResourceManager.Synapse.LibraryResourceCollection&#xA;override this.GetLibraryResources : unit -&gt; Azure.ResourceManager.Synapse.LibraryResourceCollection" Usage="workspaceResource.GetLibraryResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.LibraryResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LibraryResources in the Workspace. </summary>
        <returns> An object representing collection of LibraryResources and their operations over a LibraryResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedIdentitySqlControlSettingsModel">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource GetManagedIdentitySqlControlSettingsModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource GetManagedIdentitySqlControlSettingsModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetManagedIdentitySqlControlSettingsModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedIdentitySqlControlSettingsModel () As ManagedIdentitySqlControlSettingsModelResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedIdentitySqlControlSettingsModel : unit -&gt; Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource&#xA;override this.GetManagedIdentitySqlControlSettingsModel : unit -&gt; Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource" Usage="workspaceResource.GetManagedIdentitySqlControlSettingsModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a ManagedIdentitySqlControlSettingsModelResource along with the instance operations that can be performed on it in the Workspace. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableSqlPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt; GetRecoverableSqlPool (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt; GetRecoverableSqlPool(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetRecoverableSqlPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableSqlPool (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecoverableSqlPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;&#xA;override this.GetRecoverableSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;" Usage="workspaceResource.GetRecoverableSqlPool (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> The name of the sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get recoverable sql pools for workspace managed sql server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools/{sqlPoolName}
            Operation Id: WorkspaceManagedSqlServerRecoverableSqlPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableSqlPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;&gt; GetRecoverableSqlPoolAsync (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;&gt; GetRecoverableSqlPoolAsync(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetRecoverableSqlPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableSqlPoolAsync (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecoverableSqlPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;&gt;&#xA;override this.GetRecoverableSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;&gt;" Usage="workspaceResource.GetRecoverableSqlPoolAsync (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RecoverableSqlPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> The name of the sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get recoverable sql pools for workspace managed sql server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools/{sqlPoolName}
            Operation Id: WorkspaceManagedSqlServerRecoverableSqlPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableSqlPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.RecoverableSqlPoolCollection GetRecoverableSqlPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.RecoverableSqlPoolCollection GetRecoverableSqlPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetRecoverableSqlPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecoverableSqlPools () As RecoverableSqlPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecoverableSqlPools : unit -&gt; Azure.ResourceManager.Synapse.RecoverableSqlPoolCollection&#xA;override this.GetRecoverableSqlPools : unit -&gt; Azure.ResourceManager.Synapse.RecoverableSqlPoolCollection" Usage="workspaceResource.GetRecoverableSqlPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.RecoverableSqlPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecoverableSqlPoolResources in the Workspace. </summary>
        <returns> An object representing collection of RecoverableSqlPoolResources and their operations over a RecoverableSqlPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedSqlPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt; GetRestorableDroppedSqlPool (string restorableDroppedSqlPoolId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt; GetRestorableDroppedSqlPool(string restorableDroppedSqlPoolId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetRestorableDroppedSqlPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedSqlPool (restorableDroppedSqlPoolId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RestorableDroppedSqlPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;&#xA;override this.GetRestorableDroppedSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;" Usage="workspaceResource.GetRestorableDroppedSqlPool (restorableDroppedSqlPoolId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedSqlPoolId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedSqlPoolId"> The id of the deleted Sql Pool in the form of sqlPoolName,deletionTimeInFileTimeFormat. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted sql pool that can be restored
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools/{restorableDroppedSqlPoolId}
            Operation Id: RestorableDroppedSqlPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedSqlPoolId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedSqlPoolId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedSqlPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;&gt; GetRestorableDroppedSqlPoolAsync (string restorableDroppedSqlPoolId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;&gt; GetRestorableDroppedSqlPoolAsync(string restorableDroppedSqlPoolId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetRestorableDroppedSqlPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedSqlPoolAsync (restorableDroppedSqlPoolId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RestorableDroppedSqlPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;&gt;&#xA;override this.GetRestorableDroppedSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;&gt;" Usage="workspaceResource.GetRestorableDroppedSqlPoolAsync (restorableDroppedSqlPoolId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedSqlPoolId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedSqlPoolId"> The id of the deleted Sql Pool in the form of sqlPoolName,deletionTimeInFileTimeFormat. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted sql pool that can be restored
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools/{restorableDroppedSqlPoolId}
            Operation Id: RestorableDroppedSqlPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedSqlPoolId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedSqlPoolId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedSqlPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolCollection GetRestorableDroppedSqlPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolCollection GetRestorableDroppedSqlPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetRestorableDroppedSqlPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableDroppedSqlPools () As RestorableDroppedSqlPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableDroppedSqlPools : unit -&gt; Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolCollection&#xA;override this.GetRestorableDroppedSqlPools : unit -&gt; Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolCollection" Usage="workspaceResource.GetRestorableDroppedSqlPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RestorableDroppedSqlPoolResources in the Workspace. </summary>
        <returns> An object representing collection of RestorableDroppedSqlPoolResources and their operations over a RestorableDroppedSqlPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBlobAuditingPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyCollection GetServerBlobAuditingPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyCollection GetServerBlobAuditingPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerBlobAuditingPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerBlobAuditingPolicies () As ServerBlobAuditingPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyCollection&#xA;override this.GetServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyCollection" Usage="workspaceResource.GetServerBlobAuditingPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerBlobAuditingPolicyResources in the Workspace. </summary>
        <returns> An object representing collection of ServerBlobAuditingPolicyResources and their operations over a ServerBlobAuditingPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBlobAuditingPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt; GetServerBlobAuditingPolicy (Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt; GetServerBlobAuditingPolicy(valuetype Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerBlobAuditingPolicy(Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerBlobAuditingPolicy (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerBlobAuditingPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;&#xA;override this.GetServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;" Usage="workspaceResource.GetServerBlobAuditingPolicy (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings/{blobAuditingPolicyName}
            Operation Id: WorkspaceManagedSqlServerBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBlobAuditingPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;&gt; GetServerBlobAuditingPolicyAsync (Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;&gt; GetServerBlobAuditingPolicyAsync(valuetype Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerBlobAuditingPolicyAsync(Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerBlobAuditingPolicyAsync (blobAuditingPolicyName As BlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerBlobAuditingPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;&gt;&#xA;override this.GetServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;&gt;" Usage="workspaceResource.GetServerBlobAuditingPolicyAsync (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's blob auditing policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings/{blobAuditingPolicyName}
            Operation Id: WorkspaceManagedSqlServerBlobAuditingPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerSecurityAlertPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyCollection GetServerSecurityAlertPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyCollection GetServerSecurityAlertPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerSecurityAlertPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerSecurityAlertPolicies () As ServerSecurityAlertPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyCollection&#xA;override this.GetServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyCollection" Usage="workspaceResource.GetServerSecurityAlertPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerSecurityAlertPolicyResources in the Workspace. </summary>
        <returns> An object representing collection of ServerSecurityAlertPolicyResources and their operations over a ServerSecurityAlertPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerSecurityAlertPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt; GetServerSecurityAlertPolicy (Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt; GetServerSecurityAlertPolicy(valuetype Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerSecurityAlertPolicy(Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerSecurityAlertPolicy (securityAlertPolicyName As SqlServerSecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerSecurityAlertPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerSecurityAlertPolicy : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;&#xA;override this.GetServerSecurityAlertPolicy : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;" Usage="workspaceResource.GetServerSecurityAlertPolicy (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's security alert policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies/{securityAlertPolicyName}
            Operation Id: WorkspaceManagedSqlServerSecurityAlertPolicy_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerSecurityAlertPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;&gt; GetServerSecurityAlertPolicyAsync (Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;&gt; GetServerSecurityAlertPolicyAsync(valuetype Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerSecurityAlertPolicyAsync(Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerSecurityAlertPolicyAsync (securityAlertPolicyName As SqlServerSecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerSecurityAlertPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerSecurityAlertPolicyAsync : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;&gt;&#xA;override this.GetServerSecurityAlertPolicyAsync : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;&gt;" Usage="workspaceResource.GetServerSecurityAlertPolicyAsync (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's security alert policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies/{securityAlertPolicyName}
            Operation Id: WorkspaceManagedSqlServerSecurityAlertPolicy_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt; GetServerVulnerabilityAssessment (Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt; GetServerVulnerabilityAssessment(valuetype Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerVulnerabilityAssessment(Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessment (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerVulnerabilityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessment : Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;&#xA;override this.GetServerVulnerabilityAssessment : Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;" Usage="workspaceResource.GetServerVulnerabilityAssessment (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's vulnerability assessment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}
            Operation Id: WorkspaceManagedSqlServerVulnerabilityAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;&gt; GetServerVulnerabilityAssessmentAsync (Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;&gt; GetServerVulnerabilityAssessmentAsync(valuetype Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerVulnerabilityAssessmentAsync(Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessmentAsync (vulnerabilityAssessmentName As VulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerVulnerabilityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessmentAsync : Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;&gt;&#xA;override this.GetServerVulnerabilityAssessmentAsync : Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;&gt;" Usage="workspaceResource.GetServerVulnerabilityAssessmentAsync (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's vulnerability assessment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}
            Operation Id: WorkspaceManagedSqlServerVulnerabilityAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentCollection GetServerVulnerabilityAssessments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentCollection GetServerVulnerabilityAssessments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetServerVulnerabilityAssessments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessments () As ServerVulnerabilityAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentCollection&#xA;override this.GetServerVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentCollection" Usage="workspaceResource.GetServerVulnerabilityAssessments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServerVulnerabilityAssessmentResources in the Workspace. </summary>
        <returns> An object representing collection of ServerVulnerabilityAssessmentResources and their operations over a ServerVulnerabilityAssessmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt; GetSparkConfigurationResource (string sparkConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SparkConfigurationResource&gt; GetSparkConfigurationResource(string sparkConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSparkConfigurationResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkConfigurationResource (sparkConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkConfigurationResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;&#xA;override this.GetSparkConfigurationResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;" Usage="workspaceResource.GetSparkConfigurationResource (sparkConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> SparkConfiguration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SparkConfiguration by name in a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sparkconfigurations/{sparkConfigurationName}
            Operation Id: SparkConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sparkConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfigurationResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;&gt; GetSparkConfigurationResourceAsync (string sparkConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;&gt; GetSparkConfigurationResourceAsync(string sparkConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSparkConfigurationResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkConfigurationResourceAsync (sparkConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkConfigurationResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;&gt;&#xA;override this.GetSparkConfigurationResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;&gt;" Usage="workspaceResource.GetSparkConfigurationResourceAsync (sparkConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SparkConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> SparkConfiguration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SparkConfiguration by name in a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sparkconfigurations/{sparkConfigurationName}
            Operation Id: SparkConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sparkConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfigurationResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SparkConfigurationResourceCollection GetSparkConfigurationResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SparkConfigurationResourceCollection GetSparkConfigurationResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSparkConfigurationResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkConfigurationResources () As SparkConfigurationResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSparkConfigurationResources : unit -&gt; Azure.ResourceManager.Synapse.SparkConfigurationResourceCollection&#xA;override this.GetSparkConfigurationResources : unit -&gt; Azure.ResourceManager.Synapse.SparkConfigurationResourceCollection" Usage="workspaceResource.GetSparkConfigurationResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SparkConfigurationResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SparkConfigurationResources in the Workspace. </summary>
        <returns> An object representing collection of SparkConfigurationResources and their operations over a SparkConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt; GetSqlPool (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SqlPoolResource&gt; GetSqlPool(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSqlPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlPool (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt;&#xA;override this.GetSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt;" Usage="workspaceResource.GetSqlPool (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> SQL pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SQL pool properties
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}
            Operation Id: SqlPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt;&gt; GetSqlPoolAsync (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SqlPoolResource&gt;&gt; GetSqlPoolAsync(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSqlPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlPoolAsync (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt;&gt;&#xA;override this.GetSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt;&gt;" Usage="workspaceResource.GetSqlPoolAsync (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SqlPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> SQL pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SQL pool properties
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}
            Operation Id: SqlPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SqlPoolCollection GetSqlPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SqlPoolCollection GetSqlPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSqlPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlPools () As SqlPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SqlPoolCollection&#xA;override this.GetSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SqlPoolCollection" Usage="workspaceResource.GetSqlPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SqlPoolResources in the Workspace. </summary>
        <returns> An object representing collection of SqlPoolResources and their operations over a SqlPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt; GetSynapsePrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt; GetSynapsePrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSynapsePrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapsePrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&#xA;override this.GetSynapsePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;" Usage="workspaceResource.GetSynapsePrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt; GetSynapsePrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt; GetSynapsePrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSynapsePrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapsePrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetSynapsePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt;" Usage="workspaceResource.GetSynapsePrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection GetSynapsePrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection GetSynapsePrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetSynapsePrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnections () As SynapsePrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection&#xA;override this.GetSynapsePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection" Usage="workspaceResource.GetSynapsePrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapsePrivateEndpointConnectionResources in the Workspace. </summary>
        <returns> An object representing collection of SynapsePrivateEndpointConnectionResources and their operations over a SynapsePrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceAdministrator">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.WorkspaceAdministratorResource GetWorkspaceAdministrator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.WorkspaceAdministratorResource GetWorkspaceAdministrator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetWorkspaceAdministrator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceAdministrator () As WorkspaceAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceAdministrator : unit -&gt; Azure.ResourceManager.Synapse.WorkspaceAdministratorResource&#xA;override this.GetWorkspaceAdministrator : unit -&gt; Azure.ResourceManager.Synapse.WorkspaceAdministratorResource" Usage="workspaceResource.GetWorkspaceAdministrator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspaceAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a WorkspaceAdministratorResource along with the instance operations that can be performed on it in the Workspace. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceManagedSqlServerUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt; GetWorkspaceManagedSqlServerUsages (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.Models.ServerUsage&gt; GetWorkspaceManagedSqlServerUsages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetWorkspaceManagedSqlServerUsages(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceManagedSqlServerUsages (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServerUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceManagedSqlServerUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt;&#xA;override this.GetWorkspaceManagedSqlServerUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt;" Usage="workspaceResource.GetWorkspaceManagedSqlServerUsages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get list of server usages metric for workspace managed sql server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlUsages
            Operation Id: WorkspaceManagedSqlServerUsages_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.Models.ServerUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceManagedSqlServerUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt; GetWorkspaceManagedSqlServerUsagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.Models.ServerUsage&gt; GetWorkspaceManagedSqlServerUsagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetWorkspaceManagedSqlServerUsagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceManagedSqlServerUsagesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServerUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceManagedSqlServerUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt;&#xA;override this.GetWorkspaceManagedSqlServerUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt;" Usage="workspaceResource.GetWorkspaceManagedSqlServerUsagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.ServerUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get list of server usages metric for workspace managed sql server.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlUsages
            Operation Id: WorkspaceManagedSqlServerUsages_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.Models.ServerUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspacePrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt; GetWorkspacePrivateLinkResource (string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt; GetWorkspacePrivateLinkResource(string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetWorkspacePrivateLinkResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspacePrivateLinkResource (privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkspacePrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspacePrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;&#xA;override this.GetWorkspacePrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;" Usage="workspaceResource.GetWorkspacePrivateLinkResource (privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkResourceName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private link resource in workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspacePrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;&gt; GetWorkspacePrivateLinkResourceAsync (string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;&gt; GetWorkspacePrivateLinkResourceAsync(string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetWorkspacePrivateLinkResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspacePrivateLinkResourceAsync (privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkspacePrivateLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspacePrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;&gt;&#xA;override this.GetWorkspacePrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;&gt;" Usage="workspaceResource.GetWorkspacePrivateLinkResourceAsync (privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkResourceName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private link resource in workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspacePrivateLinkResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.WorkspacePrivateLinkResourceCollection GetWorkspacePrivateLinkResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.WorkspacePrivateLinkResourceCollection GetWorkspacePrivateLinkResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetWorkspacePrivateLinkResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspacePrivateLinkResources () As WorkspacePrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspacePrivateLinkResources : unit -&gt; Azure.ResourceManager.Synapse.WorkspacePrivateLinkResourceCollection&#xA;override this.GetWorkspacePrivateLinkResources : unit -&gt; Azure.ResourceManager.Synapse.WorkspacePrivateLinkResourceCollection" Usage="workspaceResource.GetWorkspacePrivateLinkResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspacePrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WorkspacePrivateLinkResources in the Workspace. </summary>
        <returns> An object representing collection of WorkspacePrivateLinkResources and their operations over a WorkspacePrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceSqlAdministrator">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource GetWorkspaceSqlAdministrator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource GetWorkspaceSqlAdministrator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.GetWorkspaceSqlAdministrator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceSqlAdministrator () As WorkspaceSqlAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceSqlAdministrator : unit -&gt; Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource&#xA;override this.GetWorkspaceSqlAdministrator : unit -&gt; Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource" Usage="workspaceResource.GetWorkspaceSqlAdministrator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a WorkspaceSqlAdministratorResource along with the instance operations that can be performed on it in the Workspace. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.WorkspaceResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Synapse.WorkspaceResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="workspaceResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;" Usage="workspaceResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAllIpFirewallRule">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt; ReplaceAllIpFirewallRule (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt; ReplaceAllIpFirewallRule(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.ReplaceAllIpFirewallRule(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAllIpFirewallRule (waitUntil As WaitUntil, content As ReplaceAllIPFirewallRulesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ReplaceAllFirewallRulesOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAllIpFirewallRule : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;&#xA;override this.ReplaceAllIpFirewallRule : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;" Usage="workspaceResource.ReplaceAllIpFirewallRule (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Replace all IP firewall rules request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replaces firewall rules
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/replaceAllIpFirewallRules
            Operation Id: IpFirewallRules_ReplaceAll
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAllIpFirewallRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;&gt; ReplaceAllIpFirewallRuleAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;&gt; ReplaceAllIpFirewallRuleAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.ReplaceAllIpFirewallRuleAsync(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAllIpFirewallRuleAsync (waitUntil As WaitUntil, content As ReplaceAllIPFirewallRulesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ReplaceAllFirewallRulesOperationResponse))" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAllIpFirewallRuleAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;&gt;&#xA;override this.ReplaceAllIpFirewallRuleAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;&gt;" Usage="workspaceResource.ReplaceAllIpFirewallRuleAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Replace all IP firewall rules request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replaces firewall rules
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/replaceAllIpFirewallRules
            Operation Id: IpFirewallRules_ReplaceAll
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Synapse.WorkspaceResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Synapse.WorkspaceResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="workspaceResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;" Usage="workspaceResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.WorkspacePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.WorkspacePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.Update(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.WorkspacePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As WorkspacePatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.WorkspacePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.WorkspacePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="workspaceResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Synapse.Models.WorkspacePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Workspace patch request properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.WorkspacePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.WorkspacePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.WorkspaceResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.WorkspacePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As WorkspacePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of WorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.WorkspacePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.WorkspacePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;" Usage="workspaceResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Synapse.Models.WorkspacePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Workspace patch request properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
