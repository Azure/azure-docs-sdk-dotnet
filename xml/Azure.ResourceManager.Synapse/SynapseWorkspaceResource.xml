<Type Name="SynapseWorkspaceResource" FullName="Azure.ResourceManager.Synapse.SynapseWorkspaceResource">
  <TypeSignature Language="C#" Value="public class SynapseWorkspaceResource : Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynapseWorkspaceResource extends Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" />
  <TypeSignature Language="VB.NET" Value="Public Class SynapseWorkspaceResource&#xA;Inherits ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type SynapseWorkspaceResource = class&#xA;    inherit ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class SynapseWorkspaceResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynapseWorkspaceResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class SynapseWorkspaceResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of SynapseWorkspaceData), IPersistableModel(Of SynapseWorkspaceData)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type SynapseWorkspaceResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;SynapseWorkspaceData&gt;&#xA;    interface IPersistableModel&lt;SynapseWorkspaceData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a SynapseWorkspace along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetSynapseWorkspaceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetSynapseWorkspace method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SynapseWorkspaceResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="synapseWorkspaceResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;" Usage="synapseWorkspaceResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string workspaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string workspaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, workspaceName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Synapse.SynapseWorkspaceResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, workspaceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="workspaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="workspaceName"> The workspaceName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspaceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Synapse.SynapseWorkspaceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As SynapseWorkspaceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Synapse.SynapseWorkspaceData" Usage="Azure.ResourceManager.Synapse.SynapseWorkspaceResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="synapseWorkspaceResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Delete</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SynapseWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;" Usage="synapseWorkspaceResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Delete</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="synapseWorkspaceResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;" Usage="synapseWorkspaceResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseAadOnlyAuthentication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt; GetSynapseAadOnlyAuthentication (Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName azureADOnlyAuthenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt; GetSynapseAadOnlyAuthentication(valuetype Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName azureADOnlyAuthenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseAadOnlyAuthentication(Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseAadOnlyAuthentication (azureADOnlyAuthenticationName As SynapseAadOnlyAuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseAadOnlyAuthenticationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseAadOnlyAuthentication : Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;&#xA;override this.GetSynapseAadOnlyAuthentication : Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;" Usage="synapseWorkspaceResource.GetSynapseAadOnlyAuthentication (azureADOnlyAuthenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureADOnlyAuthenticationName" Type="Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureADOnlyAuthenticationName"> name of the property. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Azure Active Directory only authentication property
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications/{azureADOnlyAuthenticationName}</description></item><item><term>Operation Id</term><description>AzureADOnlyAuthentications_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseAadOnlyAuthenticationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;&gt; GetSynapseAadOnlyAuthenticationAsync (Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName azureADOnlyAuthenticationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;&gt; GetSynapseAadOnlyAuthenticationAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName azureADOnlyAuthenticationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseAadOnlyAuthenticationAsync(Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseAadOnlyAuthenticationAsync (azureADOnlyAuthenticationName As SynapseAadOnlyAuthenticationName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseAadOnlyAuthenticationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseAadOnlyAuthenticationAsync : Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;&gt;&#xA;override this.GetSynapseAadOnlyAuthenticationAsync : Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseAadOnlyAuthenticationAsync (azureADOnlyAuthenticationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureADOnlyAuthenticationName" Type="Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureADOnlyAuthenticationName"> name of the property. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Azure Active Directory only authentication property
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications/{azureADOnlyAuthenticationName}</description></item><item><term>Operation Id</term><description>AzureADOnlyAuthentications_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseAadOnlyAuthentications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationCollection GetSynapseAadOnlyAuthentications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationCollection GetSynapseAadOnlyAuthentications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseAadOnlyAuthentications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseAadOnlyAuthentications () As SynapseAadOnlyAuthenticationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseAadOnlyAuthentications : unit -&gt; Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationCollection&#xA;override this.GetSynapseAadOnlyAuthentications : unit -&gt; Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationCollection" Usage="synapseWorkspaceResource.GetSynapseAadOnlyAuthentications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseAadOnlyAuthenticationResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseAadOnlyAuthenticationResources and their operations over a SynapseAadOnlyAuthenticationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseBigDataPoolInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt; GetSynapseBigDataPoolInfo (string bigDataPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt; GetSynapseBigDataPoolInfo(string bigDataPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseBigDataPoolInfo(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseBigDataPoolInfo (bigDataPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseBigDataPoolInfoResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseBigDataPoolInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;&#xA;override this.GetSynapseBigDataPoolInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;" Usage="synapseWorkspaceResource.GetSynapseBigDataPoolInfo (bigDataPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bigDataPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bigDataPoolName"> Big Data pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Big Data pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}</description></item><item><term>Operation Id</term><description>BigDataPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bigDataPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="bigDataPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseBigDataPoolInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;&gt; GetSynapseBigDataPoolInfoAsync (string bigDataPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;&gt; GetSynapseBigDataPoolInfoAsync(string bigDataPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseBigDataPoolInfoAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseBigDataPoolInfoAsync (bigDataPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseBigDataPoolInfoResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseBigDataPoolInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;&gt;&#xA;override this.GetSynapseBigDataPoolInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseBigDataPoolInfoAsync (bigDataPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bigDataPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bigDataPoolName"> Big Data pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Big Data pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}</description></item><item><term>Operation Id</term><description>BigDataPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bigDataPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="bigDataPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseBigDataPoolInfos">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoCollection GetSynapseBigDataPoolInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoCollection GetSynapseBigDataPoolInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseBigDataPoolInfos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseBigDataPoolInfos () As SynapseBigDataPoolInfoCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseBigDataPoolInfos : unit -&gt; Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoCollection&#xA;override this.GetSynapseBigDataPoolInfos : unit -&gt; Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoCollection" Usage="synapseWorkspaceResource.GetSynapseBigDataPoolInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseBigDataPoolInfoResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseBigDataPoolInfoResources and their operations over a SynapseBigDataPoolInfoResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDedicatedSqlMinimalTlsSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt; GetSynapseDedicatedSqlMinimalTlsSetting (string dedicatedSQLminimalTlsSettingsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt; GetSynapseDedicatedSqlMinimalTlsSetting(string dedicatedSQLminimalTlsSettingsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseDedicatedSqlMinimalTlsSetting(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDedicatedSqlMinimalTlsSetting (dedicatedSQLminimalTlsSettingsName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseDedicatedSqlMinimalTlsSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDedicatedSqlMinimalTlsSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;&#xA;override this.GetSynapseDedicatedSqlMinimalTlsSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;" Usage="synapseWorkspaceResource.GetSynapseDedicatedSqlMinimalTlsSetting (dedicatedSQLminimalTlsSettingsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dedicatedSQLminimalTlsSettingsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dedicatedSQLminimalTlsSettingsName"> The name of the dedicated sql minimal tls settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's minimal tls settings.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/dedicatedSQLminimalTlsSettings/{dedicatedSQLminimalTlsSettingsName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDedicatedSqlMinimalTlsSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;&gt; GetSynapseDedicatedSqlMinimalTlsSettingAsync (string dedicatedSQLminimalTlsSettingsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;&gt; GetSynapseDedicatedSqlMinimalTlsSettingAsync(string dedicatedSQLminimalTlsSettingsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseDedicatedSqlMinimalTlsSettingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDedicatedSqlMinimalTlsSettingAsync (dedicatedSQLminimalTlsSettingsName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseDedicatedSqlMinimalTlsSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDedicatedSqlMinimalTlsSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;&gt;&#xA;override this.GetSynapseDedicatedSqlMinimalTlsSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseDedicatedSqlMinimalTlsSettingAsync (dedicatedSQLminimalTlsSettingsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dedicatedSQLminimalTlsSettingsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dedicatedSQLminimalTlsSettingsName"> The name of the dedicated sql minimal tls settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's minimal tls settings.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/dedicatedSQLminimalTlsSettings/{dedicatedSQLminimalTlsSettingsName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dedicatedSQLminimalTlsSettingsName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDedicatedSqlMinimalTlsSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingCollection GetSynapseDedicatedSqlMinimalTlsSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingCollection GetSynapseDedicatedSqlMinimalTlsSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseDedicatedSqlMinimalTlsSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDedicatedSqlMinimalTlsSettings () As SynapseDedicatedSqlMinimalTlsSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDedicatedSqlMinimalTlsSettings : unit -&gt; Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingCollection&#xA;override this.GetSynapseDedicatedSqlMinimalTlsSettings : unit -&gt; Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingCollection" Usage="synapseWorkspaceResource.GetSynapseDedicatedSqlMinimalTlsSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseDedicatedSqlMinimalTlsSettingResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseDedicatedSqlMinimalTlsSettingResources and their operations over a SynapseDedicatedSqlMinimalTlsSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseEncryptionProtector">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt; GetSynapseEncryptionProtector (Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt; GetSynapseEncryptionProtector(valuetype Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseEncryptionProtector(Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseEncryptionProtector (encryptionProtectorName As SynapseEncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseEncryptionProtectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseEncryptionProtector : Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;&#xA;override this.GetSynapseEncryptionProtector : Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;" Usage="synapseWorkspaceResource.GetSynapseEncryptionProtector (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's encryption protector.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerEncryptionProtector_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseEncryptionProtectorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;&gt; GetSynapseEncryptionProtectorAsync (Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName encryptionProtectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;&gt; GetSynapseEncryptionProtectorAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName encryptionProtectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseEncryptionProtectorAsync(Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseEncryptionProtectorAsync (encryptionProtectorName As SynapseEncryptionProtectorName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseEncryptionProtectorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseEncryptionProtectorAsync : Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;&gt;&#xA;override this.GetSynapseEncryptionProtectorAsync : Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseEncryptionProtectorAsync (encryptionProtectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptionProtectorName" Type="Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="encryptionProtectorName"> The name of the encryption protector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's encryption protector.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerEncryptionProtector_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseEncryptionProtectors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseEncryptionProtectorCollection GetSynapseEncryptionProtectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseEncryptionProtectorCollection GetSynapseEncryptionProtectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseEncryptionProtectors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseEncryptionProtectors () As SynapseEncryptionProtectorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseEncryptionProtectors : unit -&gt; Azure.ResourceManager.Synapse.SynapseEncryptionProtectorCollection&#xA;override this.GetSynapseEncryptionProtectors : unit -&gt; Azure.ResourceManager.Synapse.SynapseEncryptionProtectorCollection" Usage="synapseWorkspaceResource.GetSynapseEncryptionProtectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseEncryptionProtectorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseEncryptionProtectorResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseEncryptionProtectorResources and their operations over a SynapseEncryptionProtectorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseExtendedServerBlobAuditingPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyCollection GetSynapseExtendedServerBlobAuditingPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyCollection GetSynapseExtendedServerBlobAuditingPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseExtendedServerBlobAuditingPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseExtendedServerBlobAuditingPolicies () As SynapseExtendedServerBlobAuditingPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseExtendedServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyCollection&#xA;override this.GetSynapseExtendedServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyCollection" Usage="synapseWorkspaceResource.GetSynapseExtendedServerBlobAuditingPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseExtendedServerBlobAuditingPolicyResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseExtendedServerBlobAuditingPolicyResources and their operations over a SynapseExtendedServerBlobAuditingPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseExtendedServerBlobAuditingPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt; GetSynapseExtendedServerBlobAuditingPolicy (Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt; GetSynapseExtendedServerBlobAuditingPolicy(valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseExtendedServerBlobAuditingPolicy(Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseExtendedServerBlobAuditingPolicy (blobAuditingPolicyName As SynapseBlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseExtendedServerBlobAuditingPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseExtendedServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;&#xA;override this.GetSynapseExtendedServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;" Usage="synapseWorkspaceResource.GetSynapseExtendedServerBlobAuditingPolicy (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace SQL server's extended blob auditing policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings/{blobAuditingPolicyName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerExtendedBlobAuditingPolicies_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseExtendedServerBlobAuditingPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;&gt; GetSynapseExtendedServerBlobAuditingPolicyAsync (Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;&gt; GetSynapseExtendedServerBlobAuditingPolicyAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseExtendedServerBlobAuditingPolicyAsync(Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseExtendedServerBlobAuditingPolicyAsync (blobAuditingPolicyName As SynapseBlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseExtendedServerBlobAuditingPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseExtendedServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;&gt;&#xA;override this.GetSynapseExtendedServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseExtendedServerBlobAuditingPolicyAsync (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace SQL server's extended blob auditing policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings/{blobAuditingPolicyName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerExtendedBlobAuditingPolicies_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIntegrationRuntime">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt; GetSynapseIntegrationRuntime (string integrationRuntimeName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt; GetSynapseIntegrationRuntime(string integrationRuntimeName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseIntegrationRuntime(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIntegrationRuntime (integrationRuntimeName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseIntegrationRuntimeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIntegrationRuntime : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;&#xA;override this.GetSynapseIntegrationRuntime : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;" Usage="synapseWorkspaceResource.GetSynapseIntegrationRuntime (integrationRuntimeName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="integrationRuntimeName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="integrationRuntimeName"> Integration runtime name. </param>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an integration runtime
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}</description></item><item><term>Operation Id</term><description>IntegrationRuntimes_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationRuntimeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationRuntimeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIntegrationRuntimeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;&gt; GetSynapseIntegrationRuntimeAsync (string integrationRuntimeName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;&gt; GetSynapseIntegrationRuntimeAsync(string integrationRuntimeName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseIntegrationRuntimeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIntegrationRuntimeAsync (integrationRuntimeName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseIntegrationRuntimeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIntegrationRuntimeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;&gt;&#xA;override this.GetSynapseIntegrationRuntimeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseIntegrationRuntimeAsync (integrationRuntimeName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="integrationRuntimeName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="integrationRuntimeName"> Integration runtime name. </param>
        <param name="ifNoneMatch"> ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an integration runtime
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}</description></item><item><term>Operation Id</term><description>IntegrationRuntimes_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationRuntimeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationRuntimeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIntegrationRuntimes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeCollection GetSynapseIntegrationRuntimes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeCollection GetSynapseIntegrationRuntimes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseIntegrationRuntimes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIntegrationRuntimes () As SynapseIntegrationRuntimeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIntegrationRuntimes : unit -&gt; Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeCollection&#xA;override this.GetSynapseIntegrationRuntimes : unit -&gt; Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeCollection" Usage="synapseWorkspaceResource.GetSynapseIntegrationRuntimes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseIntegrationRuntimeResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseIntegrationRuntimeResources and their operations over a SynapseIntegrationRuntimeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIPFirewallRuleInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt; GetSynapseIPFirewallRuleInfo (string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt; GetSynapseIPFirewallRuleInfo(string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseIPFirewallRuleInfo(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIPFirewallRuleInfo (ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseIPFirewallRuleInfoResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIPFirewallRuleInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;&#xA;override this.GetSynapseIPFirewallRuleInfo : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;" Usage="synapseWorkspaceResource.GetSynapseIPFirewallRuleInfo (ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleName"> The IP firewall rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a firewall rule
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}</description></item><item><term>Operation Id</term><description>IpFirewallRules_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIPFirewallRuleInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;&gt; GetSynapseIPFirewallRuleInfoAsync (string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;&gt; GetSynapseIPFirewallRuleInfoAsync(string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseIPFirewallRuleInfoAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIPFirewallRuleInfoAsync (ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseIPFirewallRuleInfoResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIPFirewallRuleInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;&gt;&#xA;override this.GetSynapseIPFirewallRuleInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseIPFirewallRuleInfoAsync (ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleName"> The IP firewall rule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a firewall rule
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}</description></item><item><term>Operation Id</term><description>IpFirewallRules_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIPFirewallRuleInfos">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoCollection GetSynapseIPFirewallRuleInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoCollection GetSynapseIPFirewallRuleInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseIPFirewallRuleInfos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIPFirewallRuleInfos () As SynapseIPFirewallRuleInfoCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIPFirewallRuleInfos : unit -&gt; Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoCollection&#xA;override this.GetSynapseIPFirewallRuleInfos : unit -&gt; Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoCollection" Usage="synapseWorkspaceResource.GetSynapseIPFirewallRuleInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseIPFirewallRuleInfoResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseIPFirewallRuleInfoResources and their operations over a SynapseIPFirewallRuleInfoResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt; GetSynapseKey (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseKeyResource&gt; GetSynapseKey(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKey (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseKeyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt;&#xA;override this.GetSynapseKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt;" Usage="synapseWorkspaceResource.GetSynapseKey (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the workspace key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace key
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}</description></item><item><term>Operation Id</term><description>Keys_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKeyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt;&gt; GetSynapseKeyAsync (string keyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseKeyResource&gt;&gt; GetSynapseKeyAsync(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKeyAsync (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseKeyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt;&gt;&#xA;override this.GetSynapseKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseKeyAsync (keyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKeyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of the workspace key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace key
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}</description></item><item><term>Operation Id</term><description>Keys_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKeyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseKeyCollection GetSynapseKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseKeyCollection GetSynapseKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKeys () As SynapseKeyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKeys : unit -&gt; Azure.ResourceManager.Synapse.SynapseKeyCollection&#xA;override this.GetSynapseKeys : unit -&gt; Azure.ResourceManager.Synapse.SynapseKeyCollection" Usage="synapseWorkspaceResource.GetSynapseKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseKeyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseKeyResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseKeyResources and their operations over a SynapseKeyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKustoPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt; GetSynapseKustoPool (string kustoPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt; GetSynapseKustoPool(string kustoPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseKustoPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKustoPool (kustoPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseKustoPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKustoPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;&#xA;override this.GetSynapseKustoPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;" Usage="synapseWorkspaceResource.GetSynapseKustoPool (kustoPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kustoPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kustoPoolName"> The name of the Kusto pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}</description></item><item><term>Operation Id</term><description>KustoPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="kustoPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="kustoPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKustoPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;&gt; GetSynapseKustoPoolAsync (string kustoPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;&gt; GetSynapseKustoPoolAsync(string kustoPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseKustoPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKustoPoolAsync (kustoPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseKustoPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKustoPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;&gt;&#xA;override this.GetSynapseKustoPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseKustoPoolAsync (kustoPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseKustoPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kustoPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kustoPoolName"> The name of the Kusto pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}</description></item><item><term>Operation Id</term><description>KustoPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="kustoPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="kustoPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKustoPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseKustoPoolCollection GetSynapseKustoPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseKustoPoolCollection GetSynapseKustoPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseKustoPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKustoPools () As SynapseKustoPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKustoPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseKustoPoolCollection&#xA;override this.GetSynapseKustoPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseKustoPoolCollection" Usage="synapseWorkspaceResource.GetSynapseKustoPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseKustoPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseKustoPoolResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseKustoPoolResources and their operations over a SynapseKustoPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseLibraries">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseLibraryCollection GetSynapseLibraries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseLibraryCollection GetSynapseLibraries() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseLibraries" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseLibraries () As SynapseLibraryCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseLibraries : unit -&gt; Azure.ResourceManager.Synapse.SynapseLibraryCollection&#xA;override this.GetSynapseLibraries : unit -&gt; Azure.ResourceManager.Synapse.SynapseLibraryCollection" Usage="synapseWorkspaceResource.GetSynapseLibraries " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseLibraryCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseLibraryResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseLibraryResources and their operations over a SynapseLibraryResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseLibrary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt; GetSynapseLibrary (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseLibraryResource&gt; GetSynapseLibrary(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseLibrary(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseLibrary (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseLibraryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseLibrary : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;&#xA;override this.GetSynapseLibrary : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;" Usage="synapseWorkspaceResource.GetSynapseLibrary (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> Library name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get library by name in a workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries/{libraryName}</description></item><item><term>Operation Id</term><description>Library_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseLibraryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="libraryName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseLibraryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;&gt; GetSynapseLibraryAsync (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;&gt; GetSynapseLibraryAsync(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseLibraryAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseLibraryAsync (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseLibraryResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseLibraryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;&gt;&#xA;override this.GetSynapseLibraryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseLibraryAsync (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseLibraryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> Library name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get library by name in a workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries/{libraryName}</description></item><item><term>Operation Id</term><description>Library_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseLibraryResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="libraryName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseManagedIdentitySqlControlSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource GetSynapseManagedIdentitySqlControlSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource GetSynapseManagedIdentitySqlControlSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseManagedIdentitySqlControlSetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseManagedIdentitySqlControlSetting () As SynapseManagedIdentitySqlControlSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseManagedIdentitySqlControlSetting : unit -&gt; Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource&#xA;override this.GetSynapseManagedIdentitySqlControlSetting : unit -&gt; Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource" Usage="synapseWorkspaceResource.GetSynapseManagedIdentitySqlControlSetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a SynapseManagedIdentitySqlControlSettingResource along with the instance operations that can be performed on it in the SynapseWorkspace. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt; GetSynapsePrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt; GetSynapsePrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapsePrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapsePrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&#xA;override this.GetSynapsePrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;" Usage="synapseWorkspaceResource.GetSynapsePrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>PrivateEndpointConnections_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt; GetSynapsePrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt; GetSynapsePrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapsePrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapsePrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetSynapsePrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapsePrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>PrivateEndpointConnections_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection GetSynapsePrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection GetSynapsePrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapsePrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnections () As SynapsePrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection&#xA;override this.GetSynapsePrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection" Usage="synapseWorkspaceResource.GetSynapsePrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapsePrivateEndpointConnectionResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapsePrivateEndpointConnectionResources and their operations over a SynapsePrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRecoverableSqlPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt; GetSynapseRecoverableSqlPool (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt; GetSynapseRecoverableSqlPool(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseRecoverableSqlPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRecoverableSqlPool (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseRecoverableSqlPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRecoverableSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;&#xA;override this.GetSynapseRecoverableSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;" Usage="synapseWorkspaceResource.GetSynapseRecoverableSqlPool (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> The name of the sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get recoverable sql pools for workspace managed sql server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools/{sqlPoolName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerRecoverableSqlPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRecoverableSqlPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;&gt; GetSynapseRecoverableSqlPoolAsync (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;&gt; GetSynapseRecoverableSqlPoolAsync(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseRecoverableSqlPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRecoverableSqlPoolAsync (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseRecoverableSqlPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRecoverableSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;&gt;&#xA;override this.GetSynapseRecoverableSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseRecoverableSqlPoolAsync (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> The name of the sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get recoverable sql pools for workspace managed sql server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools/{sqlPoolName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerRecoverableSqlPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRecoverableSqlPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolCollection GetSynapseRecoverableSqlPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolCollection GetSynapseRecoverableSqlPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseRecoverableSqlPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRecoverableSqlPools () As SynapseRecoverableSqlPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRecoverableSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolCollection&#xA;override this.GetSynapseRecoverableSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolCollection" Usage="synapseWorkspaceResource.GetSynapseRecoverableSqlPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseRecoverableSqlPoolResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseRecoverableSqlPoolResources and their operations over a SynapseRecoverableSqlPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRestorableDroppedSqlPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt; GetSynapseRestorableDroppedSqlPool (string restorableDroppedSqlPoolId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt; GetSynapseRestorableDroppedSqlPool(string restorableDroppedSqlPoolId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseRestorableDroppedSqlPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRestorableDroppedSqlPool (restorableDroppedSqlPoolId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseRestorableDroppedSqlPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRestorableDroppedSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;&#xA;override this.GetSynapseRestorableDroppedSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;" Usage="synapseWorkspaceResource.GetSynapseRestorableDroppedSqlPool (restorableDroppedSqlPoolId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedSqlPoolId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedSqlPoolId"> The id of the deleted Sql Pool in the form of sqlPoolName,deletionTimeInFileTimeFormat. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted sql pool that can be restored
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools/{restorableDroppedSqlPoolId}</description></item><item><term>Operation Id</term><description>RestorableDroppedSqlPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedSqlPoolId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedSqlPoolId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRestorableDroppedSqlPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;&gt; GetSynapseRestorableDroppedSqlPoolAsync (string restorableDroppedSqlPoolId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;&gt; GetSynapseRestorableDroppedSqlPoolAsync(string restorableDroppedSqlPoolId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseRestorableDroppedSqlPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRestorableDroppedSqlPoolAsync (restorableDroppedSqlPoolId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseRestorableDroppedSqlPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRestorableDroppedSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;&gt;&#xA;override this.GetSynapseRestorableDroppedSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseRestorableDroppedSqlPoolAsync (restorableDroppedSqlPoolId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restorableDroppedSqlPoolId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restorableDroppedSqlPoolId"> The id of the deleted Sql Pool in the form of sqlPoolName,deletionTimeInFileTimeFormat. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted sql pool that can be restored
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools/{restorableDroppedSqlPoolId}</description></item><item><term>Operation Id</term><description>RestorableDroppedSqlPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="restorableDroppedSqlPoolId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="restorableDroppedSqlPoolId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRestorableDroppedSqlPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolCollection GetSynapseRestorableDroppedSqlPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolCollection GetSynapseRestorableDroppedSqlPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseRestorableDroppedSqlPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRestorableDroppedSqlPools () As SynapseRestorableDroppedSqlPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRestorableDroppedSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolCollection&#xA;override this.GetSynapseRestorableDroppedSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolCollection" Usage="synapseWorkspaceResource.GetSynapseRestorableDroppedSqlPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseRestorableDroppedSqlPoolResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseRestorableDroppedSqlPoolResources and their operations over a SynapseRestorableDroppedSqlPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerBlobAuditingPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyCollection GetSynapseServerBlobAuditingPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyCollection GetSynapseServerBlobAuditingPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerBlobAuditingPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerBlobAuditingPolicies () As SynapseServerBlobAuditingPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyCollection&#xA;override this.GetSynapseServerBlobAuditingPolicies : unit -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyCollection" Usage="synapseWorkspaceResource.GetSynapseServerBlobAuditingPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseServerBlobAuditingPolicyResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseServerBlobAuditingPolicyResources and their operations over a SynapseServerBlobAuditingPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerBlobAuditingPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt; GetSynapseServerBlobAuditingPolicy (Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt; GetSynapseServerBlobAuditingPolicy(valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerBlobAuditingPolicy(Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerBlobAuditingPolicy (blobAuditingPolicyName As SynapseBlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseServerBlobAuditingPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;&#xA;override this.GetSynapseServerBlobAuditingPolicy : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;" Usage="synapseWorkspaceResource.GetSynapseServerBlobAuditingPolicy (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's blob auditing policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings/{blobAuditingPolicyName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerBlobAuditingPolicies_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerBlobAuditingPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;&gt; GetSynapseServerBlobAuditingPolicyAsync (Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;&gt; GetSynapseServerBlobAuditingPolicyAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName blobAuditingPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerBlobAuditingPolicyAsync(Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerBlobAuditingPolicyAsync (blobAuditingPolicyName As SynapseBlobAuditingPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseServerBlobAuditingPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;&gt;&#xA;override this.GetSynapseServerBlobAuditingPolicyAsync : Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseServerBlobAuditingPolicyAsync (blobAuditingPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobAuditingPolicyName" Type="Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobAuditingPolicyName"> The name of the blob auditing policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's blob auditing policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings/{blobAuditingPolicyName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerBlobAuditingPolicies_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerSecurityAlertPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyCollection GetSynapseServerSecurityAlertPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyCollection GetSynapseServerSecurityAlertPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerSecurityAlertPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerSecurityAlertPolicies () As SynapseServerSecurityAlertPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyCollection&#xA;override this.GetSynapseServerSecurityAlertPolicies : unit -&gt; Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyCollection" Usage="synapseWorkspaceResource.GetSynapseServerSecurityAlertPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseServerSecurityAlertPolicyResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseServerSecurityAlertPolicyResources and their operations over a SynapseServerSecurityAlertPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerSecurityAlertPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt; GetSynapseServerSecurityAlertPolicy (Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt; GetSynapseServerSecurityAlertPolicy(valuetype Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerSecurityAlertPolicy(Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerSecurityAlertPolicy (securityAlertPolicyName As SqlServerSecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseServerSecurityAlertPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerSecurityAlertPolicy : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;&#xA;override this.GetSynapseServerSecurityAlertPolicy : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;" Usage="synapseWorkspaceResource.GetSynapseServerSecurityAlertPolicy (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's security alert policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies/{securityAlertPolicyName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerSecurityAlertPolicy_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerSecurityAlertPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;&gt; GetSynapseServerSecurityAlertPolicyAsync (Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;&gt; GetSynapseServerSecurityAlertPolicyAsync(valuetype Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName securityAlertPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerSecurityAlertPolicyAsync(Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerSecurityAlertPolicyAsync (securityAlertPolicyName As SqlServerSecurityAlertPolicyName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseServerSecurityAlertPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerSecurityAlertPolicyAsync : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;&gt;&#xA;override this.GetSynapseServerSecurityAlertPolicyAsync : Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseServerSecurityAlertPolicyAsync (securityAlertPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityAlertPolicyName" Type="Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityAlertPolicyName"> The name of the security alert policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace managed sql server's security alert policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies/{securityAlertPolicyName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerSecurityAlertPolicy_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerVulnerabilityAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt; GetSynapseServerVulnerabilityAssessment (Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt; GetSynapseServerVulnerabilityAssessment(valuetype Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerVulnerabilityAssessment(Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerVulnerabilityAssessment (vulnerabilityAssessmentName As SynapseVulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseServerVulnerabilityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerVulnerabilityAssessment : Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;&#xA;override this.GetSynapseServerVulnerabilityAssessment : Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;" Usage="synapseWorkspaceResource.GetSynapseServerVulnerabilityAssessment (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's vulnerability assessment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerVulnerabilityAssessments_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerVulnerabilityAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;&gt; GetSynapseServerVulnerabilityAssessmentAsync (Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName vulnerabilityAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;&gt; GetSynapseServerVulnerabilityAssessmentAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName vulnerabilityAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerVulnerabilityAssessmentAsync(Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerVulnerabilityAssessmentAsync (vulnerabilityAssessmentName As SynapseVulnerabilityAssessmentName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseServerVulnerabilityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerVulnerabilityAssessmentAsync : Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;&gt;&#xA;override this.GetSynapseServerVulnerabilityAssessmentAsync : Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseServerVulnerabilityAssessmentAsync (vulnerabilityAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vulnerabilityAssessmentName" Type="Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vulnerabilityAssessmentName"> The name of the vulnerability assessment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get workspace managed sql server's vulnerability assessment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerVulnerabilityAssessments_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerVulnerabilityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentCollection GetSynapseServerVulnerabilityAssessments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentCollection GetSynapseServerVulnerabilityAssessments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseServerVulnerabilityAssessments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerVulnerabilityAssessments () As SynapseServerVulnerabilityAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentCollection&#xA;override this.GetSynapseServerVulnerabilityAssessments : unit -&gt; Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentCollection" Usage="synapseWorkspaceResource.GetSynapseServerVulnerabilityAssessments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseServerVulnerabilityAssessmentResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseServerVulnerabilityAssessmentResources and their operations over a SynapseServerVulnerabilityAssessmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSparkConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt; GetSynapseSparkConfiguration (string sparkConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt; GetSynapseSparkConfiguration(string sparkConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseSparkConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSparkConfiguration (sparkConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseSparkConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSparkConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;&#xA;override this.GetSynapseSparkConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;" Usage="synapseWorkspaceResource.GetSynapseSparkConfiguration (sparkConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> SparkConfiguration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SparkConfiguration by name in a workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sparkconfigurations/{sparkConfigurationName}</description></item><item><term>Operation Id</term><description>SparkConfiguration_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sparkConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSparkConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;&gt; GetSynapseSparkConfigurationAsync (string sparkConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;&gt; GetSynapseSparkConfigurationAsync(string sparkConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseSparkConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSparkConfigurationAsync (sparkConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseSparkConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSparkConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;&gt;&#xA;override this.GetSynapseSparkConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseSparkConfigurationAsync (sparkConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> SparkConfiguration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SparkConfiguration by name in a workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sparkconfigurations/{sparkConfigurationName}</description></item><item><term>Operation Id</term><description>SparkConfiguration_Get</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sparkConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSparkConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSparkConfigurationCollection GetSynapseSparkConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSparkConfigurationCollection GetSynapseSparkConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseSparkConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSparkConfigurations () As SynapseSparkConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSparkConfigurations : unit -&gt; Azure.ResourceManager.Synapse.SynapseSparkConfigurationCollection&#xA;override this.GetSynapseSparkConfigurations : unit -&gt; Azure.ResourceManager.Synapse.SynapseSparkConfigurationCollection" Usage="synapseWorkspaceResource.GetSynapseSparkConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSparkConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseSparkConfigurationResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseSparkConfigurationResources and their operations over a SynapseSparkConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt; GetSynapseSqlPool (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt; GetSynapseSqlPool(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseSqlPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPool (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseSqlPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;&#xA;override this.GetSynapseSqlPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;" Usage="synapseWorkspaceResource.GetSynapseSqlPool (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> SQL pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SQL pool properties
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}</description></item><item><term>Operation Id</term><description>SqlPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;&gt; GetSynapseSqlPoolAsync (string sqlPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;&gt; GetSynapseSqlPoolAsync(string sqlPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseSqlPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolAsync (sqlPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseSqlPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;&gt;&#xA;override this.GetSynapseSqlPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseSqlPoolAsync (sqlPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseSqlPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlPoolName"> SQL pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get SQL pool properties
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}</description></item><item><term>Operation Id</term><description>SqlPools_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolCollection GetSynapseSqlPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolCollection GetSynapseSqlPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseSqlPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPools () As SynapseSqlPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolCollection&#xA;override this.GetSynapseSqlPools : unit -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolCollection" Usage="synapseWorkspaceResource.GetSynapseSqlPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseSqlPoolResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseSqlPoolResources and their operations over a SynapseSqlPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaceAdministratorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource GetSynapseWorkspaceAdministratorResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource GetSynapseWorkspaceAdministratorResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseWorkspaceAdministratorResource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaceAdministratorResource () As SynapseWorkspaceAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaceAdministratorResource : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource&#xA;override this.GetSynapseWorkspaceAdministratorResource : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource" Usage="synapseWorkspaceResource.GetSynapseWorkspaceAdministratorResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a SynapseWorkspaceAdministratorResource along with the instance operations that can be performed on it in the SynapseWorkspace. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspacePrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt; GetSynapseWorkspacePrivateLinkResource (string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt; GetSynapseWorkspacePrivateLinkResource(string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseWorkspacePrivateLinkResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspacePrivateLinkResource (privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseWorkspacePrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspacePrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;&#xA;override this.GetSynapseWorkspacePrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;" Usage="synapseWorkspaceResource.GetSynapseWorkspacePrivateLinkResource (privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkResourceName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private link resource in workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources/{privateLinkResourceName}</description></item><item><term>Operation Id</term><description>PrivateLinkResources_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspacePrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;&gt; GetSynapseWorkspacePrivateLinkResourceAsync (string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;&gt; GetSynapseWorkspacePrivateLinkResourceAsync(string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseWorkspacePrivateLinkResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspacePrivateLinkResourceAsync (privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseWorkspacePrivateLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspacePrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;&gt;&#xA;override this.GetSynapseWorkspacePrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;&gt;" Usage="synapseWorkspaceResource.GetSynapseWorkspacePrivateLinkResourceAsync (privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkResourceName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get private link resource in workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources/{privateLinkResourceName}</description></item><item><term>Operation Id</term><description>PrivateLinkResources_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspacePrivateLinkResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResourceCollection GetSynapseWorkspacePrivateLinkResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResourceCollection GetSynapseWorkspacePrivateLinkResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseWorkspacePrivateLinkResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspacePrivateLinkResources () As SynapseWorkspacePrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspacePrivateLinkResources : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResourceCollection&#xA;override this.GetSynapseWorkspacePrivateLinkResources : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResourceCollection" Usage="synapseWorkspaceResource.GetSynapseWorkspacePrivateLinkResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseWorkspacePrivateLinkResources in the SynapseWorkspace. </summary>
        <returns> An object representing collection of SynapseWorkspacePrivateLinkResources and their operations over a SynapseWorkspacePrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaceSqlAdministratorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource GetSynapseWorkspaceSqlAdministratorResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource GetSynapseWorkspaceSqlAdministratorResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetSynapseWorkspaceSqlAdministratorResource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaceSqlAdministratorResource () As SynapseWorkspaceSqlAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaceSqlAdministratorResource : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource&#xA;override this.GetSynapseWorkspaceSqlAdministratorResource : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource" Usage="synapseWorkspaceResource.GetSynapseWorkspaceSqlAdministratorResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a SynapseWorkspaceSqlAdministratorResource along with the instance operations that can be performed on it in the SynapseWorkspace. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceManagedSqlServerUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt; GetWorkspaceManagedSqlServerUsages (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt; GetWorkspaceManagedSqlServerUsages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetWorkspaceManagedSqlServerUsages(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceManagedSqlServerUsages (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SynapseServerUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceManagedSqlServerUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt;&#xA;override this.GetWorkspaceManagedSqlServerUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt;" Usage="synapseWorkspaceResource.GetWorkspaceManagedSqlServerUsages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get list of server usages metric for workspace managed sql server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlUsages</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerUsages_List</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseServerUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceManagedSqlServerUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt; GetWorkspaceManagedSqlServerUsagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt; GetWorkspaceManagedSqlServerUsagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.GetWorkspaceManagedSqlServerUsagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceManagedSqlServerUsagesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SynapseServerUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceManagedSqlServerUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt;&#xA;override this.GetWorkspaceManagedSqlServerUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt;" Usage="synapseWorkspaceResource.GetWorkspaceManagedSqlServerUsagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.SynapseServerUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get list of server usages metric for workspace managed sql server.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlUsages</description></item><item><term>Operation Id</term><description>WorkspaceManagedSqlServerUsages_List</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseServerUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Synapse.SynapseWorkspaceResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="synapseWorkspaceResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;" Usage="synapseWorkspaceResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAllIpFirewallRule">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt; ReplaceAllIpFirewallRule (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt; ReplaceAllIpFirewallRule(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.ReplaceAllIpFirewallRule(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAllIpFirewallRule (waitUntil As WaitUntil, content As ReplaceAllIPFirewallRulesContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ReplaceAllFirewallRulesOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAllIpFirewallRule : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;&#xA;override this.ReplaceAllIpFirewallRule : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;" Usage="synapseWorkspaceResource.ReplaceAllIpFirewallRule (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Replace all IP firewall rules request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replaces firewall rules
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/replaceAllIpFirewallRules</description></item><item><term>Operation Id</term><description>IpFirewallRules_ReplaceAll</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAllIpFirewallRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;&gt; ReplaceAllIpFirewallRuleAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;&gt; ReplaceAllIpFirewallRuleAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.ReplaceAllIpFirewallRuleAsync(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAllIpFirewallRuleAsync (waitUntil As WaitUntil, content As ReplaceAllIPFirewallRulesContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ReplaceAllFirewallRulesOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAllIpFirewallRuleAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;&gt;&#xA;override this.ReplaceAllIpFirewallRuleAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;&gt;" Usage="synapseWorkspaceResource.ReplaceAllIpFirewallRuleAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.Models.ReplaceAllFirewallRulesOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.ReplaceAllIPFirewallRulesContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Replace all IP firewall rules request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replaces firewall rules
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/replaceAllIpFirewallRules</description></item><item><term>Operation Id</term><description>IpFirewallRules_ReplaceAll</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Synapse.SynapseWorkspaceResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="synapseWorkspaceResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;" Usage="synapseWorkspaceResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Synapse.SynapseWorkspaceData IJsonModel&lt;SynapseWorkspaceData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Synapse#SynapseWorkspaceData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As SynapseWorkspaceData Implements IJsonModel(Of SynapseWorkspaceData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceData" Usage="synapseWorkspaceResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;SynapseWorkspaceData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Synapse#SynapseWorkspaceData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of SynapseWorkspaceData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="synapseWorkspaceResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Synapse.SynapseWorkspaceData IPersistableModel&lt;SynapseWorkspaceData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Synapse#SynapseWorkspaceData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As SynapseWorkspaceData Implements IPersistableModel(Of SynapseWorkspaceData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceData" Usage="synapseWorkspaceResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;SynapseWorkspaceData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Synapse#SynapseWorkspaceData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of SynapseWorkspaceData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="synapseWorkspaceResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;SynapseWorkspaceData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Synapse#SynapseWorkspaceData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of SynapseWorkspaceData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="synapseWorkspaceResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.Update(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As SynapseWorkspacePatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="synapseWorkspaceResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Workspace patch request properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Update</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As SynapseWorkspacePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SynapseWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;" Usage="synapseWorkspaceResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.Synapse.Models.SynapseWorkspacePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Workspace patch request properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Update</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
