<Type Name="SynapseExtensions" FullName="Azure.ResourceManager.Synapse.SynapseExtensions">
  <TypeSignature Language="C#" Value="public static class SynapseExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SynapseExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.SynapseExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SynapseExtensions" />
  <TypeSignature Language="F#" Value="type SynapseExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Synapse. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailabilityKustoPool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Synapse.Models.CheckNameResult&gt; CheckNameAvailabilityKustoPool (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.Models.CheckNameResult&gt; CheckNameAvailabilityKustoPool(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.CheckNameAvailabilityKustoPool(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityKustoPool (subscriptionResource As SubscriptionResource, location As AzureLocation, content As KustoPoolCheckNameContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckNameResult)" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityKustoPool : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.Models.CheckNameResult&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.CheckNameAvailabilityKustoPool (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.Models.CheckNameResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of Azure region. </param>
        <param name="content"> The name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the kusto pool name is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/locations/{location}/kustoPoolCheckNameAvailability
            Operation Id: KustoPools_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityKustoPoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.Models.CheckNameResult&gt;&gt; CheckNameAvailabilityKustoPoolAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.Models.CheckNameResult&gt;&gt; CheckNameAvailabilityKustoPoolAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.CheckNameAvailabilityKustoPoolAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityKustoPoolAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, content As KustoPoolCheckNameContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CheckNameResult))" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityKustoPoolAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.Models.CheckNameResult&gt;&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.CheckNameAvailabilityKustoPoolAsync (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.Models.CheckNameResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.KustoPoolCheckNameContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of Azure region. </param>
        <param name="content"> The name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the kusto pool name is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/locations/{location}/kustoPoolCheckNameAvailability
            Operation Id: KustoPools_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedDatabaseConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource GetAttachedDatabaseConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource GetAttachedDatabaseConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetAttachedDatabaseConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAttachedDatabaseConfigurationResource (client As ArmClient, id As ResourceIdentifier) As AttachedDatabaseConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetAttachedDatabaseConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetAttachedDatabaseConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.AttachedDatabaseConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureADOnlyAuthenticationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource GetAzureADOnlyAuthenticationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource GetAzureADOnlyAuthenticationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetAzureADOnlyAuthenticationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzureADOnlyAuthenticationResource (client As ArmClient, id As ResourceIdentifier) As AzureADOnlyAuthenticationResource" />
      <MemberSignature Language="F#" Value="static member GetAzureADOnlyAuthenticationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetAzureADOnlyAuthenticationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.AzureADOnlyAuthenticationName)" /> to create an <see cref="T:Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.AzureADOnlyAuthenticationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBigDataPoolResourceInfoResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource GetBigDataPoolResourceInfoResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource GetBigDataPoolResourceInfoResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetBigDataPoolResourceInfoResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBigDataPoolResourceInfoResource (client As ArmClient, id As ResourceIdentifier) As BigDataPoolResourceInfoResource" />
      <MemberSignature Language="F#" Value="static member GetBigDataPoolResourceInfoResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetBigDataPoolResourceInfoResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.BigDataPoolResourceInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterPrincipalAssignmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource GetClusterPrincipalAssignmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource GetClusterPrincipalAssignmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetClusterPrincipalAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClusterPrincipalAssignmentResource (client As ArmClient, id As ResourceIdentifier) As ClusterPrincipalAssignmentResource" />
      <MemberSignature Language="F#" Value="static member GetClusterPrincipalAssignmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetClusterPrincipalAssignmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ClusterPrincipalAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabasePrincipalAssignmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource GetDatabasePrincipalAssignmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource GetDatabasePrincipalAssignmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetDatabasePrincipalAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabasePrincipalAssignmentResource (client As ArmClient, id As ResourceIdentifier) As DatabasePrincipalAssignmentResource" />
      <MemberSignature Language="F#" Value="static member GetDatabasePrincipalAssignmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetDatabasePrincipalAssignmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.DatabasePrincipalAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.DatabaseResource GetDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.DatabaseResource GetDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseResource (client As ArmClient, id As ResourceIdentifier) As DatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.DatabaseResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.DatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.DatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.DatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.DatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.DataConnectionResource GetDataConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.DataConnectionResource GetDataConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetDataConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataConnectionResource (client As ArmClient, id As ResourceIdentifier) As DataConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetDataConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.DataConnectionResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetDataConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DataConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.DataConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.DataConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.DataConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.DataConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMaskingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.DataMaskingPolicyResource GetDataMaskingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.DataMaskingPolicyResource GetDataMaskingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetDataMaskingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataMaskingPolicyResource (client As ArmClient, id As ResourceIdentifier) As DataMaskingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetDataMaskingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.DataMaskingPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetDataMaskingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DataMaskingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.DataMaskingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.DataMaskingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.DataMaskingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.DataMaskingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMaskingRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.DataMaskingRuleResource GetDataMaskingRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.DataMaskingRuleResource GetDataMaskingRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetDataMaskingRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataMaskingRuleResource (client As ArmClient, id As ResourceIdentifier) As DataMaskingRuleResource" />
      <MemberSignature Language="F#" Value="static member GetDataMaskingRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.DataMaskingRuleResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetDataMaskingRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DataMaskingRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.DataMaskingRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.DataMaskingRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.DataMaskingRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.DataMaskingRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataWarehouseUserActivityResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource GetDataWarehouseUserActivityResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource GetDataWarehouseUserActivityResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetDataWarehouseUserActivityResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataWarehouseUserActivityResource (client As ArmClient, id As ResourceIdentifier) As DataWarehouseUserActivityResource" />
      <MemberSignature Language="F#" Value="static member GetDataWarehouseUserActivityResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetDataWarehouseUserActivityResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.DataWarehouseUserActivityName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.DataWarehouseUserActivityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDedicatedSQLminimalTlsSettingResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource GetDedicatedSQLminimalTlsSettingResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource GetDedicatedSQLminimalTlsSettingResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetDedicatedSQLminimalTlsSettingResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDedicatedSQLminimalTlsSettingResource (client As ArmClient, id As ResourceIdentifier) As DedicatedSQLminimalTlsSettingResource" />
      <MemberSignature Language="F#" Value="static member GetDedicatedSQLminimalTlsSettingResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetDedicatedSQLminimalTlsSettingResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.DedicatedSQLminimalTlsSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionProtectorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.EncryptionProtectorResource GetEncryptionProtectorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.EncryptionProtectorResource GetEncryptionProtectorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetEncryptionProtectorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEncryptionProtectorResource (client As ArmClient, id As ResourceIdentifier) As EncryptionProtectorResource" />
      <MemberSignature Language="F#" Value="static member GetEncryptionProtectorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.EncryptionProtectorResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetEncryptionProtectorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.EncryptionProtectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Synapse.EncryptionProtectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.EncryptionProtectorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.EncryptionProtectorName)" /> to create an <see cref="T:Azure.ResourceManager.Synapse.EncryptionProtectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.EncryptionProtectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource GetExtendedServerBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource GetExtendedServerBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetExtendedServerBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExtendedServerBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As ExtendedServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetExtendedServerBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetExtendedServerBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName)" /> to create an <see cref="T:Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ExtendedServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedSqlPoolBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource GetExtendedSqlPoolBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource GetExtendedSqlPoolBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetExtendedSqlPoolBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExtendedSqlPoolBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As ExtendedSqlPoolBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetExtendedSqlPoolBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetExtendedSqlPoolBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ExtendedSqlPoolBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeoBackupPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.GeoBackupPolicyResource GetGeoBackupPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.GeoBackupPolicyResource GetGeoBackupPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetGeoBackupPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGeoBackupPolicyResource (client As ArmClient, id As ResourceIdentifier) As GeoBackupPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetGeoBackupPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.GeoBackupPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetGeoBackupPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.GeoBackupPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.GeoBackupPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.GeoBackupPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.GeoBackupPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.GeoBackupPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.GeoBackupPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationRuntimeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.IntegrationRuntimeResource GetIntegrationRuntimeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.IntegrationRuntimeResource GetIntegrationRuntimeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetIntegrationRuntimeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationRuntimeResource (client As ArmClient, id As ResourceIdentifier) As IntegrationRuntimeResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationRuntimeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.IntegrationRuntimeResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetIntegrationRuntimeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.IntegrationRuntimeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Synapse.IntegrationRuntimeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.IntegrationRuntimeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Synapse.IntegrationRuntimeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.IntegrationRuntimeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPFirewallRuleInfoResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource GetIPFirewallRuleInfoResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource GetIPFirewallRuleInfoResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetIPFirewallRuleInfoResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIPFirewallRuleInfoResource (client As ArmClient, id As ResourceIdentifier) As IPFirewallRuleInfoResource" />
      <MemberSignature Language="F#" Value="static member GetIPFirewallRuleInfoResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetIPFirewallRuleInfoResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.IPFirewallRuleInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.KeyResource GetKeyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.KeyResource GetKeyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetKeyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyResource (client As ArmClient, id As ResourceIdentifier) As KeyResource" />
      <MemberSignature Language="F#" Value="static member GetKeyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.KeyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetKeyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.KeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.KeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.KeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.KeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.KeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoOperations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.Operation&gt; GetKustoOperations (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.Models.Operation&gt; GetKustoOperations(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetKustoOperations(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKustoOperations (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Operation)" />
      <MemberSignature Language="F#" Value="static member GetKustoOperations : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.Operation&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetKustoOperations (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.Operation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists available operations for the Kusto sub-resources inside Microsoft.Synapse provider.
            Request Path: /providers/Microsoft.Synapse/kustooperations
            Operation Id: KustoOperations_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.Models.Operation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoOperationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.Operation&gt; GetKustoOperationsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.Models.Operation&gt; GetKustoOperationsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetKustoOperationsAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKustoOperationsAsync (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Operation)" />
      <MemberSignature Language="F#" Value="static member GetKustoOperationsAsync : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.Operation&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetKustoOperationsAsync (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.Operation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists available operations for the Kusto sub-resources inside Microsoft.Synapse provider.
            Request Path: /providers/Microsoft.Synapse/kustooperations
            Operation Id: KustoOperations_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.Models.Operation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.KustoPoolResource GetKustoPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.KustoPoolResource GetKustoPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetKustoPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKustoPoolResource (client As ArmClient, id As ResourceIdentifier) As KustoPoolResource" />
      <MemberSignature Language="F#" Value="static member GetKustoPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.KustoPoolResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetKustoPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.KustoPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.KustoPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.KustoPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.KustoPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.KustoPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLibraryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.LibraryResource GetLibraryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.LibraryResource GetLibraryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetLibraryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLibraryResource (client As ArmClient, id As ResourceIdentifier) As LibraryResource" />
      <MemberSignature Language="F#" Value="static member GetLibraryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.LibraryResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetLibraryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.LibraryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.LibraryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.LibraryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.LibraryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.LibraryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaintenanceWindowOptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource GetMaintenanceWindowOptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource GetMaintenanceWindowOptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetMaintenanceWindowOptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaintenanceWindowOptionResource (client As ArmClient, id As ResourceIdentifier) As MaintenanceWindowOptionResource" />
      <MemberSignature Language="F#" Value="static member GetMaintenanceWindowOptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetMaintenanceWindowOptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.MaintenanceWindowOptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaintenanceWindowResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.MaintenanceWindowResource GetMaintenanceWindowResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.MaintenanceWindowResource GetMaintenanceWindowResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetMaintenanceWindowResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaintenanceWindowResource (client As ArmClient, id As ResourceIdentifier) As MaintenanceWindowResource" />
      <MemberSignature Language="F#" Value="static member GetMaintenanceWindowResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.MaintenanceWindowResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetMaintenanceWindowResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.MaintenanceWindowResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.MaintenanceWindowResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.MaintenanceWindowResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.MaintenanceWindowResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.MaintenanceWindowResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedIdentitySqlControlSettingsModelResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource GetManagedIdentitySqlControlSettingsModelResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource GetManagedIdentitySqlControlSettingsModelResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetManagedIdentitySqlControlSettingsModelResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedIdentitySqlControlSettingsModelResource (client As ArmClient, id As ResourceIdentifier) As ManagedIdentitySqlControlSettingsModelResource" />
      <MemberSignature Language="F#" Value="static member GetManagedIdentitySqlControlSettingsModelResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetManagedIdentitySqlControlSettingsModelResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ManagedIdentitySqlControlSettingsModelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataSyncConfigResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.MetadataSyncConfigResource GetMetadataSyncConfigResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.MetadataSyncConfigResource GetMetadataSyncConfigResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetMetadataSyncConfigResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataSyncConfigResource (client As ArmClient, id As ResourceIdentifier) As MetadataSyncConfigResource" />
      <MemberSignature Language="F#" Value="static member GetMetadataSyncConfigResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.MetadataSyncConfigResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetMetadataSyncConfigResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.MetadataSyncConfigResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.MetadataSyncConfigResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.MetadataSyncConfigResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.MetadataSyncConfigResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.MetadataSyncConfigResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointConnectionForPrivateLinkHubResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource GetPrivateEndpointConnectionForPrivateLinkHubResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource GetPrivateEndpointConnectionForPrivateLinkHubResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateEndpointConnectionForPrivateLinkHubResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateEndpointConnectionForPrivateLinkHubResource (client As ArmClient, id As ResourceIdentifier) As PrivateEndpointConnectionForPrivateLinkHubResource" />
      <MemberSignature Language="F#" Value="static member GetPrivateEndpointConnectionForPrivateLinkHubResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateEndpointConnectionForPrivateLinkHubResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.PrivateEndpointConnectionForPrivateLinkHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkHub">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt; GetPrivateLinkHub (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string privateLinkHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt; GetPrivateLinkHub(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string privateLinkHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHub(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkHub (resourceGroupResource As ResourceGroupResource, privateLinkHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateLinkHubResource)" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkHub : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHub (resourceGroupResource, privateLinkHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="privateLinkHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="privateLinkHubName"> Name of the privateLinkHub. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a privateLinkHub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}
            Operation Id: PrivateLinkHubs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkHubName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkHubName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkHubAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;&gt; GetPrivateLinkHubAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string privateLinkHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;&gt; GetPrivateLinkHubAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string privateLinkHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkHubAsync (resourceGroupResource As ResourceGroupResource, privateLinkHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateLinkHubResource))" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkHubAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubAsync (resourceGroupResource, privateLinkHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="privateLinkHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="privateLinkHubName"> Name of the privateLinkHub. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a privateLinkHub
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}
            Operation Id: PrivateLinkHubs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkHubName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkHubName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkHubPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource GetPrivateLinkHubPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource GetPrivateLinkHubPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkHubPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As PrivateLinkHubPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkHubPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkHubResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.PrivateLinkHubResource GetPrivateLinkHubResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.PrivateLinkHubResource GetPrivateLinkHubResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkHubResource (client As ArmClient, id As ResourceIdentifier) As PrivateLinkHubResource" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkHubResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.PrivateLinkHubResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.PrivateLinkHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.PrivateLinkHubResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkHubs">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.PrivateLinkHubCollection GetPrivateLinkHubs (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.PrivateLinkHubCollection GetPrivateLinkHubs(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubs(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkHubs (resourceGroupResource As ResourceGroupResource) As PrivateLinkHubCollection" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkHubs : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Synapse.PrivateLinkHubCollection" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubs resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.PrivateLinkHubCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of PrivateLinkHubResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PrivateLinkHubResources and their operations over a PrivateLinkHubResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkHubs">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt; GetPrivateLinkHubs (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt; GetPrivateLinkHubs(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubs(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkHubs (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PrivateLinkHubResource)" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkHubs : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubs (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of privateLinkHubs in a subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs
            Operation Id: PrivateLinkHubs_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkHubsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt; GetPrivateLinkHubsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt; GetPrivateLinkHubsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkHubsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PrivateLinkHubResource)" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkHubsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetPrivateLinkHubsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.PrivateLinkHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of privateLinkHubs in a subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs
            Operation Id: PrivateLinkHubs_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.PrivateLinkHubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecoverableSqlPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.RecoverableSqlPoolResource GetRecoverableSqlPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.RecoverableSqlPoolResource GetRecoverableSqlPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetRecoverableSqlPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRecoverableSqlPoolResource (client As ArmClient, id As ResourceIdentifier) As RecoverableSqlPoolResource" />
      <MemberSignature Language="F#" Value="static member GetRecoverableSqlPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.RecoverableSqlPoolResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetRecoverableSqlPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.RecoverableSqlPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.RecoverableSqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.RecoverableSqlPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.RecoverableSqlPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.RecoverableSqlPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ReplicationLinkResource GetReplicationLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ReplicationLinkResource GetReplicationLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetReplicationLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReplicationLinkResource (client As ArmClient, id As ResourceIdentifier) As ReplicationLinkResource" />
      <MemberSignature Language="F#" Value="static member GetReplicationLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ReplicationLinkResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetReplicationLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ReplicationLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.ReplicationLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ReplicationLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.ReplicationLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ReplicationLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableDroppedSqlPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource GetRestorableDroppedSqlPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource GetRestorableDroppedSqlPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetRestorableDroppedSqlPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRestorableDroppedSqlPoolResource (client As ArmClient, id As ResourceIdentifier) As RestorableDroppedSqlPoolResource" />
      <MemberSignature Language="F#" Value="static member GetRestorableDroppedSqlPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetRestorableDroppedSqlPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.RestorableDroppedSqlPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorePointResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.RestorePointResource GetRestorePointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.RestorePointResource GetRestorePointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetRestorePointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRestorePointResource (client As ArmClient, id As ResourceIdentifier) As RestorePointResource" />
      <MemberSignature Language="F#" Value="static member GetRestorePointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.RestorePointResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetRestorePointResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.RestorePointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.RestorePointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.RestorePointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.RestorePointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.RestorePointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSensitivityLabelResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SensitivityLabelResource GetSensitivityLabelResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SensitivityLabelResource GetSensitivityLabelResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSensitivityLabelResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSensitivityLabelResource (client As ArmClient, id As ResourceIdentifier) As SensitivityLabelResource" />
      <MemberSignature Language="F#" Value="static member GetSensitivityLabelResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SensitivityLabelResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSensitivityLabelResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SensitivityLabelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SensitivityLabelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SensitivityLabelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SensitivityLabelSource)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SensitivityLabelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SensitivityLabelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource GetServerBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource GetServerBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetServerBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServerBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As ServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetServerBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetServerBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource GetServerSecurityAlertPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource GetServerSecurityAlertPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetServerSecurityAlertPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServerSecurityAlertPolicyResource (client As ArmClient, id As ResourceIdentifier) As ServerSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetServerSecurityAlertPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetServerSecurityAlertPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ServerSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource GetServerVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource GetServerVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetServerVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServerVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As ServerVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetServerVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetServerVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.ServerVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusKustoPools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.SkuDescription&gt; GetSkusKustoPools (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.Models.SkuDescription&gt; GetSkusKustoPools(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSkusKustoPools(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSkusKustoPools (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SkuDescription)" />
      <MemberSignature Language="F#" Value="static member GetSkusKustoPools : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.SkuDescription&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSkusKustoPools (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.SkuDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists eligible SKUs for Kusto Pool resource.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/skus
            Operation Id: KustoPools_ListSkus
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.Models.SkuDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusKustoPoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.SkuDescription&gt; GetSkusKustoPoolsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.Models.SkuDescription&gt; GetSkusKustoPoolsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSkusKustoPoolsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSkusKustoPoolsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SkuDescription)" />
      <MemberSignature Language="F#" Value="static member GetSkusKustoPoolsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.SkuDescription&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSkusKustoPoolsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.SkuDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists eligible SKUs for Kusto Pool resource.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/skus
            Operation Id: KustoPools_ListSkus
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.Models.SkuDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SparkConfigurationResource GetSparkConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SparkConfigurationResource GetSparkConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSparkConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSparkConfigurationResource (client As ArmClient, id As ResourceIdentifier) As SparkConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetSparkConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SparkConfigurationResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSparkConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SparkConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SparkConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SparkConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SparkConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SparkConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource GetSqlPoolBlobAuditingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource GetSqlPoolBlobAuditingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolBlobAuditingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolBlobAuditingPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolBlobAuditingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolBlobAuditingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolColumnResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolColumnResource GetSqlPoolColumnResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolColumnResource GetSqlPoolColumnResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolColumnResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolColumnResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolColumnResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolColumnResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolColumnResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolColumnResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolColumnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolColumnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolColumnResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolColumnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolColumnResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolConnectionPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource GetSqlPoolConnectionPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource GetSqlPoolConnectionPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolConnectionPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolConnectionPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolConnectionPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolConnectionPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolConnectionPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.ConnectionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolConnectionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolResource GetSqlPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolResource GetSqlPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolSchemaResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolSchemaResource GetSqlPoolSchemaResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolSchemaResource GetSqlPoolSchemaResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolSchemaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolSchemaResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolSchemaResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolSchemaResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolSchemaResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolSchemaResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource GetSqlPoolSecurityAlertPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource GetSqlPoolSecurityAlertPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolSecurityAlertPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolSecurityAlertPolicyResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolSecurityAlertPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolSecurityAlertPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SqlPoolSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolTableResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolTableResource GetSqlPoolTableResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolTableResource GetSqlPoolTableResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolTableResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolTableResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolTableResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolTableResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolTableResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolTableResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource GetSqlPoolVulnerabilityAssessmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource GetSqlPoolVulnerabilityAssessmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolVulnerabilityAssessmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolVulnerabilityAssessmentResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolVulnerabilityAssessmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolVulnerabilityAssessmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlPoolVulnerabilityAssessmentRuleBaselineResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource GetSqlPoolVulnerabilityAssessmentRuleBaselineResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource GetSqlPoolVulnerabilityAssessmentRuleBaselineResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolVulnerabilityAssessmentRuleBaselineResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlPoolVulnerabilityAssessmentRuleBaselineResource (client As ArmClient, id As ResourceIdentifier) As SqlPoolVulnerabilityAssessmentRuleBaselineResource" />
      <MemberSignature Language="F#" Value="static member GetSqlPoolVulnerabilityAssessmentRuleBaselineResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSqlPoolVulnerabilityAssessmentRuleBaselineResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName,System.String,Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentPolicyBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SqlPoolVulnerabilityAssessmentRuleBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource GetSynapsePrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource GetSynapsePrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetSynapsePrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSynapsePrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As SynapsePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetSynapsePrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetSynapsePrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransparentDataEncryptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.TransparentDataEncryptionResource GetTransparentDataEncryptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.TransparentDataEncryptionResource GetTransparentDataEncryptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetTransparentDataEncryptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTransparentDataEncryptionResource (client As ArmClient, id As ResourceIdentifier) As TransparentDataEncryptionResource" />
      <MemberSignature Language="F#" Value="static member GetTransparentDataEncryptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.TransparentDataEncryptionResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetTransparentDataEncryptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.TransparentDataEncryptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.TransparentDataEncryptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.TransparentDataEncryptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.TransparentDataEncryptionName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.TransparentDataEncryptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.TransparentDataEncryptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVulnerabilityAssessmentScanRecordResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource GetVulnerabilityAssessmentScanRecordResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource GetVulnerabilityAssessmentScanRecordResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetVulnerabilityAssessmentScanRecordResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVulnerabilityAssessmentScanRecordResource (client As ArmClient, id As ResourceIdentifier) As VulnerabilityAssessmentScanRecordResource" />
      <MemberSignature Language="F#" Value="static member GetVulnerabilityAssessmentScanRecordResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetVulnerabilityAssessmentScanRecordResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.VulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.VulnerabilityAssessmentScanRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadClassifierResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.WorkloadClassifierResource GetWorkloadClassifierResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.WorkloadClassifierResource GetWorkloadClassifierResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkloadClassifierResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkloadClassifierResource (client As ArmClient, id As ResourceIdentifier) As WorkloadClassifierResource" />
      <MemberSignature Language="F#" Value="static member GetWorkloadClassifierResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.WorkloadClassifierResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkloadClassifierResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkloadClassifierResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.WorkloadClassifierResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.WorkloadClassifierResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.WorkloadClassifierResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkloadClassifierResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkloadGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.WorkloadGroupResource GetWorkloadGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.WorkloadGroupResource GetWorkloadGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkloadGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkloadGroupResource (client As ArmClient, id As ResourceIdentifier) As WorkloadGroupResource" />
      <MemberSignature Language="F#" Value="static member GetWorkloadGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.WorkloadGroupResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkloadGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkloadGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.WorkloadGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.WorkloadGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.WorkloadGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkloadGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspace">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; GetWorkspace (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; GetWorkspace(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspace(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspace (resourceGroupResource As ResourceGroupResource, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetWorkspace : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspace (resourceGroupResource, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceAdministratorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.WorkspaceAdministratorResource GetWorkspaceAdministratorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.WorkspaceAdministratorResource GetWorkspaceAdministratorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceAdministratorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspaceAdministratorResource (client As ArmClient, id As ResourceIdentifier) As WorkspaceAdministratorResource" />
      <MemberSignature Language="F#" Value="static member GetWorkspaceAdministratorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.WorkspaceAdministratorResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceAdministratorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspaceAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.WorkspaceAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; GetWorkspaceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt; GetWorkspaceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspaceAsync (resourceGroupResource As ResourceGroupResource, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkspaceResource))" />
      <MemberSignature Language="F#" Value="static member GetWorkspaceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceAsync (resourceGroupResource, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspacePrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource GetWorkspacePrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource GetWorkspacePrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspacePrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspacePrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As WorkspacePrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetWorkspacePrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspacePrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkspacePrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.WorkspaceResource GetWorkspaceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.WorkspaceResource GetWorkspaceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspaceResource (client As ArmClient, id As ResourceIdentifier) As WorkspaceResource" />
      <MemberSignature Language="F#" Value="static member GetWorkspaceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.WorkspaceResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.WorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaces">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.WorkspaceCollection GetWorkspaces (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.WorkspaceCollection GetWorkspaces(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaces(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspaces (resourceGroupResource As ResourceGroupResource) As WorkspaceCollection" />
      <MemberSignature Language="F#" Value="static member GetWorkspaces : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Synapse.WorkspaceCollection" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaces resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of WorkspaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of WorkspaceResources and their operations over a WorkspaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; GetWorkspaces (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; GetWorkspaces(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaces(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspaces (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetWorkspaces : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaces (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of workspaces in a subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces
            Operation Id: Workspaces_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt; GetWorkspacesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.WorkspaceResource&gt; GetWorkspacesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspacesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspacesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of WorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetWorkspacesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspacesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.WorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of workspaces in a subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces
            Operation Id: Workspaces_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.WorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceSqlAdministratorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource GetWorkspaceSqlAdministratorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource GetWorkspaceSqlAdministratorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceSqlAdministratorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkspaceSqlAdministratorResource (client As ArmClient, id As ResourceIdentifier) As WorkspaceSqlAdministratorResource" />
      <MemberSignature Language="F#" Value="static member GetWorkspaceSqlAdministratorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource" Usage="Azure.ResourceManager.Synapse.SynapseExtensions.GetWorkspaceSqlAdministratorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.WorkspaceSqlAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
