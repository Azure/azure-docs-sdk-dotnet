<Type Name="SynapseDataWarehouseUserActivityCollection" FullName="Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection">
  <TypeSignature Language="C#" Value="public class SynapseDataWarehouseUserActivityCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynapseDataWarehouseUserActivityCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SynapseDataWarehouseUserActivityCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type SynapseDataWarehouseUserActivityCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolResource" />.
            To get a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection" /> instance call the GetSynapseDataWarehouseUserActivities method from an instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SynapseDataWarehouseUserActivityCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection.Exists(Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (dataWarehouseUserActivityName As SynapseDataWarehouseUserActivityName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="synapseDataWarehouseUserActivityCollection.Exists (dataWarehouseUserActivityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataWarehouseUserActivityName" Type="Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataWarehouseUserActivityName"> The activity name of the Sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}</description></item><item><term>Operation Id</term><description>SqlPoolDataWarehouseUserActivities_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection.ExistsAsync(Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (dataWarehouseUserActivityName As SynapseDataWarehouseUserActivityName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="synapseDataWarehouseUserActivityCollection.ExistsAsync (dataWarehouseUserActivityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataWarehouseUserActivityName" Type="Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataWarehouseUserActivityName"> The activity name of the Sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}</description></item><item><term>Operation Id</term><description>SqlPoolDataWarehouseUserActivities_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt; Get (Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt; Get(valuetype Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection.Get(Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (dataWarehouseUserActivityName As SynapseDataWarehouseUserActivityName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseDataWarehouseUserActivityResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&#xA;override this.Get : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;" Usage="synapseDataWarehouseUserActivityCollection.Get (dataWarehouseUserActivityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataWarehouseUserActivityName" Type="Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataWarehouseUserActivityName"> The activity name of the Sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the user activities of a SQL pool which includes running and suspended queries
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}</description></item><item><term>Operation Id</term><description>SqlPoolDataWarehouseUserActivities_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt; GetAsync (Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt; GetAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection.GetAsync(Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (dataWarehouseUserActivityName As SynapseDataWarehouseUserActivityName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseDataWarehouseUserActivityResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt;&#xA;override this.GetAsync : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt;" Usage="synapseDataWarehouseUserActivityCollection.GetAsync (dataWarehouseUserActivityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataWarehouseUserActivityName" Type="Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataWarehouseUserActivityName"> The activity name of the Sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the user activities of a SQL pool which includes running and suspended queries
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}</description></item><item><term>Operation Id</term><description>SqlPoolDataWarehouseUserActivities_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt; GetIfExists (Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.NullableResponse`1&lt;class Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt; GetIfExists(valuetype Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection.GetIfExists(Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (dataWarehouseUserActivityName As SynapseDataWarehouseUserActivityName, Optional cancellationToken As CancellationToken = Nothing) As NullableResponse(Of SynapseDataWarehouseUserActivityResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&#xA;override this.GetIfExists : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;" Usage="synapseDataWarehouseUserActivityCollection.GetIfExists (dataWarehouseUserActivityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataWarehouseUserActivityName" Type="Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataWarehouseUserActivityName"> The activity name of the Sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}</description></item><item><term>Operation Id</term><description>SqlPoolDataWarehouseUserActivities_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt; GetIfExistsAsync (Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.NullableResponse`1&lt;class Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt; GetIfExistsAsync(valuetype Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName dataWarehouseUserActivityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityCollection.GetIfExistsAsync(Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (dataWarehouseUserActivityName As SynapseDataWarehouseUserActivityName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NullableResponse(Of SynapseDataWarehouseUserActivityResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt;&#xA;override this.GetIfExistsAsync : Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt;" Usage="synapseDataWarehouseUserActivityCollection.GetIfExistsAsync (dataWarehouseUserActivityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataWarehouseUserActivityName" Type="Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataWarehouseUserActivityName"> The activity name of the Sql pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}</description></item><item><term>Operation Id</term><description>SqlPoolDataWarehouseUserActivities_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
