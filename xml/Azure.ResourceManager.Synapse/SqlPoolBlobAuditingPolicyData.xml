<Type Name="SqlPoolBlobAuditingPolicyData" FullName="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData">
  <TypeSignature Language="C#" Value="public class SqlPoolBlobAuditingPolicyData : Azure.ResourceManager.Models.ResourceData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlPoolBlobAuditingPolicyData extends Azure.ResourceManager.Models.ResourceData" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlPoolBlobAuditingPolicyData&#xA;Inherits ResourceData" />
  <TypeSignature Language="F#" Value="type SqlPoolBlobAuditingPolicyData = class&#xA;    inherit ResourceData" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Models.ResourceData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class representing the SqlPoolBlobAuditingPolicy data model. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPoolBlobAuditingPolicyData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SqlPoolBlobAuditingPolicyData. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditActionsAndGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AuditActionsAndGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AuditActionsAndGroups" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.AuditActionsAndGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuditActionsAndGroups As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AuditActionsAndGroups : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.AuditActionsAndGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the Actions-Groups and Actions to audit.
            
            The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
            
            BATCH_COMPLETED_GROUP,
            SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
            FAILED_DATABASE_AUTHENTICATION_GROUP.
            
            This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
            
            The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
            
            APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
            BACKUP_RESTORE_GROUP
            DATABASE_LOGOUT_GROUP
            DATABASE_OBJECT_CHANGE_GROUP
            DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
            DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
            DATABASE_OPERATION_GROUP
            DATABASE_PERMISSION_CHANGE_GROUP
            DATABASE_PRINCIPAL_CHANGE_GROUP
            DATABASE_PRINCIPAL_IMPERSONATION_GROUP
            DATABASE_ROLE_MEMBER_CHANGE_GROUP
            FAILED_DATABASE_AUTHENTICATION_GROUP
            SCHEMA_OBJECT_ACCESS_GROUP
            SCHEMA_OBJECT_CHANGE_GROUP
            SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
            SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
            SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
            USER_CHANGE_PASSWORD_GROUP
            BATCH_STARTED_GROUP
            BATCH_COMPLETED_GROUP
            
            These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
            
            For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
            
            For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
            SELECT
            UPDATE
            INSERT
            DELETE
            EXECUTE
            RECEIVE
            REFERENCES
            
            The general form for defining an action to be audited is:
            {action} ON {object} BY {principal}
            
            Note that &lt;object&gt; in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
            
            For example:
            SELECT on dbo.myTable by public
            SELECT on DATABASE::myDatabase by public
            SELECT on SCHEMA::mySchema by public
            
            For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAzureMonitorTargetEnabled">
      <MemberSignature Language="C#" Value="public bool? IsAzureMonitorTargetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsAzureMonitorTargetEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.IsAzureMonitorTargetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAzureMonitorTargetEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsAzureMonitorTargetEnabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.IsAzureMonitorTargetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies whether audit events are sent to Azure Monitor. 
            In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.
            
            When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
            Note that for server level audit you should use the 'master' database as {databaseName}.
            
            Diagnostic Settings URI format:
            PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
            For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
            or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStorageSecondaryKeyInUse">
      <MemberSignature Language="C#" Value="public bool? IsStorageSecondaryKeyInUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsStorageSecondaryKeyInUse" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.IsStorageSecondaryKeyInUse" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStorageSecondaryKeyInUse As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsStorageSecondaryKeyInUse : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.IsStorageSecondaryKeyInUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies whether storageAccountAccessKey value is the storage's secondary key. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public string Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Kind" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As String" />
      <MemberSignature Language="F#" Value="member this.Kind : string" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Resource kind. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetentionDays">
      <MemberSignature Language="C#" Value="public int? RetentionDays { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; RetentionDays" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.RetentionDays" />
      <MemberSignature Language="VB.NET" Value="Public Property RetentionDays As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.RetentionDays : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.RetentionDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the number of days to keep in the audit logs in the storage account. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyState? State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyState&gt; State" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.State" />
      <MemberSignature Language="VB.NET" Value="Public Property State As Nullable(Of BlobAuditingPolicyState)" />
      <MemberSignature Language="F#" Value="member this.State : Nullable&lt;Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyState&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Synapse.Models.BlobAuditingPolicyState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountAccessKey">
      <MemberSignature Language="C#" Value="public string StorageAccountAccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageAccountAccessKey" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.StorageAccountAccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountAccessKey As String" />
      <MemberSignature Language="F#" Value="member this.StorageAccountAccessKey : string with get, set" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.StorageAccountAccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountSubscriptionId">
      <MemberSignature Language="C#" Value="public Guid? StorageAccountSubscriptionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; StorageAccountSubscriptionId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.StorageAccountSubscriptionId" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountSubscriptionId As Nullable(Of Guid)" />
      <MemberSignature Language="F#" Value="member this.StorageAccountSubscriptionId : Nullable&lt;Guid&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.StorageAccountSubscriptionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the blob storage subscription Id. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageEndpoint">
      <MemberSignature Language="C#" Value="public string StorageEndpoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageEndpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.StorageEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageEndpoint As String" />
      <MemberSignature Language="F#" Value="member this.StorageEndpoint : string with get, set" Usage="Azure.ResourceManager.Synapse.SqlPoolBlobAuditingPolicyData.StorageEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
