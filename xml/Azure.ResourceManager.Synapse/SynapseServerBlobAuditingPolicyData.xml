<Type Name="SynapseServerBlobAuditingPolicyData" FullName="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData">
  <TypeSignature Language="C#" Value="public class SynapseServerBlobAuditingPolicyData : Azure.ResourceManager.Models.ResourceData" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynapseServerBlobAuditingPolicyData extends Azure.ResourceManager.Models.ResourceData" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData" />
  <TypeSignature Language="VB.NET" Value="Public Class SynapseServerBlobAuditingPolicyData&#xA;Inherits ResourceData" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type SynapseServerBlobAuditingPolicyData = class&#xA;    inherit ResourceData" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class SynapseServerBlobAuditingPolicyData : Azure.ResourceManager.Models.ResourceData, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynapseServerBlobAuditingPolicyData extends Azure.ResourceManager.Models.ResourceData implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class SynapseServerBlobAuditingPolicyData&#xA;Inherits ResourceData&#xA;Implements IJsonModel(Of SynapseServerBlobAuditingPolicyData), IPersistableModel(Of SynapseServerBlobAuditingPolicyData)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type SynapseServerBlobAuditingPolicyData = class&#xA;    inherit ResourceData&#xA;    interface IJsonModel&lt;SynapseServerBlobAuditingPolicyData&gt;&#xA;    interface IPersistableModel&lt;SynapseServerBlobAuditingPolicyData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Models.ResourceData</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A class representing the SynapseServerBlobAuditingPolicy data model.
            A server blob auditing policy.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynapseServerBlobAuditingPolicyData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditActionsAndGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AuditActionsAndGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AuditActionsAndGroups" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.AuditActionsAndGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuditActionsAndGroups As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AuditActionsAndGroups : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.AuditActionsAndGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Specifies the Actions-Groups and Actions to audit.
            
             The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:
            
             BATCH_COMPLETED_GROUP,
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
             FAILED_DATABASE_AUTHENTICATION_GROUP.
            
             This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
            
             The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):
            
             APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
             BACKUP_RESTORE_GROUP
             DATABASE_LOGOUT_GROUP
             DATABASE_OBJECT_CHANGE_GROUP
             DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
             DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
             DATABASE_OPERATION_GROUP
             DATABASE_PERMISSION_CHANGE_GROUP
             DATABASE_PRINCIPAL_CHANGE_GROUP
             DATABASE_PRINCIPAL_IMPERSONATION_GROUP
             DATABASE_ROLE_MEMBER_CHANGE_GROUP
             FAILED_DATABASE_AUTHENTICATION_GROUP
             SCHEMA_OBJECT_ACCESS_GROUP
             SCHEMA_OBJECT_CHANGE_GROUP
             SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
             SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
             SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
             USER_CHANGE_PASSWORD_GROUP
             BATCH_STARTED_GROUP
             BATCH_COMPLETED_GROUP
            
             These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.
            
             For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
            
             For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:
             SELECT
             UPDATE
             INSERT
             DELETE
             EXECUTE
             RECEIVE
             REFERENCES
            
             The general form for defining an action to be audited is:
             {action} ON {object} BY {principal}
            
             Note that &lt;object&gt; in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
            
             For example:
             SELECT on dbo.myTable by public
             SELECT on DATABASE::myDatabase by public
             SELECT on SCHEMA::mySchema by public
            
             For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAzureMonitorTargetEnabled">
      <MemberSignature Language="C#" Value="public bool? IsAzureMonitorTargetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsAzureMonitorTargetEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.IsAzureMonitorTargetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAzureMonitorTargetEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsAzureMonitorTargetEnabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.IsAzureMonitorTargetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Specifies whether audit events are sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.
            
             When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.
             Note that for server level audit you should use the 'master' database as {databaseName}.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevopsAuditEnabled">
      <MemberSignature Language="C#" Value="public bool? IsDevopsAuditEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsDevopsAuditEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.IsDevopsAuditEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDevopsAuditEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsDevopsAuditEnabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.IsDevopsAuditEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.
             In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true
            
             When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.
            
             Diagnostic Settings URI format:
             PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
            
             For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
             or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStorageSecondaryKeyInUse">
      <MemberSignature Language="C#" Value="public bool? IsStorageSecondaryKeyInUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsStorageSecondaryKeyInUse" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.IsStorageSecondaryKeyInUse" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStorageSecondaryKeyInUse As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsStorageSecondaryKeyInUse : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.IsStorageSecondaryKeyInUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies whether storageAccountAccessKey value is the storage's secondary key. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueDelayMs">
      <MemberSignature Language="C#" Value="public int? QueueDelayMs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; QueueDelayMs" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.QueueDelayMs" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueDelayMs As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.QueueDelayMs : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.QueueDelayMs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.
            The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetentionDays">
      <MemberSignature Language="C#" Value="public int? RetentionDays { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; RetentionDays" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.RetentionDays" />
      <MemberSignature Language="VB.NET" Value="Public Property RetentionDays As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.RetentionDays : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.RetentionDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the number of days to keep in the audit logs in the storage account. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState? State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; State" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.State" />
      <MemberSignature Language="VB.NET" Value="Public Property State As Nullable(Of SynapseBlobAuditingPolicyState)" />
      <MemberSignature Language="F#" Value="member this.State : Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountAccessKey">
      <MemberSignature Language="C#" Value="public string StorageAccountAccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageAccountAccessKey" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.StorageAccountAccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountAccessKey As String" />
      <MemberSignature Language="F#" Value="member this.StorageAccountAccessKey : string with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.StorageAccountAccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the identifier key of the auditing storage account.
            If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.
            Prerequisites for using managed identity authentication:
            1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
            2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.
            For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountSubscriptionId">
      <MemberSignature Language="C#" Value="public Guid? StorageAccountSubscriptionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; StorageAccountSubscriptionId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.StorageAccountSubscriptionId" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountSubscriptionId As Nullable(Of Guid)" />
      <MemberSignature Language="F#" Value="member this.StorageAccountSubscriptionId : Nullable&lt;Guid&gt; with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.StorageAccountSubscriptionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the blob storage subscription Id. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageEndpoint">
      <MemberSignature Language="C#" Value="public string StorageEndpoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageEndpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.StorageEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageEndpoint As String" />
      <MemberSignature Language="F#" Value="member this.StorageEndpoint : string with get, set" Usage="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.StorageEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData IJsonModel&lt;SynapseServerBlobAuditingPolicyData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Synapse#SynapseServerBlobAuditingPolicyData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As SynapseServerBlobAuditingPolicyData Implements IJsonModel(Of SynapseServerBlobAuditingPolicyData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData" Usage="synapseServerBlobAuditingPolicyData.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;SynapseServerBlobAuditingPolicyData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Synapse#SynapseServerBlobAuditingPolicyData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of SynapseServerBlobAuditingPolicyData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="synapseServerBlobAuditingPolicyData.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData IPersistableModel&lt;SynapseServerBlobAuditingPolicyData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Synapse#SynapseServerBlobAuditingPolicyData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As SynapseServerBlobAuditingPolicyData Implements IPersistableModel(Of SynapseServerBlobAuditingPolicyData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData" Usage="synapseServerBlobAuditingPolicyData.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;SynapseServerBlobAuditingPolicyData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Synapse#SynapseServerBlobAuditingPolicyData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of SynapseServerBlobAuditingPolicyData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="synapseServerBlobAuditingPolicyData.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;SynapseServerBlobAuditingPolicyData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Synapse#SynapseServerBlobAuditingPolicyData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of SynapseServerBlobAuditingPolicyData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="synapseServerBlobAuditingPolicyData.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
