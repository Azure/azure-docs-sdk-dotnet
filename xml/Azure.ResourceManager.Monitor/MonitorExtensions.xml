<Type Name="MonitorExtensions" FullName="Azure.ResourceManager.Monitor.MonitorExtensions">
  <TypeSignature Language="C#" Value="public static class MonitorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MonitorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Monitor.MonitorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MonitorExtensions" />
  <TypeSignature Language="F#" Value="type MonitorExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Monitor. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateNotifications">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; CreateNotifications (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Monitor.Models.NotificationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; CreateNotifications(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Monitor.Models.NotificationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotifications(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.WaitUntil,Azure.ResourceManager.Monitor.Models.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNotifications (resourceGroupResource As ResourceGroupResource, waitUntil As WaitUntil, content As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of NotificationStatus)" />
      <MemberSignature Language="F#" Value="static member CreateNotifications : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotifications (resourceGroupResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Monitor.Models.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The notification request body which includes the contact details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Send test notifications to a set of provided receivers
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/createNotifications</description></item><item><term>Operation Id</term><description>ActionGroups_CreateNotificationsAtResourceGroupLevel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNotifications">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; CreateNotifications (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Monitor.Models.NotificationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; CreateNotifications(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Monitor.Models.NotificationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotifications(Azure.ResourceManager.Resources.SubscriptionResource,Azure.WaitUntil,Azure.ResourceManager.Monitor.Models.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNotifications (subscriptionResource As SubscriptionResource, waitUntil As WaitUntil, content As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of NotificationStatus)" />
      <MemberSignature Language="F#" Value="static member CreateNotifications : Azure.ResourceManager.Resources.SubscriptionResource * Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotifications (subscriptionResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Monitor.Models.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The notification request body which includes the contact details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Send test notifications to a set of provided receivers
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/createNotifications</description></item><item><term>Operation Id</term><description>ActionGroups_PostTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNotificationsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; CreateNotificationsAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Monitor.Models.NotificationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; CreateNotificationsAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Monitor.Models.NotificationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotificationsAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.WaitUntil,Azure.ResourceManager.Monitor.Models.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNotificationsAsync (resourceGroupResource As ResourceGroupResource, waitUntil As WaitUntil, content As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of NotificationStatus))" />
      <MemberSignature Language="F#" Value="static member CreateNotificationsAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotificationsAsync (resourceGroupResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Monitor.Models.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The notification request body which includes the contact details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Send test notifications to a set of provided receivers
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/createNotifications</description></item><item><term>Operation Id</term><description>ActionGroups_CreateNotificationsAtResourceGroupLevel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNotificationsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; CreateNotificationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Monitor.Models.NotificationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; CreateNotificationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Monitor.Models.NotificationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotificationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.WaitUntil,Azure.ResourceManager.Monitor.Models.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNotificationsAsync (subscriptionResource As SubscriptionResource, waitUntil As WaitUntil, content As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of NotificationStatus))" />
      <MemberSignature Language="F#" Value="static member CreateNotificationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.WaitUntil * Azure.ResourceManager.Monitor.Models.NotificationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.CreateNotificationsAsync (subscriptionResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Monitor.Models.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The notification request body which includes the contact details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Send test notifications to a set of provided receivers
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/createNotifications</description></item><item><term>Operation Id</term><description>ActionGroups_PostTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroup (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string actionGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroup(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string actionGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroup(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActionGroup (resourceGroupResource As ResourceGroupResource, actionGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ActionGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetActionGroup : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroup (resourceGroupResource, actionGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="actionGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="actionGroupName"> The name of the action group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an action group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups/{actionGroupName}</description></item><item><term>Operation Id</term><description>ActionGroups_Get</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetActionGroup(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="actionGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="actionGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;&gt; GetActionGroupAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string actionGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.ActionGroupResource&gt;&gt; GetActionGroupAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string actionGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroupAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActionGroupAsync (resourceGroupResource As ResourceGroupResource, actionGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ActionGroupResource))" />
      <MemberSignature Language="F#" Value="static member GetActionGroupAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroupAsync (resourceGroupResource, actionGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="actionGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="actionGroupName"> The name of the action group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an action group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups/{actionGroupName}</description></item><item><term>Operation Id</term><description>ActionGroups_Get</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetActionGroupAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="actionGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="actionGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroupResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.ActionGroupResource GetActionGroupResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.ActionGroupResource GetActionGroupResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroupResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActionGroupResource (client As ArmClient, id As ResourceIdentifier) As ActionGroupResource" />
      <MemberSignature Language="F#" Value="static member GetActionGroupResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ActionGroupResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroupResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ActionGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.ActionGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetActionGroupResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.ActionGroupCollection GetActionGroups (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.ActionGroupCollection GetActionGroups(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroups(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActionGroups (resourceGroupResource As ResourceGroupResource) As ActionGroupCollection" />
      <MemberSignature Language="F#" Value="static member GetActionGroups : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.ActionGroupCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroups resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ActionGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ActionGroupResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetActionGroups" /> instead.</description></item></summary>
        <returns> An object representing collection of ActionGroupResources and their operations over a ActionGroupResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroups">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroups (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroups(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroups(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActionGroups (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ActionGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetActionGroups : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroups (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all action groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/actionGroups</description></item><item><term>Operation Id</term><description>ActionGroups_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActionGroups(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActionGroupsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroupsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.ActionGroupResource&gt; GetActionGroupsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroupsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActionGroupsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ActionGroupResource)" />
      <MemberSignature Language="F#" Value="static member GetActionGroupsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActionGroupsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActionGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all action groups in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/actionGroups</description></item><item><term>Operation Id</term><description>ActionGroups_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2023-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActionGroups(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.ActionGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlert">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlert (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string activityLogAlertName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlert(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string activityLogAlertName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlert(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogAlert (resourceGroupResource As ResourceGroupResource, activityLogAlertName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ActivityLogAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetActivityLogAlert : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlert (resourceGroupResource, activityLogAlertName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="activityLogAlertName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="activityLogAlertName"> The name of the Activity Log Alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an Activity Log Alert rule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/activityLogAlerts/{activityLogAlertName}</description></item><item><term>Operation Id</term><description>ActivityLogAlerts_Get</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetActivityLogAlert(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="activityLogAlertName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="activityLogAlertName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlertAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;&gt; GetActivityLogAlertAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string activityLogAlertName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;&gt; GetActivityLogAlertAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string activityLogAlertName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlertAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogAlertAsync (resourceGroupResource As ResourceGroupResource, activityLogAlertName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ActivityLogAlertResource))" />
      <MemberSignature Language="F#" Value="static member GetActivityLogAlertAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlertAsync (resourceGroupResource, activityLogAlertName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="activityLogAlertName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="activityLogAlertName"> The name of the Activity Log Alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an Activity Log Alert rule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/activityLogAlerts/{activityLogAlertName}</description></item><item><term>Operation Id</term><description>ActivityLogAlerts_Get</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetActivityLogAlertAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="activityLogAlertName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="activityLogAlertName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlertResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.ActivityLogAlertResource GetActivityLogAlertResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.ActivityLogAlertResource GetActivityLogAlertResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlertResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogAlertResource (client As ArmClient, id As ResourceIdentifier) As ActivityLogAlertResource" />
      <MemberSignature Language="F#" Value="static member GetActivityLogAlertResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ActivityLogAlertResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlertResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ActivityLogAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.ActivityLogAlertResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetActivityLogAlertResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlerts">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.ActivityLogAlertCollection GetActivityLogAlerts (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.ActivityLogAlertCollection GetActivityLogAlerts(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlerts(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogAlerts (resourceGroupResource As ResourceGroupResource) As ActivityLogAlertCollection" />
      <MemberSignature Language="F#" Value="static member GetActivityLogAlerts : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.ActivityLogAlertCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlerts resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ActivityLogAlertCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ActivityLogAlertResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetActivityLogAlerts" /> instead.</description></item></summary>
        <returns> An object representing collection of ActivityLogAlertResources and their operations over a ActivityLogAlertResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlerts">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlerts (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlerts(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlerts(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogAlerts (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ActivityLogAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetActivityLogAlerts : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlerts (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all Activity Log Alert rules in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/activityLogAlerts</description></item><item><term>Operation Id</term><description>ActivityLogAlerts_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogAlerts(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogAlertsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlertsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt; GetActivityLogAlertsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlertsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogAlertsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ActivityLogAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetActivityLogAlertsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogAlertsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ActivityLogAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of all Activity Log Alert rules in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/activityLogAlerts</description></item><item><term>Operation Id</term><description>ActivityLogAlerts_ListBySubscriptionId</description></item><item><term>Default Api Version</term><description>2020-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogAlerts(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.ActivityLogAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogs">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogs (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, string select = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogs(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, string select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogs(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogs (subscriptionResource As SubscriptionResource, filter As String, Optional select As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventDataInfo)" />
      <MemberSignature Language="F#" Value="static member GetActivityLogs : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogs (subscriptionResource, filter, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> Reduces the set of data collected.&lt;br&gt;This argument is required and it also requires at least the start date/time.&lt;br&gt;The **$filter** argument is very restricted and allows only the following patterns.&lt;br&gt;- *List events for a resource group*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceGroupName eq 'resourceGroupName'.&lt;br&gt;- *List events for resource*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri eq 'resourceURI'.&lt;br&gt;- *List events for a subscription in a time range*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z'.&lt;br&gt;- *List events for a resource provider*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceProvider eq 'resourceProviderName'.&lt;br&gt;- *List events for a correlation Id*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and correlationId eq 'correlationID'.&lt;br&gt;&lt;br&gt;**NOTE**: No other syntax is allowed. </param>
        <param name="select"> Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the list of records from the activity logs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/eventtypes/management/values</description></item><item><term>Operation Id</term><description>ActivityLogs_List</description></item><item><term>Default Api Version</term><description>2015-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogs(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.EventDataInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, string select = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetActivityLogsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string filter, string select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetActivityLogsAsync (subscriptionResource As SubscriptionResource, filter As String, Optional select As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventDataInfo)" />
      <MemberSignature Language="F#" Value="static member GetActivityLogsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetActivityLogsAsync (subscriptionResource, filter, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="filter"> Reduces the set of data collected.&lt;br&gt;This argument is required and it also requires at least the start date/time.&lt;br&gt;The **$filter** argument is very restricted and allows only the following patterns.&lt;br&gt;- *List events for a resource group*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceGroupName eq 'resourceGroupName'.&lt;br&gt;- *List events for resource*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri eq 'resourceURI'.&lt;br&gt;- *List events for a subscription in a time range*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z'.&lt;br&gt;- *List events for a resource provider*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceProvider eq 'resourceProviderName'.&lt;br&gt;- *List events for a correlation Id*: $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and correlationId eq 'correlationID'.&lt;br&gt;&lt;br&gt;**NOTE**: No other syntax is allowed. </param>
        <param name="select"> Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the list of records from the activity logs.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/eventtypes/management/values</description></item><item><term>Operation Id</term><description>ActivityLogs_List</description></item><item><term>Default Api Version</term><description>2015-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetActivityLogs(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.EventDataInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRule">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRule (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRule(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRule(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAlertRule (resourceGroupResource As ResourceGroupResource, ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AlertRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetAlertRule : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRule (resourceGroupResource, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="ruleName"> The name of the rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a classic metric alert rule
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/alertrules/{ruleName}</description></item><item><term>Operation Id</term><description>AlertRules_Get</description></item><item><term>Default Api Version</term><description>2016-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetAlertRule(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRuleAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;&gt; GetAlertRuleAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.AlertRuleResource&gt;&gt; GetAlertRuleAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRuleAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAlertRuleAsync (resourceGroupResource As ResourceGroupResource, ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AlertRuleResource))" />
      <MemberSignature Language="F#" Value="static member GetAlertRuleAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRuleAsync (resourceGroupResource, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="ruleName"> The name of the rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a classic metric alert rule
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/alertrules/{ruleName}</description></item><item><term>Operation Id</term><description>AlertRules_Get</description></item><item><term>Default Api Version</term><description>2016-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetAlertRuleAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.AlertRuleResource GetAlertRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.AlertRuleResource GetAlertRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAlertRuleResource (client As ArmClient, id As ResourceIdentifier) As AlertRuleResource" />
      <MemberSignature Language="F#" Value="static member GetAlertRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.AlertRuleResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.AlertRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.AlertRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetAlertRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRules">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.AlertRuleCollection GetAlertRules (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.AlertRuleCollection GetAlertRules(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRules(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAlertRules (resourceGroupResource As ResourceGroupResource) As AlertRuleCollection" />
      <MemberSignature Language="F#" Value="static member GetAlertRules : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.AlertRuleCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRules resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.AlertRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of AlertRuleResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetAlertRules" /> instead.</description></item></summary>
        <returns> An object representing collection of AlertRuleResources and their operations over a AlertRuleResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRules">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRules (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRules(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRules(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAlertRules (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AlertRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetAlertRules : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRules (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the classic metric alert rules within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/alertrules</description></item><item><term>Operation Id</term><description>AlertRules_ListBySubscription</description></item><item><term>Default Api Version</term><description>2016-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAlertRules(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertRulesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRulesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.AlertRuleResource&gt; GetAlertRulesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRulesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAlertRulesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AlertRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetAlertRulesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAlertRulesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AlertRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the classic metric alert rules within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/alertrules</description></item><item><term>Operation Id</term><description>AlertRules_ListBySubscription</description></item><item><term>Default Api Version</term><description>2016-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAlertRules(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.AlertRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSetting">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSetting (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string autoscaleSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSetting(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string autoscaleSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSetting(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAutoscaleSetting (resourceGroupResource As ResourceGroupResource, autoscaleSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutoscaleSettingResource)" />
      <MemberSignature Language="F#" Value="static member GetAutoscaleSetting : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSetting (resourceGroupResource, autoscaleSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="autoscaleSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="autoscaleSettingName"> The autoscale setting name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an autoscale setting
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}</description></item><item><term>Operation Id</term><description>AutoscaleSettings_Get</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetAutoscaleSetting(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="autoscaleSettingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoscaleSettingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;&gt; GetAutoscaleSettingAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string autoscaleSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;&gt; GetAutoscaleSettingAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string autoscaleSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettingAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAutoscaleSettingAsync (resourceGroupResource As ResourceGroupResource, autoscaleSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutoscaleSettingResource))" />
      <MemberSignature Language="F#" Value="static member GetAutoscaleSettingAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettingAsync (resourceGroupResource, autoscaleSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="autoscaleSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="autoscaleSettingName"> The autoscale setting name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an autoscale setting
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}</description></item><item><term>Operation Id</term><description>AutoscaleSettings_Get</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetAutoscaleSettingAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="autoscaleSettingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoscaleSettingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettingResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.AutoscaleSettingResource GetAutoscaleSettingResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.AutoscaleSettingResource GetAutoscaleSettingResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettingResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAutoscaleSettingResource (client As ArmClient, id As ResourceIdentifier) As AutoscaleSettingResource" />
      <MemberSignature Language="F#" Value="static member GetAutoscaleSettingResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.AutoscaleSettingResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettingResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.AutoscaleSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.AutoscaleSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetAutoscaleSettingResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettings">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.AutoscaleSettingCollection GetAutoscaleSettings (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.AutoscaleSettingCollection GetAutoscaleSettings(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettings(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAutoscaleSettings (resourceGroupResource As ResourceGroupResource) As AutoscaleSettingCollection" />
      <MemberSignature Language="F#" Value="static member GetAutoscaleSettings : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.AutoscaleSettingCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettings resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.AutoscaleSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of AutoscaleSettingResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetAutoscaleSettings" /> instead.</description></item></summary>
        <returns> An object representing collection of AutoscaleSettingResources and their operations over a AutoscaleSettingResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettings">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettings (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettings(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettings(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAutoscaleSettings (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutoscaleSettingResource)" />
      <MemberSignature Language="F#" Value="static member GetAutoscaleSettings : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettings (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the autoscale settings for a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/autoscalesettings</description></item><item><term>Operation Id</term><description>AutoscaleSettings_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAutoscaleSettings(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoscaleSettingsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettingsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt; GetAutoscaleSettingsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettingsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAutoscaleSettingsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutoscaleSettingResource)" />
      <MemberSignature Language="F#" Value="static member GetAutoscaleSettingsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetAutoscaleSettingsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.AutoscaleSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the autoscale settings for a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/autoscalesettings</description></item><item><term>Operation Id</term><description>AutoscaleSettings_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetAutoscaleSettings(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.AutoscaleSettingResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpoint">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpoint (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionEndpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpoint(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionEndpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpoint(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionEndpoint (resourceGroupResource As ResourceGroupResource, dataCollectionEndpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataCollectionEndpointResource)" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionEndpoint : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpoint (resourceGroupResource, dataCollectionEndpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="dataCollectionEndpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="dataCollectionEndpointName"> The name of the data collection endpoint. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified data collection endpoint.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}</description></item><item><term>Operation Id</term><description>DataCollectionEndpoints_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetDataCollectionEndpoint(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="dataCollectionEndpointName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataCollectionEndpointName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;&gt; GetDataCollectionEndpointAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionEndpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;&gt; GetDataCollectionEndpointAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionEndpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpointAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionEndpointAsync (resourceGroupResource As ResourceGroupResource, dataCollectionEndpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataCollectionEndpointResource))" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionEndpointAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpointAsync (resourceGroupResource, dataCollectionEndpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="dataCollectionEndpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="dataCollectionEndpointName"> The name of the data collection endpoint. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified data collection endpoint.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}</description></item><item><term>Operation Id</term><description>DataCollectionEndpoints_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetDataCollectionEndpointAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="dataCollectionEndpointName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataCollectionEndpointName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpointResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DataCollectionEndpointResource GetDataCollectionEndpointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DataCollectionEndpointResource GetDataCollectionEndpointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionEndpointResource (client As ArmClient, id As ResourceIdentifier) As DataCollectionEndpointResource" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionEndpointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionEndpointResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpointResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DataCollectionEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionEndpointResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpoints">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DataCollectionEndpointCollection GetDataCollectionEndpoints (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DataCollectionEndpointCollection GetDataCollectionEndpoints(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpoints(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionEndpoints (resourceGroupResource As ResourceGroupResource) As DataCollectionEndpointCollection" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionEndpoints : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.DataCollectionEndpointCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpoints resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of DataCollectionEndpointResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetDataCollectionEndpoints" /> instead.</description></item></summary>
        <returns> An object representing collection of DataCollectionEndpointResources and their operations over a DataCollectionEndpointResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpoints">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpoints (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpoints(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpoints(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionEndpoints (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataCollectionEndpointResource)" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionEndpoints : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpoints (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection endpoints in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionEndpoints</description></item><item><term>Operation Id</term><description>DataCollectionEndpoints_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionEndpoints(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionEndpointsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpointsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt; GetDataCollectionEndpointsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpointsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionEndpointsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataCollectionEndpointResource)" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionEndpointsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionEndpointsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection endpoints in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionEndpoints</description></item><item><term>Operation Id</term><description>DataCollectionEndpoints_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionEndpoints(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionEndpointResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRule">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRule (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRule(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRule(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRule (resourceGroupResource As ResourceGroupResource, dataCollectionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataCollectionRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRule : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRule (resourceGroupResource, dataCollectionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="dataCollectionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="dataCollectionRuleName"> The name of the data collection rule. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified data collection rule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}</description></item><item><term>Operation Id</term><description>DataCollectionRules_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetDataCollectionRule(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="dataCollectionRuleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataCollectionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociation">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt; GetDataCollectionRuleAssociation (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string associationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt; GetDataCollectionRuleAssociation(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string associationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociation(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRuleAssociation (client As ArmClient, scope As ResourceIdentifier, associationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataCollectionRuleAssociationResource)" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRuleAssociation : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociation (client, scope, associationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="associationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="associationName"> The name of the association. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified association.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}</description></item><item><term>Operation Id</term><description>DataCollectionRuleAssociations_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociation(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="associationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="associationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt; GetDataCollectionRuleAssociationAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string associationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt; GetDataCollectionRuleAssociationAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string associationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociationAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRuleAssociationAsync (client As ArmClient, scope As ResourceIdentifier, associationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataCollectionRuleAssociationResource))" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRuleAssociationAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociationAsync (client, scope, associationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="associationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="associationName"> The name of the association. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified association.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}</description></item><item><term>Operation Id</term><description>DataCollectionRuleAssociations_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociationAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="associationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="associationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource GetDataCollectionRuleAssociationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource GetDataCollectionRuleAssociationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRuleAssociationResource (client As ArmClient, id As ResourceIdentifier) As DataCollectionRuleAssociationResource" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRuleAssociationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleAssociationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAssociations">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection GetDataCollectionRuleAssociations (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection GetDataCollectionRuleAssociations(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociations(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRuleAssociations (client As ArmClient, scope As ResourceIdentifier) As DataCollectionRuleAssociationCollection" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRuleAssociations : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAssociations (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionRuleAssociationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of DataCollectionRuleAssociationResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleAssociations(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of DataCollectionRuleAssociationResources and their operations over a DataCollectionRuleAssociationResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;&gt; GetDataCollectionRuleAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;&gt; GetDataCollectionRuleAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string dataCollectionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRuleAsync (resourceGroupResource As ResourceGroupResource, dataCollectionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataCollectionRuleResource))" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRuleAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleAsync (resourceGroupResource, dataCollectionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="dataCollectionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="dataCollectionRuleName"> The name of the data collection rule. The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specified data collection rule.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}</description></item><item><term>Operation Id</term><description>DataCollectionRules_Get</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetDataCollectionRuleAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="dataCollectionRuleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataCollectionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DataCollectionRuleResource GetDataCollectionRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DataCollectionRuleResource GetDataCollectionRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRuleResource (client As ArmClient, id As ResourceIdentifier) As DataCollectionRuleResource" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DataCollectionRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDataCollectionRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRules">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DataCollectionRuleCollection GetDataCollectionRules (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DataCollectionRuleCollection GetDataCollectionRules(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRules(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRules (resourceGroupResource As ResourceGroupResource) As DataCollectionRuleCollection" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRules : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.DataCollectionRuleCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRules resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DataCollectionRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of DataCollectionRuleResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetDataCollectionRules" /> instead.</description></item></summary>
        <returns> An object representing collection of DataCollectionRuleResources and their operations over a DataCollectionRuleResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRules">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRules (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRules(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRules(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRules (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataCollectionRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRules : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRules (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection rules in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionRules</description></item><item><term>Operation Id</term><description>DataCollectionRules_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionRules(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataCollectionRulesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRulesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt; GetDataCollectionRulesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRulesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCollectionRulesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataCollectionRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetDataCollectionRulesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDataCollectionRulesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.DataCollectionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all data collection rules in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionRules</description></item><item><term>Operation Id</term><description>DataCollectionRules_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetDataCollectionRules(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.DataCollectionRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSetting">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt; GetDiagnosticSetting (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt; GetDiagnosticSetting(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSetting(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSetting (client As ArmClient, scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DiagnosticSettingResource)" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSetting : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSetting (client, scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the active diagnostic settings for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettings_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSetting(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt; GetDiagnosticSettingAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt; GetDiagnosticSettingAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSettingAsync (client As ArmClient, scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DiagnosticSettingResource))" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSettingAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingAsync (client, scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the active diagnostic settings for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettings_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DiagnosticSettingResource GetDiagnosticSettingResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DiagnosticSettingResource GetDiagnosticSettingResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSettingResource (client As ArmClient, id As ResourceIdentifier) As DiagnosticSettingResource" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSettingResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DiagnosticSettingResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettings">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DiagnosticSettingCollection GetDiagnosticSettings (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DiagnosticSettingCollection GetDiagnosticSettings(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettings(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSettings (client As ArmClient, scope As ResourceIdentifier) As DiagnosticSettingCollection" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSettings : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettings (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of DiagnosticSettingResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettings(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of DiagnosticSettingResources and their operations over a DiagnosticSettingResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategories">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection GetDiagnosticSettingsCategories (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection GetDiagnosticSettingsCategories(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategories(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSettingsCategories (client As ArmClient, scope As ResourceIdentifier) As DiagnosticSettingsCategoryCollection" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSettingsCategories : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategories (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of DiagnosticSettingsCategoryResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategories(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of DiagnosticSettingsCategoryResources and their operations over a DiagnosticSettingsCategoryResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategory">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt; GetDiagnosticSettingsCategory (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt; GetDiagnosticSettingsCategory(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategory(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSettingsCategory (client As ArmClient, scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DiagnosticSettingsCategoryResource)" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSettingsCategory : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategory (client, scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the diagnostic settings category for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettingsCategories/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettingsCategory_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategory(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategoryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt; GetDiagnosticSettingsCategoryAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt; GetDiagnosticSettingsCategoryAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategoryAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSettingsCategoryAsync (client As ArmClient, scope As ResourceIdentifier, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DiagnosticSettingsCategoryResource))" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSettingsCategoryAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategoryAsync (client, scope, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="name"> The name of the diagnostic setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the diagnostic settings category for the specified resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/diagnosticSettingsCategories/{name}</description></item><item><term>Operation Id</term><description>DiagnosticSettingsCategory_Get</description></item><item><term>Default Api Version</term><description>2021-05-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategoryAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticSettingsCategoryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource GetDiagnosticSettingsCategoryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource GetDiagnosticSettingsCategoryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategoryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiagnosticSettingsCategoryResource (client As ArmClient, id As ResourceIdentifier) As DiagnosticSettingsCategoryResource" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticSettingsCategoryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetDiagnosticSettingsCategoryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetDiagnosticSettingsCategoryResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.DiagnosticSettingsCategoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventCategories">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt; GetEventCategories (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt; GetEventCategories(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetEventCategories(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventCategories (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorLocalizableString)" />
      <MemberSignature Language="F#" Value="static member GetEventCategories : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetEventCategories (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of available event categories supported in the Activity Logs Service.&lt;br&gt;The current list includes the following: Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Insights/eventcategories</description></item><item><term>Operation Id</term><description>EventCategories_List</description></item><item><term>Default Api Version</term><description>2015-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorTenantResource.GetEventCategories(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorLocalizableString" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventCategoriesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt; GetEventCategoriesAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt; GetEventCategoriesAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetEventCategoriesAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventCategoriesAsync (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorLocalizableString)" />
      <MemberSignature Language="F#" Value="static member GetEventCategoriesAsync : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetEventCategoriesAsync (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorLocalizableString&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of available event categories supported in the Activity Logs Service.&lt;br&gt;The current list includes the following: Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Insights/eventcategories</description></item><item><term>Operation Id</term><description>EventCategories_List</description></item><item><term>Default Api Version</term><description>2015-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorTenantResource.GetEventCategories(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.MonitorLocalizableString" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfile">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt; GetLogProfile (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string logProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.LogProfileResource&gt; GetLogProfile(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string logProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfile(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLogProfile (subscriptionResource As SubscriptionResource, logProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LogProfileResource)" />
      <MemberSignature Language="F#" Value="static member GetLogProfile : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfile (subscriptionResource, logProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="logProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="logProfileName"> The name of the log profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the log profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}</description></item><item><term>Operation Id</term><description>LogProfiles_Get</description></item><item><term>Default Api Version</term><description>2016-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetLogProfile(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="logProfileName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="logProfileName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt; GetLogProfileAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string logProfileName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt; GetLogProfileAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string logProfileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfileAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLogProfileAsync (subscriptionResource As SubscriptionResource, logProfileName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LogProfileResource))" />
      <MemberSignature Language="F#" Value="static member GetLogProfileAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfileAsync (subscriptionResource, logProfileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.LogProfileResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="logProfileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="logProfileName"> The name of the log profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the log profile.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}</description></item><item><term>Operation Id</term><description>LogProfiles_Get</description></item><item><term>Default Api Version</term><description>2016-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetLogProfileAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="logProfileName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="logProfileName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfileResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.LogProfileResource GetLogProfileResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.LogProfileResource GetLogProfileResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfileResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLogProfileResource (client As ArmClient, id As ResourceIdentifier) As LogProfileResource" />
      <MemberSignature Language="F#" Value="static member GetLogProfileResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.LogProfileResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfileResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.LogProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.LogProfileResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetLogProfileResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.LogProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogProfiles">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.LogProfileCollection GetLogProfiles (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.LogProfileCollection GetLogProfiles(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfiles(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLogProfiles (subscriptionResource As SubscriptionResource) As LogProfileCollection" />
      <MemberSignature Language="F#" Value="static member GetLogProfiles : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.Monitor.LogProfileCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetLogProfiles subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.LogProfileCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of LogProfileResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetLogProfiles" /> instead.</description></item></summary>
        <returns> An object representing collection of LogProfileResources and their operations over a LogProfileResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlert">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlert (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlert(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlert(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetricAlert (resourceGroupResource As ResourceGroupResource, ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MetricAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetMetricAlert : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlert (resourceGroupResource, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="ruleName"> The name of the rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve an alert rule definition.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}</description></item><item><term>Operation Id</term><description>MetricAlerts_Get</description></item><item><term>Default Api Version</term><description>2018-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMetricAlert(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlertAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;&gt; GetMetricAlertAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.MetricAlertResource&gt;&gt; GetMetricAlertAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlertAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetricAlertAsync (resourceGroupResource As ResourceGroupResource, ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MetricAlertResource))" />
      <MemberSignature Language="F#" Value="static member GetMetricAlertAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlertAsync (resourceGroupResource, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="ruleName"> The name of the rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve an alert rule definition.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}</description></item><item><term>Operation Id</term><description>MetricAlerts_Get</description></item><item><term>Default Api Version</term><description>2018-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMetricAlertAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlertResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MetricAlertResource GetMetricAlertResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MetricAlertResource GetMetricAlertResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlertResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetricAlertResource (client As ArmClient, id As ResourceIdentifier) As MetricAlertResource" />
      <MemberSignature Language="F#" Value="static member GetMetricAlertResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MetricAlertResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlertResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MetricAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MetricAlertResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMetricAlertResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlerts">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MetricAlertCollection GetMetricAlerts (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MetricAlertCollection GetMetricAlerts(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlerts(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetricAlerts (resourceGroupResource As ResourceGroupResource) As MetricAlertCollection" />
      <MemberSignature Language="F#" Value="static member GetMetricAlerts : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.MetricAlertCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlerts resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MetricAlertCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of MetricAlertResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMetricAlerts" /> instead.</description></item></summary>
        <returns> An object representing collection of MetricAlertResources and their operations over a MetricAlertResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlerts">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlerts (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlerts(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlerts(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetricAlerts (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MetricAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetMetricAlerts : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlerts (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve alert rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metricAlerts</description></item><item><term>Operation Id</term><description>MetricAlerts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2018-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMetricAlerts(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetricAlertsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlertsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.MetricAlertResource&gt; GetMetricAlertsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlertsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetricAlertsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MetricAlertResource)" />
      <MemberSignature Language="F#" Value="static member GetMetricAlertsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMetricAlertsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MetricAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve alert rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metricAlerts</description></item><item><term>Operation Id</term><description>MetricAlerts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2018-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMetricAlerts(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.MetricAlertResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricBaselines">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselines (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselines(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricBaselines(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricBaselines (client As ArmClient, scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricBaselinesOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorSingleMetricBaseline)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricBaselines : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricBaselines (client, scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric baseline values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricBaselines</description></item><item><term>Operation Id</term><description>Baselines_List</description></item><item><term>Default Api Version</term><description>2019-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricBaselines(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricBaselinesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselinesAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt; GetMonitorMetricBaselinesAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricBaselinesAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricBaselinesAsync (client As ArmClient, scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricBaselinesOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorSingleMetricBaseline)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricBaselinesAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricBaselinesAsync (client, scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorSingleMetricBaseline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric baseline values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricBaselines</description></item><item><term>Operation Id</term><description>Baselines_List</description></item><item><term>Default Api Version</term><description>2019-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricBaselines(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricBaselinesOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricDefinitions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitions (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string metricnamespace = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitions(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string metricnamespace, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricDefinitions(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricDefinitions (client As ArmClient, scope As ResourceIdentifier, Optional metricnamespace As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorMetricDefinition)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricDefinitions : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricDefinitions (client, scope, metricnamespace, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="metricnamespace" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="metricnamespace"> Metric namespace to query metric definitions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric definitions for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricDefinitions</description></item><item><term>Operation Id</term><description>MetricDefinitions_List</description></item><item><term>Default Api Version</term><description>2018-01-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricDefinitions(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricDefinitionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitionsAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string metricnamespace = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt; GetMonitorMetricDefinitionsAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string metricnamespace, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricDefinitionsAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricDefinitionsAsync (client As ArmClient, scope As ResourceIdentifier, Optional metricnamespace As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorMetricDefinition)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricDefinitionsAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricDefinitionsAsync (client, scope, metricnamespace, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="metricnamespace" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="metricnamespace"> Metric namespace to query metric definitions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric definitions for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metricDefinitions</description></item><item><term>Operation Id</term><description>MetricDefinitions_List</description></item><item><term>Default Api Version</term><description>2018-01-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricDefinitions(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespaces (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespaces(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricNamespaces(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricNamespaces (client As ArmClient, scope As ResourceIdentifier, Optional startTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorMetricNamespace)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricNamespaces : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricNamespaces (client, scope, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="startTime"> The ISO 8601 conform Date start time from which to query for metric namespaces. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric namespaces for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/microsoft.insights/metricNamespaces</description></item><item><term>Operation Id</term><description>MetricNamespaces_List</description></item><item><term>Default Api Version</term><description>2017-12-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricNamespaces(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricNamespacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespacesAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt; GetMonitorMetricNamespacesAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricNamespacesAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricNamespacesAsync (client As ArmClient, scope As ResourceIdentifier, Optional startTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorMetricNamespace)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricNamespacesAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricNamespacesAsync (client, scope, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetricNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="startTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="startTime"> The ISO 8601 conform Date start time from which to query for metric namespaces. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the metric namespaces for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/microsoft.insights/metricNamespaces</description></item><item><term>Operation Id</term><description>MetricNamespaces_List</description></item><item><term>Default Api Version</term><description>2017-12-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetricNamespaces(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetrics">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetrics (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetrics(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetrics(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetrics (subscriptionResource As SubscriptionResource, options As SubscriptionResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetrics : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetrics (subscriptionResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScope</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetrics(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetrics">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetrics (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetrics(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetrics(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetrics (client As ArmClient, scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorMetric)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetrics : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetrics (client, scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_List</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetrics(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricsAsync (subscriptionResource As SubscriptionResource, options As SubscriptionResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsAsync (subscriptionResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScope</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetrics(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetricsAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorMetric&gt; GetMonitorMetricsAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricsAsync (client As ArmClient, scope As ResourceIdentifier, options As ArmResourceGetMonitorMetricsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorMetric)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricsAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsAsync (client, scope, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.MonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric values for a resource**.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_List</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorMetrics(Azure.Core.ResourceIdentifier,Azure.ResourceManager.Monitor.Models.ArmResourceGetMonitorMetricsOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsWithPost">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPost (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPost(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsWithPost(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricsWithPost (subscriptionResource As SubscriptionResource, options As SubscriptionResourceGetMonitorMetricsWithPostOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricsWithPost : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsWithPost (subscriptionResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**. Parameters can be specified on either query params or the body.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScopePost</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetricsWithPost(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorMetricsWithPostAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPostAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt; GetMonitorMetricsWithPostAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsWithPostAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorMetricsWithPostAsync (subscriptionResource As SubscriptionResource, options As SubscriptionResourceGetMonitorMetricsWithPostOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionMonitorMetric)" />
      <MemberSignature Language="F#" Value="static member GetMonitorMetricsWithPostAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorMetricsWithPostAsync (subscriptionResource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="options" Type="Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Lists the metric data for a subscription**. Parameters can be specified on either query params or the body.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics</description></item><item><term>Operation Id</term><description>Metrics_ListAtSubscriptionScopePost</description></item><item><term>Default Api Version</term><description>2021-05-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorMetricsWithPost(Azure.ResourceManager.Monitor.Models.SubscriptionResourceGetMonitorMetricsWithPostOptions,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.SubscriptionMonitorMetric" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource GetMonitorPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource GetMonitorPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As MonitorPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MonitorPrivateLinkResource GetMonitorPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MonitorPrivateLinkResource GetMonitorPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As MonitorPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScope">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScope (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scopeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScope(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scopeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScope(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkScope (resourceGroupResource As ResourceGroupResource, scopeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MonitorPrivateLinkScopeResource)" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkScope : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScope (resourceGroupResource, scopeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="scopeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="scopeName"> The name of the Azure Monitor PrivateLinkScope resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a Azure Monitor PrivateLinkScope.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes/{scopeName}</description></item><item><term>Operation Id</term><description>PrivateLinkScopes_Get</description></item><item><term>Default Api Version</term><description>2021-07-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMonitorPrivateLinkScope(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="scopeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scopeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;&gt; GetMonitorPrivateLinkScopeAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scopeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;&gt; GetMonitorPrivateLinkScopeAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string scopeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopeAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkScopeAsync (resourceGroupResource As ResourceGroupResource, scopeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MonitorPrivateLinkScopeResource))" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkScopeAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopeAsync (resourceGroupResource, scopeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="scopeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="scopeName"> The name of the Azure Monitor PrivateLinkScope resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a Azure Monitor PrivateLinkScope.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes/{scopeName}</description></item><item><term>Operation Id</term><description>PrivateLinkScopes_Get</description></item><item><term>Default Api Version</term><description>2021-07-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMonitorPrivateLinkScopeAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="scopeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scopeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopedResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource GetMonitorPrivateLinkScopedResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource GetMonitorPrivateLinkScopedResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopedResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkScopedResource (client As ArmClient, id As ResourceIdentifier) As MonitorPrivateLinkScopedResource" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkScopedResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopedResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateLinkScopedResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopedResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource GetMonitorPrivateLinkScopeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource GetMonitorPrivateLinkScopeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkScopeResource (client As ArmClient, id As ResourceIdentifier) As MonitorPrivateLinkScopeResource" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkScopeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorPrivateLinkScopeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopes">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeCollection GetMonitorPrivateLinkScopes (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeCollection GetMonitorPrivateLinkScopes(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopes(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkScopes (resourceGroupResource As ResourceGroupResource) As MonitorPrivateLinkScopeCollection" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkScopes : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopes resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of MonitorPrivateLinkScopeResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMonitorPrivateLinkScopes" /> instead.</description></item></summary>
        <returns> An object representing collection of MonitorPrivateLinkScopeResources and their operations over a MonitorPrivateLinkScopeResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopes">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopes (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopes(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopes(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkScopes (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorPrivateLinkScopeResource)" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkScopes : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopes (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all Azure Monitor PrivateLinkScopes within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/microsoft.insights/privateLinkScopes</description></item><item><term>Operation Id</term><description>PrivateLinkScopes_List</description></item><item><term>Default Api Version</term><description>2021-07-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorPrivateLinkScopes(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorPrivateLinkScopesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt; GetMonitorPrivateLinkScopesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorPrivateLinkScopesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorPrivateLinkScopeResource)" />
      <MemberSignature Language="F#" Value="static member GetMonitorPrivateLinkScopesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorPrivateLinkScopesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all Azure Monitor PrivateLinkScopes within a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/microsoft.insights/privateLinkScopes</description></item><item><term>Operation Id</term><description>PrivateLinkScopes_List</description></item><item><term>Default Api Version</term><description>2021-07-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorPrivateLinkScopes(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorPrivateLinkScopeResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MonitorWorkspaceResource GetMonitorWorkspaceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MonitorWorkspaceResource GetMonitorWorkspaceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorWorkspaceResource (client As ArmClient, id As ResourceIdentifier) As MonitorWorkspaceResource" />
      <MemberSignature Language="F#" Value="static member GetMonitorWorkspaceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.MonitorWorkspaceResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.MonitorWorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetMonitorWorkspaceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResource (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureMonitorWorkspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResource(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureMonitorWorkspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResource(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorWorkspaceResource (resourceGroupResource As ResourceGroupResource, azureMonitorWorkspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MonitorWorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetMonitorWorkspaceResource : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResource (resourceGroupResource, azureMonitorWorkspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureMonitorWorkspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureMonitorWorkspaceName"> The name of the Azure Monitor workspace.  The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specific Azure Monitor workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/accounts/{azureMonitorWorkspaceName}</description></item><item><term>Operation Id</term><description>AzureMonitorWorkspaces_Get</description></item><item><term>Default Api Version</term><description>2023-04-03</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMonitorWorkspaceResource(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureMonitorWorkspaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureMonitorWorkspaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;&gt; GetMonitorWorkspaceResourceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureMonitorWorkspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;&gt; GetMonitorWorkspaceResourceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureMonitorWorkspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResourceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorWorkspaceResourceAsync (resourceGroupResource As ResourceGroupResource, azureMonitorWorkspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MonitorWorkspaceResource))" />
      <MemberSignature Language="F#" Value="static member GetMonitorWorkspaceResourceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResourceAsync (resourceGroupResource, azureMonitorWorkspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureMonitorWorkspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureMonitorWorkspaceName"> The name of the Azure Monitor workspace.  The name is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the specific Azure Monitor workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/accounts/{azureMonitorWorkspaceName}</description></item><item><term>Operation Id</term><description>AzureMonitorWorkspaces_Get</description></item><item><term>Default Api Version</term><description>2023-04-03</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMonitorWorkspaceResourceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureMonitorWorkspaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureMonitorWorkspaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.MonitorWorkspaceResourceCollection GetMonitorWorkspaceResources (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.MonitorWorkspaceResourceCollection GetMonitorWorkspaceResources(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResources(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorWorkspaceResources (resourceGroupResource As ResourceGroupResource) As MonitorWorkspaceResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetMonitorWorkspaceResources : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.MonitorWorkspaceResourceCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResources resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.MonitorWorkspaceResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of MonitorWorkspaceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetMonitorWorkspaceResources" /> instead.</description></item></summary>
        <returns> An object representing collection of MonitorWorkspaceResources and their operations over a MonitorWorkspaceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResources">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResources (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResources(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResources(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorWorkspaceResources (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MonitorWorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetMonitorWorkspaceResources : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResources (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all workspaces in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Monitor/accounts</description></item><item><term>Operation Id</term><description>AzureMonitorWorkspaces_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-03</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorWorkspaceResources(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonitorWorkspaceResourcesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResourcesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt; GetMonitorWorkspaceResourcesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResourcesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMonitorWorkspaceResourcesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MonitorWorkspaceResource)" />
      <MemberSignature Language="F#" Value="static member GetMonitorWorkspaceResourcesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetMonitorWorkspaceResourcesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.MonitorWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all workspaces in the specified subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Monitor/accounts</description></item><item><term>Operation Id</term><description>AzureMonitorWorkspaces_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-03</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetMonitorWorkspaceResources(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.MonitorWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; GetNotificationStatus (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string notificationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; GetNotificationStatus(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string notificationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatus(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationStatus (resourceGroupResource As ResourceGroupResource, notificationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotificationStatus)" />
      <MemberSignature Language="F#" Value="static member GetNotificationStatus : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatus (resourceGroupResource, notificationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="notificationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="notificationId"> The notification id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the test notifications by the notification id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/notificationStatus/{notificationId}</description></item><item><term>Operation Id</term><description>ActionGroups_GetTestNotificationsAtResourceGroupLevel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="notificationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notificationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; GetNotificationStatus (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string notificationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt; GetNotificationStatus(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string notificationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatus(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationStatus (subscriptionResource As SubscriptionResource, notificationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotificationStatus)" />
      <MemberSignature Language="F#" Value="static member GetNotificationStatus : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatus (subscriptionResource, notificationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="notificationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="notificationId"> The notification id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the test notifications by the notification id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/notificationStatus/{notificationId}</description></item><item><term>Operation Id</term><description>ActionGroups_GetTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="notificationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notificationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; GetNotificationStatusAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string notificationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; GetNotificationStatusAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string notificationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatusAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationStatusAsync (resourceGroupResource As ResourceGroupResource, notificationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotificationStatus))" />
      <MemberSignature Language="F#" Value="static member GetNotificationStatusAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatusAsync (resourceGroupResource, notificationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="notificationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="notificationId"> The notification id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the test notifications by the notification id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/notificationStatus/{notificationId}</description></item><item><term>Operation Id</term><description>ActionGroups_GetTestNotificationsAtResourceGroupLevel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="notificationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notificationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; GetNotificationStatusAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string notificationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt; GetNotificationStatusAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string notificationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatusAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationStatusAsync (subscriptionResource As SubscriptionResource, notificationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotificationStatus))" />
      <MemberSignature Language="F#" Value="static member GetNotificationStatusAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetNotificationStatusAsync (subscriptionResource, notificationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.NotificationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="notificationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="notificationId"> The notification id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the test notifications by the notification id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/notificationStatus/{notificationId}</description></item><item><term>Operation Id</term><description>ActionGroups_GetTestNotifications</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="notificationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notificationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkScopeOperationStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt; GetPrivateLinkScopeOperationStatus (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string asyncOperationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt; GetPrivateLinkScopeOperationStatus(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string asyncOperationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetPrivateLinkScopeOperationStatus(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkScopeOperationStatus (resourceGroupResource As ResourceGroupResource, asyncOperationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MonitorPrivateLinkScopeOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkScopeOperationStatus : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetPrivateLinkScopeOperationStatus (resourceGroupResource, asyncOperationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="asyncOperationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="asyncOperationId"> The operation Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the status of an azure asynchronous operation associated with a private link scope operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopeOperationStatuses/{asyncOperationId}</description></item><item><term>Operation Id</term><description>PrivateLinkScopeOperationStatus_Get</description></item><item><term>Default Api Version</term><description>2021-07-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetPrivateLinkScopeOperationStatus(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncOperationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="asyncOperationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkScopeOperationStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt;&gt; GetPrivateLinkScopeOperationStatusAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string asyncOperationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt;&gt; GetPrivateLinkScopeOperationStatusAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string asyncOperationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetPrivateLinkScopeOperationStatusAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateLinkScopeOperationStatusAsync (resourceGroupResource As ResourceGroupResource, asyncOperationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MonitorPrivateLinkScopeOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GetPrivateLinkScopeOperationStatusAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetPrivateLinkScopeOperationStatusAsync (resourceGroupResource, asyncOperationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.Models.MonitorPrivateLinkScopeOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="asyncOperationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="asyncOperationId"> The operation Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the status of an azure asynchronous operation associated with a private link scope operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopeOperationStatuses/{asyncOperationId}</description></item><item><term>Operation Id</term><description>PrivateLinkScopeOperationStatus_Get</description></item><item><term>Default Api Version</term><description>2021-07-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetPrivateLinkScopeOperationStatus(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncOperationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="asyncOperationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRule">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRule (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRule(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRule(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledQueryRule (resourceGroupResource As ResourceGroupResource, ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScheduledQueryRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetScheduledQueryRule : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRule (resourceGroupResource, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="ruleName"> The name of the rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve an scheduled query rule definition.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/scheduledQueryRules/{ruleName}</description></item><item><term>Operation Id</term><description>ScheduledQueryRules_Get</description></item><item><term>Default Api Version</term><description>2022-06-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetScheduledQueryRule(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRuleAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;&gt; GetScheduledQueryRuleAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;&gt; GetScheduledQueryRuleAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRuleAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledQueryRuleAsync (resourceGroupResource As ResourceGroupResource, ruleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScheduledQueryRuleResource))" />
      <MemberSignature Language="F#" Value="static member GetScheduledQueryRuleAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRuleAsync (resourceGroupResource, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="ruleName"> The name of the rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve an scheduled query rule definition.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/scheduledQueryRules/{ruleName}</description></item><item><term>Operation Id</term><description>ScheduledQueryRules_Get</description></item><item><term>Default Api Version</term><description>2022-06-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetScheduledQueryRuleAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="ruleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.ScheduledQueryRuleResource GetScheduledQueryRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource GetScheduledQueryRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledQueryRuleResource (client As ArmClient, id As ResourceIdentifier) As ScheduledQueryRuleResource" />
      <MemberSignature Language="F#" Value="static member GetScheduledQueryRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ScheduledQueryRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetScheduledQueryRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRules">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.ScheduledQueryRuleCollection GetScheduledQueryRules (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.ScheduledQueryRuleCollection GetScheduledQueryRules(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRules(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledQueryRules (resourceGroupResource As ResourceGroupResource) As ScheduledQueryRuleCollection" />
      <MemberSignature Language="F#" Value="static member GetScheduledQueryRules : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Monitor.ScheduledQueryRuleCollection" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRules resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.ScheduledQueryRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ScheduledQueryRuleResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorResourceGroupResource.GetScheduledQueryRules" /> instead.</description></item></summary>
        <returns> An object representing collection of ScheduledQueryRuleResources and their operations over a ScheduledQueryRuleResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRules">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRules (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRules(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRules(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledQueryRules (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ScheduledQueryRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetScheduledQueryRules : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRules (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a scheduled query rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/scheduledQueryRules</description></item><item><term>Operation Id</term><description>ScheduledQueryRules_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-06-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetScheduledQueryRules(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledQueryRulesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRulesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt; GetScheduledQueryRulesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRulesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledQueryRulesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ScheduledQueryRuleResource)" />
      <MemberSignature Language="F#" Value="static member GetScheduledQueryRulesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetScheduledQueryRulesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.ScheduledQueryRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a scheduled query rule definitions in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Insights/scheduledQueryRules</description></item><item><term>Operation Id</term><description>ScheduledQueryRules_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-06-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorSubscriptionResource.GetScheduledQueryRules(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.ScheduledQueryRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantActivityLogs">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetTenantActivityLogs (this Azure.ResourceManager.Resources.TenantResource tenantResource, string filter = default, string select = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetTenantActivityLogs(class Azure.ResourceManager.Resources.TenantResource tenantResource, string filter, string select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetTenantActivityLogs(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantActivityLogs (tenantResource As TenantResource, Optional filter As String = Nothing, Optional select As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventDataInfo)" />
      <MemberSignature Language="F#" Value="static member GetTenantActivityLogs : Azure.ResourceManager.Resources.TenantResource * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetTenantActivityLogs (tenantResource, filter, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="filter"> Reduces the set of data collected. &lt;br&gt;The **$filter** is very restricted and allows only the following patterns.&lt;br&gt;- List events for a resource group: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'.&lt;br&gt;- List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceUri eq '&lt;ResourceURI&gt;'.&lt;br&gt;- List events for a subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation'.&lt;br&gt;- List events for a resource provider: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceProvider eq '&lt;ResourceProviderName&gt;'.&lt;br&gt;- List events for a correlation Id: api-version=2014-04-01&amp;$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq '&lt;CorrelationID&gt;'.&lt;br&gt;**NOTE**: No other syntax is allowed. </param>
        <param name="select"> Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Insights/eventtypes/management/values</description></item><item><term>Operation Id</term><description>TenantActivityLogs_List</description></item><item><term>Default Api Version</term><description>2015-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorTenantResource.GetTenantActivityLogs(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Monitor.Models.EventDataInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantActivityLogsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetTenantActivityLogsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string filter = default, string select = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Monitor.Models.EventDataInfo&gt; GetTenantActivityLogsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string filter, string select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetTenantActivityLogsAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantActivityLogsAsync (tenantResource As TenantResource, Optional filter As String = Nothing, Optional select As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventDataInfo)" />
      <MemberSignature Language="F#" Value="static member GetTenantActivityLogsAsync : Azure.ResourceManager.Resources.TenantResource * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetTenantActivityLogsAsync (tenantResource, filter, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Monitor.Models.EventDataInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="filter"> Reduces the set of data collected. &lt;br&gt;The **$filter** is very restricted and allows only the following patterns.&lt;br&gt;- List events for a resource group: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceGroupName eq '&lt;ResourceGroupName&gt;'.&lt;br&gt;- List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceUri eq '&lt;ResourceURI&gt;'.&lt;br&gt;- List events for a subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation'.&lt;br&gt;- List events for a resource provider: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceProvider eq '&lt;ResourceProviderName&gt;'.&lt;br&gt;- List events for a correlation Id: api-version=2014-04-01&amp;$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq '&lt;CorrelationID&gt;'.&lt;br&gt;**NOTE**: No other syntax is allowed. </param>
        <param name="select"> Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Insights/eventtypes/management/values</description></item><item><term>Operation Id</term><description>TenantActivityLogs_List</description></item><item><term>Default Api Version</term><description>2015-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorTenantResource.GetTenantActivityLogs(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Monitor.Models.EventDataInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVmInsightsOnboardingStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatus (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatus(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetVmInsightsOnboardingStatus(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVmInsightsOnboardingStatus (client As ArmClient, scope As ResourceIdentifier) As VmInsightsOnboardingStatusResource" />
      <MemberSignature Language="F#" Value="static member GetVmInsightsOnboardingStatus : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetVmInsightsOnboardingStatus (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets an object representing a VmInsightsOnboardingStatusResource along with the instance operations that can be performed on it in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetVmInsightsOnboardingStatus(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVmInsightsOnboardingStatusResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatusResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource GetVmInsightsOnboardingStatusResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.MonitorExtensions.GetVmInsightsOnboardingStatusResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVmInsightsOnboardingStatusResource (client As ArmClient, id As ResourceIdentifier) As VmInsightsOnboardingStatusResource" />
      <MemberSignature Language="F#" Value="static member GetVmInsightsOnboardingStatusResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" Usage="Azure.ResourceManager.Monitor.MonitorExtensions.GetVmInsightsOnboardingStatusResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.3.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Monitor.Mocking.MockableMonitorArmClient.GetVmInsightsOnboardingStatusResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Monitor.VmInsightsOnboardingStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
