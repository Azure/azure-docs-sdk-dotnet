<Type Name="MockableDevCenterArmClient" FullName="Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient">
  <TypeSignature Language="C#" Value="public class MockableDevCenterArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDevCenterArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDevCenterArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDevCenterArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDevCenterArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllowedEnvironmentTypeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource GetAllowedEnvironmentTypeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource GetAllowedEnvironmentTypeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetAllowedEnvironmentTypeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllowedEnvironmentTypeResource (id As ResourceIdentifier) As AllowedEnvironmentTypeResource" />
      <MemberSignature Language="F#" Value="abstract member GetAllowedEnvironmentTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource&#xA;override this.GetAllowedEnvironmentTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource" Usage="mockableDevCenterArmClient.GetAllowedEnvironmentTypeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.AllowedEnvironmentTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedNetworkConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource GetAttachedNetworkConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource GetAttachedNetworkConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetAttachedNetworkConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttachedNetworkConnectionResource (id As ResourceIdentifier) As AttachedNetworkConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetAttachedNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource&#xA;override this.GetAttachedNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource" Usage="mockableDevCenterArmClient.GetAttachedNetworkConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.AttachedNetworkConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevBoxDefinitionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevBoxDefinitionResource GetDevBoxDefinitionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevBoxDefinitionResource GetDevBoxDefinitionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevBoxDefinitionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevBoxDefinitionResource (id As ResourceIdentifier) As DevBoxDefinitionResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevBoxDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevBoxDefinitionResource&#xA;override this.GetDevBoxDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevBoxDefinitionResource" Usage="mockableDevCenterArmClient.GetDevBoxDefinitionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevBoxDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevBoxDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevBoxDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevBoxDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevBoxDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterCatalogResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterCatalogResource GetDevCenterCatalogResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterCatalogResource GetDevCenterCatalogResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterCatalogResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterCatalogResource (id As ResourceIdentifier) As DevCenterCatalogResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterCatalogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterCatalogResource&#xA;override this.GetDevCenterCatalogResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterCatalogResource" Usage="mockableDevCenterArmClient.GetDevCenterCatalogResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterCatalogResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterCatalogResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterCatalogResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterCatalogResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterCatalogResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterEnvironmentTypeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource GetDevCenterEnvironmentTypeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource GetDevCenterEnvironmentTypeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterEnvironmentTypeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterEnvironmentTypeResource (id As ResourceIdentifier) As DevCenterEnvironmentTypeResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterEnvironmentTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource&#xA;override this.GetDevCenterEnvironmentTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource" Usage="mockableDevCenterArmClient.GetDevCenterEnvironmentTypeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterEnvironmentTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterGalleryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterGalleryResource GetDevCenterGalleryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterGalleryResource GetDevCenterGalleryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterGalleryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterGalleryResource (id As ResourceIdentifier) As DevCenterGalleryResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterGalleryResource&#xA;override this.GetDevCenterGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterGalleryResource" Usage="mockableDevCenterArmClient.GetDevCenterGalleryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterGalleryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterGalleryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterGalleryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterGalleryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterGalleryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterImageResource GetDevCenterImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterImageResource GetDevCenterImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterImageResource (id As ResourceIdentifier) As DevCenterImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterImageResource&#xA;override this.GetDevCenterImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterImageResource" Usage="mockableDevCenterArmClient.GetDevCenterImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterImageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterNetworkConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource GetDevCenterNetworkConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource GetDevCenterNetworkConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterNetworkConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterNetworkConnectionResource (id As ResourceIdentifier) As DevCenterNetworkConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&#xA;override this.GetDevCenterNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" Usage="mockableDevCenterArmClient.GetDevCenterNetworkConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterPoolResource GetDevCenterPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterPoolResource GetDevCenterPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterPoolResource (id As ResourceIdentifier) As DevCenterPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterPoolResource&#xA;override this.GetDevCenterPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterPoolResource" Usage="mockableDevCenterArmClient.GetDevCenterPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterProjectEnvironmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource GetDevCenterProjectEnvironmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource GetDevCenterProjectEnvironmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterProjectEnvironmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterProjectEnvironmentResource (id As ResourceIdentifier) As DevCenterProjectEnvironmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterProjectEnvironmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource&#xA;override this.GetDevCenterProjectEnvironmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource" Usage="mockableDevCenterArmClient.GetDevCenterProjectEnvironmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectEnvironmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterProjectResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterProjectResource GetDevCenterProjectResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterProjectResource GetDevCenterProjectResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterProjectResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterProjectResource (id As ResourceIdentifier) As DevCenterProjectResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterProjectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterProjectResource&#xA;override this.GetDevCenterProjectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterProjectResource" Usage="mockableDevCenterArmClient.GetDevCenterProjectResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterProjectResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterProjectResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterResource GetDevCenterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterResource GetDevCenterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterResource (id As ResourceIdentifier) As DevCenterResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterResource&#xA;override this.GetDevCenterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterResource" Usage="mockableDevCenterArmClient.GetDevCenterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterScheduleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.DevCenterScheduleResource GetDevCenterScheduleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.DevCenterScheduleResource GetDevCenterScheduleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetDevCenterScheduleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterScheduleResource (id As ResourceIdentifier) As DevCenterScheduleResource" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterScheduleResource&#xA;override this.GetDevCenterScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.DevCenterScheduleResource" Usage="mockableDevCenterArmClient.GetDevCenterScheduleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.DevCenterScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.DevCenterScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.DevCenterScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHealthCheckStatusDetailResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource GetHealthCheckStatusDetailResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource GetHealthCheckStatusDetailResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetHealthCheckStatusDetailResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHealthCheckStatusDetailResource (id As ResourceIdentifier) As HealthCheckStatusDetailResource" />
      <MemberSignature Language="F#" Value="abstract member GetHealthCheckStatusDetailResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource&#xA;override this.GetHealthCheckStatusDetailResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource" Usage="mockableDevCenterArmClient.GetHealthCheckStatusDetailResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.HealthCheckStatusDetailResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.ImageVersionResource GetImageVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.ImageVersionResource GetImageVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetImageVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImageVersionResource (id As ResourceIdentifier) As ImageVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.ImageVersionResource&#xA;override this.GetImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.ImageVersionResource" Usage="mockableDevCenterArmClient.GetImageVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.ImageVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DevCenter.ImageVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.ImageVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DevCenter.ImageVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.ImageVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectAttachedNetworkConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource GetProjectAttachedNetworkConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource GetProjectAttachedNetworkConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetProjectAttachedNetworkConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProjectAttachedNetworkConnectionResource (id As ResourceIdentifier) As ProjectAttachedNetworkConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetProjectAttachedNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource&#xA;override this.GetProjectAttachedNetworkConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource" Usage="mockableDevCenterArmClient.GetProjectAttachedNetworkConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.ProjectAttachedNetworkConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectDevBoxDefinitionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource GetProjectDevBoxDefinitionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource GetProjectDevBoxDefinitionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterArmClient.GetProjectDevBoxDefinitionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProjectDevBoxDefinitionResource (id As ResourceIdentifier) As ProjectDevBoxDefinitionResource" />
      <MemberSignature Language="F#" Value="abstract member GetProjectDevBoxDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource&#xA;override this.GetProjectDevBoxDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource" Usage="mockableDevCenterArmClient.GetProjectDevBoxDefinitionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DevCenter.ProjectDevBoxDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
