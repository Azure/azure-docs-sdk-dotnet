<Type Name="MockableDevCenterSubscriptionResource" FullName="Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableDevCenterSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDevCenterSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDevCenterSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDevCenterSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDevCenterSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDevCenterNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt; CheckDevCenterNameAvailability (Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt; CheckDevCenterNameAvailability(class Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.CheckDevCenterNameAvailability(Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDevCenterNameAvailability (content As DevCenterNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevCenterNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckDevCenterNameAvailability : Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;&#xA;override this.CheckDevCenterNameAvailability : Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;" Usage="mockableDevCenterSubscriptionResource.CheckDevCenterNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckDevCenterNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;&gt; CheckDevCenterNameAvailabilityAsync (Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;&gt; CheckDevCenterNameAvailabilityAsync(class Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.CheckDevCenterNameAvailabilityAsync(Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDevCenterNameAvailabilityAsync (content As DevCenterNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevCenterNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckDevCenterNameAvailabilityAsync : Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;&gt;&#xA;override this.CheckDevCenterNameAvailabilityAsync : Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;&gt;" Usage="mockableDevCenterSubscriptionResource.CheckDevCenterNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DevCenter.Models.DevCenterNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if resource name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterNetworkConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt; GetDevCenterNetworkConnections (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt; GetDevCenterNetworkConnections(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterNetworkConnections(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterNetworkConnections (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevCenterNetworkConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterNetworkConnections : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt;&#xA;override this.GetDevCenterNetworkConnections : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterNetworkConnections (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists network connections in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/networkConnections</description></item><item><term>Operation Id</term><description>NetworkConnections_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterNetworkConnectionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt; GetDevCenterNetworkConnectionsAsync (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt; GetDevCenterNetworkConnectionsAsync(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterNetworkConnectionsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterNetworkConnectionsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevCenterNetworkConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterNetworkConnectionsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt;&#xA;override this.GetDevCenterNetworkConnectionsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterNetworkConnectionsAsync (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists network connections in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/networkConnections</description></item><item><term>Operation Id</term><description>NetworkConnections_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevCenter.DevCenterNetworkConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterOperationStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt; GetDevCenterOperationStatus (Azure.Core.AzureLocation location, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt; GetDevCenterOperationStatus(valuetype Azure.Core.AzureLocation location, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterOperationStatus(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterOperationStatus (location As AzureLocation, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DevCenterOperationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterOperationStatus : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;&#xA;override this.GetDevCenterOperationStatus : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterOperationStatus (location, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region. </param>
        <param name="operationId"> The ID of an ongoing async operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the current status of an async operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/operationStatuses/{operationId}</description></item><item><term>Operation Id</term><description>OperationStatuses_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterOperationStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;&gt; GetDevCenterOperationStatusAsync (Azure.Core.AzureLocation location, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;&gt; GetDevCenterOperationStatusAsync(valuetype Azure.Core.AzureLocation location, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterOperationStatusAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterOperationStatusAsync (location As AzureLocation, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DevCenterOperationStatus))" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterOperationStatusAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;&gt;&#xA;override this.GetDevCenterOperationStatusAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterOperationStatusAsync (location, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevCenter.Models.DevCenterOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region. </param>
        <param name="operationId"> The ID of an ongoing async operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the current status of an async operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/operationStatuses/{operationId}</description></item><item><term>Operation Id</term><description>OperationStatuses_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterProjects">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt; GetDevCenterProjects (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt; GetDevCenterProjects(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterProjects(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterProjects (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevCenterProjectResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterProjects : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt;&#xA;override this.GetDevCenterProjects : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterProjects (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all projects in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/projects</description></item><item><term>Operation Id</term><description>Projects_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterProjectsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt; GetDevCenterProjectsAsync (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt; GetDevCenterProjectsAsync(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterProjectsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterProjectsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevCenterProjectResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterProjectsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt;&#xA;override this.GetDevCenterProjectsAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterProjectsAsync (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterProjectResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all projects in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/projects</description></item><item><term>Operation Id</term><description>Projects_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevCenter.DevCenterProjectResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt; GetDevCenters (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevCenter.DevCenterResource&gt; GetDevCenters(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenters(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenters (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevCenterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenters : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt;&#xA;override this.GetDevCenters : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenters (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all devcenters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/devcenters</description></item><item><term>Operation Id</term><description>DevCenters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevCenter.DevCenterResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevCenter.DevCenterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCentersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt; GetDevCentersAsync (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevCenter.DevCenterResource&gt; GetDevCentersAsync(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCentersAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCentersAsync (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevCenterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCentersAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt;&#xA;override this.GetDevCentersAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCentersAsync (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.DevCenterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all devcenters in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/devcenters</description></item><item><term>Operation Id</term><description>DevCenters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevCenter.DevCenterResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevCenter.DevCenterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterSkusBySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt; GetDevCenterSkusBySubscription (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt; GetDevCenterSkusBySubscription(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterSkusBySubscription(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterSkusBySubscription (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevCenterSkuDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterSkusBySubscription : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt;&#xA;override this.GetDevCenterSkusBySubscription : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterSkusBySubscription (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Microsoft.DevCenter SKUs available in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/skus</description></item><item><term>Operation Id</term><description>Skus_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterSkusBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt; GetDevCenterSkusBySubscriptionAsync (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt; GetDevCenterSkusBySubscriptionAsync(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterSkusBySubscriptionAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterSkusBySubscriptionAsync (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevCenterSkuDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterSkusBySubscriptionAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt;&#xA;override this.GetDevCenterSkusBySubscriptionAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterSkusBySubscriptionAsync (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of resources to return from the operation. Example: '$top=10'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Microsoft.DevCenter SKUs available in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/skus</description></item><item><term>Operation Id</term><description>Skus_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevCenter.Models.DevCenterSkuDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterUsagesByLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt; GetDevCenterUsagesByLocation (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt; GetDevCenterUsagesByLocation(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterUsagesByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterUsagesByLocation (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DevCenterUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterUsagesByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt;&#xA;override this.GetDevCenterUsagesByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterUsagesByLocation (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current usages and limits in this location for the provided subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_ListByLocation</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DevCenter.Models.DevCenterUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevCenterUsagesByLocationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt; GetDevCenterUsagesByLocationAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt; GetDevCenterUsagesByLocationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevCenter.Mocking.MockableDevCenterSubscriptionResource.GetDevCenterUsagesByLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevCenterUsagesByLocationAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DevCenterUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetDevCenterUsagesByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt;&#xA;override this.GetDevCenterUsagesByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt;" Usage="mockableDevCenterSubscriptionResource.GetDevCenterUsagesByLocationAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevCenter</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DevCenter.Models.DevCenterUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the current usages and limits in this location for the provided subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_ListByLocation</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DevCenter.Models.DevCenterUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
