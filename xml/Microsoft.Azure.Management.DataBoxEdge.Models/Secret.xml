<Type Name="Secret" FullName="Microsoft.Azure.Management.DataBoxEdge.Models.Secret">
  <TypeSignature Language="C#" Value="public class Secret" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Secret extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataBoxEdge.Models.Secret" />
  <TypeSignature Language="VB.NET" Value="Public Class Secret" />
  <TypeSignature Language="F#" Value="type Secret = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Holds device secret either as a KeyVault reference or as an encrypted
            value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Secret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataBoxEdge.Models.Secret.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Secret class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Secret (Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret encryptedSecret = default, string keyVaultId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret encryptedSecret, string keyVaultId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataBoxEdge.Models.Secret.#ctor(Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional encryptedSecret As AsymmetricEncryptedSecret = Nothing, Optional keyVaultId As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.DataBoxEdge.Models.Secret : Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret * string -&gt; Microsoft.Azure.Management.DataBoxEdge.Models.Secret" Usage="new Microsoft.Azure.Management.DataBoxEdge.Models.Secret (encryptedSecret, keyVaultId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedSecret" Type="Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret" />
        <Parameter Name="keyVaultId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedSecret">Encrypted (using device public key)
            secret value.</param>
        <param name="keyVaultId">Id of the Key-Vault where secret is stored
            (ex:
            secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740).</param>
        <summary>
            Initializes a new instance of the Secret class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptedSecret">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret EncryptedSecret { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret EncryptedSecret" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataBoxEdge.Models.Secret.EncryptedSecret" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedSecret As AsymmetricEncryptedSecret" />
      <MemberSignature Language="F#" Value="member this.EncryptedSecret : Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret with get, set" Usage="Microsoft.Azure.Management.DataBoxEdge.Models.Secret.EncryptedSecret" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="encryptedSecret")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="encryptedSecret")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DataBoxEdge.Models.AsymmetricEncryptedSecret</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets encrypted (using device public key) secret value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyVaultId">
      <MemberSignature Language="C#" Value="public string KeyVaultId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyVaultId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataBoxEdge.Models.Secret.KeyVaultId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyVaultId As String" />
      <MemberSignature Language="F#" Value="member this.KeyVaultId : string with get, set" Usage="Microsoft.Azure.Management.DataBoxEdge.Models.Secret.KeyVaultId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="keyVaultId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="keyVaultId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets id of the Key-Vault where secret is stored (ex:
            secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataBoxEdge.Models.Secret.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="secret.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
