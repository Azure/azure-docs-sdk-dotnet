<Type Name="NodeInfo" FullName="Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo">
  <TypeSignature Language="C#" Value="public class NodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeInfo" />
  <TypeSignature Language="F#" Value="type NodeInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Kubernetes node info
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NodeInfo class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeInfo (string name = default, string type = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt; ipConfiguration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt; ipConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional name As String = Nothing, Optional type As String = Nothing, Optional ipConfiguration As IList(Of KubernetesIPConfiguration) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo : string * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt; -&gt; Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo" Usage="new Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo (name, type, ipConfiguration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="ipConfiguration" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Node name.</param>
        <param name="type">Node type - Master/Worker. Possible values
            include: 'Invalid', 'Master', 'Worker'</param>
        <param name="ipConfiguration">IP Configuration of the Kubernetes
            node.</param>
        <summary>
            Initializes a new instance of the NodeInfo class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IpConfiguration">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt; IpConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt; IpConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.IpConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property IpConfiguration As IList(Of KubernetesIPConfiguration)" />
      <MemberSignature Language="F#" Value="member this.IpConfiguration : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt; with get, set" Usage="Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.IpConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="ipConfiguration")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="ipConfiguration")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.DataBoxEdge.Models.KubernetesIPConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets IP Configuration of the Kubernetes node.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="name")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="name")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets node name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="Microsoft.Azure.Management.DataBoxEdge.Models.NodeInfo.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="type")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="type")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets node type - Master/Worker. Possible values include: 'Invalid',
            'Master', 'Worker'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
