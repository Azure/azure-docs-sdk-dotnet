<Type Name="ManagementEventRuleCondition" FullName="Azure.ResourceManager.Monitor.Models.ManagementEventRuleCondition">
  <TypeSignature Language="C#" Value="public class ManagementEventRuleCondition : Azure.ResourceManager.Monitor.Models.AlertRuleCondition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventRuleCondition extends Azure.ResourceManager.Monitor.Models.AlertRuleCondition" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Monitor.Models.ManagementEventRuleCondition" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventRuleCondition&#xA;Inherits AlertRuleCondition" />
  <TypeSignature Language="F#" Value="type ManagementEventRuleCondition = class&#xA;    inherit AlertRuleCondition" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Monitor.Models.AlertRuleCondition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A management event rule condition. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventRuleCondition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Models.ManagementEventRuleCondition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ManagementEventRuleCondition. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregation">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Monitor.Models.ManagementEventAggregationCondition Aggregation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Monitor.Models.ManagementEventAggregationCondition Aggregation" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Monitor.Models.ManagementEventRuleCondition.Aggregation" />
      <MemberSignature Language="VB.NET" Value="Public Property Aggregation As ManagementEventAggregationCondition" />
      <MemberSignature Language="F#" Value="member this.Aggregation : Azure.ResourceManager.Monitor.Models.ManagementEventAggregationCondition with get, set" Usage="Azure.ResourceManager.Monitor.Models.ManagementEventRuleCondition.Aggregation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Monitor.Models.ManagementEventAggregationCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> How the data that is collected should be combined over time and when the alert is activated. Note that for management event alerts aggregation is optional â€“ if it is not provided then any event will cause the alert to activate. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
