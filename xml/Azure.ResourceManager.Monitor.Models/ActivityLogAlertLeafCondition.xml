<Type Name="ActivityLogAlertLeafCondition" FullName="Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition">
  <TypeSignature Language="C#" Value="public class ActivityLogAlertLeafCondition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityLogAlertLeafCondition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityLogAlertLeafCondition" />
  <TypeSignature Language="F#" Value="type ActivityLogAlertLeafCondition = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> An Activity Log alert condition that is met by comparing an activity log field and value. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityLogAlertLeafCondition (string field, string equalsValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string field, string equalsValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (field As String, equalsValue As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition : string * string -&gt; Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition" Usage="new Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition (field, equalsValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
        <Parameter Name="equalsValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="field"> The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'. </param>
        <param name="equalsValue"> The field value will be compared to this value (case-insensitive) to determine if the condition is met. </param>
        <summary> Initializes a new instance of ActivityLogAlertLeafCondition. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="field" /> or <paramref name="equalsValue" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EqualsValue">
      <MemberSignature Language="C#" Value="public string EqualsValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EqualsValue" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition.EqualsValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EqualsValue As String" />
      <MemberSignature Language="F#" Value="member this.EqualsValue : string with get, set" Usage="Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition.EqualsValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The field value will be compared to this value (case-insensitive) to determine if the condition is met. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public string Field { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Field" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition.Field" />
      <MemberSignature Language="VB.NET" Value="Public Property Field As String" />
      <MemberSignature Language="F#" Value="member this.Field : string with get, set" Usage="Azure.ResourceManager.Monitor.Models.ActivityLogAlertLeafCondition.Field" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Monitor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
