<Type Name="ArmStorageModelFactory" FullName="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmStorageModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmStorageModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmStorageModelFactory" />
  <TypeSignature Language="F#" Value="type ArmStorageModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccountSasContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.AccountSasContent AccountSasContent (Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService services = default, Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType resourceTypes = default, Azure.ResourceManager.Storage.Models.StorageAccountSasPermission permissions = default, string ipAddressOrRange = default, Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol? protocols = default, DateTimeOffset? sharedAccessStartOn = default, DateTimeOffset sharedAccessExpireOn = default, string keyToSign = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.AccountSasContent AccountSasContent(valuetype Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService services, valuetype Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType resourceTypes, valuetype Azure.ResourceManager.Storage.Models.StorageAccountSasPermission permissions, string ipAddressOrRange, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol&gt; protocols, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sharedAccessStartOn, valuetype System.DateTimeOffset sharedAccessExpireOn, string keyToSign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.AccountSasContent(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType,Azure.ResourceManager.Storage.Models.StorageAccountSasPermission,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol},System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccountSasContent (Optional services As StorageAccountSasSignedService = Nothing, Optional resourceTypes As StorageAccountSasSignedResourceType = Nothing, Optional permissions As StorageAccountSasPermission = Nothing, Optional ipAddressOrRange As String = Nothing, Optional protocols As Nullable(Of StorageAccountHttpProtocol) = Nothing, Optional sharedAccessStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional sharedAccessExpireOn As DateTimeOffset = Nothing, Optional keyToSign As String = Nothing) As AccountSasContent" />
      <MemberSignature Language="F#" Value="static member AccountSasContent : Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService * Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType * Azure.ResourceManager.Storage.Models.StorageAccountSasPermission * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol&gt; * Nullable&lt;DateTimeOffset&gt; * DateTimeOffset * string -&gt; Azure.ResourceManager.Storage.Models.AccountSasContent" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.AccountSasContent (services, resourceTypes, permissions, ipAddressOrRange, protocols, sharedAccessStartOn, sharedAccessExpireOn, keyToSign)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.AccountSasContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceTypes" Type="Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="permissions" Type="Azure.ResourceManager.Storage.Models.StorageAccountSasPermission" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ipAddressOrRange" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="protocols" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sharedAccessStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sharedAccessExpireOn" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="keyToSign" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="services"> The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). </param>
        <param name="resourceTypes"> The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. </param>
        <param name="permissions"> The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </param>
        <param name="ipAddressOrRange"> An IP address or a range of IP addresses from which to accept requests. </param>
        <param name="protocols"> The protocol permitted for a request made with the account SAS. </param>
        <param name="sharedAccessStartOn"> The time at which the SAS becomes valid. </param>
        <param name="sharedAccessExpireOn"> The time at which the shared access signature becomes invalid. </param>
        <param name="keyToSign"> The key to sign the account SAS token with. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountSasContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.AccountSasContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.BlobContainerData BlobContainerData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string version = default, bool? isDeleted = default, DateTimeOffset? deletedOn = default, int? remainingRetentionDays = default, string defaultEncryptionScope = default, bool? preventEncryptionScopeOverride = default, Azure.ResourceManager.Storage.Models.StoragePublicAccessType? publicAccess = default, DateTimeOffset? lastModifiedOn = default, Azure.ResourceManager.Storage.Models.StorageLeaseStatus? leaseStatus = default, Azure.ResourceManager.Storage.Models.StorageLeaseState? leaseState = default, Azure.ResourceManager.Storage.Models.StorageLeaseDurationType? leaseDuration = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy immutabilityPolicy = default, Azure.ResourceManager.Storage.Models.LegalHoldProperties legalHold = default, bool? hasLegalHold = default, bool? hasImmutabilityPolicy = default, Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning immutableStorageWithVersioning = default, bool? enableNfsV3RootSquash = default, bool? enableNfsV3AllSquash = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.BlobContainerData BlobContainerData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string version, valuetype System.Nullable`1&lt;bool&gt; isDeleted, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn, valuetype System.Nullable`1&lt;int32&gt; remainingRetentionDays, string defaultEncryptionScope, valuetype System.Nullable`1&lt;bool&gt; preventEncryptionScopeOverride, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StoragePublicAccessType&gt; publicAccess, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageLeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageLeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageLeaseDurationType&gt; leaseDuration, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy immutabilityPolicy, class Azure.ResourceManager.Storage.Models.LegalHoldProperties legalHold, valuetype System.Nullable`1&lt;bool&gt; hasLegalHold, valuetype System.Nullable`1&lt;bool&gt; hasImmutabilityPolicy, class Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning immutableStorageWithVersioning, valuetype System.Nullable`1&lt;bool&gt; enableNfsV3RootSquash, valuetype System.Nullable`1&lt;bool&gt; enableNfsV3AllSquash, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobContainerData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicAccessType},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseStatus},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseDurationType},System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy,Azure.ResourceManager.Storage.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContainerData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional version As String = Nothing, Optional isDeleted As Nullable(Of Boolean) = Nothing, Optional deletedOn As Nullable(Of DateTimeOffset) = Nothing, Optional remainingRetentionDays As Nullable(Of Integer) = Nothing, Optional defaultEncryptionScope As String = Nothing, Optional preventEncryptionScopeOverride As Nullable(Of Boolean) = Nothing, Optional publicAccess As Nullable(Of StoragePublicAccessType) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional leaseStatus As Nullable(Of StorageLeaseStatus) = Nothing, Optional leaseState As Nullable(Of StorageLeaseState) = Nothing, Optional leaseDuration As Nullable(Of StorageLeaseDurationType) = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional immutabilityPolicy As BlobContainerImmutabilityPolicy = Nothing, Optional legalHold As LegalHoldProperties = Nothing, Optional hasLegalHold As Nullable(Of Boolean) = Nothing, Optional hasImmutabilityPolicy As Nullable(Of Boolean) = Nothing, Optional immutableStorageWithVersioning As ImmutableStorageWithVersioning = Nothing, Optional enableNfsV3RootSquash As Nullable(Of Boolean) = Nothing, Optional enableNfsV3AllSquash As Nullable(Of Boolean) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BlobContainerData" />
      <MemberSignature Language="F#" Value="static member BlobContainerData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicAccessType&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseStatus&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseState&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseDurationType&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy * Azure.ResourceManager.Storage.Models.LegalHoldProperties * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Storage.BlobContainerData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobContainerData (id, name, resourceType, systemData, version, isDeleted, deletedOn, remainingRetentionDays, defaultEncryptionScope, preventEncryptionScopeOverride, publicAccess, lastModifiedOn, leaseStatus, leaseState, leaseDuration, metadata, immutabilityPolicy, legalHold, hasLegalHold, hasImmutabilityPolicy, immutableStorageWithVersioning, enableNfsV3RootSquash, enableNfsV3AllSquash, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.BlobContainerData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="isDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="remainingRetentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="defaultEncryptionScope" Type="System.String" />
        <Parameter Name="preventEncryptionScopeOverride" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="publicAccess" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicAccessType&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseStatus&gt;" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseDurationType&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="immutabilityPolicy" Type="Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" />
        <Parameter Name="legalHold" Type="Azure.ResourceManager.Storage.Models.LegalHoldProperties" />
        <Parameter Name="hasLegalHold" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hasImmutabilityPolicy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="immutableStorageWithVersioning" Type="Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" />
        <Parameter Name="enableNfsV3RootSquash" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableNfsV3AllSquash" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="version"> The version of the deleted blob container. </param>
        <param name="isDeleted"> Indicates whether the blob container was deleted. </param>
        <param name="deletedOn"> Blob container deletion time. </param>
        <param name="remainingRetentionDays"> Remaining retention days for soft deleted blob container. </param>
        <param name="defaultEncryptionScope"> Default the container to use specified encryption scope for all writes. </param>
        <param name="preventEncryptionScopeOverride"> Block override of encryption scope from the container default. </param>
        <param name="publicAccess"> Specifies whether data in the container may be accessed publicly and the level of access. </param>
        <param name="lastModifiedOn"> Returns the date and time the container was last modified. </param>
        <param name="leaseStatus"> The lease status of the container. </param>
        <param name="leaseState"> Lease state of the container. </param>
        <param name="leaseDuration"> Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased. </param>
        <param name="metadata"> A name-value pair to associate with the container as metadata. </param>
        <param name="immutabilityPolicy"> The ImmutabilityPolicy property of the container. </param>
        <param name="legalHold"> The LegalHold property of the container. </param>
        <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
        <param name="hasImmutabilityPolicy"> The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container. </param>
        <param name="immutableStorageWithVersioning"> The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. </param>
        <param name="enableNfsV3RootSquash"> Enable NFSv3 root squash on blob container. </param>
        <param name="enableNfsV3AllSquash"> Enable NFSv3 all squash on blob container. </param>
        <param name="etag"> Resource Etag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobContainerData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.BlobContainerData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContainerImmutabilityPolicy">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy BlobContainerImmutabilityPolicy (Azure.ETag? etag = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.UpdateHistoryEntry&gt; updateHistory = default, int? immutabilityPeriodSinceCreationInDays = default, Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState? state = default, bool? allowProtectedAppendWrites = default, bool? allowProtectedAppendWritesAll = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy BlobContainerImmutabilityPolicy(valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.UpdateHistoryEntry&gt; updateHistory, valuetype System.Nullable`1&lt;int32&gt; immutabilityPeriodSinceCreationInDays, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState&gt; state, valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWrites, valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWritesAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobContainerImmutabilityPolicy(System.Nullable{Azure.ETag},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.UpdateHistoryEntry},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobContainerImmutabilityPolicy (Optional etag As Nullable(Of ETag) = Nothing, Optional updateHistory As IEnumerable(Of UpdateHistoryEntry) = Nothing, Optional immutabilityPeriodSinceCreationInDays As Nullable(Of Integer) = Nothing, Optional state As Nullable(Of ImmutabilityPolicyState) = Nothing, Optional allowProtectedAppendWrites As Nullable(Of Boolean) = Nothing, Optional allowProtectedAppendWritesAll As Nullable(Of Boolean) = Nothing) As BlobContainerImmutabilityPolicy" />
      <MemberSignature Language="F#" Value="static member BlobContainerImmutabilityPolicy : Nullable&lt;Azure.ETag&gt; * seq&lt;Azure.ResourceManager.Storage.Models.UpdateHistoryEntry&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobContainerImmutabilityPolicy (etag, updateHistory, immutabilityPeriodSinceCreationInDays, state, allowProtectedAppendWrites, allowProtectedAppendWritesAll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="updateHistory" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.UpdateHistoryEntry&gt;" />
        <Parameter Name="immutabilityPeriodSinceCreationInDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState&gt;" />
        <Parameter Name="allowProtectedAppendWrites" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="allowProtectedAppendWritesAll" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="etag"> ImmutabilityPolicy Etag. </param>
        <param name="updateHistory"> The ImmutabilityPolicy update history of the blob container. </param>
        <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
        <param name="state"> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </param>
        <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
        <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobInventoryPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.BlobInventoryPolicyData BlobInventoryPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, DateTimeOffset? lastModifiedOn = default, Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema policySchema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.BlobInventoryPolicyData BlobInventoryPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, class Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema policySchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobInventoryPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobInventoryPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional policySchema As BlobInventoryPolicySchema = Nothing) As BlobInventoryPolicyData" />
      <MemberSignature Language="F#" Value="static member BlobInventoryPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema -&gt; Azure.ResourceManager.Storage.BlobInventoryPolicyData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobInventoryPolicyData (id, name, resourceType, systemData, lastModifiedOn, policySchema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.BlobInventoryPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="policySchema" Type="Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="lastModifiedOn"> Returns the last modified date and time of the blob inventory policy. </param>
        <param name="policySchema"> The storage account blob inventory policy object. It is composed of policy rules. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobInventoryPolicySchema">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema BlobInventoryPolicySchema (bool isEnabled = false, string destination = default, Azure.ResourceManager.Storage.Models.BlobInventoryRuleType ruleType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule&gt; rules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema BlobInventoryPolicySchema(bool isEnabled, string destination, valuetype Azure.ResourceManager.Storage.Models.BlobInventoryRuleType ruleType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule&gt; rules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobInventoryPolicySchema(System.Boolean,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryRuleType,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobInventoryPolicySchema (Optional isEnabled As Boolean = false, Optional destination As String = Nothing, Optional ruleType As BlobInventoryRuleType = Nothing, Optional rules As IEnumerable(Of BlobInventoryPolicyRule) = Nothing) As BlobInventoryPolicySchema" />
      <MemberSignature Language="F#" Value="static member BlobInventoryPolicySchema : bool * string * Azure.ResourceManager.Storage.Models.BlobInventoryRuleType * seq&lt;Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule&gt; -&gt; Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobInventoryPolicySchema (isEnabled, destination, ruleType, rules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isEnabled" Type="System.Boolean" />
        <Parameter Name="destination" Type="System.String" />
        <Parameter Name="ruleType" Type="Azure.ResourceManager.Storage.Models.BlobInventoryRuleType" />
        <Parameter Name="rules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule&gt;" />
      </Parameters>
      <Docs>
        <param name="isEnabled"> Policy is enabled if set to true. </param>
        <param name="destination"> Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'. </param>
        <param name="ruleType"> The valid value is Inventory. </param>
        <param name="rules"> The storage account blob inventory policy rules. The rule is applied when it is enabled. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobRestoreStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.BlobRestoreStatus BlobRestoreStatus (Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus? status = default, string failureReason = default, string restoreId = default, Azure.ResourceManager.Storage.Models.BlobRestoreContent parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.BlobRestoreStatus BlobRestoreStatus(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus&gt; status, string failureReason, string restoreId, class Azure.ResourceManager.Storage.Models.BlobRestoreContent parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobRestoreStatus(System.Nullable{Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus},System.String,System.String,Azure.ResourceManager.Storage.Models.BlobRestoreContent)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobRestoreStatus (Optional status As Nullable(Of BlobRestoreProgressStatus) = Nothing, Optional failureReason As String = Nothing, Optional restoreId As String = Nothing, Optional parameters As BlobRestoreContent = Nothing) As BlobRestoreStatus" />
      <MemberSignature Language="F#" Value="static member BlobRestoreStatus : Nullable&lt;Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus&gt; * string * string * Azure.ResourceManager.Storage.Models.BlobRestoreContent -&gt; Azure.ResourceManager.Storage.Models.BlobRestoreStatus" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobRestoreStatus (status, failureReason, restoreId, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.BlobRestoreStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus&gt;" />
        <Parameter Name="failureReason" Type="System.String" />
        <Parameter Name="restoreId" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Storage.Models.BlobRestoreContent" />
      </Parameters>
      <Docs>
        <param name="status"> The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed. </param>
        <param name="failureReason"> Failure reason when blob restore is failed. </param>
        <param name="restoreId"> Id for tracking blob restore request. </param>
        <param name="parameters"> Blob restore request parameters. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobServiceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.BlobServiceData BlobServiceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Storage.Models.StorageSku sku = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules = default, string defaultServiceVersion = default, Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy deleteRetentionPolicy = default, bool? isVersioningEnabled = default, bool? isAutomaticSnapshotPolicyEnabled = default, Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed changeFeed = default, Azure.ResourceManager.Storage.Models.RestorePolicy restorePolicy = default, Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy containerDeleteRetentionPolicy = default, Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy lastAccessTimeTrackingPolicy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.BlobServiceData BlobServiceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Storage.Models.StorageSku sku, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules, string defaultServiceVersion, class Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy deleteRetentionPolicy, valuetype System.Nullable`1&lt;bool&gt; isVersioningEnabled, valuetype System.Nullable`1&lt;bool&gt; isAutomaticSnapshotPolicyEnabled, class Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed changeFeed, class Azure.ResourceManager.Storage.Models.RestorePolicy restorePolicy, class Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy containerDeleteRetentionPolicy, class Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy lastAccessTimeTrackingPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageSku,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule},System.String,Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed,Azure.ResourceManager.Storage.Models.RestorePolicy,Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobServiceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional sku As StorageSku = Nothing, Optional corsRules As IEnumerable(Of StorageCorsRule) = Nothing, Optional defaultServiceVersion As String = Nothing, Optional deleteRetentionPolicy As DeleteRetentionPolicy = Nothing, Optional isVersioningEnabled As Nullable(Of Boolean) = Nothing, Optional isAutomaticSnapshotPolicyEnabled As Nullable(Of Boolean) = Nothing, Optional changeFeed As BlobServiceChangeFeed = Nothing, Optional restorePolicy As RestorePolicy = Nothing, Optional containerDeleteRetentionPolicy As DeleteRetentionPolicy = Nothing, Optional lastAccessTimeTrackingPolicy As LastAccessTimeTrackingPolicy = Nothing) As BlobServiceData" />
      <MemberSignature Language="F#" Value="static member BlobServiceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Storage.Models.StorageSku * seq&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; * string * Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed * Azure.ResourceManager.Storage.Models.RestorePolicy * Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy * Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy -&gt; Azure.ResourceManager.Storage.BlobServiceData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobServiceData (id, name, resourceType, systemData, sku, corsRules, defaultServiceVersion, deleteRetentionPolicy, isVersioningEnabled, isAutomaticSnapshotPolicyEnabled, changeFeed, restorePolicy, containerDeleteRetentionPolicy, lastAccessTimeTrackingPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.BlobServiceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Storage.Models.StorageSku" />
        <Parameter Name="corsRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt;" />
        <Parameter Name="defaultServiceVersion" Type="System.String" />
        <Parameter Name="deleteRetentionPolicy" Type="Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy" />
        <Parameter Name="isVersioningEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAutomaticSnapshotPolicyEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="changeFeed" Type="Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed" />
        <Parameter Name="restorePolicy" Type="Azure.ResourceManager.Storage.Models.RestorePolicy" />
        <Parameter Name="containerDeleteRetentionPolicy" Type="Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy" />
        <Parameter Name="lastAccessTimeTrackingPolicy" Type="Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="sku"> Sku name and tier. </param>
        <param name="corsRules"> Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service. </param>
        <param name="defaultServiceVersion"> DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions. </param>
        <param name="deleteRetentionPolicy"> The blob service properties for blob soft delete. </param>
        <param name="isVersioningEnabled"> Versioning is enabled if set to true. </param>
        <param name="isAutomaticSnapshotPolicyEnabled"> Deprecated in favor of isVersioningEnabled property. </param>
        <param name="changeFeed"> The blob service properties for change feed events. </param>
        <param name="restorePolicy"> The blob service properties for blob restore policy. </param>
        <param name="containerDeleteRetentionPolicy"> The blob service properties for container soft delete. </param>
        <param name="lastAccessTimeTrackingPolicy"> The blob service property to configure last access time based tracking policy. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobServiceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.BlobServiceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeletedAccountData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.DeletedAccountData DeletedAccountData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier storageAccountResourceId = default, Azure.Core.AzureLocation? location = default, string restoreReference = default, DateTimeOffset? createdOn = default, DateTimeOffset? deletedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.DeletedAccountData DeletedAccountData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier storageAccountResourceId, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string restoreReference, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.DeletedAccountData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Nullable{Azure.Core.AzureLocation},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeletedAccountData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional storageAccountResourceId As ResourceIdentifier = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional restoreReference As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional deletedOn As Nullable(Of DateTimeOffset) = Nothing) As DeletedAccountData" />
      <MemberSignature Language="F#" Value="static member DeletedAccountData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.Core.AzureLocation&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.DeletedAccountData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.DeletedAccountData (id, name, resourceType, systemData, storageAccountResourceId, location, restoreReference, createdOn, deletedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.DeletedAccountData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="storageAccountResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="restoreReference" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="storageAccountResourceId"> Full resource id of the original storage account. </param>
        <param name="location"> Location of the deleted account. </param>
        <param name="restoreReference"> Can be used to attempt recovering this deleted account via PutStorageAccount API. </param>
        <param name="createdOn"> Creation time of the deleted account. </param>
        <param name="deletedOn"> Deletion time of the deleted account. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.DeletedAccountData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionScopeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.EncryptionScopeData EncryptionScopeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Storage.Models.EncryptionScopeSource? source = default, Azure.ResourceManager.Storage.Models.EncryptionScopeState? state = default, DateTimeOffset? createdOn = default, DateTimeOffset? lastModifiedOn = default, Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties keyVaultProperties = default, bool? requireInfrastructureEncryption = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.EncryptionScopeData EncryptionScopeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.EncryptionScopeSource&gt; source, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.EncryptionScopeState&gt; state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, class Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties keyVaultProperties, valuetype System.Nullable`1&lt;bool&gt; requireInfrastructureEncryption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.EncryptionScopeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopeSource},System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopeState},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptionScopeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional source As Nullable(Of EncryptionScopeSource) = Nothing, Optional state As Nullable(Of EncryptionScopeState) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional keyVaultProperties As EncryptionScopeKeyVaultProperties = Nothing, Optional requireInfrastructureEncryption As Nullable(Of Boolean) = Nothing) As EncryptionScopeData" />
      <MemberSignature Language="F#" Value="static member EncryptionScopeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Storage.Models.EncryptionScopeSource&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.EncryptionScopeState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.EncryptionScopeData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.EncryptionScopeData (id, name, resourceType, systemData, source, state, createdOn, lastModifiedOn, keyVaultProperties, requireInfrastructureEncryption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.EncryptionScopeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="source" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.EncryptionScopeSource&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.EncryptionScopeState&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="keyVaultProperties" Type="Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" />
        <Parameter Name="requireInfrastructureEncryption" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="source"> The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. </param>
        <param name="state"> The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled. </param>
        <param name="createdOn"> Gets the creation date and time of the encryption scope in UTC. </param>
        <param name="lastModifiedOn"> Gets the last modification date and time of the encryption scope in UTC. </param>
        <param name="keyVaultProperties"> The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. </param>
        <param name="requireInfrastructureEncryption"> A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionScopeKeyVaultProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties EncryptionScopeKeyVaultProperties (Uri keyUri = default, string currentVersionedKeyIdentifier = default, DateTimeOffset? lastKeyRotationTimestamp = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties EncryptionScopeKeyVaultProperties(class System.Uri keyUri, string currentVersionedKeyIdentifier, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastKeyRotationTimestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.EncryptionScopeKeyVaultProperties(System.Uri,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptionScopeKeyVaultProperties (Optional keyUri As Uri = Nothing, Optional currentVersionedKeyIdentifier As String = Nothing, Optional lastKeyRotationTimestamp As Nullable(Of DateTimeOffset) = Nothing) As EncryptionScopeKeyVaultProperties" />
      <MemberSignature Language="F#" Value="static member EncryptionScopeKeyVaultProperties : Uri * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.EncryptionScopeKeyVaultProperties (keyUri, currentVersionedKeyIdentifier, lastKeyRotationTimestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyUri" Type="System.Uri" />
        <Parameter Name="currentVersionedKeyIdentifier" Type="System.String" />
        <Parameter Name="lastKeyRotationTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="keyUri"> The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope. </param>
        <param name="currentVersionedKeyIdentifier"> The object identifier of the current versioned Key Vault Key in use. </param>
        <param name="lastKeyRotationTimestamp"> Timestamp of last rotation of the Key Vault Key. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileServiceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.FileServiceData FileServiceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Storage.Models.StorageSku sku = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules = default, Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy shareDeleteRetentionPolicy = default, Azure.ResourceManager.Storage.Models.SmbSetting protocolSmbSetting = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.FileServiceData FileServiceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Storage.Models.StorageSku sku, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules, class Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy shareDeleteRetentionPolicy, class Azure.ResourceManager.Storage.Models.SmbSetting protocolSmbSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.FileServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageSku,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule},Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,Azure.ResourceManager.Storage.Models.SmbSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FileServiceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional sku As StorageSku = Nothing, Optional corsRules As IEnumerable(Of StorageCorsRule) = Nothing, Optional shareDeleteRetentionPolicy As DeleteRetentionPolicy = Nothing, Optional protocolSmbSetting As SmbSetting = Nothing) As FileServiceData" />
      <MemberSignature Language="F#" Value="static member FileServiceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Storage.Models.StorageSku * seq&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; * Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy * Azure.ResourceManager.Storage.Models.SmbSetting -&gt; Azure.ResourceManager.Storage.FileServiceData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.FileServiceData (id, name, resourceType, systemData, sku, corsRules, shareDeleteRetentionPolicy, protocolSmbSetting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.FileServiceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Storage.Models.StorageSku" />
        <Parameter Name="corsRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt;" />
        <Parameter Name="shareDeleteRetentionPolicy" Type="Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy" />
        <Parameter Name="protocolSmbSetting" Type="Azure.ResourceManager.Storage.Models.SmbSetting" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="sku"> Sku name and tier. </param>
        <param name="corsRules"> Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service. </param>
        <param name="shareDeleteRetentionPolicy"> The file service properties for share soft delete. </param>
        <param name="protocolSmbSetting"> Protocol settings for file service. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileServiceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.FileServiceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileShareData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.FileShareData FileShareData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, DateTimeOffset? lastModifiedOn = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, int? shareQuota = default, Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol? enabledProtocol = default, Azure.ResourceManager.Storage.Models.RootSquashType? rootSquash = default, string version = default, bool? isDeleted = default, DateTimeOffset? deletedOn = default, int? remainingRetentionDays = default, Azure.ResourceManager.Storage.Models.FileShareAccessTier? accessTier = default, DateTimeOffset? accessTierChangeOn = default, string accessTierStatus = default, long? shareUsageBytes = default, Azure.ResourceManager.Storage.Models.StorageLeaseStatus? leaseStatus = default, Azure.ResourceManager.Storage.Models.StorageLeaseState? leaseState = default, Azure.ResourceManager.Storage.Models.StorageLeaseDurationType? leaseDuration = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSignedIdentifier&gt; signedIdentifiers = default, DateTimeOffset? snapshotOn = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.FileShareData FileShareData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;int32&gt; shareQuota, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol&gt; enabledProtocol, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.RootSquashType&gt; rootSquash, string version, valuetype System.Nullable`1&lt;bool&gt; isDeleted, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn, valuetype System.Nullable`1&lt;int32&gt; remainingRetentionDays, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.FileShareAccessTier&gt; accessTier, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; accessTierChangeOn, string accessTierStatus, valuetype System.Nullable`1&lt;int64&gt; shareUsageBytes, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageLeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageLeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageLeaseDurationType&gt; leaseDuration, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSignedIdentifier&gt; signedIdentifiers, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; snapshotOn, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.FileShareData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol},System.Nullable{Azure.ResourceManager.Storage.Models.RootSquashType},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.FileShareAccessTier},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseStatus},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseDurationType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSignedIdentifier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FileShareData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional shareQuota As Nullable(Of Integer) = Nothing, Optional enabledProtocol As Nullable(Of FileShareEnabledProtocol) = Nothing, Optional rootSquash As Nullable(Of RootSquashType) = Nothing, Optional version As String = Nothing, Optional isDeleted As Nullable(Of Boolean) = Nothing, Optional deletedOn As Nullable(Of DateTimeOffset) = Nothing, Optional remainingRetentionDays As Nullable(Of Integer) = Nothing, Optional accessTier As Nullable(Of FileShareAccessTier) = Nothing, Optional accessTierChangeOn As Nullable(Of DateTimeOffset) = Nothing, Optional accessTierStatus As String = Nothing, Optional shareUsageBytes As Nullable(Of Long) = Nothing, Optional leaseStatus As Nullable(Of StorageLeaseStatus) = Nothing, Optional leaseState As Nullable(Of StorageLeaseState) = Nothing, Optional leaseDuration As Nullable(Of StorageLeaseDurationType) = Nothing, Optional signedIdentifiers As IEnumerable(Of StorageSignedIdentifier) = Nothing, Optional snapshotOn As Nullable(Of DateTimeOffset) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As FileShareData" />
      <MemberSignature Language="F#" Value="static member FileShareData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;DateTimeOffset&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.RootSquashType&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.FileShareAccessTier&gt; * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseStatus&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseState&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseDurationType&gt; * seq&lt;Azure.ResourceManager.Storage.Models.StorageSignedIdentifier&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Storage.FileShareData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.FileShareData (id, name, resourceType, systemData, lastModifiedOn, metadata, shareQuota, enabledProtocol, rootSquash, version, isDeleted, deletedOn, remainingRetentionDays, accessTier, accessTierChangeOn, accessTierStatus, shareUsageBytes, leaseStatus, leaseState, leaseDuration, signedIdentifiers, snapshotOn, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.FileShareData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="shareQuota" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enabledProtocol" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol&gt;" />
        <Parameter Name="rootSquash" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.RootSquashType&gt;" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="isDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="remainingRetentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.FileShareAccessTier&gt;" />
        <Parameter Name="accessTierChangeOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="accessTierStatus" Type="System.String" />
        <Parameter Name="shareUsageBytes" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseStatus&gt;" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageLeaseDurationType&gt;" />
        <Parameter Name="signedIdentifiers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSignedIdentifier&gt;" />
        <Parameter Name="snapshotOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="lastModifiedOn"> Returns the date and time the share was last modified. </param>
        <param name="metadata"> A name-value pair to associate with the share as metadata. </param>
        <param name="shareQuota"> The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. </param>
        <param name="enabledProtocol"> The authentication protocol that is used for the file share. Can only be specified when creating a share. </param>
        <param name="rootSquash"> The property is for NFS share only. The default is NoRootSquash. </param>
        <param name="version"> The version of the share. </param>
        <param name="isDeleted"> Indicates whether the share was deleted. </param>
        <param name="deletedOn"> The deleted time if the share was deleted. </param>
        <param name="remainingRetentionDays"> Remaining retention days for share that was soft deleted. </param>
        <param name="accessTier"> Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. </param>
        <param name="accessTierChangeOn"> Indicates the last modification time for share access tier. </param>
        <param name="accessTierStatus"> Indicates if there is a pending transition for access tier. </param>
        <param name="shareUsageBytes"> The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files. </param>
        <param name="leaseStatus"> The lease status of the share. </param>
        <param name="leaseState"> Lease state of the share. </param>
        <param name="leaseDuration"> Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased. </param>
        <param name="signedIdentifiers"> List of stored access policies specified on the share. </param>
        <param name="snapshotOn"> Creation time of share snapshot returned in the response of list shares with expand param "snapshots". </param>
        <param name="etag"> Resource Etag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileShareData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.FileShareData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoReplicationStatistics">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.GeoReplicationStatistics GeoReplicationStatistics (Azure.ResourceManager.Storage.Models.GeoReplicationStatus? status, DateTimeOffset? lastSyncOn, bool? canFailover);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.GeoReplicationStatistics GeoReplicationStatistics(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.GeoReplicationStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastSyncOn, valuetype System.Nullable`1&lt;bool&gt; canFailover) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GeoReplicationStatistics(System.Nullable{Azure.ResourceManager.Storage.Models.GeoReplicationStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeoReplicationStatistics (status As Nullable(Of GeoReplicationStatus), lastSyncOn As Nullable(Of DateTimeOffset), canFailover As Nullable(Of Boolean)) As GeoReplicationStatistics" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member GeoReplicationStatistics : Nullable&lt;Azure.ResourceManager.Storage.Models.GeoReplicationStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GeoReplicationStatistics (status, lastSyncOn, canFailover)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.GeoReplicationStatistics GeoReplicationStatistics (Azure.ResourceManager.Storage.Models.GeoReplicationStatus? status = default, DateTimeOffset? lastSyncOn = default, bool? canFailover = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeoReplicationStatistics (Optional status As Nullable(Of GeoReplicationStatus) = Nothing, Optional lastSyncOn As Nullable(Of DateTimeOffset) = Nothing, Optional canFailover As Nullable(Of Boolean) = Nothing) As GeoReplicationStatistics" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.GeoReplicationStatistics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.GeoReplicationStatus&gt;" />
        <Parameter Name="lastSyncOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="canFailover" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable. </param>
        <param name="lastSyncOn"> All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap. </param>
        <param name="canFailover"> A boolean flag which indicates whether or not account failover is supported for the account. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoReplicationStatistics">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.GeoReplicationStatistics GeoReplicationStatistics (Azure.ResourceManager.Storage.Models.GeoReplicationStatus? status = default, DateTimeOffset? lastSyncOn = default, bool? canFailover = default, bool? canPlannedFailover = default, Azure.ResourceManager.Storage.Models.PostFailoverRedundancy? postFailoverRedundancy = default, Azure.ResourceManager.Storage.Models.PostPlannedFailoverRedundancy? postPlannedFailoverRedundancy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.GeoReplicationStatistics GeoReplicationStatistics(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.GeoReplicationStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastSyncOn, valuetype System.Nullable`1&lt;bool&gt; canFailover, valuetype System.Nullable`1&lt;bool&gt; canPlannedFailover, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.PostFailoverRedundancy&gt; postFailoverRedundancy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.PostPlannedFailoverRedundancy&gt; postPlannedFailoverRedundancy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GeoReplicationStatistics(System.Nullable{Azure.ResourceManager.Storage.Models.GeoReplicationStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.PostFailoverRedundancy},System.Nullable{Azure.ResourceManager.Storage.Models.PostPlannedFailoverRedundancy})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeoReplicationStatistics (Optional status As Nullable(Of GeoReplicationStatus) = Nothing, Optional lastSyncOn As Nullable(Of DateTimeOffset) = Nothing, Optional canFailover As Nullable(Of Boolean) = Nothing, Optional canPlannedFailover As Nullable(Of Boolean) = Nothing, Optional postFailoverRedundancy As Nullable(Of PostFailoverRedundancy) = Nothing, Optional postPlannedFailoverRedundancy As Nullable(Of PostPlannedFailoverRedundancy) = Nothing) As GeoReplicationStatistics" />
      <MemberSignature Language="F#" Value="static member GeoReplicationStatistics : Nullable&lt;Azure.ResourceManager.Storage.Models.GeoReplicationStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.PostFailoverRedundancy&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.PostPlannedFailoverRedundancy&gt; -&gt; Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GeoReplicationStatistics (status, lastSyncOn, canFailover, canPlannedFailover, postFailoverRedundancy, postPlannedFailoverRedundancy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.GeoReplicationStatistics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.GeoReplicationStatus&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="lastSyncOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="canFailover" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="canPlannedFailover" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="postFailoverRedundancy" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.PostFailoverRedundancy&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="postPlannedFailoverRedundancy" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.PostPlannedFailoverRedundancy&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable. </param>
        <param name="lastSyncOn"> All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap. </param>
        <param name="canFailover"> A boolean flag which indicates whether or not account failover is supported for the account. </param>
        <param name="canPlannedFailover"> A boolean flag which indicates whether or not planned account failover is supported for the account. </param>
        <param name="postFailoverRedundancy"> The redundancy type of the account after an account failover is performed. </param>
        <param name="postPlannedFailoverRedundancy"> The redundancy type of the account after a planned account failover is performed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountSasResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.GetAccountSasResult GetAccountSasResult (string accountSasToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.GetAccountSasResult GetAccountSasResult(string accountSasToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GetAccountSasResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAccountSasResult (Optional accountSasToken As String = Nothing) As GetAccountSasResult" />
      <MemberSignature Language="F#" Value="static member GetAccountSasResult : string -&gt; Azure.ResourceManager.Storage.Models.GetAccountSasResult" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GetAccountSasResult accountSasToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.GetAccountSasResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accountSasToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="accountSasToken"> List SAS credentials of storage account. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetAccountSasResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.GetAccountSasResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceSasResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.GetServiceSasResult GetServiceSasResult (string serviceSasToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.GetServiceSasResult GetServiceSasResult(string serviceSasToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GetServiceSasResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServiceSasResult (Optional serviceSasToken As String = Nothing) As GetServiceSasResult" />
      <MemberSignature Language="F#" Value="static member GetServiceSasResult : string -&gt; Azure.ResourceManager.Storage.Models.GetServiceSasResult" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GetServiceSasResult serviceSasToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.GetServiceSasResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceSasToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceSasToken"> List service SAS credentials of specific resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetServiceSasResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.GetServiceSasResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImmutabilityPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.ImmutabilityPolicyData ImmutabilityPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, int? immutabilityPeriodSinceCreationInDays = default, Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState? state = default, bool? allowProtectedAppendWrites = default, bool? allowProtectedAppendWritesAll = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.ImmutabilityPolicyData ImmutabilityPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;int32&gt; immutabilityPeriodSinceCreationInDays, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState&gt; state, valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWrites, valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWritesAll, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ImmutabilityPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImmutabilityPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional immutabilityPeriodSinceCreationInDays As Nullable(Of Integer) = Nothing, Optional state As Nullable(Of ImmutabilityPolicyState) = Nothing, Optional allowProtectedAppendWrites As Nullable(Of Boolean) = Nothing, Optional allowProtectedAppendWritesAll As Nullable(Of Boolean) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As ImmutabilityPolicyData" />
      <MemberSignature Language="F#" Value="static member ImmutabilityPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Storage.ImmutabilityPolicyData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ImmutabilityPolicyData (id, name, resourceType, systemData, immutabilityPeriodSinceCreationInDays, state, allowProtectedAppendWrites, allowProtectedAppendWritesAll, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.ImmutabilityPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="immutabilityPeriodSinceCreationInDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState&gt;" />
        <Parameter Name="allowProtectedAppendWrites" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="allowProtectedAppendWritesAll" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
        <param name="state"> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </param>
        <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
        <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
        <param name="etag"> Resource Etag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImmutableStorageWithVersioning">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning ImmutableStorageWithVersioning (bool? isEnabled = default, DateTimeOffset? timeStamp = default, Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState? migrationState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning ImmutableStorageWithVersioning(valuetype System.Nullable`1&lt;bool&gt; isEnabled, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timeStamp, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState&gt; migrationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ImmutableStorageWithVersioning(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImmutableStorageWithVersioning (Optional isEnabled As Nullable(Of Boolean) = Nothing, Optional timeStamp As Nullable(Of DateTimeOffset) = Nothing, Optional migrationState As Nullable(Of ImmutableStorageWithVersioningMigrationState) = Nothing) As ImmutableStorageWithVersioning" />
      <MemberSignature Language="F#" Value="static member ImmutableStorageWithVersioning : Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState&gt; -&gt; Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ImmutableStorageWithVersioning (isEnabled, timeStamp, migrationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="timeStamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="migrationState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState&gt;" />
      </Parameters>
      <Docs>
        <param name="isEnabled"> This is an immutable property, when set to true it enables object level immutability at the container level. </param>
        <param name="timeStamp"> Returns the date and time the object level immutability was enabled. </param>
        <param name="migrationState"> This property denotes the container level immutability to object level immutability migration state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseContainerContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LeaseContainerContent LeaseContainerContent (Azure.ResourceManager.Storage.Models.LeaseContainerAction action = default, string leaseId = default, int? breakPeriod = default, int? leaseDuration = default, string proposedLeaseId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LeaseContainerContent LeaseContainerContent(valuetype Azure.ResourceManager.Storage.Models.LeaseContainerAction action, string leaseId, valuetype System.Nullable`1&lt;int32&gt; breakPeriod, valuetype System.Nullable`1&lt;int32&gt; leaseDuration, string proposedLeaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseContainerContent(Azure.ResourceManager.Storage.Models.LeaseContainerAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeaseContainerContent (Optional action As LeaseContainerAction = Nothing, Optional leaseId As String = Nothing, Optional breakPeriod As Nullable(Of Integer) = Nothing, Optional leaseDuration As Nullable(Of Integer) = Nothing, Optional proposedLeaseId As String = Nothing) As LeaseContainerContent" />
      <MemberSignature Language="F#" Value="static member LeaseContainerContent : Azure.ResourceManager.Storage.Models.LeaseContainerAction * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string -&gt; Azure.ResourceManager.Storage.Models.LeaseContainerContent" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseContainerContent (action, leaseId, breakPeriod, leaseDuration, proposedLeaseId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LeaseContainerContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Azure.ResourceManager.Storage.Models.LeaseContainerAction" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="leaseId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="breakPeriod" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;System.Int32&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="proposedLeaseId" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
        <param name="leaseId"> Identifies the lease. Can be specified in any valid GUID string format. </param>
        <param name="breakPeriod"> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </param>
        <param name="leaseDuration"> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </param>
        <param name="proposedLeaseId"> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseContainerResponse">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LeaseContainerResponse LeaseContainerResponse (string leaseId = default, string leaseTimeSeconds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LeaseContainerResponse LeaseContainerResponse(string leaseId, string leaseTimeSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseContainerResponse(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeaseContainerResponse (Optional leaseId As String = Nothing, Optional leaseTimeSeconds As String = Nothing) As LeaseContainerResponse" />
      <MemberSignature Language="F#" Value="static member LeaseContainerResponse : string * string -&gt; Azure.ResourceManager.Storage.Models.LeaseContainerResponse" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseContainerResponse (leaseId, leaseTimeSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LeaseContainerResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaseId" Type="System.String" />
        <Parameter Name="leaseTimeSeconds" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="leaseId"> Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease. </param>
        <param name="leaseTimeSeconds"> Approximate time remaining in the lease period, in seconds. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerResponse" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseShareContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LeaseShareContent LeaseShareContent (Azure.ResourceManager.Storage.Models.LeaseShareAction action = default, string leaseId = default, int? breakPeriod = default, int? leaseDuration = default, string proposedLeaseId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LeaseShareContent LeaseShareContent(valuetype Azure.ResourceManager.Storage.Models.LeaseShareAction action, string leaseId, valuetype System.Nullable`1&lt;int32&gt; breakPeriod, valuetype System.Nullable`1&lt;int32&gt; leaseDuration, string proposedLeaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseShareContent(Azure.ResourceManager.Storage.Models.LeaseShareAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeaseShareContent (Optional action As LeaseShareAction = Nothing, Optional leaseId As String = Nothing, Optional breakPeriod As Nullable(Of Integer) = Nothing, Optional leaseDuration As Nullable(Of Integer) = Nothing, Optional proposedLeaseId As String = Nothing) As LeaseShareContent" />
      <MemberSignature Language="F#" Value="static member LeaseShareContent : Azure.ResourceManager.Storage.Models.LeaseShareAction * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string -&gt; Azure.ResourceManager.Storage.Models.LeaseShareContent" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseShareContent (action, leaseId, breakPeriod, leaseDuration, proposedLeaseId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LeaseShareContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Azure.ResourceManager.Storage.Models.LeaseShareAction" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="leaseId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="breakPeriod" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;System.Int32&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="proposedLeaseId" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
        <param name="leaseId"> Identifies the lease. Can be specified in any valid GUID string format. </param>
        <param name="breakPeriod"> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </param>
        <param name="leaseDuration"> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </param>
        <param name="proposedLeaseId"> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseShareResponse">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LeaseShareResponse LeaseShareResponse (string leaseId = default, string leaseTimeSeconds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LeaseShareResponse LeaseShareResponse(string leaseId, string leaseTimeSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseShareResponse(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeaseShareResponse (Optional leaseId As String = Nothing, Optional leaseTimeSeconds As String = Nothing) As LeaseShareResponse" />
      <MemberSignature Language="F#" Value="static member LeaseShareResponse : string * string -&gt; Azure.ResourceManager.Storage.Models.LeaseShareResponse" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseShareResponse (leaseId, leaseTimeSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LeaseShareResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaseId" Type="System.String" />
        <Parameter Name="leaseTimeSeconds" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="leaseId"> Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease. </param>
        <param name="leaseTimeSeconds"> Approximate time remaining in the lease period, in seconds. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareResponse" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalHold">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LegalHold LegalHold (bool? hasLegalHold = default, System.Collections.Generic.IEnumerable&lt;string&gt; tags = default, bool? allowProtectedAppendWritesAll = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LegalHold LegalHold(valuetype System.Nullable`1&lt;bool&gt; hasLegalHold, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWritesAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHold(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LegalHold (Optional hasLegalHold As Nullable(Of Boolean) = Nothing, Optional tags As IEnumerable(Of String) = Nothing, Optional allowProtectedAppendWritesAll As Nullable(Of Boolean) = Nothing) As LegalHold" />
      <MemberSignature Language="F#" Value="static member LegalHold : Nullable&lt;bool&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.Models.LegalHold" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHold (hasLegalHold, tags, allowProtectedAppendWritesAll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LegalHold</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasLegalHold" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="allowProtectedAppendWritesAll" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
        <param name="tags"> Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP. </param>
        <param name="allowProtectedAppendWritesAll"> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHold" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LegalHold" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalHoldProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LegalHoldProperties LegalHoldProperties (bool? hasLegalHold = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.LegalHoldTag&gt; tags = default, Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory protectedAppendWritesHistory = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LegalHoldProperties LegalHoldProperties(valuetype System.Nullable`1&lt;bool&gt; hasLegalHold, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.LegalHoldTag&gt; tags, class Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory protectedAppendWritesHistory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHoldProperties(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.LegalHoldTag},Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LegalHoldProperties (Optional hasLegalHold As Nullable(Of Boolean) = Nothing, Optional tags As IEnumerable(Of LegalHoldTag) = Nothing, Optional protectedAppendWritesHistory As ProtectedAppendWritesHistory = Nothing) As LegalHoldProperties" />
      <MemberSignature Language="F#" Value="static member LegalHoldProperties : Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.Storage.Models.LegalHoldTag&gt; * Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory -&gt; Azure.ResourceManager.Storage.Models.LegalHoldProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHoldProperties (hasLegalHold, tags, protectedAppendWritesHistory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LegalHoldProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasLegalHold" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.LegalHoldTag&gt;" />
        <Parameter Name="protectedAppendWritesHistory" Type="Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" />
      </Parameters>
      <Docs>
        <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
        <param name="tags"> The list of LegalHold tags of a blob container. </param>
        <param name="protectedAppendWritesHistory"> Protected append blob writes history. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalHoldTag">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LegalHoldTag LegalHoldTag (string tag = default, DateTimeOffset? timestamp = default, string objectIdentifier = default, Guid? tenantId = default, string upn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LegalHoldTag LegalHoldTag(string tag, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp, string objectIdentifier, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, string upn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHoldTag(System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Guid},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LegalHoldTag (Optional tag As String = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing, Optional objectIdentifier As String = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional upn As String = Nothing) As LegalHoldTag" />
      <MemberSignature Language="F#" Value="static member LegalHoldTag : string * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;Guid&gt; * string -&gt; Azure.ResourceManager.Storage.Models.LegalHoldTag" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHoldTag (tag, timestamp, objectIdentifier, tenantId, upn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LegalHoldTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="objectIdentifier" Type="System.String" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="upn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"> The tag value. </param>
        <param name="timestamp"> Returns the date and time the tag was added. </param>
        <param name="objectIdentifier"> Returns the Object ID of the user who added the tag. </param>
        <param name="tenantId"> Returns the Tenant ID that issued the token for the user who added the tag. </param>
        <param name="upn"> Returns the User Principal Name of the user who added the tag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldTag" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldTag" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalUserKeys">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LocalUserKeys LocalUserKeys (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; sshAuthorizedKeys = default, string sharedKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LocalUserKeys LocalUserKeys(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; sshAuthorizedKeys, string sharedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LocalUserKeys(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSshPublicKey},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LocalUserKeys (Optional sshAuthorizedKeys As IEnumerable(Of StorageSshPublicKey) = Nothing, Optional sharedKey As String = Nothing) As LocalUserKeys" />
      <MemberSignature Language="F#" Value="static member LocalUserKeys : seq&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; * string -&gt; Azure.ResourceManager.Storage.Models.LocalUserKeys" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LocalUserKeys (sshAuthorizedKeys, sharedKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LocalUserKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sshAuthorizedKeys" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt;" />
        <Parameter Name="sharedKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sshAuthorizedKeys"> Optional, local user ssh authorized keys for SFTP. </param>
        <param name="sharedKey"> Auto generated by the server for SMB authentication. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserKeys" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserKeys" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalUserRegeneratePasswordResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult LocalUserRegeneratePasswordResult (string sshPassword = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult LocalUserRegeneratePasswordResult(string sshPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LocalUserRegeneratePasswordResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LocalUserRegeneratePasswordResult (Optional sshPassword As String = Nothing) As LocalUserRegeneratePasswordResult" />
      <MemberSignature Language="F#" Value="static member LocalUserRegeneratePasswordResult : string -&gt; Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LocalUserRegeneratePasswordResult sshPassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sshPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sshPassword"> Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeter">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter NetworkSecurityPerimeter (string id = default, Guid? perimeterGuid = default, Azure.Core.AzureLocation? location = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter NetworkSecurityPerimeter(string id, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; perimeterGuid, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeter(System.String,System.Nullable{System.Guid},System.Nullable{Azure.Core.AzureLocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeter (Optional id As String = Nothing, Optional perimeterGuid As Nullable(Of Guid) = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing) As NetworkSecurityPerimeter" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeter : string * Nullable&lt;Guid&gt; * Nullable&lt;Azure.Core.AzureLocation&gt; -&gt; Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeter (id, perimeterGuid, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="perimeterGuid" Type="System.Nullable&lt;System.Guid&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The ARM identifier of the resource. </param>
        <param name="perimeterGuid"> Guid of the resource. </param>
        <param name="location"> Location of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeterConfigurationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationData NetworkSecurityPerimeterConfigurationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationProvisioningState? provisioningState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue&gt; provisioningIssues = default, Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter networkSecurityPerimeter = default, Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation resourceAssociation = default, Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile profile = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationData NetworkSecurityPerimeterConfigurationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationProvisioningState&gt; provisioningState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue&gt; provisioningIssues, class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter networkSecurityPerimeter, class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation resourceAssociation, class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterConfigurationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationProvisioningState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue},Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter,Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation,Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeterConfigurationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of NetworkSecurityPerimeterConfigurationProvisioningState) = Nothing, Optional provisioningIssues As IEnumerable(Of NetworkSecurityPerimeterProvisioningIssue) = Nothing, Optional networkSecurityPerimeter As NetworkSecurityPerimeter = Nothing, Optional resourceAssociation As NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation = Nothing, Optional profile As NetworkSecurityPerimeterConfigurationPropertiesProfile = Nothing) As NetworkSecurityPerimeterConfigurationData" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeterConfigurationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationProvisioningState&gt; * seq&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue&gt; * Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter * Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation * Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile -&gt; Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterConfigurationData (id, name, resourceType, systemData, provisioningState, provisioningIssues, networkSecurityPerimeter, resourceAssociation, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationProvisioningState&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="provisioningIssues" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="networkSecurityPerimeter" Type="Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceAssociation" Type="Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="profile" Type="Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile" Index="8" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> Provisioning state of Network Security Perimeter configuration propagation. </param>
        <param name="provisioningIssues"> List of Provisioning Issues if any. </param>
        <param name="networkSecurityPerimeter"> NetworkSecurityPerimeter related information. </param>
        <param name="resourceAssociation"> Information about resource association. </param>
        <param name="profile"> Network Security Perimeter profile. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeterConfigurationPropertiesProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile NetworkSecurityPerimeterConfigurationPropertiesProfile (string name = default, float? accessRulesVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.NspAccessRule&gt; accessRules = default, float? diagnosticSettingsVersion = default, System.Collections.Generic.IEnumerable&lt;string&gt; enabledLogCategories = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile NetworkSecurityPerimeterConfigurationPropertiesProfile(string name, valuetype System.Nullable`1&lt;float32&gt; accessRulesVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.NspAccessRule&gt; accessRules, valuetype System.Nullable`1&lt;float32&gt; diagnosticSettingsVersion, class System.Collections.Generic.IEnumerable`1&lt;string&gt; enabledLogCategories) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterConfigurationPropertiesProfile(System.String,System.Nullable{System.Single},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.NspAccessRule},System.Nullable{System.Single},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeterConfigurationPropertiesProfile (Optional name As String = Nothing, Optional accessRulesVersion As Nullable(Of Single) = Nothing, Optional accessRules As IEnumerable(Of NspAccessRule) = Nothing, Optional diagnosticSettingsVersion As Nullable(Of Single) = Nothing, Optional enabledLogCategories As IEnumerable(Of String) = Nothing) As NetworkSecurityPerimeterConfigurationPropertiesProfile" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeterConfigurationPropertiesProfile : string * Nullable&lt;single&gt; * seq&lt;Azure.ResourceManager.Storage.Models.NspAccessRule&gt; * Nullable&lt;single&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterConfigurationPropertiesProfile (name, accessRulesVersion, accessRules, diagnosticSettingsVersion, enabledLogCategories)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="accessRulesVersion" Type="System.Nullable&lt;System.Single&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="accessRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.NspAccessRule&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="diagnosticSettingsVersion" Type="System.Nullable&lt;System.Single&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="enabledLogCategories" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the resource. </param>
        <param name="accessRulesVersion"> Current access rules version. </param>
        <param name="accessRules"> List of Access Rules. </param>
        <param name="diagnosticSettingsVersion"> Diagnostic settings version. </param>
        <param name="enabledLogCategories"> Enabled logging categories. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation (string name = default, Azure.ResourceManager.Storage.Models.ResourceAssociationAccessMode? accessMode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation(string name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.ResourceAssociationAccessMode&gt; accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.ResourceAssociationAccessMode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation (Optional name As String = Nothing, Optional accessMode As Nullable(Of ResourceAssociationAccessMode) = Nothing) As NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation : string * Nullable&lt;Azure.ResourceManager.Storage.Models.ResourceAssociationAccessMode&gt; -&gt; Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation (name, accessMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="accessMode" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.ResourceAssociationAccessMode&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the resource association. </param>
        <param name="accessMode"> Access Mode of the resource association. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeterProvisioningIssue">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue NetworkSecurityPerimeterProvisioningIssue (string name = default, Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue NetworkSecurityPerimeterProvisioningIssue(string name, class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterProvisioningIssue(System.String,Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeterProvisioningIssue (Optional name As String = Nothing, Optional properties As NetworkSecurityPerimeterProvisioningIssueProperties = Nothing) As NetworkSecurityPerimeterProvisioningIssue" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeterProvisioningIssue : string * Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties -&gt; Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterProvisioningIssue (name, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the issue. </param>
        <param name="properties"> Properties of provisioning issue. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssue" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkSecurityPerimeterProvisioningIssueProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties NetworkSecurityPerimeterProvisioningIssueProperties (Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueType? issueType = default, Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueSeverity? severity = default, string description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties NetworkSecurityPerimeterProvisioningIssueProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueType&gt; issueType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueSeverity&gt; severity, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterProvisioningIssueProperties(System.Nullable{Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueType},System.Nullable{Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueSeverity},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkSecurityPerimeterProvisioningIssueProperties (Optional issueType As Nullable(Of NetworkSecurityPerimeterProvisioningIssueType) = Nothing, Optional severity As Nullable(Of NetworkSecurityPerimeterProvisioningIssueSeverity) = Nothing, Optional description As String = Nothing) As NetworkSecurityPerimeterProvisioningIssueProperties" />
      <MemberSignature Language="F#" Value="static member NetworkSecurityPerimeterProvisioningIssueProperties : Nullable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueType&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueSeverity&gt; * string -&gt; Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NetworkSecurityPerimeterProvisioningIssueProperties (issueType, severity, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issueType" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueType&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="severity" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueSeverity&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="description" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="issueType"> Type of issue. </param>
        <param name="severity"> Severity of the issue. </param>
        <param name="description"> Description of the issue. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeterProvisioningIssueProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NspAccessRule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.NspAccessRule NspAccessRule (string name = default, Azure.ResourceManager.Storage.Models.NspAccessRuleProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.NspAccessRule NspAccessRule(string name, class Azure.ResourceManager.Storage.Models.NspAccessRuleProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NspAccessRule(System.String,Azure.ResourceManager.Storage.Models.NspAccessRuleProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NspAccessRule (Optional name As String = Nothing, Optional properties As NspAccessRuleProperties = Nothing) As NspAccessRule" />
      <MemberSignature Language="F#" Value="static member NspAccessRule : string * Azure.ResourceManager.Storage.Models.NspAccessRuleProperties -&gt; Azure.ResourceManager.Storage.Models.NspAccessRule" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NspAccessRule (name, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.NspAccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Storage.Models.NspAccessRuleProperties" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the resource. </param>
        <param name="properties"> Properties of Access Rule. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.NspAccessRule" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.NspAccessRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NspAccessRuleProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.NspAccessRuleProperties NspAccessRuleProperties (Azure.ResourceManager.Storage.Models.NspAccessRuleDirection? direction = default, System.Collections.Generic.IEnumerable&lt;string&gt; addressPrefixes = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; subscriptions = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter&gt; networkSecurityPerimeters = default, System.Collections.Generic.IEnumerable&lt;string&gt; fullyQualifiedDomainNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.NspAccessRuleProperties NspAccessRuleProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.NspAccessRuleDirection&gt; direction, class System.Collections.Generic.IEnumerable`1&lt;string&gt; addressPrefixes, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; subscriptions, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter&gt; networkSecurityPerimeters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fullyQualifiedDomainNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NspAccessRuleProperties(System.Nullable{Azure.ResourceManager.Storage.Models.NspAccessRuleDirection},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Resources.Models.SubResource},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NspAccessRuleProperties (Optional direction As Nullable(Of NspAccessRuleDirection) = Nothing, Optional addressPrefixes As IEnumerable(Of String) = Nothing, Optional subscriptions As IEnumerable(Of SubResource) = Nothing, Optional networkSecurityPerimeters As IEnumerable(Of NetworkSecurityPerimeter) = Nothing, Optional fullyQualifiedDomainNames As IEnumerable(Of String) = Nothing) As NspAccessRuleProperties" />
      <MemberSignature Language="F#" Value="static member NspAccessRuleProperties : Nullable&lt;Azure.ResourceManager.Storage.Models.NspAccessRuleDirection&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; * seq&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.Storage.Models.NspAccessRuleProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.NspAccessRuleProperties (direction, addressPrefixes, subscriptions, networkSecurityPerimeters, fullyQualifiedDomainNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.NspAccessRuleProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.NspAccessRuleDirection&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="addressPrefixes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="subscriptions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="networkSecurityPerimeters" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.NetworkSecurityPerimeter&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="fullyQualifiedDomainNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="direction"> Direction of Access Rule. </param>
        <param name="addressPrefixes"> Address prefixes in the CIDR format for inbound rules. </param>
        <param name="subscriptions"> Subscriptions for inbound rules. </param>
        <param name="networkSecurityPerimeters"> NetworkSecurityPerimeters for inbound rules. </param>
        <param name="fullyQualifiedDomainNames"> FQDN for outbound rules. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.NspAccessRuleProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.NspAccessRuleProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectReplicationPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.ObjectReplicationPolicyData ObjectReplicationPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string policyId = default, DateTimeOffset? enabledOn = default, string sourceAccount = default, string destinationAccount = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule&gt; rules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.ObjectReplicationPolicyData ObjectReplicationPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string policyId, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; enabledOn, string sourceAccount, string destinationAccount, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule&gt; rules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ObjectReplicationPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjectReplicationPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional policyId As String = Nothing, Optional enabledOn As Nullable(Of DateTimeOffset) = Nothing, Optional sourceAccount As String = Nothing, Optional destinationAccount As String = Nothing, Optional rules As IEnumerable(Of ObjectReplicationPolicyRule) = Nothing) As ObjectReplicationPolicyData" />
      <MemberSignature Language="F#" Value="static member ObjectReplicationPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;DateTimeOffset&gt; * string * string * seq&lt;Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule&gt; -&gt; Azure.ResourceManager.Storage.ObjectReplicationPolicyData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ObjectReplicationPolicyData (id, name, resourceType, systemData, policyId, enabledOn, sourceAccount, destinationAccount, rules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.ObjectReplicationPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="policyId" Type="System.String" />
        <Parameter Name="enabledOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="sourceAccount" Type="System.String" />
        <Parameter Name="destinationAccount" Type="System.String" />
        <Parameter Name="rules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="policyId"> A unique id for object replication policy. </param>
        <param name="enabledOn"> Indicates when the policy is enabled on the source account. </param>
        <param name="sourceAccount"> Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false. </param>
        <param name="destinationAccount"> Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false. </param>
        <param name="rules"> The storage account object replication rules. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedAppendWritesHistory">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory ProtectedAppendWritesHistory (bool? allowProtectedAppendWritesAll = default, DateTimeOffset? timestamp = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory ProtectedAppendWritesHistory(valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWritesAll, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ProtectedAppendWritesHistory(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ProtectedAppendWritesHistory (Optional allowProtectedAppendWritesAll As Nullable(Of Boolean) = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing) As ProtectedAppendWritesHistory" />
      <MemberSignature Language="F#" Value="static member ProtectedAppendWritesHistory : Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ProtectedAppendWritesHistory (allowProtectedAppendWritesAll, timestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowProtectedAppendWritesAll" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="allowProtectedAppendWritesAll"> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </param>
        <param name="timestamp"> Returns the date and time the tag was added. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueServiceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.QueueServiceData QueueServiceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.QueueServiceData QueueServiceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.QueueServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueueServiceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional corsRules As IEnumerable(Of StorageCorsRule) = Nothing) As QueueServiceData" />
      <MemberSignature Language="F#" Value="static member QueueServiceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; -&gt; Azure.ResourceManager.Storage.QueueServiceData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.QueueServiceData (id, name, resourceType, systemData, corsRules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.QueueServiceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="corsRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="corsRules"> Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.QueueServiceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.QueueServiceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestorePolicy">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.RestorePolicy RestorePolicy (bool isEnabled = false, int? days = default, DateTimeOffset? lastEnabledOn = default, DateTimeOffset? minRestoreOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.RestorePolicy RestorePolicy(bool isEnabled, valuetype System.Nullable`1&lt;int32&gt; days, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastEnabledOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minRestoreOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.RestorePolicy(System.Boolean,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RestorePolicy (Optional isEnabled As Boolean = false, Optional days As Nullable(Of Integer) = Nothing, Optional lastEnabledOn As Nullable(Of DateTimeOffset) = Nothing, Optional minRestoreOn As Nullable(Of DateTimeOffset) = Nothing) As RestorePolicy" />
      <MemberSignature Language="F#" Value="static member RestorePolicy : bool * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.Models.RestorePolicy" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.RestorePolicy (isEnabled, days, lastEnabledOn, minRestoreOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.RestorePolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isEnabled" Type="System.Boolean" />
        <Parameter Name="days" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lastEnabledOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minRestoreOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="isEnabled"> Blob restore is enabled if set to true. </param>
        <param name="days"> how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days. </param>
        <param name="lastEnabledOn"> Deprecated in favor of minRestoreTime property. </param>
        <param name="minRestoreOn"> Returns the minimum date and time that the restore can be started. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.RestorePolicy" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.RestorePolicy" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceSasContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.ServiceSasContent ServiceSasContent (string canonicalizedResource = default, Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType? resource = default, Azure.ResourceManager.Storage.Models.StorageAccountSasPermission? permissions = default, string ipAddressOrRange = default, Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol? protocols = default, DateTimeOffset? sharedAccessStartOn = default, DateTimeOffset? sharedAccessExpiryOn = default, string identifier = default, string partitionKeyStart = default, string partitionKeyEnd = default, string rowKeyStart = default, string rowKeyEnd = default, string keyToSign = default, string cacheControl = default, string contentDisposition = default, string contentEncoding = default, string contentLanguage = default, string contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.ServiceSasContent ServiceSasContent(string canonicalizedResource, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType&gt; resource, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountSasPermission&gt; permissions, string ipAddressOrRange, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol&gt; protocols, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sharedAccessStartOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; sharedAccessExpiryOn, string identifier, string partitionKeyStart, string partitionKeyEnd, string rowKeyStart, string rowKeyEnd, string keyToSign, string cacheControl, string contentDisposition, string contentEncoding, string contentLanguage, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ServiceSasContent(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountSasPermission},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceSasContent (Optional canonicalizedResource As String = Nothing, Optional resource As Nullable(Of ServiceSasSignedResourceType) = Nothing, Optional permissions As Nullable(Of StorageAccountSasPermission) = Nothing, Optional ipAddressOrRange As String = Nothing, Optional protocols As Nullable(Of StorageAccountHttpProtocol) = Nothing, Optional sharedAccessStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional sharedAccessExpiryOn As Nullable(Of DateTimeOffset) = Nothing, Optional identifier As String = Nothing, Optional partitionKeyStart As String = Nothing, Optional partitionKeyEnd As String = Nothing, Optional rowKeyStart As String = Nothing, Optional rowKeyEnd As String = Nothing, Optional keyToSign As String = Nothing, Optional cacheControl As String = Nothing, Optional contentDisposition As String = Nothing, Optional contentEncoding As String = Nothing, Optional contentLanguage As String = Nothing, Optional contentType As String = Nothing) As ServiceSasContent" />
      <MemberSignature Language="F#" Value="static member ServiceSasContent : string * Nullable&lt;Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountSasPermission&gt; * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * string * string * string * string * string * string * string * string * string -&gt; Azure.ResourceManager.Storage.Models.ServiceSasContent" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ServiceSasContent (canonicalizedResource, resource, permissions, ipAddressOrRange, protocols, sharedAccessStartOn, sharedAccessExpiryOn, identifier, partitionKeyStart, partitionKeyEnd, rowKeyStart, rowKeyEnd, keyToSign, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.ServiceSasContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalizedResource" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resource" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="permissions" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountSasPermission&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ipAddressOrRange" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="protocols" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sharedAccessStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sharedAccessExpiryOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="identifier" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="partitionKeyStart" Type="System.String" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="partitionKeyEnd" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="rowKeyStart" Type="System.String" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="rowKeyEnd" Type="System.String" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="keyToSign" Type="System.String" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cacheControl" Type="System.String" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentDisposition" Type="System.String" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentEncoding" Type="System.String" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentLanguage" Type="System.String" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentType" Type="System.String" Index="17" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="canonicalizedResource"> The canonical path to the signed resource. </param>
        <param name="resource"> The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s). </param>
        <param name="permissions"> The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </param>
        <param name="ipAddressOrRange"> An IP address or a range of IP addresses from which to accept requests. </param>
        <param name="protocols"> The protocol permitted for a request made with the account SAS. </param>
        <param name="sharedAccessStartOn"> The time at which the SAS becomes valid. </param>
        <param name="sharedAccessExpiryOn"> The time at which the shared access signature becomes invalid. </param>
        <param name="identifier"> A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table. </param>
        <param name="partitionKeyStart"> The start of partition key. </param>
        <param name="partitionKeyEnd"> The end of partition key. </param>
        <param name="rowKeyStart"> The start of row key. </param>
        <param name="rowKeyEnd"> The end of row key. </param>
        <param name="keyToSign"> The key to sign the account SAS token with. </param>
        <param name="cacheControl"> The response header override for cache control. </param>
        <param name="contentDisposition"> The response header override for content disposition. </param>
        <param name="contentEncoding"> The response header override for content encoding. </param>
        <param name="contentLanguage"> The response header override for content language. </param>
        <param name="contentType"> The response header override for content type. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent StorageAccountCreateOrUpdateContent (Azure.ResourceManager.Storage.Models.StorageSku sku, Azure.ResourceManager.Storage.Models.StorageKind kind, Azure.Core.AzureLocation location, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.ResourceManager.Models.ManagedServiceIdentity identity, Azure.ResourceManager.Storage.Models.AllowedCopyScope? allowedCopyScope, Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess? publicNetworkAccess, Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy, int? keyExpirationPeriodInDays, Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain, Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption, Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet, Azure.ResourceManager.Storage.Models.StorageAccountAccessTier? accessTier, Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication, bool? enableHttpsTrafficOnly, bool? isSftpEnabled, bool? isLocalUserEnabled, bool? isHnsEnabled, Azure.ResourceManager.Storage.Models.LargeFileSharesState? largeFileSharesState, Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference, bool? allowBlobPublicAccess, Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion? minimumTlsVersion, bool? allowSharedKeyAccess, bool? isNfsV3Enabled, bool? allowCrossTenantReplication, bool? isDefaultToOAuthAuthentication, Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning, Azure.ResourceManager.Storage.Models.StorageDnsEndpointType? dnsEndpointType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent StorageAccountCreateOrUpdateContent(class Azure.ResourceManager.Storage.Models.StorageSku sku, valuetype Azure.ResourceManager.Storage.Models.StorageKind kind, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; allowedCopyScope, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy, valuetype System.Nullable`1&lt;int32&gt; keyExpirationPeriodInDays, class Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain, class Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption, class Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; accessTier, class Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication, valuetype System.Nullable`1&lt;bool&gt; enableHttpsTrafficOnly, valuetype System.Nullable`1&lt;bool&gt; isSftpEnabled, valuetype System.Nullable`1&lt;bool&gt; isLocalUserEnabled, valuetype System.Nullable`1&lt;bool&gt; isHnsEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; largeFileSharesState, class Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference, valuetype System.Nullable`1&lt;bool&gt; allowBlobPublicAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;bool&gt; allowSharedKeyAccess, valuetype System.Nullable`1&lt;bool&gt; isNfsV3Enabled, valuetype System.Nullable`1&lt;bool&gt; allowCrossTenantReplication, valuetype System.Nullable`1&lt;bool&gt; isDefaultToOAuthAuthentication, class Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; dnsEndpointType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountCreateOrUpdateContent(Azure.ResourceManager.Storage.Models.StorageSku,Azure.ResourceManager.Storage.Models.StorageKind,Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountCreateOrUpdateContent (sku As StorageSku, kind As StorageKind, location As AzureLocation, extendedLocation As ExtendedLocation, tags As IDictionary(Of String, String), identity As ManagedServiceIdentity, allowedCopyScope As Nullable(Of AllowedCopyScope), publicNetworkAccess As Nullable(Of StoragePublicNetworkAccess), sasPolicy As StorageAccountSasPolicy, keyExpirationPeriodInDays As Nullable(Of Integer), customDomain As StorageCustomDomain, encryption As StorageAccountEncryption, networkRuleSet As StorageAccountNetworkRuleSet, accessTier As Nullable(Of StorageAccountAccessTier), azureFilesIdentityBasedAuthentication As FilesIdentityBasedAuthentication, enableHttpsTrafficOnly As Nullable(Of Boolean), isSftpEnabled As Nullable(Of Boolean), isLocalUserEnabled As Nullable(Of Boolean), isHnsEnabled As Nullable(Of Boolean), largeFileSharesState As Nullable(Of LargeFileSharesState), routingPreference As StorageRoutingPreference, allowBlobPublicAccess As Nullable(Of Boolean), minimumTlsVersion As Nullable(Of StorageMinimumTlsVersion), allowSharedKeyAccess As Nullable(Of Boolean), isNfsV3Enabled As Nullable(Of Boolean), allowCrossTenantReplication As Nullable(Of Boolean), isDefaultToOAuthAuthentication As Nullable(Of Boolean), immutableStorageWithVersioning As ImmutableStorageAccount, dnsEndpointType As Nullable(Of StorageDnsEndpointType)) As StorageAccountCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member StorageAccountCreateOrUpdateContent : Azure.ResourceManager.Storage.Models.StorageSku * Azure.ResourceManager.Storage.Models.StorageKind * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; * Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy * Nullable&lt;int&gt; * Azure.ResourceManager.Storage.Models.StorageCustomDomain * Azure.ResourceManager.Storage.Models.StorageAccountEncryption * Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; * Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; * Azure.ResourceManager.Storage.Models.StorageRoutingPreference * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.ImmutableStorageAccount * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountCreateOrUpdateContent (sku, kind, location, extendedLocation, tags, identity, allowedCopyScope, publicNetworkAccess, sasPolicy, keyExpirationPeriodInDays, customDomain, encryption, networkRuleSet, accessTier, azureFilesIdentityBasedAuthentication, enableHttpsTrafficOnly, isSftpEnabled, isLocalUserEnabled, isHnsEnabled, largeFileSharesState, routingPreference, allowBlobPublicAccess, minimumTlsVersion, allowSharedKeyAccess, isNfsV3Enabled, allowCrossTenantReplication, isDefaultToOAuthAuthentication, immutableStorageWithVersioning, dnsEndpointType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sku" Type="Azure.ResourceManager.Storage.Models.StorageSku" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Storage.Models.StorageKind" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowedCopyScope" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sasPolicy" Type="Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="keyExpirationPeriodInDays" Type="System.Nullable&lt;System.Int32&gt;" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="customDomain" Type="Azure.ResourceManager.Storage.Models.StorageCustomDomain" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.Storage.Models.StorageAccountEncryption" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="networkRuleSet" Type="Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="azureFilesIdentityBasedAuthentication" Type="Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="enableHttpsTrafficOnly" Type="System.Nullable&lt;System.Boolean&gt;" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSftpEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isLocalUserEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="17" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isHnsEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="18" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="largeFileSharesState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt;" Index="19" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="routingPreference" Type="Azure.ResourceManager.Storage.Models.StorageRoutingPreference" Index="20" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowBlobPublicAccess" Type="System.Nullable&lt;System.Boolean&gt;" Index="21" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt;" Index="22" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowSharedKeyAccess" Type="System.Nullable&lt;System.Boolean&gt;" Index="23" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isNfsV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="24" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowCrossTenantReplication" Type="System.Nullable&lt;System.Boolean&gt;" Index="25" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isDefaultToOAuthAuthentication" Type="System.Nullable&lt;System.Boolean&gt;" Index="26" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="immutableStorageWithVersioning" Type="Azure.ResourceManager.Storage.Models.ImmutableStorageAccount" Index="27" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dnsEndpointType" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt;" Index="28" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="sku"> Required. Gets or sets the SKU name. </param>
        <param name="kind"> Required. Indicates the type of storage account. </param>
        <param name="location"> Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. </param>
        <param name="extendedLocation"> Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location. </param>
        <param name="tags"> Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
        <param name="publicNetworkAccess"> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
        <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
        <param name="keyExpirationPeriodInDays"> KeyPolicy assigned to the storage account. </param>
        <param name="customDomain"> User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. </param>
        <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
        <param name="networkRuleSet"> Network rule set. </param>
        <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
        <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
        <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01. </param>
        <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
        <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
        <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
        <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
        <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
        <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </param>
        <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
        <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
        <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
        <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </param>
        <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
        <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default. </param>
        <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent StorageAccountCreateOrUpdateContent (Azure.ResourceManager.Storage.Models.StorageSku sku = default, Azure.ResourceManager.Storage.Models.StorageKind kind = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Storage.Models.AllowedCopyScope? allowedCopyScope = default, Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy = default, int? keyExpirationPeriodInDays = default, Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain = default, Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption = default, Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet = default, Azure.ResourceManager.Storage.Models.StorageAccountAccessTier? accessTier = default, Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication = default, bool? enableHttpsTrafficOnly = default, bool? isSftpEnabled = default, bool? isLocalUserEnabled = default, bool? isExtendedGroupEnabled = default, bool? isHnsEnabled = default, Azure.ResourceManager.Storage.Models.LargeFileSharesState? largeFileSharesState = default, Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference = default, bool? allowBlobPublicAccess = default, Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion? minimumTlsVersion = default, bool? allowSharedKeyAccess = default, bool? isNfsV3Enabled = default, bool? allowCrossTenantReplication = default, bool? isDefaultToOAuthAuthentication = default, Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning = default, Azure.ResourceManager.Storage.Models.StorageDnsEndpointType? dnsEndpointType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent StorageAccountCreateOrUpdateContent(class Azure.ResourceManager.Storage.Models.StorageSku sku, valuetype Azure.ResourceManager.Storage.Models.StorageKind kind, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; allowedCopyScope, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy, valuetype System.Nullable`1&lt;int32&gt; keyExpirationPeriodInDays, class Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain, class Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption, class Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; accessTier, class Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication, valuetype System.Nullable`1&lt;bool&gt; enableHttpsTrafficOnly, valuetype System.Nullable`1&lt;bool&gt; isSftpEnabled, valuetype System.Nullable`1&lt;bool&gt; isLocalUserEnabled, valuetype System.Nullable`1&lt;bool&gt; isExtendedGroupEnabled, valuetype System.Nullable`1&lt;bool&gt; isHnsEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; largeFileSharesState, class Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference, valuetype System.Nullable`1&lt;bool&gt; allowBlobPublicAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;bool&gt; allowSharedKeyAccess, valuetype System.Nullable`1&lt;bool&gt; isNfsV3Enabled, valuetype System.Nullable`1&lt;bool&gt; allowCrossTenantReplication, valuetype System.Nullable`1&lt;bool&gt; isDefaultToOAuthAuthentication, class Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; dnsEndpointType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountCreateOrUpdateContent(Azure.ResourceManager.Storage.Models.StorageSku,Azure.ResourceManager.Storage.Models.StorageKind,Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountCreateOrUpdateContent (Optional sku As StorageSku = Nothing, Optional kind As StorageKind = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional allowedCopyScope As Nullable(Of AllowedCopyScope) = Nothing, Optional publicNetworkAccess As Nullable(Of StoragePublicNetworkAccess) = Nothing, Optional sasPolicy As StorageAccountSasPolicy = Nothing, Optional keyExpirationPeriodInDays As Nullable(Of Integer) = Nothing, Optional customDomain As StorageCustomDomain = Nothing, Optional encryption As StorageAccountEncryption = Nothing, Optional networkRuleSet As StorageAccountNetworkRuleSet = Nothing, Optional accessTier As Nullable(Of StorageAccountAccessTier) = Nothing, Optional azureFilesIdentityBasedAuthentication As FilesIdentityBasedAuthentication = Nothing, Optional enableHttpsTrafficOnly As Nullable(Of Boolean) = Nothing, Optional isSftpEnabled As Nullable(Of Boolean) = Nothing, Optional isLocalUserEnabled As Nullable(Of Boolean) = Nothing, Optional isExtendedGroupEnabled As Nullable(Of Boolean) = Nothing, Optional isHnsEnabled As Nullable(Of Boolean) = Nothing, Optional largeFileSharesState As Nullable(Of LargeFileSharesState) = Nothing, Optional routingPreference As StorageRoutingPreference = Nothing, Optional allowBlobPublicAccess As Nullable(Of Boolean) = Nothing, Optional minimumTlsVersion As Nullable(Of StorageMinimumTlsVersion) = Nothing, Optional allowSharedKeyAccess As Nullable(Of Boolean) = Nothing, Optional isNfsV3Enabled As Nullable(Of Boolean) = Nothing, Optional allowCrossTenantReplication As Nullable(Of Boolean) = Nothing, Optional isDefaultToOAuthAuthentication As Nullable(Of Boolean) = Nothing, Optional immutableStorageWithVersioning As ImmutableStorageAccount = Nothing, Optional dnsEndpointType As Nullable(Of StorageDnsEndpointType) = Nothing) As StorageAccountCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member StorageAccountCreateOrUpdateContent : Azure.ResourceManager.Storage.Models.StorageSku * Azure.ResourceManager.Storage.Models.StorageKind * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; * Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy * Nullable&lt;int&gt; * Azure.ResourceManager.Storage.Models.StorageCustomDomain * Azure.ResourceManager.Storage.Models.StorageAccountEncryption * Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; * Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; * Azure.ResourceManager.Storage.Models.StorageRoutingPreference * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.ImmutableStorageAccount * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountCreateOrUpdateContent (sku, kind, location, extendedLocation, tags, identity, allowedCopyScope, publicNetworkAccess, sasPolicy, keyExpirationPeriodInDays, customDomain, encryption, networkRuleSet, accessTier, azureFilesIdentityBasedAuthentication, enableHttpsTrafficOnly, isSftpEnabled, isLocalUserEnabled, isExtendedGroupEnabled, isHnsEnabled, largeFileSharesState, routingPreference, allowBlobPublicAccess, minimumTlsVersion, allowSharedKeyAccess, isNfsV3Enabled, allowCrossTenantReplication, isDefaultToOAuthAuthentication, immutableStorageWithVersioning, dnsEndpointType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sku" Type="Azure.ResourceManager.Storage.Models.StorageSku" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="kind" Type="Azure.ResourceManager.Storage.Models.StorageKind" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowedCopyScope" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sasPolicy" Type="Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="keyExpirationPeriodInDays" Type="System.Nullable&lt;System.Int32&gt;" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="customDomain" Type="Azure.ResourceManager.Storage.Models.StorageCustomDomain" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.Storage.Models.StorageAccountEncryption" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="networkRuleSet" Type="Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="azureFilesIdentityBasedAuthentication" Type="Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="enableHttpsTrafficOnly" Type="System.Nullable&lt;System.Boolean&gt;" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSftpEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isLocalUserEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="17" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isExtendedGroupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="18" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isHnsEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="19" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="largeFileSharesState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt;" Index="20" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="routingPreference" Type="Azure.ResourceManager.Storage.Models.StorageRoutingPreference" Index="21" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowBlobPublicAccess" Type="System.Nullable&lt;System.Boolean&gt;" Index="22" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt;" Index="23" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowSharedKeyAccess" Type="System.Nullable&lt;System.Boolean&gt;" Index="24" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isNfsV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="25" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowCrossTenantReplication" Type="System.Nullable&lt;System.Boolean&gt;" Index="26" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isDefaultToOAuthAuthentication" Type="System.Nullable&lt;System.Boolean&gt;" Index="27" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="immutableStorageWithVersioning" Type="Azure.ResourceManager.Storage.Models.ImmutableStorageAccount" Index="28" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dnsEndpointType" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt;" Index="29" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="sku"> Required. Gets or sets the SKU name. </param>
        <param name="kind"> Required. Indicates the type of storage account. </param>
        <param name="location"> Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. </param>
        <param name="extendedLocation"> Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location. </param>
        <param name="tags"> Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
        <param name="publicNetworkAccess"> Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'. </param>
        <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
        <param name="keyExpirationPeriodInDays"> KeyPolicy assigned to the storage account. </param>
        <param name="customDomain"> User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. </param>
        <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
        <param name="networkRuleSet"> Network rule set. </param>
        <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
        <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
        <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01. </param>
        <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
        <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
        <param name="isExtendedGroupEnabled"> Enables extended group support with local users feature, if set to true. </param>
        <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
        <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
        <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
        <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. </param>
        <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
        <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
        <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
        <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. </param>
        <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
        <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default. </param>
        <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountData StorageAccountData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.Core.AzureLocation location, Azure.ResourceManager.Storage.Models.StorageSku sku, Azure.ResourceManager.Storage.Models.StorageKind? kind, Azure.ResourceManager.Models.ManagedServiceIdentity identity, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, Azure.ResourceManager.Storage.Models.StorageProvisioningState? provisioningState, Azure.ResourceManager.Storage.Models.StorageAccountEndpoints primaryEndpoints, Azure.Core.AzureLocation? primaryLocation, Azure.ResourceManager.Storage.Models.StorageAccountStatus? statusOfPrimary, DateTimeOffset? lastGeoFailoverOn, Azure.Core.AzureLocation? secondaryLocation, Azure.ResourceManager.Storage.Models.StorageAccountStatus? statusOfSecondary, DateTimeOffset? createdOn, Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain, Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy, int? keyExpirationPeriodInDays, Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime keyCreationTime, Azure.ResourceManager.Storage.Models.StorageAccountEndpoints secondaryEndpoints, Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption, Azure.ResourceManager.Storage.Models.StorageAccountAccessTier? accessTier, Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication, bool? enableHttpsTrafficOnly, Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet, bool? isSftpEnabled, bool? isLocalUserEnabled, bool? isHnsEnabled, Azure.ResourceManager.Storage.Models.GeoReplicationStatistics geoReplicationStats, bool? isFailoverInProgress, Azure.ResourceManager.Storage.Models.LargeFileSharesState? largeFileSharesState, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt; privateEndpointConnections, Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference, Azure.ResourceManager.Storage.Models.BlobRestoreStatus blobRestoreStatus, bool? allowBlobPublicAccess, Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion? minimumTlsVersion, bool? allowSharedKeyAccess, bool? isNfsV3Enabled, bool? allowCrossTenantReplication, bool? isDefaultToOAuthAuthentication, Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess? publicNetworkAccess, Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning, Azure.ResourceManager.Storage.Models.AllowedCopyScope? allowedCopyScope, Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus storageAccountSkuConversionStatus, Azure.ResourceManager.Storage.Models.StorageDnsEndpointType? dnsEndpointType);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageAccountData StorageAccountData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Storage.Models.StorageSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageKind&gt; kind, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; provisioningState, class Azure.ResourceManager.Storage.Models.StorageAccountEndpoints primaryEndpoints, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; primaryLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; statusOfPrimary, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastGeoFailoverOn, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; secondaryLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; statusOfSecondary, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, class Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain, class Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy, valuetype System.Nullable`1&lt;int32&gt; keyExpirationPeriodInDays, class Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime keyCreationTime, class Azure.ResourceManager.Storage.Models.StorageAccountEndpoints secondaryEndpoints, class Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; accessTier, class Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication, valuetype System.Nullable`1&lt;bool&gt; enableHttpsTrafficOnly, class Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet, valuetype System.Nullable`1&lt;bool&gt; isSftpEnabled, valuetype System.Nullable`1&lt;bool&gt; isLocalUserEnabled, valuetype System.Nullable`1&lt;bool&gt; isHnsEnabled, class Azure.ResourceManager.Storage.Models.GeoReplicationStatistics geoReplicationStats, valuetype System.Nullable`1&lt;bool&gt; isFailoverInProgress, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; largeFileSharesState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt; privateEndpointConnections, class Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference, class Azure.ResourceManager.Storage.Models.BlobRestoreStatus blobRestoreStatus, valuetype System.Nullable`1&lt;bool&gt; allowBlobPublicAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;bool&gt; allowSharedKeyAccess, valuetype System.Nullable`1&lt;bool&gt; isNfsV3Enabled, valuetype System.Nullable`1&lt;bool&gt; allowCrossTenantReplication, valuetype System.Nullable`1&lt;bool&gt; isDefaultToOAuthAuthentication, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; allowedCopyScope, class Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus storageAccountSkuConversionStatus, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; dnsEndpointType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Storage.Models.StorageSku,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ResourceManager.Storage.Models.StorageProvisioningState},Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime,Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.GeoReplicationStatistics,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,Azure.ResourceManager.Storage.Models.BlobRestoreStatus,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), location As AzureLocation, sku As StorageSku, kind As Nullable(Of StorageKind), identity As ManagedServiceIdentity, extendedLocation As ExtendedLocation, provisioningState As Nullable(Of StorageProvisioningState), primaryEndpoints As StorageAccountEndpoints, primaryLocation As Nullable(Of AzureLocation), statusOfPrimary As Nullable(Of StorageAccountStatus), lastGeoFailoverOn As Nullable(Of DateTimeOffset), secondaryLocation As Nullable(Of AzureLocation), statusOfSecondary As Nullable(Of StorageAccountStatus), createdOn As Nullable(Of DateTimeOffset), customDomain As StorageCustomDomain, sasPolicy As StorageAccountSasPolicy, keyExpirationPeriodInDays As Nullable(Of Integer), keyCreationTime As StorageAccountKeyCreationTime, secondaryEndpoints As StorageAccountEndpoints, encryption As StorageAccountEncryption, accessTier As Nullable(Of StorageAccountAccessTier), azureFilesIdentityBasedAuthentication As FilesIdentityBasedAuthentication, enableHttpsTrafficOnly As Nullable(Of Boolean), networkRuleSet As StorageAccountNetworkRuleSet, isSftpEnabled As Nullable(Of Boolean), isLocalUserEnabled As Nullable(Of Boolean), isHnsEnabled As Nullable(Of Boolean), geoReplicationStats As GeoReplicationStatistics, isFailoverInProgress As Nullable(Of Boolean), largeFileSharesState As Nullable(Of LargeFileSharesState), privateEndpointConnections As IEnumerable(Of StoragePrivateEndpointConnectionData), routingPreference As StorageRoutingPreference, blobRestoreStatus As BlobRestoreStatus, allowBlobPublicAccess As Nullable(Of Boolean), minimumTlsVersion As Nullable(Of StorageMinimumTlsVersion), allowSharedKeyAccess As Nullable(Of Boolean), isNfsV3Enabled As Nullable(Of Boolean), allowCrossTenantReplication As Nullable(Of Boolean), isDefaultToOAuthAuthentication As Nullable(Of Boolean), publicNetworkAccess As Nullable(Of StoragePublicNetworkAccess), immutableStorageWithVersioning As ImmutableStorageAccount, allowedCopyScope As Nullable(Of AllowedCopyScope), storageAccountSkuConversionStatus As StorageAccountSkuConversionStatus, dnsEndpointType As Nullable(Of StorageDnsEndpointType)) As StorageAccountData" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member StorageAccountData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Storage.Models.StorageSku * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageKind&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Resources.Models.ExtendedLocation * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; * Azure.ResourceManager.Storage.Models.StorageAccountEndpoints * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Storage.Models.StorageCustomDomain * Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy * Nullable&lt;int&gt; * Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime * Azure.ResourceManager.Storage.Models.StorageAccountEndpoints * Azure.ResourceManager.Storage.Models.StorageAccountEncryption * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; * Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.GeoReplicationStatistics * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; * seq&lt;Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt; * Azure.ResourceManager.Storage.Models.StorageRoutingPreference * Azure.ResourceManager.Storage.Models.BlobRestoreStatus * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; * Azure.ResourceManager.Storage.Models.ImmutableStorageAccount * Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; * Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; -&gt; Azure.ResourceManager.Storage.StorageAccountData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountData (id, name, resourceType, systemData, tags, location, sku, kind, identity, extendedLocation, provisioningState, primaryEndpoints, primaryLocation, statusOfPrimary, lastGeoFailoverOn, secondaryLocation, statusOfSecondary, createdOn, customDomain, sasPolicy, keyExpirationPeriodInDays, keyCreationTime, secondaryEndpoints, encryption, accessTier, azureFilesIdentityBasedAuthentication, enableHttpsTrafficOnly, networkRuleSet, isSftpEnabled, isLocalUserEnabled, isHnsEnabled, geoReplicationStats, isFailoverInProgress, largeFileSharesState, privateEndpointConnections, routingPreference, blobRestoreStatus, allowBlobPublicAccess, minimumTlsVersion, allowSharedKeyAccess, isNfsV3Enabled, allowCrossTenantReplication, isDefaultToOAuthAuthentication, publicNetworkAccess, immutableStorageWithVersioning, allowedCopyScope, storageAccountSkuConversionStatus, dnsEndpointType)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountData StorageAccountData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Storage.Models.StorageSku sku = default, Azure.ResourceManager.Storage.Models.StorageKind? kind = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, Azure.ResourceManager.Storage.Models.StorageProvisioningState? provisioningState = default, Azure.ResourceManager.Storage.Models.StorageAccountEndpoints primaryEndpoints = default, Azure.Core.AzureLocation? primaryLocation = default, Azure.ResourceManager.Storage.Models.StorageAccountStatus? statusOfPrimary = default, DateTimeOffset? lastGeoFailoverOn = default, Azure.Core.AzureLocation? secondaryLocation = default, Azure.ResourceManager.Storage.Models.StorageAccountStatus? statusOfSecondary = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain = default, Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy = default, int? keyExpirationPeriodInDays = default, Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime keyCreationTime = default, Azure.ResourceManager.Storage.Models.StorageAccountEndpoints secondaryEndpoints = default, Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption = default, Azure.ResourceManager.Storage.Models.StorageAccountAccessTier? accessTier = default, Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication = default, bool? enableHttpsTrafficOnly = default, Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet = default, bool? isSftpEnabled = default, bool? isLocalUserEnabled = default, bool? isHnsEnabled = default, Azure.ResourceManager.Storage.Models.GeoReplicationStatistics geoReplicationStats = default, bool? isFailoverInProgress = default, Azure.ResourceManager.Storage.Models.LargeFileSharesState? largeFileSharesState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt; privateEndpointConnections = default, Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference = default, Azure.ResourceManager.Storage.Models.BlobRestoreStatus blobRestoreStatus = default, bool? allowBlobPublicAccess = default, Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion? minimumTlsVersion = default, bool? allowSharedKeyAccess = default, bool? isNfsV3Enabled = default, bool? allowCrossTenantReplication = default, bool? isDefaultToOAuthAuthentication = default, Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning = default, Azure.ResourceManager.Storage.Models.AllowedCopyScope? allowedCopyScope = default, Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus storageAccountSkuConversionStatus = default, Azure.ResourceManager.Storage.Models.StorageDnsEndpointType? dnsEndpointType = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As StorageSku = Nothing, Optional kind As Nullable(Of StorageKind) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional provisioningState As Nullable(Of StorageProvisioningState) = Nothing, Optional primaryEndpoints As StorageAccountEndpoints = Nothing, Optional primaryLocation As Nullable(Of AzureLocation) = Nothing, Optional statusOfPrimary As Nullable(Of StorageAccountStatus) = Nothing, Optional lastGeoFailoverOn As Nullable(Of DateTimeOffset) = Nothing, Optional secondaryLocation As Nullable(Of AzureLocation) = Nothing, Optional statusOfSecondary As Nullable(Of StorageAccountStatus) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional customDomain As StorageCustomDomain = Nothing, Optional sasPolicy As StorageAccountSasPolicy = Nothing, Optional keyExpirationPeriodInDays As Nullable(Of Integer) = Nothing, Optional keyCreationTime As StorageAccountKeyCreationTime = Nothing, Optional secondaryEndpoints As StorageAccountEndpoints = Nothing, Optional encryption As StorageAccountEncryption = Nothing, Optional accessTier As Nullable(Of StorageAccountAccessTier) = Nothing, Optional azureFilesIdentityBasedAuthentication As FilesIdentityBasedAuthentication = Nothing, Optional enableHttpsTrafficOnly As Nullable(Of Boolean) = Nothing, Optional networkRuleSet As StorageAccountNetworkRuleSet = Nothing, Optional isSftpEnabled As Nullable(Of Boolean) = Nothing, Optional isLocalUserEnabled As Nullable(Of Boolean) = Nothing, Optional isHnsEnabled As Nullable(Of Boolean) = Nothing, Optional geoReplicationStats As GeoReplicationStatistics = Nothing, Optional isFailoverInProgress As Nullable(Of Boolean) = Nothing, Optional largeFileSharesState As Nullable(Of LargeFileSharesState) = Nothing, Optional privateEndpointConnections As IEnumerable(Of StoragePrivateEndpointConnectionData) = Nothing, Optional routingPreference As StorageRoutingPreference = Nothing, Optional blobRestoreStatus As BlobRestoreStatus = Nothing, Optional allowBlobPublicAccess As Nullable(Of Boolean) = Nothing, Optional minimumTlsVersion As Nullable(Of StorageMinimumTlsVersion) = Nothing, Optional allowSharedKeyAccess As Nullable(Of Boolean) = Nothing, Optional isNfsV3Enabled As Nullable(Of Boolean) = Nothing, Optional allowCrossTenantReplication As Nullable(Of Boolean) = Nothing, Optional isDefaultToOAuthAuthentication As Nullable(Of Boolean) = Nothing, Optional publicNetworkAccess As Nullable(Of StoragePublicNetworkAccess) = Nothing, Optional immutableStorageWithVersioning As ImmutableStorageAccount = Nothing, Optional allowedCopyScope As Nullable(Of AllowedCopyScope) = Nothing, Optional storageAccountSkuConversionStatus As StorageAccountSkuConversionStatus = Nothing, Optional dnsEndpointType As Nullable(Of StorageDnsEndpointType) = Nothing) As StorageAccountData" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Storage.Models.StorageSku" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageKind&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt;" />
        <Parameter Name="primaryEndpoints" Type="Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" />
        <Parameter Name="primaryLocation" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="statusOfPrimary" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt;" />
        <Parameter Name="lastGeoFailoverOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="secondaryLocation" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="statusOfSecondary" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="customDomain" Type="Azure.ResourceManager.Storage.Models.StorageCustomDomain" />
        <Parameter Name="sasPolicy" Type="Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy" />
        <Parameter Name="keyExpirationPeriodInDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="keyCreationTime" Type="Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" />
        <Parameter Name="secondaryEndpoints" Type="Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.Storage.Models.StorageAccountEncryption" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt;" />
        <Parameter Name="azureFilesIdentityBasedAuthentication" Type="Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication" />
        <Parameter Name="enableHttpsTrafficOnly" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="networkRuleSet" Type="Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet" />
        <Parameter Name="isSftpEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isLocalUserEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isHnsEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="geoReplicationStats" Type="Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" />
        <Parameter Name="isFailoverInProgress" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="largeFileSharesState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt;" />
        <Parameter Name="routingPreference" Type="Azure.ResourceManager.Storage.Models.StorageRoutingPreference" />
        <Parameter Name="blobRestoreStatus" Type="Azure.ResourceManager.Storage.Models.BlobRestoreStatus" />
        <Parameter Name="allowBlobPublicAccess" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt;" />
        <Parameter Name="allowSharedKeyAccess" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isNfsV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="allowCrossTenantReplication" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isDefaultToOAuthAuthentication" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt;" />
        <Parameter Name="immutableStorageWithVersioning" Type="Azure.ResourceManager.Storage.Models.ImmutableStorageAccount" />
        <Parameter Name="allowedCopyScope" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt;" />
        <Parameter Name="storageAccountSkuConversionStatus" Type="Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" />
        <Parameter Name="dnsEndpointType" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> Gets the SKU. </param>
        <param name="kind"> Gets the Kind. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="extendedLocation"> The extendedLocation of the resource. </param>
        <param name="provisioningState"> Gets the status of the storage account at the time the operation was called. </param>
        <param name="primaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint. </param>
        <param name="primaryLocation"> Gets the location of the primary data center for the storage account. </param>
        <param name="statusOfPrimary"> Gets the status indicating whether the primary location of the storage account is available or unavailable. </param>
        <param name="lastGeoFailoverOn"> Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
        <param name="secondaryLocation"> Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
        <param name="statusOfSecondary"> Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS. </param>
        <param name="createdOn"> Gets the creation date and time of the storage account in UTC. </param>
        <param name="customDomain"> Gets the custom domain the user assigned to this storage account. </param>
        <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
        <param name="keyExpirationPeriodInDays"> KeyPolicy assigned to the storage account. </param>
        <param name="keyCreationTime"> Storage account keys creation time. </param>
        <param name="secondaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS. </param>
        <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
        <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
        <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
        <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. </param>
        <param name="networkRuleSet"> Network rule set. </param>
        <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
        <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
        <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
        <param name="geoReplicationStats"> Geo Replication Stats. </param>
        <param name="isFailoverInProgress"> If the failover is in progress, the value will be true, otherwise, it will be null. </param>
        <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
        <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified storage account. </param>
        <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
        <param name="blobRestoreStatus"> Blob restore status. </param>
        <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </param>
        <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
        <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
        <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
        <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </param>
        <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
        <param name="publicNetworkAccess"> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
        <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. </param>
        <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
        <param name="storageAccountSkuConversionStatus"> This property is readOnly and is set by server during asynchronous storage account sku conversion operations. </param>
        <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountData StorageAccountData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Storage.Models.StorageSku sku = default, Azure.ResourceManager.Storage.Models.StorageKind? kind = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, Azure.ResourceManager.Storage.Models.StorageProvisioningState? provisioningState = default, Azure.ResourceManager.Storage.Models.StorageAccountEndpoints primaryEndpoints = default, Azure.Core.AzureLocation? primaryLocation = default, Azure.ResourceManager.Storage.Models.StorageAccountStatus? statusOfPrimary = default, DateTimeOffset? lastGeoFailoverOn = default, Azure.Core.AzureLocation? secondaryLocation = default, Azure.ResourceManager.Storage.Models.StorageAccountStatus? statusOfSecondary = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain = default, Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy = default, int? keyExpirationPeriodInDays = default, Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime keyCreationTime = default, Azure.ResourceManager.Storage.Models.StorageAccountEndpoints secondaryEndpoints = default, Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption = default, Azure.ResourceManager.Storage.Models.StorageAccountAccessTier? accessTier = default, Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication = default, bool? enableHttpsTrafficOnly = default, Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet = default, bool? isSftpEnabled = default, bool? isLocalUserEnabled = default, bool? isExtendedGroupEnabled = default, bool? isHnsEnabled = default, Azure.ResourceManager.Storage.Models.GeoReplicationStatistics geoReplicationStats = default, bool? isFailoverInProgress = default, Azure.ResourceManager.Storage.Models.LargeFileSharesState? largeFileSharesState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt; privateEndpointConnections = default, Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference = default, Azure.ResourceManager.Storage.Models.BlobRestoreStatus blobRestoreStatus = default, bool? allowBlobPublicAccess = default, Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion? minimumTlsVersion = default, bool? allowSharedKeyAccess = default, bool? isNfsV3Enabled = default, bool? allowCrossTenantReplication = default, bool? isDefaultToOAuthAuthentication = default, Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning = default, Azure.ResourceManager.Storage.Models.AllowedCopyScope? allowedCopyScope = default, Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus storageAccountSkuConversionStatus = default, Azure.ResourceManager.Storage.Models.StorageDnsEndpointType? dnsEndpointType = default, bool? isSkuConversionBlocked = default, bool? isAccountMigrationInProgress = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageAccountData StorageAccountData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Storage.Models.StorageSku sku, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageKind&gt; kind, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; provisioningState, class Azure.ResourceManager.Storage.Models.StorageAccountEndpoints primaryEndpoints, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; primaryLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; statusOfPrimary, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastGeoFailoverOn, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; secondaryLocation, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; statusOfSecondary, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, class Azure.ResourceManager.Storage.Models.StorageCustomDomain customDomain, class Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy sasPolicy, valuetype System.Nullable`1&lt;int32&gt; keyExpirationPeriodInDays, class Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime keyCreationTime, class Azure.ResourceManager.Storage.Models.StorageAccountEndpoints secondaryEndpoints, class Azure.ResourceManager.Storage.Models.StorageAccountEncryption encryption, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; accessTier, class Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication azureFilesIdentityBasedAuthentication, valuetype System.Nullable`1&lt;bool&gt; enableHttpsTrafficOnly, class Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet networkRuleSet, valuetype System.Nullable`1&lt;bool&gt; isSftpEnabled, valuetype System.Nullable`1&lt;bool&gt; isLocalUserEnabled, valuetype System.Nullable`1&lt;bool&gt; isExtendedGroupEnabled, valuetype System.Nullable`1&lt;bool&gt; isHnsEnabled, class Azure.ResourceManager.Storage.Models.GeoReplicationStatistics geoReplicationStats, valuetype System.Nullable`1&lt;bool&gt; isFailoverInProgress, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; largeFileSharesState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt; privateEndpointConnections, class Azure.ResourceManager.Storage.Models.StorageRoutingPreference routingPreference, class Azure.ResourceManager.Storage.Models.BlobRestoreStatus blobRestoreStatus, valuetype System.Nullable`1&lt;bool&gt; allowBlobPublicAccess, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; minimumTlsVersion, valuetype System.Nullable`1&lt;bool&gt; allowSharedKeyAccess, valuetype System.Nullable`1&lt;bool&gt; isNfsV3Enabled, valuetype System.Nullable`1&lt;bool&gt; allowCrossTenantReplication, valuetype System.Nullable`1&lt;bool&gt; isDefaultToOAuthAuthentication, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.Storage.Models.ImmutableStorageAccount immutableStorageWithVersioning, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; allowedCopyScope, class Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus storageAccountSkuConversionStatus, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; dnsEndpointType, valuetype System.Nullable`1&lt;bool&gt; isSkuConversionBlocked, valuetype System.Nullable`1&lt;bool&gt; isAccountMigrationInProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Storage.Models.StorageSku,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ResourceManager.Storage.Models.StorageProvisioningState},Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime,Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.GeoReplicationStatistics,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,Azure.ResourceManager.Storage.Models.BlobRestoreStatus,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As StorageSku = Nothing, Optional kind As Nullable(Of StorageKind) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional provisioningState As Nullable(Of StorageProvisioningState) = Nothing, Optional primaryEndpoints As StorageAccountEndpoints = Nothing, Optional primaryLocation As Nullable(Of AzureLocation) = Nothing, Optional statusOfPrimary As Nullable(Of StorageAccountStatus) = Nothing, Optional lastGeoFailoverOn As Nullable(Of DateTimeOffset) = Nothing, Optional secondaryLocation As Nullable(Of AzureLocation) = Nothing, Optional statusOfSecondary As Nullable(Of StorageAccountStatus) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional customDomain As StorageCustomDomain = Nothing, Optional sasPolicy As StorageAccountSasPolicy = Nothing, Optional keyExpirationPeriodInDays As Nullable(Of Integer) = Nothing, Optional keyCreationTime As StorageAccountKeyCreationTime = Nothing, Optional secondaryEndpoints As StorageAccountEndpoints = Nothing, Optional encryption As StorageAccountEncryption = Nothing, Optional accessTier As Nullable(Of StorageAccountAccessTier) = Nothing, Optional azureFilesIdentityBasedAuthentication As FilesIdentityBasedAuthentication = Nothing, Optional enableHttpsTrafficOnly As Nullable(Of Boolean) = Nothing, Optional networkRuleSet As StorageAccountNetworkRuleSet = Nothing, Optional isSftpEnabled As Nullable(Of Boolean) = Nothing, Optional isLocalUserEnabled As Nullable(Of Boolean) = Nothing, Optional isExtendedGroupEnabled As Nullable(Of Boolean) = Nothing, Optional isHnsEnabled As Nullable(Of Boolean) = Nothing, Optional geoReplicationStats As GeoReplicationStatistics = Nothing, Optional isFailoverInProgress As Nullable(Of Boolean) = Nothing, Optional largeFileSharesState As Nullable(Of LargeFileSharesState) = Nothing, Optional privateEndpointConnections As IEnumerable(Of StoragePrivateEndpointConnectionData) = Nothing, Optional routingPreference As StorageRoutingPreference = Nothing, Optional blobRestoreStatus As BlobRestoreStatus = Nothing, Optional allowBlobPublicAccess As Nullable(Of Boolean) = Nothing, Optional minimumTlsVersion As Nullable(Of StorageMinimumTlsVersion) = Nothing, Optional allowSharedKeyAccess As Nullable(Of Boolean) = Nothing, Optional isNfsV3Enabled As Nullable(Of Boolean) = Nothing, Optional allowCrossTenantReplication As Nullable(Of Boolean) = Nothing, Optional isDefaultToOAuthAuthentication As Nullable(Of Boolean) = Nothing, Optional publicNetworkAccess As Nullable(Of StoragePublicNetworkAccess) = Nothing, Optional immutableStorageWithVersioning As ImmutableStorageAccount = Nothing, Optional allowedCopyScope As Nullable(Of AllowedCopyScope) = Nothing, Optional storageAccountSkuConversionStatus As StorageAccountSkuConversionStatus = Nothing, Optional dnsEndpointType As Nullable(Of StorageDnsEndpointType) = Nothing, Optional isSkuConversionBlocked As Nullable(Of Boolean) = Nothing, Optional isAccountMigrationInProgress As Nullable(Of Boolean) = Nothing) As StorageAccountData" />
      <MemberSignature Language="F#" Value="static member StorageAccountData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Storage.Models.StorageSku * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageKind&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.Resources.Models.ExtendedLocation * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; * Azure.ResourceManager.Storage.Models.StorageAccountEndpoints * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.Core.AzureLocation&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.Storage.Models.StorageCustomDomain * Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy * Nullable&lt;int&gt; * Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime * Azure.ResourceManager.Storage.Models.StorageAccountEndpoints * Azure.ResourceManager.Storage.Models.StorageAccountEncryption * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt; * Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.Storage.Models.GeoReplicationStatistics * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt; * seq&lt;Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt; * Azure.ResourceManager.Storage.Models.StorageRoutingPreference * Azure.ResourceManager.Storage.Models.BlobRestoreStatus * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt; * Azure.ResourceManager.Storage.Models.ImmutableStorageAccount * Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt; * Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.StorageAccountData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountData (id, name, resourceType, systemData, tags, location, sku, kind, identity, extendedLocation, provisioningState, primaryEndpoints, primaryLocation, statusOfPrimary, lastGeoFailoverOn, secondaryLocation, statusOfSecondary, createdOn, customDomain, sasPolicy, keyExpirationPeriodInDays, keyCreationTime, secondaryEndpoints, encryption, accessTier, azureFilesIdentityBasedAuthentication, enableHttpsTrafficOnly, networkRuleSet, isSftpEnabled, isLocalUserEnabled, isExtendedGroupEnabled, isHnsEnabled, geoReplicationStats, isFailoverInProgress, largeFileSharesState, privateEndpointConnections, routingPreference, blobRestoreStatus, allowBlobPublicAccess, minimumTlsVersion, allowSharedKeyAccess, isNfsV3Enabled, allowCrossTenantReplication, isDefaultToOAuthAuthentication, publicNetworkAccess, immutableStorageWithVersioning, allowedCopyScope, storageAccountSkuConversionStatus, dnsEndpointType, isSkuConversionBlocked, isAccountMigrationInProgress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sku" Type="Azure.ResourceManager.Storage.Models.StorageSku" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageKind&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt;" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="primaryEndpoints" Type="Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="primaryLocation" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="statusOfPrimary" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="lastGeoFailoverOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="secondaryLocation" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="statusOfSecondary" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountStatus&gt;" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="17" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="customDomain" Type="Azure.ResourceManager.Storage.Models.StorageCustomDomain" Index="18" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sasPolicy" Type="Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy" Index="19" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="keyExpirationPeriodInDays" Type="System.Nullable&lt;System.Int32&gt;" Index="20" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="keyCreationTime" Type="Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" Index="21" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="secondaryEndpoints" Type="Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" Index="22" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.Storage.Models.StorageAccountEncryption" Index="23" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountAccessTier&gt;" Index="24" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="azureFilesIdentityBasedAuthentication" Type="Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication" Index="25" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="enableHttpsTrafficOnly" Type="System.Nullable&lt;System.Boolean&gt;" Index="26" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="networkRuleSet" Type="Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet" Index="27" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSftpEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="28" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isLocalUserEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="29" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isExtendedGroupEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="30" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isHnsEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="31" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="geoReplicationStats" Type="Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" Index="32" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isFailoverInProgress" Type="System.Nullable&lt;System.Boolean&gt;" Index="33" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="largeFileSharesState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.LargeFileSharesState&gt;" Index="34" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData&gt;" Index="35" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="routingPreference" Type="Azure.ResourceManager.Storage.Models.StorageRoutingPreference" Index="36" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="blobRestoreStatus" Type="Azure.ResourceManager.Storage.Models.BlobRestoreStatus" Index="37" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowBlobPublicAccess" Type="System.Nullable&lt;System.Boolean&gt;" Index="38" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="minimumTlsVersion" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion&gt;" Index="39" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowSharedKeyAccess" Type="System.Nullable&lt;System.Boolean&gt;" Index="40" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isNfsV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="41" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowCrossTenantReplication" Type="System.Nullable&lt;System.Boolean&gt;" Index="42" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isDefaultToOAuthAuthentication" Type="System.Nullable&lt;System.Boolean&gt;" Index="43" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess&gt;" Index="44" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="immutableStorageWithVersioning" Type="Azure.ResourceManager.Storage.Models.ImmutableStorageAccount" Index="45" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="allowedCopyScope" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.AllowedCopyScope&gt;" Index="46" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="storageAccountSkuConversionStatus" Type="Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" Index="47" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dnsEndpointType" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageDnsEndpointType&gt;" Index="48" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSkuConversionBlocked" Type="System.Nullable&lt;System.Boolean&gt;" Index="49" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isAccountMigrationInProgress" Type="System.Nullable&lt;System.Boolean&gt;" Index="50" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> Gets the SKU. </param>
        <param name="kind"> Gets the Kind. </param>
        <param name="identity"> The identity of the resource. </param>
        <param name="extendedLocation"> The extendedLocation of the resource. </param>
        <param name="provisioningState"> Gets the status of the storage account at the time the operation was called. </param>
        <param name="primaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint. </param>
        <param name="primaryLocation"> Gets the location of the primary data center for the storage account. </param>
        <param name="statusOfPrimary"> Gets the status indicating whether the primary location of the storage account is available or unavailable. </param>
        <param name="lastGeoFailoverOn"> Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
        <param name="secondaryLocation"> Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
        <param name="statusOfSecondary"> Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS. </param>
        <param name="createdOn"> Gets the creation date and time of the storage account in UTC. </param>
        <param name="customDomain"> Gets the custom domain the user assigned to this storage account. </param>
        <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
        <param name="keyExpirationPeriodInDays"> KeyPolicy assigned to the storage account. </param>
        <param name="keyCreationTime"> Storage account keys creation time. </param>
        <param name="secondaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS. </param>
        <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
        <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
        <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
        <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. </param>
        <param name="networkRuleSet"> Network rule set. </param>
        <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
        <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
        <param name="isExtendedGroupEnabled"> Enables extended group support with local users feature, if set to true. </param>
        <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
        <param name="geoReplicationStats"> Geo Replication Stats. </param>
        <param name="isFailoverInProgress"> If the failover is in progress, the value will be true, otherwise, it will be null. </param>
        <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
        <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified storage account. </param>
        <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
        <param name="blobRestoreStatus"> Blob restore status. </param>
        <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. </param>
        <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
        <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
        <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
        <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. </param>
        <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
        <param name="publicNetworkAccess"> Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. </param>
        <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. </param>
        <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
        <param name="storageAccountSkuConversionStatus"> This property is readOnly and is set by server during asynchronous storage account sku conversion operations. </param>
        <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
        <param name="isSkuConversionBlocked"> This property will be set to true or false on an event of ongoing migration. Default value is null. </param>
        <param name="isAccountMigrationInProgress"> If customer initiated account migration is in progress, the value will be true else it will be null. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountEndpoints">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountEndpoints StorageAccountEndpoints (Uri blobUri = default, Uri queueUri = default, Uri tableUri = default, Uri fileUri = default, Uri webUri = default, Uri dfsUri = default, Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints microsoftEndpoints = default, Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints internetEndpoints = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountEndpoints StorageAccountEndpoints(class System.Uri blobUri, class System.Uri queueUri, class System.Uri tableUri, class System.Uri fileUri, class System.Uri webUri, class System.Uri dfsUri, class Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints microsoftEndpoints, class Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints internetEndpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountEndpoints(System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints,Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountEndpoints (Optional blobUri As Uri = Nothing, Optional queueUri As Uri = Nothing, Optional tableUri As Uri = Nothing, Optional fileUri As Uri = Nothing, Optional webUri As Uri = Nothing, Optional dfsUri As Uri = Nothing, Optional microsoftEndpoints As StorageAccountMicrosoftEndpoints = Nothing, Optional internetEndpoints As StorageAccountInternetEndpoints = Nothing) As StorageAccountEndpoints" />
      <MemberSignature Language="F#" Value="static member StorageAccountEndpoints : Uri * Uri * Uri * Uri * Uri * Uri * Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints * Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints -&gt; Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountEndpoints (blobUri, queueUri, tableUri, fileUri, webUri, dfsUri, microsoftEndpoints, internetEndpoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountEndpoints</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="tableUri" Type="System.Uri" />
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="webUri" Type="System.Uri" />
        <Parameter Name="dfsUri" Type="System.Uri" />
        <Parameter Name="microsoftEndpoints" Type="Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" />
        <Parameter Name="internetEndpoints" Type="Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" />
      </Parameters>
      <Docs>
        <param name="blobUri"> Gets the blob endpoint. </param>
        <param name="queueUri"> Gets the queue endpoint. </param>
        <param name="tableUri"> Gets the table endpoint. </param>
        <param name="fileUri"> Gets the file endpoint. </param>
        <param name="webUri"> Gets the web endpoint. </param>
        <param name="dfsUri"> Gets the dfs endpoint. </param>
        <param name="microsoftEndpoints"> Gets the microsoft routing storage endpoints. </param>
        <param name="internetEndpoints"> Gets the internet routing storage endpoints. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountInternetEndpoints">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints StorageAccountInternetEndpoints (Uri blobUri = default, Uri fileUri = default, Uri webUri = default, Uri dfsUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints StorageAccountInternetEndpoints(class System.Uri blobUri, class System.Uri fileUri, class System.Uri webUri, class System.Uri dfsUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountInternetEndpoints(System.Uri,System.Uri,System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountInternetEndpoints (Optional blobUri As Uri = Nothing, Optional fileUri As Uri = Nothing, Optional webUri As Uri = Nothing, Optional dfsUri As Uri = Nothing) As StorageAccountInternetEndpoints" />
      <MemberSignature Language="F#" Value="static member StorageAccountInternetEndpoints : Uri * Uri * Uri * Uri -&gt; Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountInternetEndpoints (blobUri, fileUri, webUri, dfsUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="webUri" Type="System.Uri" />
        <Parameter Name="dfsUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="blobUri"> Gets the blob endpoint. </param>
        <param name="fileUri"> Gets the file endpoint. </param>
        <param name="webUri"> Gets the web endpoint. </param>
        <param name="dfsUri"> Gets the dfs endpoint. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountKey">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountKey StorageAccountKey (string keyName = default, string value = default, Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission? permissions = default, DateTimeOffset? createdOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountKey StorageAccountKey(string keyName, string value, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission&gt; permissions, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKey(System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountKey (Optional keyName As String = Nothing, Optional value As String = Nothing, Optional permissions As Nullable(Of StorageAccountKeyPermission) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing) As StorageAccountKey" />
      <MemberSignature Language="F#" Value="static member StorageAccountKey : string * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageAccountKey" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKey (keyName, value, permissions, createdOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="permissions" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="keyName"> Name of the key. </param>
        <param name="value"> Base 64-encoded value of the key. </param>
        <param name="permissions"> Permissions for the key -- read-only or full permissions. </param>
        <param name="createdOn"> Creation time of the key, in round trip date format. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountKeyCreationTime">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime StorageAccountKeyCreationTime (DateTimeOffset? key1 = default, DateTimeOffset? key2 = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime StorageAccountKeyCreationTime(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; key1, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKeyCreationTime(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountKeyCreationTime (Optional key1 As Nullable(Of DateTimeOffset) = Nothing, Optional key2 As Nullable(Of DateTimeOffset) = Nothing) As StorageAccountKeyCreationTime" />
      <MemberSignature Language="F#" Value="static member StorageAccountKeyCreationTime : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKeyCreationTime (key1, key2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="key2" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="key1" />
        <param name="key2" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountKeyVaultProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties StorageAccountKeyVaultProperties (string keyName = default, string keyVersion = default, Uri keyVaultUri = default, string currentVersionedKeyIdentifier = default, DateTimeOffset? lastKeyRotationTimestamp = default, DateTimeOffset? currentVersionedKeyExpirationTimestamp = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties StorageAccountKeyVaultProperties(string keyName, string keyVersion, class System.Uri keyVaultUri, string currentVersionedKeyIdentifier, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastKeyRotationTimestamp, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; currentVersionedKeyExpirationTimestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKeyVaultProperties(System.String,System.String,System.Uri,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountKeyVaultProperties (Optional keyName As String = Nothing, Optional keyVersion As String = Nothing, Optional keyVaultUri As Uri = Nothing, Optional currentVersionedKeyIdentifier As String = Nothing, Optional lastKeyRotationTimestamp As Nullable(Of DateTimeOffset) = Nothing, Optional currentVersionedKeyExpirationTimestamp As Nullable(Of DateTimeOffset) = Nothing) As StorageAccountKeyVaultProperties" />
      <MemberSignature Language="F#" Value="static member StorageAccountKeyVaultProperties : string * string * Uri * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKeyVaultProperties (keyName, keyVersion, keyVaultUri, currentVersionedKeyIdentifier, lastKeyRotationTimestamp, currentVersionedKeyExpirationTimestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyVersion" Type="System.String" />
        <Parameter Name="keyVaultUri" Type="System.Uri" />
        <Parameter Name="currentVersionedKeyIdentifier" Type="System.String" />
        <Parameter Name="lastKeyRotationTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="currentVersionedKeyExpirationTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="keyName"> The name of KeyVault key. </param>
        <param name="keyVersion"> The version of KeyVault key. </param>
        <param name="keyVaultUri"> The Uri of KeyVault. </param>
        <param name="currentVersionedKeyIdentifier"> The object identifier of the current versioned Key Vault Key in use. </param>
        <param name="lastKeyRotationTimestamp"> Timestamp of last rotation of the Key Vault Key. </param>
        <param name="currentVersionedKeyExpirationTimestamp"> This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountLocalUserData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountLocalUserData StorageAccountLocalUserData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt; permissionScopes, string homeDirectory, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; sshAuthorizedKeys, string sid, bool? hasSharedKey, bool? hasSshKey, bool? hasSshPassword);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageAccountLocalUserData StorageAccountLocalUserData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt; permissionScopes, string homeDirectory, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; sshAuthorizedKeys, string sid, valuetype System.Nullable`1&lt;bool&gt; hasSharedKey, valuetype System.Nullable`1&lt;bool&gt; hasSshKey, valuetype System.Nullable`1&lt;bool&gt; hasSshPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountLocalUserData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StoragePermissionScope},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSshPublicKey},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountLocalUserData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, permissionScopes As IEnumerable(Of StoragePermissionScope), homeDirectory As String, sshAuthorizedKeys As IEnumerable(Of StorageSshPublicKey), sid As String, hasSharedKey As Nullable(Of Boolean), hasSshKey As Nullable(Of Boolean), hasSshPassword As Nullable(Of Boolean)) As StorageAccountLocalUserData" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member StorageAccountLocalUserData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt; * string * seq&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.StorageAccountLocalUserData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountLocalUserData (id, name, resourceType, systemData, permissionScopes, homeDirectory, sshAuthorizedKeys, sid, hasSharedKey, hasSshKey, hasSshPassword)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountLocalUserData StorageAccountLocalUserData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt; permissionScopes = default, string homeDirectory = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; sshAuthorizedKeys = default, string sid = default, bool? hasSharedKey = default, bool? hasSshKey = default, bool? hasSshPassword = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountLocalUserData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional permissionScopes As IEnumerable(Of StoragePermissionScope) = Nothing, Optional homeDirectory As String = Nothing, Optional sshAuthorizedKeys As IEnumerable(Of StorageSshPublicKey) = Nothing, Optional sid As String = Nothing, Optional hasSharedKey As Nullable(Of Boolean) = Nothing, Optional hasSshKey As Nullable(Of Boolean) = Nothing, Optional hasSshPassword As Nullable(Of Boolean) = Nothing) As StorageAccountLocalUserData" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountLocalUserData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="permissionScopes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt;" />
        <Parameter Name="homeDirectory" Type="System.String" />
        <Parameter Name="sshAuthorizedKeys" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt;" />
        <Parameter Name="sid" Type="System.String" />
        <Parameter Name="hasSharedKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hasSshKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hasSshPassword" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="permissionScopes"> The permission scopes of the local user. </param>
        <param name="homeDirectory"> Optional, local user home directory. </param>
        <param name="sshAuthorizedKeys"> Optional, local user ssh authorized keys for SFTP. </param>
        <param name="sid"> A unique Security Identifier that is generated by the server. </param>
        <param name="hasSharedKey"> Indicates whether shared key exists. Set it to false to remove existing shared key. </param>
        <param name="hasSshKey"> Indicates whether ssh key exists. Set it to false to remove existing SSH key. </param>
        <param name="hasSshPassword"> Indicates whether ssh password exists. Set it to false to remove existing SSH password. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountLocalUserData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountLocalUserData StorageAccountLocalUserData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt; permissionScopes = default, string homeDirectory = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; sshAuthorizedKeys = default, string sid = default, bool? hasSharedKey = default, bool? hasSshKey = default, bool? hasSshPassword = default, int? userId = default, int? groupId = default, bool? isAclAuthorizationAllowed = default, System.Collections.Generic.IEnumerable&lt;int&gt; extendedGroups = default, bool? isNfsV3Enabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageAccountLocalUserData StorageAccountLocalUserData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt; permissionScopes, string homeDirectory, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; sshAuthorizedKeys, string sid, valuetype System.Nullable`1&lt;bool&gt; hasSharedKey, valuetype System.Nullable`1&lt;bool&gt; hasSshKey, valuetype System.Nullable`1&lt;bool&gt; hasSshPassword, valuetype System.Nullable`1&lt;int32&gt; userId, valuetype System.Nullable`1&lt;int32&gt; groupId, valuetype System.Nullable`1&lt;bool&gt; isAclAuthorizationAllowed, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; extendedGroups, valuetype System.Nullable`1&lt;bool&gt; isNfsV3Enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountLocalUserData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StoragePermissionScope},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSshPublicKey},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountLocalUserData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional permissionScopes As IEnumerable(Of StoragePermissionScope) = Nothing, Optional homeDirectory As String = Nothing, Optional sshAuthorizedKeys As IEnumerable(Of StorageSshPublicKey) = Nothing, Optional sid As String = Nothing, Optional hasSharedKey As Nullable(Of Boolean) = Nothing, Optional hasSshKey As Nullable(Of Boolean) = Nothing, Optional hasSshPassword As Nullable(Of Boolean) = Nothing, Optional userId As Nullable(Of Integer) = Nothing, Optional groupId As Nullable(Of Integer) = Nothing, Optional isAclAuthorizationAllowed As Nullable(Of Boolean) = Nothing, Optional extendedGroups As IEnumerable(Of Integer) = Nothing, Optional isNfsV3Enabled As Nullable(Of Boolean) = Nothing) As StorageAccountLocalUserData" />
      <MemberSignature Language="F#" Value="static member StorageAccountLocalUserData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt; * string * seq&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * seq&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.StorageAccountLocalUserData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountLocalUserData (id, name, resourceType, systemData, permissionScopes, homeDirectory, sshAuthorizedKeys, sid, hasSharedKey, hasSshKey, hasSshPassword, userId, groupId, isAclAuthorizationAllowed, extendedGroups, isNfsV3Enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountLocalUserData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="permissionScopes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StoragePermissionScope&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="homeDirectory" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sshAuthorizedKeys" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSshPublicKey&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sid" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="hasSharedKey" Type="System.Nullable&lt;System.Boolean&gt;" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="hasSshKey" Type="System.Nullable&lt;System.Boolean&gt;" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="hasSshPassword" Type="System.Nullable&lt;System.Boolean&gt;" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="userId" Type="System.Nullable&lt;System.Int32&gt;" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="groupId" Type="System.Nullable&lt;System.Int32&gt;" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isAclAuthorizationAllowed" Type="System.Nullable&lt;System.Boolean&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="extendedGroups" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isNfsV3Enabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="15" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="permissionScopes"> The permission scopes of the local user. </param>
        <param name="homeDirectory"> Optional, local user home directory. </param>
        <param name="sshAuthorizedKeys"> Optional, local user ssh authorized keys for SFTP. </param>
        <param name="sid"> A unique Security Identifier that is generated by the server. </param>
        <param name="hasSharedKey"> Indicates whether shared key exists. Set it to false to remove existing shared key. </param>
        <param name="hasSshKey"> Indicates whether ssh key exists. Set it to false to remove existing SSH key. </param>
        <param name="hasSshPassword"> Indicates whether ssh password exists. Set it to false to remove existing SSH password. </param>
        <param name="userId"> A unique Identifier that is generated by the server. </param>
        <param name="groupId"> An identifier for associating a group of users. </param>
        <param name="isAclAuthorizationAllowed"> Indicates whether ACL authorization is allowed for this user. Set it to false to disallow using ACL authorization. </param>
        <param name="extendedGroups"> Supplementary group membership. Only applicable for local users enabled for NFSv3 access. </param>
        <param name="isNfsV3Enabled"> Indicates if the local user is enabled for access with NFSv3 protocol. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountManagementPolicyData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountManagementPolicyData StorageAccountManagementPolicyData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, DateTimeOffset? lastModifiedOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.ManagementPolicyRule&gt; rules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageAccountManagementPolicyData StorageAccountManagementPolicyData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.ManagementPolicyRule&gt; rules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountManagementPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.ManagementPolicyRule})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountManagementPolicyData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional rules As IEnumerable(Of ManagementPolicyRule) = Nothing) As StorageAccountManagementPolicyData" />
      <MemberSignature Language="F#" Value="static member StorageAccountManagementPolicyData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.Storage.Models.ManagementPolicyRule&gt; -&gt; Azure.ResourceManager.Storage.StorageAccountManagementPolicyData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountManagementPolicyData (id, name, resourceType, systemData, lastModifiedOn, rules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountManagementPolicyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="rules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.ManagementPolicyRule&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="lastModifiedOn"> Returns the date and time the ManagementPolicies was last modified. </param>
        <param name="rules"> The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountMicrosoftEndpoints">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints StorageAccountMicrosoftEndpoints (Uri blobUri = default, Uri queueUri = default, Uri tableUri = default, Uri fileUri = default, Uri webUri = default, Uri dfsUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints StorageAccountMicrosoftEndpoints(class System.Uri blobUri, class System.Uri queueUri, class System.Uri tableUri, class System.Uri fileUri, class System.Uri webUri, class System.Uri dfsUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountMicrosoftEndpoints(System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountMicrosoftEndpoints (Optional blobUri As Uri = Nothing, Optional queueUri As Uri = Nothing, Optional tableUri As Uri = Nothing, Optional fileUri As Uri = Nothing, Optional webUri As Uri = Nothing, Optional dfsUri As Uri = Nothing) As StorageAccountMicrosoftEndpoints" />
      <MemberSignature Language="F#" Value="static member StorageAccountMicrosoftEndpoints : Uri * Uri * Uri * Uri * Uri * Uri -&gt; Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountMicrosoftEndpoints (blobUri, queueUri, tableUri, fileUri, webUri, dfsUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="tableUri" Type="System.Uri" />
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="webUri" Type="System.Uri" />
        <Parameter Name="dfsUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="blobUri"> Gets the blob endpoint. </param>
        <param name="queueUri"> Gets the queue endpoint. </param>
        <param name="tableUri"> Gets the table endpoint. </param>
        <param name="fileUri"> Gets the file endpoint. </param>
        <param name="webUri"> Gets the web endpoint. </param>
        <param name="dfsUri"> Gets the dfs endpoint. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountMigrationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageAccountMigrationData StorageAccountMigrationData (string id = default, string name = default, Azure.Core.ResourceType? resourceType = default, Azure.ResourceManager.Storage.Models.StorageSkuName targetSkuName = default, Azure.ResourceManager.Storage.Models.StorageAccountMigrationStatus? migrationStatus = default, string migrationFailedReason = default, string migrationFailedDetailedReason = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageAccountMigrationData StorageAccountMigrationData(string id, string name, valuetype System.Nullable`1&lt;valuetype Azure.Core.ResourceType&gt; resourceType, valuetype Azure.ResourceManager.Storage.Models.StorageSkuName targetSkuName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountMigrationStatus&gt; migrationStatus, string migrationFailedReason, string migrationFailedDetailedReason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountMigrationData(System.String,System.String,System.Nullable{Azure.Core.ResourceType},Azure.ResourceManager.Storage.Models.StorageSkuName,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountMigrationStatus},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountMigrationData (Optional id As String = Nothing, Optional name As String = Nothing, Optional resourceType As Nullable(Of ResourceType) = Nothing, Optional targetSkuName As StorageSkuName = Nothing, Optional migrationStatus As Nullable(Of StorageAccountMigrationStatus) = Nothing, Optional migrationFailedReason As String = Nothing, Optional migrationFailedDetailedReason As String = Nothing) As StorageAccountMigrationData" />
      <MemberSignature Language="F#" Value="static member StorageAccountMigrationData : string * string * Nullable&lt;Azure.Core.ResourceType&gt; * Azure.ResourceManager.Storage.Models.StorageSkuName * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountMigrationStatus&gt; * string * string -&gt; Azure.ResourceManager.Storage.StorageAccountMigrationData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountMigrationData (id, name, resourceType, targetSkuName, migrationStatus, migrationFailedReason, migrationFailedDetailedReason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountMigrationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="System.Nullable&lt;Azure.Core.ResourceType&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetSkuName" Type="Azure.ResourceManager.Storage.Models.StorageSkuName" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="migrationStatus" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountMigrationStatus&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="migrationFailedReason" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="migrationFailedDetailedReason" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> Migration Resource Id. </param>
        <param name="name"> current value is 'default' for customer initiated migration. </param>
        <param name="resourceType"> SrpAccountMigrationType in ARM contract which is 'accountMigrations'. </param>
        <param name="targetSkuName"> Target sku name for the account. </param>
        <param name="migrationStatus"> Current status of migration. </param>
        <param name="migrationFailedReason"> Error code for migration failure. </param>
        <param name="migrationFailedDetailedReason"> Reason for migration failure. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountMigrationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountMigrationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountNameAvailabilityContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent StorageAccountNameAvailabilityContent (string name = default, Azure.Core.ResourceType resourceType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent StorageAccountNameAvailabilityContent(string name, valuetype Azure.Core.ResourceType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountNameAvailabilityContent(System.String,Azure.Core.ResourceType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountNameAvailabilityContent (Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing) As StorageAccountNameAvailabilityContent" />
      <MemberSignature Language="F#" Value="static member StorageAccountNameAvailabilityContent : string * Azure.Core.ResourceType -&gt; Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountNameAvailabilityContent (name, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The storage account name. </param>
        <param name="resourceType"> The type of resource, Microsoft.Storage/storageAccounts. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountNameAvailabilityResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult StorageAccountNameAvailabilityResult (bool? isNameAvailable = default, Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason? reason = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult StorageAccountNameAvailabilityResult(valuetype System.Nullable`1&lt;bool&gt; isNameAvailable, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason&gt; reason, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountNameAvailabilityResult(System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountNameAvailabilityResult (Optional isNameAvailable As Nullable(Of Boolean) = Nothing, Optional reason As Nullable(Of StorageAccountNameUnavailableReason) = Nothing, Optional message As String = Nothing) As StorageAccountNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="static member StorageAccountNameAvailabilityResult : Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason&gt; * string -&gt; Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountNameAvailabilityResult (isNameAvailable, reason, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="reason" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason&gt;" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isNameAvailable"> Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used. </param>
        <param name="reason"> Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false. </param>
        <param name="message"> Gets an error message explaining the Reason value in more detail. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountSkuConversionStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus StorageAccountSkuConversionStatus (Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState? skuConversionStatus = default, Azure.ResourceManager.Storage.Models.StorageSkuName? targetSkuName = default, DateTimeOffset? startOn = default, DateTimeOffset? endOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus StorageAccountSkuConversionStatus(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState&gt; skuConversionStatus, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageSkuName&gt; targetSkuName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountSkuConversionStatus(System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuName},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageAccountSkuConversionStatus (Optional skuConversionStatus As Nullable(Of StorageAccountSkuConversionState) = Nothing, Optional targetSkuName As Nullable(Of StorageSkuName) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional endOn As Nullable(Of DateTimeOffset) = Nothing) As StorageAccountSkuConversionStatus" />
      <MemberSignature Language="F#" Value="static member StorageAccountSkuConversionStatus : Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageSkuName&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountSkuConversionStatus (skuConversionStatus, targetSkuName, startOn, endOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skuConversionStatus" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState&gt;" />
        <Parameter Name="targetSkuName" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageSkuName&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="skuConversionStatus"> This property indicates the current sku conversion status. </param>
        <param name="targetSkuName"> This property represents the target sku name to which the account sku is being converted asynchronously. </param>
        <param name="startOn"> This property represents the sku conversion start time. </param>
        <param name="endOn"> This property represents the sku conversion end time. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageEncryptionService">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageEncryptionService StorageEncryptionService (bool? isEnabled = default, DateTimeOffset? lastEnabledOn = default, Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType? keyType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageEncryptionService StorageEncryptionService(valuetype System.Nullable`1&lt;bool&gt; isEnabled, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastEnabledOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType&gt; keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageEncryptionService(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageEncryptionService (Optional isEnabled As Nullable(Of Boolean) = Nothing, Optional lastEnabledOn As Nullable(Of DateTimeOffset) = Nothing, Optional keyType As Nullable(Of StorageEncryptionKeyType) = Nothing) As StorageEncryptionService" />
      <MemberSignature Language="F#" Value="static member StorageEncryptionService : Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageEncryptionService" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageEncryptionService (isEnabled, lastEnabledOn, keyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageEncryptionService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastEnabledOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="keyType" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType&gt;" />
      </Parameters>
      <Docs>
        <param name="isEnabled"> A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled. </param>
        <param name="lastEnabledOn"> Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled. </param>
        <param name="keyType"> Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionService" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionService" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoragePrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData StoragePrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState connectionState = default, Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData StoragePrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StoragePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StoragePrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As StoragePrivateLinkServiceConnectionState = Nothing, Optional provisioningState As Nullable(Of StoragePrivateEndpointConnectionProvisioningState) = Nothing) As StoragePrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member StoragePrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState&gt; -&gt; Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StoragePrivateEndpointConnectionData (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private end point. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoragePrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData StoragePrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData StoragePrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StoragePrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StoragePrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As ResourceIdentifier = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As StoragePrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member StoragePrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StoragePrivateLinkResourceData (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageQueueData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageQueueData StorageQueueData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, int? approximateMessageCount = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageQueueData StorageQueueData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;int32&gt; approximateMessageCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageQueueData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageQueueData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional approximateMessageCount As Nullable(Of Integer) = Nothing) As StorageQueueData" />
      <MemberSignature Language="F#" Value="static member StorageQueueData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Storage.StorageQueueData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageQueueData (id, name, resourceType, systemData, metadata, approximateMessageCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageQueueData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="approximateMessageCount" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="metadata"> A name-value pair that represents queue metadata. </param>
        <param name="approximateMessageCount"> Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageQueueData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageQueueData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageSku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageSku StorageSku (Azure.ResourceManager.Storage.Models.StorageSkuName name = default, Azure.ResourceManager.Storage.Models.StorageSkuTier? tier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageSku StorageSku(valuetype Azure.ResourceManager.Storage.Models.StorageSkuName name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageSkuTier&gt; tier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSku(Azure.ResourceManager.Storage.Models.StorageSkuName,System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuTier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageSku (Optional name As StorageSkuName = Nothing, Optional tier As Nullable(Of StorageSkuTier) = Nothing) As StorageSku" />
      <MemberSignature Language="F#" Value="static member StorageSku : Azure.ResourceManager.Storage.Models.StorageSkuName * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageSkuTier&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageSku" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSku (name, tier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageSku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Azure.ResourceManager.Storage.Models.StorageSkuName" />
        <Parameter Name="tier" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageSkuTier&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
        <param name="tier"> The SKU tier. This is based on the SKU name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSku" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageSkuCapability">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageSkuCapability StorageSkuCapability (string name = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageSkuCapability StorageSkuCapability(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuCapability(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageSkuCapability (Optional name As String = Nothing, Optional value As String = Nothing) As StorageSkuCapability" />
      <MemberSignature Language="F#" Value="static member StorageSkuCapability : string * string -&gt; Azure.ResourceManager.Storage.Models.StorageSkuCapability" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuCapability (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageSkuCapability</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </param>
        <param name="value"> A string value to indicate states of given capability. Possibly 'true' or 'false'. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuCapability" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuCapability" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageSkuInformation">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageSkuInformation StorageSkuInformation (Azure.ResourceManager.Storage.Models.StorageSkuName name = default, Azure.ResourceManager.Storage.Models.StorageSkuTier? tier = default, string resourceType = default, Azure.ResourceManager.Storage.Models.StorageKind? kind = default, System.Collections.Generic.IEnumerable&lt;string&gt; locations = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSkuCapability&gt; capabilities = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSkuRestriction&gt; restrictions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageSkuInformation StorageSkuInformation(valuetype Azure.ResourceManager.Storage.Models.StorageSkuName name, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageSkuTier&gt; tier, string resourceType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageKind&gt; kind, class System.Collections.Generic.IEnumerable`1&lt;string&gt; locations, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSkuCapability&gt; capabilities, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSkuRestriction&gt; restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuInformation(Azure.ResourceManager.Storage.Models.StorageSkuName,System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuTier},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSkuCapability},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSkuRestriction})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageSkuInformation (Optional name As StorageSkuName = Nothing, Optional tier As Nullable(Of StorageSkuTier) = Nothing, Optional resourceType As String = Nothing, Optional kind As Nullable(Of StorageKind) = Nothing, Optional locations As IEnumerable(Of String) = Nothing, Optional capabilities As IEnumerable(Of StorageSkuCapability) = Nothing, Optional restrictions As IEnumerable(Of StorageSkuRestriction) = Nothing) As StorageSkuInformation" />
      <MemberSignature Language="F#" Value="static member StorageSkuInformation : Azure.ResourceManager.Storage.Models.StorageSkuName * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageSkuTier&gt; * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageKind&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.Storage.Models.StorageSkuCapability&gt; * seq&lt;Azure.ResourceManager.Storage.Models.StorageSkuRestriction&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageSkuInformation" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuInformation (name, tier, resourceType, kind, locations, capabilities, restrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageSkuInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Azure.ResourceManager.Storage.Models.StorageSkuName" />
        <Parameter Name="tier" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageSkuTier&gt;" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="kind" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageKind&gt;" />
        <Parameter Name="locations" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="capabilities" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSkuCapability&gt;" />
        <Parameter Name="restrictions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageSkuRestriction&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
        <param name="tier"> The SKU tier. This is based on the SKU name. </param>
        <param name="resourceType"> The type of the resource, usually it is 'storageAccounts'. </param>
        <param name="kind"> Indicates the type of storage account. </param>
        <param name="locations"> The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). </param>
        <param name="capabilities"> The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </param>
        <param name="restrictions"> The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageSkuRestriction">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageSkuRestriction StorageSkuRestriction (string restrictionType = default, System.Collections.Generic.IEnumerable&lt;string&gt; values = default, Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode? reasonCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageSkuRestriction StorageSkuRestriction(string restrictionType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; values, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode&gt; reasonCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuRestriction(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageSkuRestriction (Optional restrictionType As String = Nothing, Optional values As IEnumerable(Of String) = Nothing, Optional reasonCode As Nullable(Of StorageRestrictionReasonCode) = Nothing) As StorageSkuRestriction" />
      <MemberSignature Language="F#" Value="static member StorageSkuRestriction : string * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageSkuRestriction" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuRestriction (restrictionType, values, reasonCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageSkuRestriction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restrictionType" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="reasonCode" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode&gt;" />
      </Parameters>
      <Docs>
        <param name="restrictionType"> The type of restrictions. As of now only possible value for this is location. </param>
        <param name="values"> The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted. </param>
        <param name="reasonCode"> The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuRestriction" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuRestriction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageTaskAssignmentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.StorageTaskAssignmentData StorageTaskAssignmentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.StorageTaskAssignmentData StorageTaskAssignmentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageTaskAssignmentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As StorageTaskAssignmentProperties = Nothing) As StorageTaskAssignmentData" />
      <MemberSignature Language="F#" Value="static member StorageTaskAssignmentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties -&gt; Azure.ResourceManager.Storage.StorageTaskAssignmentData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskAssignmentData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageTaskAssignmentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Properties of the storage task assignment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageTaskAssignmentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageTaskAssignmentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageTaskAssignmentPatchProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageTaskAssignmentPatchProperties StorageTaskAssignmentPatchProperties (string taskId = default, bool? isEnabled = default, string description = default, Azure.ResourceManager.Storage.Models.StorageTaskAssignmentUpdateExecutionContext executionContext = default, string reportPrefix = default, Azure.ResourceManager.Storage.Models.StorageProvisioningState? provisioningState = default, Azure.ResourceManager.Storage.Models.StorageTaskReportProperties runStatus = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageTaskAssignmentPatchProperties StorageTaskAssignmentPatchProperties(string taskId, valuetype System.Nullable`1&lt;bool&gt; isEnabled, string description, class Azure.ResourceManager.Storage.Models.StorageTaskAssignmentUpdateExecutionContext executionContext, string reportPrefix, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; provisioningState, class Azure.ResourceManager.Storage.Models.StorageTaskReportProperties runStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskAssignmentPatchProperties(System.String,System.Nullable{System.Boolean},System.String,Azure.ResourceManager.Storage.Models.StorageTaskAssignmentUpdateExecutionContext,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageProvisioningState},Azure.ResourceManager.Storage.Models.StorageTaskReportProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageTaskAssignmentPatchProperties (Optional taskId As String = Nothing, Optional isEnabled As Nullable(Of Boolean) = Nothing, Optional description As String = Nothing, Optional executionContext As StorageTaskAssignmentUpdateExecutionContext = Nothing, Optional reportPrefix As String = Nothing, Optional provisioningState As Nullable(Of StorageProvisioningState) = Nothing, Optional runStatus As StorageTaskReportProperties = Nothing) As StorageTaskAssignmentPatchProperties" />
      <MemberSignature Language="F#" Value="static member StorageTaskAssignmentPatchProperties : string * Nullable&lt;bool&gt; * string * Azure.ResourceManager.Storage.Models.StorageTaskAssignmentUpdateExecutionContext * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; * Azure.ResourceManager.Storage.Models.StorageTaskReportProperties -&gt; Azure.ResourceManager.Storage.Models.StorageTaskAssignmentPatchProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskAssignmentPatchProperties (taskId, isEnabled, description, executionContext, reportPrefix, provisioningState, runStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageTaskAssignmentPatchProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="description" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="executionContext" Type="Azure.ResourceManager.Storage.Models.StorageTaskAssignmentUpdateExecutionContext" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="reportPrefix" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="runStatus" Type="Azure.ResourceManager.Storage.Models.StorageTaskReportProperties" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="taskId"> Id of the corresponding storage task. </param>
        <param name="isEnabled"> Whether the storage task assignment is enabled or not. </param>
        <param name="description"> Text that describes the purpose of the storage task assignment. </param>
        <param name="executionContext"> The storage task assignment execution context. </param>
        <param name="reportPrefix"> The storage task assignment report. </param>
        <param name="provisioningState"> Represents the provisioning state of the storage task assignment. </param>
        <param name="runStatus"> Run status of storage task assignment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskAssignmentPatchProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskAssignmentPatchProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageTaskAssignmentProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties StorageTaskAssignmentProperties (Azure.Core.ResourceIdentifier taskId = default, bool isEnabled = false, string description = default, Azure.ResourceManager.Storage.Models.StorageTaskAssignmentExecutionContext executionContext = default, string reportPrefix = default, Azure.ResourceManager.Storage.Models.StorageProvisioningState? provisioningState = default, Azure.ResourceManager.Storage.Models.StorageTaskReportProperties runStatus = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties StorageTaskAssignmentProperties(class Azure.Core.ResourceIdentifier taskId, bool isEnabled, string description, class Azure.ResourceManager.Storage.Models.StorageTaskAssignmentExecutionContext executionContext, string reportPrefix, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; provisioningState, class Azure.ResourceManager.Storage.Models.StorageTaskReportProperties runStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskAssignmentProperties(Azure.Core.ResourceIdentifier,System.Boolean,System.String,Azure.ResourceManager.Storage.Models.StorageTaskAssignmentExecutionContext,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageProvisioningState},Azure.ResourceManager.Storage.Models.StorageTaskReportProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageTaskAssignmentProperties (Optional taskId As ResourceIdentifier = Nothing, Optional isEnabled As Boolean = false, Optional description As String = Nothing, Optional executionContext As StorageTaskAssignmentExecutionContext = Nothing, Optional reportPrefix As String = Nothing, Optional provisioningState As Nullable(Of StorageProvisioningState) = Nothing, Optional runStatus As StorageTaskReportProperties = Nothing) As StorageTaskAssignmentProperties" />
      <MemberSignature Language="F#" Value="static member StorageTaskAssignmentProperties : Azure.Core.ResourceIdentifier * bool * string * Azure.ResourceManager.Storage.Models.StorageTaskAssignmentExecutionContext * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt; * Azure.ResourceManager.Storage.Models.StorageTaskReportProperties -&gt; Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskAssignmentProperties (taskId, isEnabled, description, executionContext, reportPrefix, provisioningState, runStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isEnabled" Type="System.Boolean" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="description" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="executionContext" Type="Azure.ResourceManager.Storage.Models.StorageTaskAssignmentExecutionContext" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="reportPrefix" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageProvisioningState&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="runStatus" Type="Azure.ResourceManager.Storage.Models.StorageTaskReportProperties" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="taskId"> Id of the corresponding storage task. </param>
        <param name="isEnabled"> Whether the storage task assignment is enabled or not. </param>
        <param name="description"> Text that describes the purpose of the storage task assignment. </param>
        <param name="executionContext"> The storage task assignment execution context. </param>
        <param name="reportPrefix"> The storage task assignment report. </param>
        <param name="provisioningState"> Represents the provisioning state of the storage task assignment. </param>
        <param name="runStatus"> Run status of storage task assignment. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskAssignmentProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageTaskReportInstance">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageTaskReportInstance StorageTaskReportInstance (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Storage.Models.StorageTaskReportProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageTaskReportInstance StorageTaskReportInstance(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Storage.Models.StorageTaskReportProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskReportInstance(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageTaskReportProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageTaskReportInstance (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As StorageTaskReportProperties = Nothing) As StorageTaskReportInstance" />
      <MemberSignature Language="F#" Value="static member StorageTaskReportInstance : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Storage.Models.StorageTaskReportProperties -&gt; Azure.ResourceManager.Storage.Models.StorageTaskReportInstance" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskReportInstance (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageTaskReportInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Storage.Models.StorageTaskReportProperties" Index="4" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Storage task execution report for a run instance. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskReportInstance" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskReportInstance" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageTaskReportProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageTaskReportProperties StorageTaskReportProperties (Azure.Core.ResourceIdentifier taskAssignmentId = default, Azure.Core.ResourceIdentifier storageAccountId = default, DateTimeOffset? startedOn = default, DateTimeOffset? finishedOn = default, string objectsTargetedCount = default, string objectsOperatedOnCount = default, string objectFailedCount = default, string objectsSucceededCount = default, string runStatusError = default, Azure.ResourceManager.Storage.Models.StorageTaskRunStatus? runStatusEnum = default, string summaryReportPath = default, Azure.Core.ResourceIdentifier taskId = default, string taskVersion = default, Azure.ResourceManager.Storage.Models.StorageTaskRunResult? runResult = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageTaskReportProperties StorageTaskReportProperties(class Azure.Core.ResourceIdentifier taskAssignmentId, class Azure.Core.ResourceIdentifier storageAccountId, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; finishedOn, string objectsTargetedCount, string objectsOperatedOnCount, string objectFailedCount, string objectsSucceededCount, string runStatusError, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageTaskRunStatus&gt; runStatusEnum, string summaryReportPath, class Azure.Core.ResourceIdentifier taskId, string taskVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageTaskRunResult&gt; runResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskReportProperties(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageTaskRunStatus},System.String,Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageTaskRunResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageTaskReportProperties (Optional taskAssignmentId As ResourceIdentifier = Nothing, Optional storageAccountId As ResourceIdentifier = Nothing, Optional startedOn As Nullable(Of DateTimeOffset) = Nothing, Optional finishedOn As Nullable(Of DateTimeOffset) = Nothing, Optional objectsTargetedCount As String = Nothing, Optional objectsOperatedOnCount As String = Nothing, Optional objectFailedCount As String = Nothing, Optional objectsSucceededCount As String = Nothing, Optional runStatusError As String = Nothing, Optional runStatusEnum As Nullable(Of StorageTaskRunStatus) = Nothing, Optional summaryReportPath As String = Nothing, Optional taskId As ResourceIdentifier = Nothing, Optional taskVersion As String = Nothing, Optional runResult As Nullable(Of StorageTaskRunResult) = Nothing) As StorageTaskReportProperties" />
      <MemberSignature Language="F#" Value="static member StorageTaskReportProperties : Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * string * string * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageTaskRunStatus&gt; * string * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.Storage.Models.StorageTaskRunResult&gt; -&gt; Azure.ResourceManager.Storage.Models.StorageTaskReportProperties" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageTaskReportProperties (taskAssignmentId, storageAccountId, startedOn, finishedOn, objectsTargetedCount, objectsOperatedOnCount, objectFailedCount, objectsSucceededCount, runStatusError, runStatusEnum, summaryReportPath, taskId, taskVersion, runResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageTaskReportProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskAssignmentId" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="storageAccountId" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="startedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="finishedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="objectsTargetedCount" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="objectsOperatedOnCount" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="objectFailedCount" Type="System.String" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="objectsSucceededCount" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="runStatusError" Type="System.String" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="runStatusEnum" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageTaskRunStatus&gt;" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="summaryReportPath" Type="System.String" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="taskId" Type="Azure.Core.ResourceIdentifier" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="taskVersion" Type="System.String" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="runResult" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageTaskRunResult&gt;" Index="13" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="taskAssignmentId"> Represents the Storage Task Assignment Id associated with the storage task that provided an execution context. </param>
        <param name="storageAccountId"> Represents the Storage Account Id where the storage task definition was applied and executed. </param>
        <param name="startedOn"> Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators. </param>
        <param name="finishedOn"> End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators. </param>
        <param name="objectsTargetedCount"> Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators. </param>
        <param name="objectsOperatedOnCount"> Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators. </param>
        <param name="objectFailedCount"> Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators. </param>
        <param name="objectsSucceededCount"> Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators. </param>
        <param name="runStatusError"> Well known Azure Storage error code that represents the error encountered during execution of the run instance. </param>
        <param name="runStatusEnum"> Represents the status of the execution. </param>
        <param name="summaryReportPath"> Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account. </param>
        <param name="taskId"> Storage Task Arm Id. </param>
        <param name="taskVersion"> Storage Task Version. </param>
        <param name="runResult"> Represents the overall result of the execution for the run instance. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskReportProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageTaskReportProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageUsage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageUsage StorageUsage (Azure.ResourceManager.Storage.Models.StorageUsageUnit? unit = default, int? currentValue = default, int? limit = default, Azure.ResourceManager.Storage.Models.StorageUsageName name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageUsage StorageUsage(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.StorageUsageUnit&gt; unit, valuetype System.Nullable`1&lt;int32&gt; currentValue, valuetype System.Nullable`1&lt;int32&gt; limit, class Azure.ResourceManager.Storage.Models.StorageUsageName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageUsage(System.Nullable{Azure.ResourceManager.Storage.Models.StorageUsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageUsageName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageUsage (Optional unit As Nullable(Of StorageUsageUnit) = Nothing, Optional currentValue As Nullable(Of Integer) = Nothing, Optional limit As Nullable(Of Integer) = Nothing, Optional name As StorageUsageName = Nothing) As StorageUsage" />
      <MemberSignature Language="F#" Value="static member StorageUsage : Nullable&lt;Azure.ResourceManager.Storage.Models.StorageUsageUnit&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.Storage.Models.StorageUsageName -&gt; Azure.ResourceManager.Storage.Models.StorageUsage" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageUsage (unit, currentValue, limit, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.StorageUsageUnit&gt;" />
        <Parameter Name="currentValue" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="name" Type="Azure.ResourceManager.Storage.Models.StorageUsageName" />
      </Parameters>
      <Docs>
        <param name="unit"> Gets the unit of measurement. </param>
        <param name="currentValue"> Gets the current count of the allocated resources in the subscription. </param>
        <param name="limit"> Gets the maximum count of the resources that can be allocated in the subscription. </param>
        <param name="name"> Gets the name of the type of usage. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageUsageName">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.StorageUsageName StorageUsageName (string value = default, string localizedValue = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.StorageUsageName StorageUsageName(string value, string localizedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageUsageName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StorageUsageName (Optional value As String = Nothing, Optional localizedValue As String = Nothing) As StorageUsageName" />
      <MemberSignature Language="F#" Value="static member StorageUsageName : string * string -&gt; Azure.ResourceManager.Storage.Models.StorageUsageName" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageUsageName (value, localizedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.StorageUsageName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="localizedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"> Gets a string describing the resource name. </param>
        <param name="localizedValue"> Gets a localized string describing the resource name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsageName" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsageName" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.TableData TableData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string tableName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier&gt; signedIdentifiers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.TableData TableData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string tableName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier&gt; signedIdentifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.TableData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TableData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tableName As String = Nothing, Optional signedIdentifiers As IEnumerable(Of StorageTableSignedIdentifier) = Nothing) As TableData" />
      <MemberSignature Language="F#" Value="static member TableData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier&gt; -&gt; Azure.ResourceManager.Storage.TableData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.TableData (id, name, resourceType, systemData, tableName, signedIdentifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.TableData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="signedIdentifiers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tableName"> Table name under the specified account. </param>
        <param name="signedIdentifiers"> List of stored access policies specified on the table. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.TableData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableServiceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.TableServiceData TableServiceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.TableServiceData TableServiceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; corsRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.TableServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TableServiceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional corsRules As IEnumerable(Of StorageCorsRule) = Nothing) As TableServiceData" />
      <MemberSignature Language="F#" Value="static member TableServiceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt; -&gt; Azure.ResourceManager.Storage.TableServiceData" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.TableServiceData (id, name, resourceType, systemData, corsRules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.TableServiceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="corsRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Storage.Models.StorageCorsRule&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="corsRules"> Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableServiceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.TableServiceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateHistoryEntry">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Storage.Models.UpdateHistoryEntry UpdateHistoryEntry (Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType? updateType = default, int? immutabilityPeriodSinceCreationInDays = default, DateTimeOffset? timestamp = default, string objectIdentifier = default, Guid? tenantId = default, string upn = default, bool? allowProtectedAppendWrites = default, bool? allowProtectedAppendWritesAll = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Storage.Models.UpdateHistoryEntry UpdateHistoryEntry(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType&gt; updateType, valuetype System.Nullable`1&lt;int32&gt; immutabilityPeriodSinceCreationInDays, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp, string objectIdentifier, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId, string upn, valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWrites, valuetype System.Nullable`1&lt;bool&gt; allowProtectedAppendWritesAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.UpdateHistoryEntry(System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Guid},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateHistoryEntry (Optional updateType As Nullable(Of ImmutabilityPolicyUpdateType) = Nothing, Optional immutabilityPeriodSinceCreationInDays As Nullable(Of Integer) = Nothing, Optional timestamp As Nullable(Of DateTimeOffset) = Nothing, Optional objectIdentifier As String = Nothing, Optional tenantId As Nullable(Of Guid) = Nothing, Optional upn As String = Nothing, Optional allowProtectedAppendWrites As Nullable(Of Boolean) = Nothing, Optional allowProtectedAppendWritesAll As Nullable(Of Boolean) = Nothing) As UpdateHistoryEntry" />
      <MemberSignature Language="F#" Value="static member UpdateHistoryEntry : Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;Guid&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Storage.Models.UpdateHistoryEntry" Usage="Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.UpdateHistoryEntry (updateType, immutabilityPeriodSinceCreationInDays, timestamp, objectIdentifier, tenantId, upn, allowProtectedAppendWrites, allowProtectedAppendWritesAll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.Models.UpdateHistoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateType" Type="System.Nullable&lt;Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType&gt;" />
        <Parameter Name="immutabilityPeriodSinceCreationInDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="objectIdentifier" Type="System.String" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="upn" Type="System.String" />
        <Parameter Name="allowProtectedAppendWrites" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="allowProtectedAppendWritesAll" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="updateType"> The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend. </param>
        <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
        <param name="timestamp"> Returns the date and time the ImmutabilityPolicy was updated. </param>
        <param name="objectIdentifier"> Returns the Object ID of the user who updated the ImmutabilityPolicy. </param>
        <param name="tenantId"> Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy. </param>
        <param name="upn"> Returns the User Principal Name of the user who updated the ImmutabilityPolicy. </param>
        <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
        <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
