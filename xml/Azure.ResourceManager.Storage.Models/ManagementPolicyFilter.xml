<Type Name="ManagementPolicyFilter" FullName="Azure.ResourceManager.Storage.Models.ManagementPolicyFilter">
  <TypeSignature Language="C#" Value="public class ManagementPolicyFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementPolicyFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementPolicyFilter" />
  <TypeSignature Language="F#" Value="type ManagementPolicyFilter = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementPolicyFilter (System.Collections.Generic.IEnumerable&lt;string&gt; blobTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; blobTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobTypes As IEnumerable(Of String))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Storage.Models.ManagementPolicyFilter : seq&lt;string&gt; -&gt; Azure.ResourceManager.Storage.Models.ManagementPolicyFilter" Usage="new Azure.ResourceManager.Storage.Models.ManagementPolicyFilter blobTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobTypes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="blobTypes"> An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob. </param>
        <summary> Initializes a new instance of ManagementPolicyFilter. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blobTypes" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BlobIndexMatch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter&gt; BlobIndexMatch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter&gt; BlobIndexMatch" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.BlobIndexMatch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlobIndexMatch As IList(Of ManagementPolicyTagFilter)" />
      <MemberSignature Language="F#" Value="member this.BlobIndexMatch : System.Collections.Generic.IList&lt;Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter&gt;" Usage="Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.BlobIndexMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An array of blob index tag based filters, there can be at most 10 tag filters. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; BlobTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; BlobTypes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.BlobTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlobTypes As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.BlobTypes : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.BlobTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixMatch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; PrefixMatch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; PrefixMatch" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.PrefixMatch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixMatch As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.PrefixMatch : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.PrefixMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An array of strings for prefixes to be match. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
