<Type Name="ArmContainerServiceModelFactory" FullName="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmContainerServiceModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmContainerServiceModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmContainerServiceModelFactory" />
  <TypeSignature Language="F#" Value="type ArmContainerServiceModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AgentPoolAvailableVersion">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion AgentPoolAvailableVersion (bool? isDefault = default, string kubernetesVersion = default, bool? isPreview = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion AgentPoolAvailableVersion(valuetype System.Nullable`1&lt;bool&gt; isDefault, string kubernetesVersion, valuetype System.Nullable`1&lt;bool&gt; isPreview) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolAvailableVersion(System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentPoolAvailableVersion (Optional isDefault As Nullable(Of Boolean) = Nothing, Optional kubernetesVersion As String = Nothing, Optional isPreview As Nullable(Of Boolean) = Nothing) As AgentPoolAvailableVersion" />
      <MemberSignature Language="F#" Value="static member AgentPoolAvailableVersion : Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolAvailableVersion (isDefault, kubernetesVersion, isPreview)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isDefault" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="kubernetesVersion" Type="System.String" />
        <Parameter Name="isPreview" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="isDefault"> Whether this version is the default agent pool version. </param>
        <param name="kubernetesVersion"> The Kubernetes version (major.minor.patch). </param>
        <param name="isPreview"> Whether Kubernetes version is currently in preview. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentPoolAvailableVersions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersions AgentPoolAvailableVersions (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion&gt; agentPoolVersions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersions AgentPoolAvailableVersions(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion&gt; agentPoolVersions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolAvailableVersions(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentPoolAvailableVersions (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional agentPoolVersions As IEnumerable(Of AgentPoolAvailableVersion) = Nothing) As AgentPoolAvailableVersions" />
      <MemberSignature Language="F#" Value="static member AgentPoolAvailableVersions : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion&gt; -&gt; Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersions" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolAvailableVersions (id, name, resourceType, systemData, agentPoolVersions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="agentPoolVersions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersion&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="agentPoolVersions"> List of versions available for agent pool. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersions" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.AgentPoolAvailableVersions" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentPoolSnapshotData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.AgentPoolSnapshotData AgentPoolSnapshotData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.Core.ResourceIdentifier creationDataSourceResourceId = default, Azure.ResourceManager.ContainerService.Models.SnapshotType? snapshotType = default, string kubernetesVersion = default, string nodeImageVersion = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType? osType = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku? osSku = default, string vmSize = default, bool? enableFips = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.AgentPoolSnapshotData AgentPoolSnapshotData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.Core.ResourceIdentifier creationDataSourceResourceId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.SnapshotType&gt; snapshotType, string kubernetesVersion, string nodeImageVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; osType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; osSku, string vmSize, valuetype System.Nullable`1&lt;bool&gt; enableFips) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolSnapshotData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ContainerService.Models.SnapshotType},System.String,System.String,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku},System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentPoolSnapshotData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional creationDataSourceResourceId As ResourceIdentifier = Nothing, Optional snapshotType As Nullable(Of SnapshotType) = Nothing, Optional kubernetesVersion As String = Nothing, Optional nodeImageVersion As String = Nothing, Optional osType As Nullable(Of ContainerServiceOSType) = Nothing, Optional osSku As Nullable(Of ContainerServiceOSSku) = Nothing, Optional vmSize As String = Nothing, Optional enableFips As Nullable(Of Boolean) = Nothing) As AgentPoolSnapshotData" />
      <MemberSignature Language="F#" Value="static member AgentPoolSnapshotData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ContainerService.Models.SnapshotType&gt; * string * string * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerService.AgentPoolSnapshotData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolSnapshotData (id, name, resourceType, systemData, tags, location, creationDataSourceResourceId, snapshotType, kubernetesVersion, nodeImageVersion, osType, osSku, vmSize, enableFips)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.AgentPoolSnapshotData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="creationDataSourceResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="snapshotType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.SnapshotType&gt;" />
        <Parameter Name="kubernetesVersion" Type="System.String" />
        <Parameter Name="nodeImageVersion" Type="System.String" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt;" />
        <Parameter Name="osSku" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt;" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="enableFips" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="creationDataSourceResourceId"> CreationData to be used to specify the source agent pool resource ID to create this snapshot. </param>
        <param name="snapshotType"> The type of a snapshot. The default is NodePool. </param>
        <param name="kubernetesVersion"> The version of Kubernetes. </param>
        <param name="nodeImageVersion"> The version of node image. </param>
        <param name="osType"> The operating system type. The default is Linux. </param>
        <param name="osSku"> Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows. </param>
        <param name="vmSize"> The size of the VM. </param>
        <param name="enableFips"> Whether to use a FIPS-enabled OS. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentPoolUpgradeProfileData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileData AgentPoolUpgradeProfileData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string kubernetesVersion = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType osType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem&gt; upgrades = default, string latestNodeImageVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileData AgentPoolUpgradeProfileData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string kubernetesVersion, valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType osType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem&gt; upgrades, string latestNodeImageVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolUpgradeProfileData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentPoolUpgradeProfileData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional kubernetesVersion As String = Nothing, Optional osType As ContainerServiceOSType = Nothing, Optional upgrades As IEnumerable(Of AgentPoolUpgradeProfilePropertiesUpgradesItem) = Nothing, Optional latestNodeImageVersion As String = Nothing) As AgentPoolUpgradeProfileData" />
      <MemberSignature Language="F#" Value="static member AgentPoolUpgradeProfileData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType * seq&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem&gt; * string -&gt; Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolUpgradeProfileData (id, name, resourceType, systemData, kubernetesVersion, osType, upgrades, latestNodeImageVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="kubernetesVersion" Type="System.String" />
        <Parameter Name="osType" Type="Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType" />
        <Parameter Name="upgrades" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem&gt;" />
        <Parameter Name="latestNodeImageVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="kubernetesVersion"> The Kubernetes version (major.minor.patch). </param>
        <param name="osType"> The operating system type. The default is Linux. </param>
        <param name="upgrades"> List of orchestrator types and versions available for upgrade. </param>
        <param name="latestNodeImageVersion"> The latest AKS supported node image version. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentPoolUpgradeProfilePropertiesUpgradesItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem AgentPoolUpgradeProfilePropertiesUpgradesItem (string kubernetesVersion = default, bool? isPreview = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem AgentPoolUpgradeProfilePropertiesUpgradesItem(string kubernetesVersion, valuetype System.Nullable`1&lt;bool&gt; isPreview) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolUpgradeProfilePropertiesUpgradesItem(System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentPoolUpgradeProfilePropertiesUpgradesItem (Optional kubernetesVersion As String = Nothing, Optional isPreview As Nullable(Of Boolean) = Nothing) As AgentPoolUpgradeProfilePropertiesUpgradesItem" />
      <MemberSignature Language="F#" Value="static member AgentPoolUpgradeProfilePropertiesUpgradesItem : string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.AgentPoolUpgradeProfilePropertiesUpgradesItem (kubernetesVersion, isPreview)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kubernetesVersion" Type="System.String" />
        <Parameter Name="isPreview" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="kubernetesVersion"> The Kubernetes version (major.minor.patch). </param>
        <param name="isPreview"> Whether the Kubernetes version is currently in preview. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeProfilePropertiesUpgradesItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceAgentPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolData ContainerServiceAgentPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, int? count = default, string vmSize = default, int? osDiskSizeInGB = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType? osDiskType = default, Azure.ResourceManager.ContainerService.Models.KubeletDiskType? kubeletDiskType = default, Azure.ResourceManager.ContainerService.Models.WorkloadRuntime? workloadRuntime = default, Azure.Core.ResourceIdentifier vnetSubnetId = default, Azure.Core.ResourceIdentifier podSubnetId = default, int? maxPods = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType? osType = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku? osSku = default, int? maxCount = default, int? minCount = default, bool? enableAutoScaling = default, Azure.ResourceManager.ContainerService.Models.ScaleDownMode? scaleDownMode = default, Azure.ResourceManager.ContainerService.Models.AgentPoolType? typePropertiesType = default, Azure.ResourceManager.ContainerService.Models.AgentPoolMode? mode = default, string orchestratorVersion = default, string currentOrchestratorVersion = default, string nodeImageVersion = default, Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings upgradeSettings = default, string provisioningState = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode? powerStateCode = default, System.Collections.Generic.IEnumerable&lt;string&gt; availabilityZones = default, bool? enableNodePublicIP = default, Azure.Core.ResourceIdentifier nodePublicIPPrefixId = default, Azure.ResourceManager.ContainerService.Models.ScaleSetPriority? scaleSetPriority = default, Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy? scaleSetEvictionPolicy = default, float? spotMaxPrice = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IDictionary&lt;string,string&gt; nodeLabels = default, System.Collections.Generic.IEnumerable&lt;string&gt; nodeTaints = default, Azure.Core.ResourceIdentifier proximityPlacementGroupId = default, Azure.ResourceManager.ContainerService.Models.KubeletConfig kubeletConfig = default, Azure.ResourceManager.ContainerService.Models.LinuxOSConfig linuxOSConfig = default, bool? enableEncryptionAtHost = default, bool? enableUltraSsd = default, bool? enableFips = default, Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile? gpuInstanceProfile = default, Azure.Core.ResourceIdentifier creationDataSourceResourceId = default, Azure.Core.ResourceIdentifier capacityReservationGroupId = default, Azure.Core.ResourceIdentifier hostGroupId = default, Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile networkProfile = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolData ContainerServiceAgentPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;int32&gt; count, string vmSize, valuetype System.Nullable`1&lt;int32&gt; osDiskSizeInGB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt; osDiskType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; kubeletDiskType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; workloadRuntime, class Azure.Core.ResourceIdentifier vnetSubnetId, class Azure.Core.ResourceIdentifier podSubnetId, valuetype System.Nullable`1&lt;int32&gt; maxPods, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; osType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; osSku, valuetype System.Nullable`1&lt;int32&gt; maxCount, valuetype System.Nullable`1&lt;int32&gt; minCount, valuetype System.Nullable`1&lt;bool&gt; enableAutoScaling, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; scaleDownMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; typePropertiesType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; mode, string orchestratorVersion, string currentOrchestratorVersion, string nodeImageVersion, class Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings upgradeSettings, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; powerStateCode, class System.Collections.Generic.IEnumerable`1&lt;string&gt; availabilityZones, valuetype System.Nullable`1&lt;bool&gt; enableNodePublicIP, class Azure.Core.ResourceIdentifier nodePublicIPPrefixId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; scaleSetPriority, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; scaleSetEvictionPolicy, valuetype System.Nullable`1&lt;float32&gt; spotMaxPrice, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; nodeLabels, class System.Collections.Generic.IEnumerable`1&lt;string&gt; nodeTaints, class Azure.Core.ResourceIdentifier proximityPlacementGroupId, class Azure.ResourceManager.ContainerService.Models.KubeletConfig kubeletConfig, class Azure.ResourceManager.ContainerService.Models.LinuxOSConfig linuxOSConfig, valuetype System.Nullable`1&lt;bool&gt; enableEncryptionAtHost, valuetype System.Nullable`1&lt;bool&gt; enableUltraSsd, valuetype System.Nullable`1&lt;bool&gt; enableFips, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt; gpuInstanceProfile, class Azure.Core.ResourceIdentifier creationDataSourceResourceId, class Azure.Core.ResourceIdentifier capacityReservationGroupId, class Azure.Core.ResourceIdentifier hostGroupId, class Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile networkProfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceAgentPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType},System.Nullable{Azure.ResourceManager.ContainerService.Models.KubeletDiskType},System.Nullable{Azure.ResourceManager.ContainerService.Models.WorkloadRuntime},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleDownMode},System.Nullable{Azure.ResourceManager.ContainerService.Models.AgentPoolType},System.Nullable{Azure.ResourceManager.ContainerService.Models.AgentPoolMode},System.String,System.String,System.String,Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings,System.String,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleSetPriority},System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy},System.Nullable{System.Single},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String},Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerService.Models.KubeletConfig,Azure.ResourceManager.ContainerService.Models.LinuxOSConfig,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceAgentPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional count As Nullable(Of Integer) = Nothing, Optional vmSize As String = Nothing, Optional osDiskSizeInGB As Nullable(Of Integer) = Nothing, Optional osDiskType As Nullable(Of ContainerServiceOSDiskType) = Nothing, Optional kubeletDiskType As Nullable(Of KubeletDiskType) = Nothing, Optional workloadRuntime As Nullable(Of WorkloadRuntime) = Nothing, Optional vnetSubnetId As ResourceIdentifier = Nothing, Optional podSubnetId As ResourceIdentifier = Nothing, Optional maxPods As Nullable(Of Integer) = Nothing, Optional osType As Nullable(Of ContainerServiceOSType) = Nothing, Optional osSku As Nullable(Of ContainerServiceOSSku) = Nothing, Optional maxCount As Nullable(Of Integer) = Nothing, Optional minCount As Nullable(Of Integer) = Nothing, Optional enableAutoScaling As Nullable(Of Boolean) = Nothing, Optional scaleDownMode As Nullable(Of ScaleDownMode) = Nothing, Optional typePropertiesType As Nullable(Of AgentPoolType) = Nothing, Optional mode As Nullable(Of AgentPoolMode) = Nothing, Optional orchestratorVersion As String = Nothing, Optional currentOrchestratorVersion As String = Nothing, Optional nodeImageVersion As String = Nothing, Optional upgradeSettings As AgentPoolUpgradeSettings = Nothing, Optional provisioningState As String = Nothing, Optional powerStateCode As Nullable(Of ContainerServiceStateCode) = Nothing, Optional availabilityZones As IEnumerable(Of String) = Nothing, Optional enableNodePublicIP As Nullable(Of Boolean) = Nothing, Optional nodePublicIPPrefixId As ResourceIdentifier = Nothing, Optional scaleSetPriority As Nullable(Of ScaleSetPriority) = Nothing, Optional scaleSetEvictionPolicy As Nullable(Of ScaleSetEvictionPolicy) = Nothing, Optional spotMaxPrice As Nullable(Of Single) = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional nodeLabels As IDictionary(Of String, String) = Nothing, Optional nodeTaints As IEnumerable(Of String) = Nothing, Optional proximityPlacementGroupId As ResourceIdentifier = Nothing, Optional kubeletConfig As KubeletConfig = Nothing, Optional linuxOSConfig As LinuxOSConfig = Nothing, Optional enableEncryptionAtHost As Nullable(Of Boolean) = Nothing, Optional enableUltraSsd As Nullable(Of Boolean) = Nothing, Optional enableFips As Nullable(Of Boolean) = Nothing, Optional gpuInstanceProfile As Nullable(Of GpuInstanceProfile) = Nothing, Optional creationDataSourceResourceId As ResourceIdentifier = Nothing, Optional capacityReservationGroupId As ResourceIdentifier = Nothing, Optional hostGroupId As ResourceIdentifier = Nothing, Optional networkProfile As AgentPoolNetworkProfile = Nothing) As ContainerServiceAgentPoolData" />
      <MemberSignature Language="F#" Value="static member ContainerServiceAgentPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; * string * string * string * Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings * string * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; * Nullable&lt;single&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * seq&lt;string&gt; * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerService.Models.KubeletConfig * Azure.ResourceManager.ContainerService.Models.LinuxOSConfig * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile -&gt; Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceAgentPoolData (id, name, resourceType, systemData, count, vmSize, osDiskSizeInGB, osDiskType, kubeletDiskType, workloadRuntime, vnetSubnetId, podSubnetId, maxPods, osType, osSku, maxCount, minCount, enableAutoScaling, scaleDownMode, typePropertiesType, mode, orchestratorVersion, currentOrchestratorVersion, nodeImageVersion, upgradeSettings, provisioningState, powerStateCode, availabilityZones, enableNodePublicIP, nodePublicIPPrefixId, scaleSetPriority, scaleSetEvictionPolicy, spotMaxPrice, tags, nodeLabels, nodeTaints, proximityPlacementGroupId, kubeletConfig, linuxOSConfig, enableEncryptionAtHost, enableUltraSsd, enableFips, gpuInstanceProfile, creationDataSourceResourceId, capacityReservationGroupId, hostGroupId, networkProfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="osDiskSizeInGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt;" />
        <Parameter Name="kubeletDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt;" />
        <Parameter Name="workloadRuntime" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt;" />
        <Parameter Name="vnetSubnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="podSubnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="maxPods" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt;" />
        <Parameter Name="osSku" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt;" />
        <Parameter Name="maxCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enableAutoScaling" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scaleDownMode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt;" />
        <Parameter Name="typePropertiesType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt;" />
        <Parameter Name="mode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt;" />
        <Parameter Name="orchestratorVersion" Type="System.String" />
        <Parameter Name="currentOrchestratorVersion" Type="System.String" />
        <Parameter Name="nodeImageVersion" Type="System.String" />
        <Parameter Name="upgradeSettings" Type="Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="powerStateCode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt;" />
        <Parameter Name="availabilityZones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="enableNodePublicIP" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="nodePublicIPPrefixId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scaleSetPriority" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt;" />
        <Parameter Name="scaleSetEvictionPolicy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt;" />
        <Parameter Name="spotMaxPrice" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeLabels" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeTaints" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="proximityPlacementGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kubeletConfig" Type="Azure.ResourceManager.ContainerService.Models.KubeletConfig" />
        <Parameter Name="linuxOSConfig" Type="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig" />
        <Parameter Name="enableEncryptionAtHost" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableUltraSsd" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableFips" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="gpuInstanceProfile" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt;" />
        <Parameter Name="creationDataSourceResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="capacityReservationGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="hostGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="networkProfile" Type="Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="count"> Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. </param>
        <param name="vmSize"> VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions. </param>
        <param name="osDiskSizeInGB"> OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </param>
        <param name="osDiskType"> The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). </param>
        <param name="kubeletDiskType"> Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. </param>
        <param name="workloadRuntime"> Determines the type of workload a node can run. </param>
        <param name="vnetSubnetId"> If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </param>
        <param name="podSubnetId"> If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </param>
        <param name="maxPods"> The maximum number of pods that can run on a node. </param>
        <param name="osType"> The operating system type. The default is Linux. </param>
        <param name="osSku"> Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows. </param>
        <param name="maxCount"> The maximum number of nodes for auto-scaling. </param>
        <param name="minCount"> The minimum number of nodes for auto-scaling. </param>
        <param name="enableAutoScaling"> Whether to enable auto-scaler. </param>
        <param name="scaleDownMode"> This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. </param>
        <param name="typePropertiesType"> The type of Agent Pool. </param>
        <param name="mode"> A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools. </param>
        <param name="orchestratorVersion"> Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). </param>
        <param name="currentOrchestratorVersion"> If orchestratorVersion is a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If orchestratorVersion is &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used. </param>
        <param name="nodeImageVersion"> The version of node image. </param>
        <param name="upgradeSettings"> Settings for upgrading the agentpool. </param>
        <param name="provisioningState"> The current deployment or provisioning state. </param>
        <param name="powerStateCode"> When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded. </param>
        <param name="availabilityZones"> The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. </param>
        <param name="enableNodePublicIP"> Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. </param>
        <param name="nodePublicIPPrefixId"> This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}. </param>
        <param name="scaleSetPriority"> The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. </param>
        <param name="scaleSetEvictionPolicy"> This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. </param>
        <param name="spotMaxPrice"> Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing). </param>
        <param name="tags"> The tags to be persisted on the agent pool virtual machine scale set. </param>
        <param name="nodeLabels"> The node labels to be persisted across all nodes in agent pool. </param>
        <param name="nodeTaints"> The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. </param>
        <param name="proximityPlacementGroupId"> The ID for Proximity Placement Group. </param>
        <param name="kubeletConfig"> The Kubelet configuration on the agent pool nodes. </param>
        <param name="linuxOSConfig"> The OS configuration of Linux agent nodes. </param>
        <param name="enableEncryptionAtHost"> This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption. </param>
        <param name="enableUltraSsd"> Whether to enable UltraSSD. </param>
        <param name="enableFips"> See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. </param>
        <param name="gpuInstanceProfile"> GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. </param>
        <param name="creationDataSourceResourceId"> CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot. </param>
        <param name="capacityReservationGroupId"> AKS will associate the specified agent pool with the Capacity Reservation Group. </param>
        <param name="hostGroupId"> This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts). </param>
        <param name="networkProfile"> Network-related settings of an agent pool. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceEndpointDependency">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency ContainerServiceEndpointDependency (string domainName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail&gt; endpointDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency ContainerServiceEndpointDependency(string domainName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail&gt; endpointDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceEndpointDependency(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceEndpointDependency (Optional domainName As String = Nothing, Optional endpointDetails As IEnumerable(Of ContainerServiceEndpointDetail) = Nothing) As ContainerServiceEndpointDependency" />
      <MemberSignature Language="F#" Value="static member ContainerServiceEndpointDependency : string * seq&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceEndpointDependency (domainName, endpointDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="endpointDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail&gt;" />
      </Parameters>
      <Docs>
        <param name="domainName"> The domain name of the dependency. </param>
        <param name="endpointDetails"> The Ports and Protocols used when connecting to domainName. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceEndpointDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail ContainerServiceEndpointDetail (System.Net.IPAddress ipAddress = default, int? port = default, string protocol = default, string description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail ContainerServiceEndpointDetail(class System.Net.IPAddress ipAddress, valuetype System.Nullable`1&lt;int32&gt; port, string protocol, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceEndpointDetail(System.Net.IPAddress,System.Nullable{System.Int32},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceEndpointDetail (Optional ipAddress As IPAddress = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional protocol As String = Nothing, Optional description As String = Nothing) As ContainerServiceEndpointDetail" />
      <MemberSignature Language="F#" Value="static member ContainerServiceEndpointDetail : System.Net.IPAddress * Nullable&lt;int&gt; * string * string -&gt; Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceEndpointDetail (ipAddress, port, protocol, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddress" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="protocol" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ipAddress"> An IP Address that Domain Name currently resolves to. </param>
        <param name="port"> The port an endpoint is connected to. </param>
        <param name="protocol"> The protocol used for connection. </param>
        <param name="description"> Description of the detail. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceMaintenanceConfigurationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationData ContainerServiceMaintenanceConfigurationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeInWeek&gt; timesInWeek = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeSpan&gt; notAllowedTimes = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceMaintenanceWindow maintenanceWindow = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationData ContainerServiceMaintenanceConfigurationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeInWeek&gt; timesInWeek, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeSpan&gt; notAllowedTimes, class Azure.ResourceManager.ContainerService.Models.ContainerServiceMaintenanceWindow maintenanceWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceMaintenanceConfigurationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeInWeek},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeSpan},Azure.ResourceManager.ContainerService.Models.ContainerServiceMaintenanceWindow)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceMaintenanceConfigurationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional timesInWeek As IEnumerable(Of ContainerServiceTimeInWeek) = Nothing, Optional notAllowedTimes As IEnumerable(Of ContainerServiceTimeSpan) = Nothing, Optional maintenanceWindow As ContainerServiceMaintenanceWindow = Nothing) As ContainerServiceMaintenanceConfigurationData" />
      <MemberSignature Language="F#" Value="static member ContainerServiceMaintenanceConfigurationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeInWeek&gt; * seq&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeSpan&gt; * Azure.ResourceManager.ContainerService.Models.ContainerServiceMaintenanceWindow -&gt; Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceMaintenanceConfigurationData (id, name, resourceType, systemData, timesInWeek, notAllowedTimes, maintenanceWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="timesInWeek" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeInWeek&gt;" />
        <Parameter Name="notAllowedTimes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTimeSpan&gt;" />
        <Parameter Name="maintenanceWindow" Type="Azure.ResourceManager.ContainerService.Models.ContainerServiceMaintenanceWindow" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="timesInWeek"> If two array entries specify the same day of the week, the applied configuration is the union of times in both entries. </param>
        <param name="notAllowedTimes"> Time slots on which upgrade is not allowed. </param>
        <param name="maintenanceWindow"> Maintenance window for the maintenance configuration. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceManagedClusterData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterData ContainerServiceManagedClusterData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterSku sku = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterIdentity clusterIdentity = default, string provisioningState = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode? powerStateCode = default, int? maxAgentPools = default, string kubernetesVersion = default, string currentKubernetesVersion = default, string dnsPrefix = default, string fqdnSubdomain = default, string fqdn = default, string privateFqdn = default, string azurePortalFqdn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile&gt; agentPoolProfiles = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceLinuxProfile linuxProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterWindowsProfile windowsProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterServicePrincipalProfile servicePrincipalProfile = default, System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile&gt; addonProfiles = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProfile podIdentityProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile oidcIssuerProfile = default, string nodeResourceGroup = default, bool? enableRbac = default, Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan? supportPlan = default, bool? enablePodSecurityPolicy = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceNetworkProfile networkProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterAadProfile aadProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoUpgradeProfile autoUpgradeProfile = default, Azure.ResourceManager.ContainerService.Models.UpgradeOverrideSettings upgradeOverrideSettings = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoScalerProfile autoScalerProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterApiServerAccessProfile apiServerAccessProfile = default, Azure.Core.ResourceIdentifier diskEncryptionSetId = default, System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity&gt; identityProfile = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData&gt; privateLinkResources = default, bool? disableLocalAccounts = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterHttpProxyConfig httpProxyConfig = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterSecurityProfile securityProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterStorageProfile storageProfile = default, Azure.ResourceManager.ContainerService.Models.ContainerServicePublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterWorkloadAutoScalerProfile workloadAutoScalerProfile = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterMonitorProfileMetrics azureMonitorMetrics = default, Azure.ResourceManager.ContainerService.Models.ServiceMeshProfile serviceMeshProfile = default, Azure.Core.ResourceIdentifier resourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterData ContainerServiceManagedClusterData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.ContainerService.Models.ManagedClusterSku sku, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, class Azure.ResourceManager.ContainerService.Models.ManagedClusterIdentity clusterIdentity, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; powerStateCode, valuetype System.Nullable`1&lt;int32&gt; maxAgentPools, string kubernetesVersion, string currentKubernetesVersion, string dnsPrefix, string fqdnSubdomain, string fqdn, string privateFqdn, string azurePortalFqdn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile&gt; agentPoolProfiles, class Azure.ResourceManager.ContainerService.Models.ContainerServiceLinuxProfile linuxProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterWindowsProfile windowsProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterServicePrincipalProfile servicePrincipalProfile, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile&gt; addonProfiles, class Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProfile podIdentityProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile oidcIssuerProfile, string nodeResourceGroup, valuetype System.Nullable`1&lt;bool&gt; enableRbac, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan&gt; supportPlan, valuetype System.Nullable`1&lt;bool&gt; enablePodSecurityPolicy, class Azure.ResourceManager.ContainerService.Models.ContainerServiceNetworkProfile networkProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterAadProfile aadProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoUpgradeProfile autoUpgradeProfile, class Azure.ResourceManager.ContainerService.Models.UpgradeOverrideSettings upgradeOverrideSettings, class Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoScalerProfile autoScalerProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterApiServerAccessProfile apiServerAccessProfile, class Azure.Core.ResourceIdentifier diskEncryptionSetId, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity&gt; identityProfile, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData&gt; privateLinkResources, valuetype System.Nullable`1&lt;bool&gt; disableLocalAccounts, class Azure.ResourceManager.ContainerService.Models.ManagedClusterHttpProxyConfig httpProxyConfig, class Azure.ResourceManager.ContainerService.Models.ManagedClusterSecurityProfile securityProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterStorageProfile storageProfile, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServicePublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.ContainerService.Models.ManagedClusterWorkloadAutoScalerProfile workloadAutoScalerProfile, class Azure.ResourceManager.ContainerService.Models.ManagedClusterMonitorProfileMetrics azureMonitorMetrics, class Azure.ResourceManager.ContainerService.Models.ServiceMeshProfile serviceMeshProfile, class Azure.Core.ResourceIdentifier resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceManagedClusterData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.ContainerService.Models.ManagedClusterSku,Azure.ResourceManager.Resources.Models.ExtendedLocation,Azure.ResourceManager.ContainerService.Models.ManagedClusterIdentity,System.String,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile},Azure.ResourceManager.ContainerService.Models.ContainerServiceLinuxProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterWindowsProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterServicePrincipalProfile,System.Collections.Generic.IDictionary{System.String,Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile},Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan},System.Nullable{System.Boolean},Azure.ResourceManager.ContainerService.Models.ContainerServiceNetworkProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterAadProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoUpgradeProfile,Azure.ResourceManager.ContainerService.Models.UpgradeOverrideSettings,Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoScalerProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterApiServerAccessProfile,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData},System.Nullable{System.Boolean},Azure.ResourceManager.ContainerService.Models.ManagedClusterHttpProxyConfig,Azure.ResourceManager.ContainerService.Models.ManagedClusterSecurityProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterStorageProfile,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServicePublicNetworkAccess},Azure.ResourceManager.ContainerService.Models.ManagedClusterWorkloadAutoScalerProfile,Azure.ResourceManager.ContainerService.Models.ManagedClusterMonitorProfileMetrics,Azure.ResourceManager.ContainerService.Models.ServiceMeshProfile,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceManagedClusterData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional sku As ManagedClusterSku = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional clusterIdentity As ManagedClusterIdentity = Nothing, Optional provisioningState As String = Nothing, Optional powerStateCode As Nullable(Of ContainerServiceStateCode) = Nothing, Optional maxAgentPools As Nullable(Of Integer) = Nothing, Optional kubernetesVersion As String = Nothing, Optional currentKubernetesVersion As String = Nothing, Optional dnsPrefix As String = Nothing, Optional fqdnSubdomain As String = Nothing, Optional fqdn As String = Nothing, Optional privateFqdn As String = Nothing, Optional azurePortalFqdn As String = Nothing, Optional agentPoolProfiles As IEnumerable(Of ManagedClusterAgentPoolProfile) = Nothing, Optional linuxProfile As ContainerServiceLinuxProfile = Nothing, Optional windowsProfile As ManagedClusterWindowsProfile = Nothing, Optional servicePrincipalProfile As ManagedClusterServicePrincipalProfile = Nothing, Optional addonProfiles As IDictionary(Of String, ManagedClusterAddonProfile) = Nothing, Optional podIdentityProfile As ManagedClusterPodIdentityProfile = Nothing, Optional oidcIssuerProfile As ManagedClusterOidcIssuerProfile = Nothing, Optional nodeResourceGroup As String = Nothing, Optional enableRbac As Nullable(Of Boolean) = Nothing, Optional supportPlan As Nullable(Of KubernetesSupportPlan) = Nothing, Optional enablePodSecurityPolicy As Nullable(Of Boolean) = Nothing, Optional networkProfile As ContainerServiceNetworkProfile = Nothing, Optional aadProfile As ManagedClusterAadProfile = Nothing, Optional autoUpgradeProfile As ManagedClusterAutoUpgradeProfile = Nothing, Optional upgradeOverrideSettings As UpgradeOverrideSettings = Nothing, Optional autoScalerProfile As ManagedClusterAutoScalerProfile = Nothing, Optional apiServerAccessProfile As ManagedClusterApiServerAccessProfile = Nothing, Optional diskEncryptionSetId As ResourceIdentifier = Nothing, Optional identityProfile As IDictionary(Of String, ContainerServiceUserAssignedIdentity) = Nothing, Optional privateLinkResources As IEnumerable(Of ContainerServicePrivateLinkResourceData) = Nothing, Optional disableLocalAccounts As Nullable(Of Boolean) = Nothing, Optional httpProxyConfig As ManagedClusterHttpProxyConfig = Nothing, Optional securityProfile As ManagedClusterSecurityProfile = Nothing, Optional storageProfile As ManagedClusterStorageProfile = Nothing, Optional publicNetworkAccess As Nullable(Of ContainerServicePublicNetworkAccess) = Nothing, Optional workloadAutoScalerProfile As ManagedClusterWorkloadAutoScalerProfile = Nothing, Optional azureMonitorMetrics As ManagedClusterMonitorProfileMetrics = Nothing, Optional serviceMeshProfile As ServiceMeshProfile = Nothing, Optional resourceId As ResourceIdentifier = Nothing) As ContainerServiceManagedClusterData" />
      <MemberSignature Language="F#" Value="static member ContainerServiceManagedClusterData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.ContainerService.Models.ManagedClusterSku * Azure.ResourceManager.Resources.Models.ExtendedLocation * Azure.ResourceManager.ContainerService.Models.ManagedClusterIdentity * string * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; * Nullable&lt;int&gt; * string * string * string * string * string * string * string * seq&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile&gt; * Azure.ResourceManager.ContainerService.Models.ContainerServiceLinuxProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterWindowsProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterServicePrincipalProfile * System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile&gt; * Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.ContainerService.Models.ContainerServiceNetworkProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterAadProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoUpgradeProfile * Azure.ResourceManager.ContainerService.Models.UpgradeOverrideSettings * Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoScalerProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterApiServerAccessProfile * Azure.Core.ResourceIdentifier * System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity&gt; * seq&lt;Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.ContainerService.Models.ManagedClusterHttpProxyConfig * Azure.ResourceManager.ContainerService.Models.ManagedClusterSecurityProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterStorageProfile * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServicePublicNetworkAccess&gt; * Azure.ResourceManager.ContainerService.Models.ManagedClusterWorkloadAutoScalerProfile * Azure.ResourceManager.ContainerService.Models.ManagedClusterMonitorProfileMetrics * Azure.ResourceManager.ContainerService.Models.ServiceMeshProfile * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceManagedClusterData (id, name, resourceType, systemData, tags, location, sku, extendedLocation, clusterIdentity, provisioningState, powerStateCode, maxAgentPools, kubernetesVersion, currentKubernetesVersion, dnsPrefix, fqdnSubdomain, fqdn, privateFqdn, azurePortalFqdn, agentPoolProfiles, linuxProfile, windowsProfile, servicePrincipalProfile, addonProfiles, podIdentityProfile, oidcIssuerProfile, nodeResourceGroup, enableRbac, supportPlan, enablePodSecurityPolicy, networkProfile, aadProfile, autoUpgradeProfile, upgradeOverrideSettings, autoScalerProfile, apiServerAccessProfile, diskEncryptionSetId, identityProfile, privateLinkResources, disableLocalAccounts, httpProxyConfig, securityProfile, storageProfile, publicNetworkAccess, workloadAutoScalerProfile, azureMonitorMetrics, serviceMeshProfile, resourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="sku" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterSku" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="clusterIdentity" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterIdentity" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="powerStateCode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt;" />
        <Parameter Name="maxAgentPools" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="kubernetesVersion" Type="System.String" />
        <Parameter Name="currentKubernetesVersion" Type="System.String" />
        <Parameter Name="dnsPrefix" Type="System.String" />
        <Parameter Name="fqdnSubdomain" Type="System.String" />
        <Parameter Name="fqdn" Type="System.String" />
        <Parameter Name="privateFqdn" Type="System.String" />
        <Parameter Name="azurePortalFqdn" Type="System.String" />
        <Parameter Name="agentPoolProfiles" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile&gt;" />
        <Parameter Name="linuxProfile" Type="Azure.ResourceManager.ContainerService.Models.ContainerServiceLinuxProfile" />
        <Parameter Name="windowsProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterWindowsProfile" />
        <Parameter Name="servicePrincipalProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterServicePrincipalProfile" />
        <Parameter Name="addonProfiles" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile&gt;" />
        <Parameter Name="podIdentityProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProfile" />
        <Parameter Name="oidcIssuerProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile" />
        <Parameter Name="nodeResourceGroup" Type="System.String" />
        <Parameter Name="enableRbac" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="supportPlan" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan&gt;" />
        <Parameter Name="enablePodSecurityPolicy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="networkProfile" Type="Azure.ResourceManager.ContainerService.Models.ContainerServiceNetworkProfile" />
        <Parameter Name="aadProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterAadProfile" />
        <Parameter Name="autoUpgradeProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoUpgradeProfile" />
        <Parameter Name="upgradeOverrideSettings" Type="Azure.ResourceManager.ContainerService.Models.UpgradeOverrideSettings" />
        <Parameter Name="autoScalerProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterAutoScalerProfile" />
        <Parameter Name="apiServerAccessProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterApiServerAccessProfile" />
        <Parameter Name="diskEncryptionSetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="identityProfile" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity&gt;" />
        <Parameter Name="privateLinkResources" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData&gt;" />
        <Parameter Name="disableLocalAccounts" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="httpProxyConfig" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterHttpProxyConfig" />
        <Parameter Name="securityProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterSecurityProfile" />
        <Parameter Name="storageProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterStorageProfile" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServicePublicNetworkAccess&gt;" />
        <Parameter Name="workloadAutoScalerProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterWorkloadAutoScalerProfile" />
        <Parameter Name="azureMonitorMetrics" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterMonitorProfileMetrics" />
        <Parameter Name="serviceMeshProfile" Type="Azure.ResourceManager.ContainerService.Models.ServiceMeshProfile" />
        <Parameter Name="resourceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="sku"> The managed cluster SKU. </param>
        <param name="extendedLocation"> The extended location of the Virtual Machine. </param>
        <param name="clusterIdentity"> The identity of the managed cluster, if configured. </param>
        <param name="provisioningState"> The current provisioning state. </param>
        <param name="powerStateCode"> The Power State of the cluster. </param>
        <param name="maxAgentPools"> The max number of agent pools for the managed cluster. </param>
        <param name="kubernetesVersion"> Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -&gt; 1.15.x or 1.15.x -&gt; 1.16.x are allowed, however 1.14.x -&gt; 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details. </param>
        <param name="currentKubernetesVersion"> If kubernetesVersion was a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If kubernetesVersion was &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used. </param>
        <param name="dnsPrefix"> This cannot be updated once the Managed Cluster has been created. </param>
        <param name="fqdnSubdomain"> This cannot be updated once the Managed Cluster has been created. </param>
        <param name="fqdn"> The FQDN of the master pool. </param>
        <param name="privateFqdn"> The FQDN of private cluster. </param>
        <param name="azurePortalFqdn"> The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly. </param>
        <param name="agentPoolProfiles"> The agent pool properties. </param>
        <param name="linuxProfile"> The profile for Linux VMs in the Managed Cluster. </param>
        <param name="windowsProfile"> The profile for Windows VMs in the Managed Cluster. </param>
        <param name="servicePrincipalProfile"> Information about a service principal identity for the cluster to use for manipulating Azure APIs. </param>
        <param name="addonProfiles"> The profile of managed cluster add-on. </param>
        <param name="podIdentityProfile"> See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration. </param>
        <param name="oidcIssuerProfile"> The OIDC issuer profile of the Managed Cluster. </param>
        <param name="nodeResourceGroup"> The name of the resource group containing agent pool nodes. </param>
        <param name="enableRbac"> Whether to enable Kubernetes Role-Based Access Control. </param>
        <param name="supportPlan"> The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'. </param>
        <param name="enablePodSecurityPolicy"> (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp. </param>
        <param name="networkProfile"> The network configuration profile. </param>
        <param name="aadProfile"> The Azure Active Directory configuration. </param>
        <param name="autoUpgradeProfile"> The auto upgrade configuration. </param>
        <param name="upgradeOverrideSettings"> Settings for upgrading a cluster. </param>
        <param name="autoScalerProfile"> Parameters to be applied to the cluster-autoscaler when enabled. </param>
        <param name="apiServerAccessProfile"> The access profile for managed cluster API server. </param>
        <param name="diskEncryptionSetId"> This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'. </param>
        <param name="identityProfile"> Identities associated with the cluster. </param>
        <param name="privateLinkResources"> Private link resources associated with the cluster. </param>
        <param name="disableLocalAccounts"> If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview). </param>
        <param name="httpProxyConfig"> Configurations for provisioning the cluster with HTTP proxy servers. </param>
        <param name="securityProfile"> Security profile for the managed cluster. </param>
        <param name="storageProfile"> Storage profile for the managed cluster. </param>
        <param name="publicNetworkAccess"> Allow or deny public network access for AKS. </param>
        <param name="workloadAutoScalerProfile"> Workload Auto-scaler profile for the managed cluster. </param>
        <param name="azureMonitorMetrics"> Azure Monitor addon profiles for monitoring the managed cluster. </param>
        <param name="serviceMeshProfile"> Service mesh profile for a managed cluster. </param>
        <param name="resourceId"> The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceOSOptionProperty">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty ContainerServiceOSOptionProperty (string osType = default, bool enableFipsImage = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty ContainerServiceOSOptionProperty(string osType, bool enableFipsImage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceOSOptionProperty(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceOSOptionProperty (Optional osType As String = Nothing, Optional enableFipsImage As Boolean = false) As ContainerServiceOSOptionProperty" />
      <MemberSignature Language="F#" Value="static member ContainerServiceOSOptionProperty : string * bool -&gt; Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceOSOptionProperty (osType, enableFipsImage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="osType" Type="System.String" />
        <Parameter Name="enableFipsImage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="osType"> The OS type. </param>
        <param name="enableFipsImage"> Whether the image is FIPS-enabled. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="osType" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceOutboundEnvironmentEndpoint">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ContainerServiceOutboundEnvironmentEndpoint ContainerServiceOutboundEnvironmentEndpoint (string category = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency&gt; endpoints = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ContainerServiceOutboundEnvironmentEndpoint ContainerServiceOutboundEnvironmentEndpoint(string category, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency&gt; endpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceOutboundEnvironmentEndpoint(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceOutboundEnvironmentEndpoint (Optional category As String = Nothing, Optional endpoints As IEnumerable(Of ContainerServiceEndpointDependency) = Nothing) As ContainerServiceOutboundEnvironmentEndpoint" />
      <MemberSignature Language="F#" Value="static member ContainerServiceOutboundEnvironmentEndpoint : string * seq&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ContainerServiceOutboundEnvironmentEndpoint" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceOutboundEnvironmentEndpoint (category, endpoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ContainerServiceOutboundEnvironmentEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="endpoints" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceEndpointDependency&gt;" />
      </Parameters>
      <Docs>
        <param name="category"> The category of endpoints accessed by the AKS agent node, e.g. azure-resource-management, apiserver, etc. </param>
        <param name="endpoints"> The endpoints that AKS agent nodes connect to. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceOutboundEnvironmentEndpoint" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceOutboundEnvironmentEndpoint" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServicePrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionData ContainerServicePrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateEndpointConnectionProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkServiceConnectionState connectionState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionData ContainerServicePrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateEndpointConnectionProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkServiceConnectionState connectionState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServicePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateEndpointConnectionProvisioningState},Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkServiceConnectionState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServicePrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of ContainerServicePrivateEndpointConnectionProvisioningState) = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As ContainerServicePrivateLinkServiceConnectionState = Nothing) As ContainerServicePrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member ContainerServicePrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateEndpointConnectionProvisioningState&gt; * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkServiceConnectionState -&gt; Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServicePrivateEndpointConnectionData (id, name, resourceType, systemData, provisioningState, privateEndpointId, connectionState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateEndpointConnectionProvisioningState&gt;" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkServiceConnectionState" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> The current provisioning state. </param>
        <param name="privateEndpointId"> The resource of private endpoint. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServicePrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData ContainerServicePrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType? resourceType = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, Azure.Core.ResourceIdentifier privateLinkServiceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData ContainerServicePrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype System.Nullable`1&lt;valuetype Azure.Core.ResourceType&gt; resourceType, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class Azure.Core.ResourceIdentifier privateLinkServiceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServicePrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.Core.ResourceType},System.String,System.Collections.Generic.IEnumerable{System.String},Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServicePrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As Nullable(Of ResourceType) = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional privateLinkServiceId As ResourceIdentifier = Nothing) As ContainerServicePrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member ContainerServicePrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.Core.ResourceType&gt; * string * seq&lt;string&gt; * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServicePrivateLinkResourceData (id, name, resourceType, groupId, requiredMembers, privateLinkServiceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="System.Nullable&lt;Azure.Core.ResourceType&gt;" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="privateLinkServiceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The ID of the private link resource. </param>
        <param name="name"> The name of the private link resource. </param>
        <param name="resourceType"> The resource type. </param>
        <param name="groupId"> The group ID of the resource. </param>
        <param name="requiredMembers"> The RequiredMembers of the resource. </param>
        <param name="privateLinkServiceId"> The private link service ID of the resource, this field is exposed only to NRP internally. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServicePrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceTrustedAccessRole">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole ContainerServiceTrustedAccessRole (string sourceResourceType = default, string name = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule&gt; rules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole ContainerServiceTrustedAccessRole(string sourceResourceType, string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule&gt; rules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceTrustedAccessRole(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceTrustedAccessRole (Optional sourceResourceType As String = Nothing, Optional name As String = Nothing, Optional rules As IEnumerable(Of ContainerServiceTrustedAccessRoleRule) = Nothing) As ContainerServiceTrustedAccessRole" />
      <MemberSignature Language="F#" Value="static member ContainerServiceTrustedAccessRole : string * string * seq&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceTrustedAccessRole (sourceResourceType, name, rules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResourceType" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceResourceType"> Resource type of Azure resource. </param>
        <param name="name"> Name of role, name is unique under a source resource type. </param>
        <param name="rules"> List of rules for the role. This maps to 'rules' property of [Kubernetes Cluster Role](https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/cluster-role-v1/#ClusterRole). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceTrustedAccessRoleBindingData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingData ContainerServiceTrustedAccessRoleBindingData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleBindingProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier sourceResourceId = default, System.Collections.Generic.IEnumerable&lt;string&gt; roles = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingData ContainerServiceTrustedAccessRoleBindingData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleBindingProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier sourceResourceId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; roles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceTrustedAccessRoleBindingData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleBindingProvisioningState},Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceTrustedAccessRoleBindingData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of ContainerServiceTrustedAccessRoleBindingProvisioningState) = Nothing, Optional sourceResourceId As ResourceIdentifier = Nothing, Optional roles As IEnumerable(Of String) = Nothing) As ContainerServiceTrustedAccessRoleBindingData" />
      <MemberSignature Language="F#" Value="static member ContainerServiceTrustedAccessRoleBindingData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleBindingProvisioningState&gt; * Azure.Core.ResourceIdentifier * seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceTrustedAccessRoleBindingData (id, name, resourceType, systemData, provisioningState, sourceResourceId, roles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleBindingProvisioningState&gt;" />
        <Parameter Name="sourceResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="roles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> The current provisioning state of trusted access role binding. </param>
        <param name="sourceResourceId"> The ARM resource ID of source resource that trusted access is configured for. </param>
        <param name="roles"> A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerServiceTrustedAccessRoleRule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule ContainerServiceTrustedAccessRoleRule (System.Collections.Generic.IEnumerable&lt;string&gt; verbs = default, System.Collections.Generic.IEnumerable&lt;string&gt; apiGroups = default, System.Collections.Generic.IEnumerable&lt;string&gt; resources = default, System.Collections.Generic.IEnumerable&lt;string&gt; resourceNames = default, System.Collections.Generic.IEnumerable&lt;string&gt; nonResourceUrls = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule ContainerServiceTrustedAccessRoleRule(class System.Collections.Generic.IEnumerable`1&lt;string&gt; verbs, class System.Collections.Generic.IEnumerable`1&lt;string&gt; apiGroups, class System.Collections.Generic.IEnumerable`1&lt;string&gt; resources, class System.Collections.Generic.IEnumerable`1&lt;string&gt; resourceNames, class System.Collections.Generic.IEnumerable`1&lt;string&gt; nonResourceUrls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceTrustedAccessRoleRule(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerServiceTrustedAccessRoleRule (Optional verbs As IEnumerable(Of String) = Nothing, Optional apiGroups As IEnumerable(Of String) = Nothing, Optional resources As IEnumerable(Of String) = Nothing, Optional resourceNames As IEnumerable(Of String) = Nothing, Optional nonResourceUrls As IEnumerable(Of String) = Nothing) As ContainerServiceTrustedAccessRoleRule" />
      <MemberSignature Language="F#" Value="static member ContainerServiceTrustedAccessRoleRule : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ContainerServiceTrustedAccessRoleRule (verbs, apiGroups, resources, resourceNames, nonResourceUrls)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbs" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="apiGroups" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="resourceNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="nonResourceUrls" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="verbs"> List of allowed verbs. </param>
        <param name="apiGroups"> List of allowed apiGroups. </param>
        <param name="resources"> List of allowed resources. </param>
        <param name="resourceNames"> List of allowed names. </param>
        <param name="nonResourceUrls"> List of allowed nonResourceURLs. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRoleRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KubernetesPatchVersion">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion KubernetesPatchVersion (System.Collections.Generic.IEnumerable&lt;string&gt; upgrades = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion KubernetesPatchVersion(class System.Collections.Generic.IEnumerable`1&lt;string&gt; upgrades) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.KubernetesPatchVersion(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KubernetesPatchVersion (Optional upgrades As IEnumerable(Of String) = Nothing) As KubernetesPatchVersion" />
      <MemberSignature Language="F#" Value="static member KubernetesPatchVersion : seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.KubernetesPatchVersion upgrades" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upgrades" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="upgrades"> Possible upgrade path for given patch version. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KubernetesVersion">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.KubernetesVersion KubernetesVersion (string version = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan&gt; capabilitiesSupportPlan = default, bool? isPreview = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion&gt; patchVersions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.KubernetesVersion KubernetesVersion(string version, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan&gt; capabilitiesSupportPlan, valuetype System.Nullable`1&lt;bool&gt; isPreview, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion&gt; patchVersions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.KubernetesVersion(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KubernetesVersion (Optional version As String = Nothing, Optional capabilitiesSupportPlan As IEnumerable(Of KubernetesSupportPlan) = Nothing, Optional isPreview As Nullable(Of Boolean) = Nothing, Optional patchVersions As IReadOnlyDictionary(Of String, KubernetesPatchVersion) = Nothing) As KubernetesVersion" />
      <MemberSignature Language="F#" Value="static member KubernetesVersion : string * seq&lt;Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion&gt; -&gt; Azure.ResourceManager.ContainerService.Models.KubernetesVersion" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.KubernetesVersion (version, capabilitiesSupportPlan, isPreview, patchVersions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.KubernetesVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="capabilitiesSupportPlan" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.KubernetesSupportPlan&gt;" />
        <Parameter Name="isPreview" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="patchVersions" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Azure.ResourceManager.ContainerService.Models.KubernetesPatchVersion&gt;" />
      </Parameters>
      <Docs>
        <param name="version"> major.minor version of Kubernetes release. </param>
        <param name="capabilitiesSupportPlan"> Capabilities on this Kubernetes version. </param>
        <param name="isPreview"> Whether this version is in preview mode. </param>
        <param name="patchVersions"> Patch versions of Kubernetes release. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.KubernetesVersion" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.KubernetesVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KubernetesVersionListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.KubernetesVersionListResult KubernetesVersionListResult (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.KubernetesVersion&gt; values = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.KubernetesVersionListResult KubernetesVersionListResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.KubernetesVersion&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.KubernetesVersionListResult(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.KubernetesVersion})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KubernetesVersionListResult (Optional values As IEnumerable(Of KubernetesVersion) = Nothing) As KubernetesVersionListResult" />
      <MemberSignature Language="F#" Value="static member KubernetesVersionListResult : seq&lt;Azure.ResourceManager.ContainerService.Models.KubernetesVersion&gt; -&gt; Azure.ResourceManager.ContainerService.Models.KubernetesVersionListResult" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.KubernetesVersionListResult values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.KubernetesVersionListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.KubernetesVersion&gt;" />
      </Parameters>
      <Docs>
        <param name="values"> Array of AKS supported Kubernetes versions. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.KubernetesVersionListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.KubernetesVersionListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterAccessProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterAccessProfile ManagedClusterAccessProfile (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, byte[] kubeConfig = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterAccessProfile ManagedClusterAccessProfile(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, unsigned int8[] kubeConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAccessProfile(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterAccessProfile (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional kubeConfig As Byte() = Nothing) As ManagedClusterAccessProfile" />
      <MemberSignature Language="F#" Value="static member ManagedClusterAccessProfile : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * byte[] -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterAccessProfile" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAccessProfile (id, name, resourceType, systemData, tags, location, kubeConfig)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterAccessProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="kubeConfig" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="kubeConfig"> Base64-encoded Kubernetes configuration file. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAccessProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAccessProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterAddonProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile ManagedClusterAddonProfile (bool isEnabled = false, System.Collections.Generic.IDictionary&lt;string,string&gt; config = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfileIdentity identity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile ManagedClusterAddonProfile(bool isEnabled, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; config, class Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfileIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAddonProfile(System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfileIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterAddonProfile (Optional isEnabled As Boolean = false, Optional config As IDictionary(Of String, String) = Nothing, Optional identity As ManagedClusterAddonProfileIdentity = Nothing) As ManagedClusterAddonProfile" />
      <MemberSignature Language="F#" Value="static member ManagedClusterAddonProfile : bool * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfileIdentity -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAddonProfile (isEnabled, config, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isEnabled" Type="System.Boolean" />
        <Parameter Name="config" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfileIdentity" />
      </Parameters>
      <Docs>
        <param name="isEnabled"> Whether the add-on is enabled or not. </param>
        <param name="config"> Key-value pairs for configuring an add-on. </param>
        <param name="identity"> Information of user assigned identity used by this add-on. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAddonProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterAgentPoolProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile ManagedClusterAgentPoolProfile (int? count = default, string vmSize = default, int? osDiskSizeInGB = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType? osDiskType = default, Azure.ResourceManager.ContainerService.Models.KubeletDiskType? kubeletDiskType = default, Azure.ResourceManager.ContainerService.Models.WorkloadRuntime? workloadRuntime = default, Azure.Core.ResourceIdentifier vnetSubnetId = default, Azure.Core.ResourceIdentifier podSubnetId = default, int? maxPods = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType? osType = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku? osSku = default, int? maxCount = default, int? minCount = default, bool? enableAutoScaling = default, Azure.ResourceManager.ContainerService.Models.ScaleDownMode? scaleDownMode = default, Azure.ResourceManager.ContainerService.Models.AgentPoolType? agentPoolType = default, Azure.ResourceManager.ContainerService.Models.AgentPoolMode? mode = default, string orchestratorVersion = default, string currentOrchestratorVersion = default, string nodeImageVersion = default, Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings upgradeSettings = default, string provisioningState = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode? powerStateCode = default, System.Collections.Generic.IEnumerable&lt;string&gt; availabilityZones = default, bool? enableNodePublicIP = default, Azure.Core.ResourceIdentifier nodePublicIPPrefixId = default, Azure.ResourceManager.ContainerService.Models.ScaleSetPriority? scaleSetPriority = default, Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy? scaleSetEvictionPolicy = default, float? spotMaxPrice = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IDictionary&lt;string,string&gt; nodeLabels = default, System.Collections.Generic.IEnumerable&lt;string&gt; nodeTaints = default, Azure.Core.ResourceIdentifier proximityPlacementGroupId = default, Azure.ResourceManager.ContainerService.Models.KubeletConfig kubeletConfig = default, Azure.ResourceManager.ContainerService.Models.LinuxOSConfig linuxOSConfig = default, bool? enableEncryptionAtHost = default, bool? enableUltraSsd = default, bool? enableFips = default, Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile? gpuInstanceProfile = default, Azure.Core.ResourceIdentifier creationDataSourceResourceId = default, Azure.Core.ResourceIdentifier capacityReservationGroupId = default, Azure.Core.ResourceIdentifier hostGroupId = default, Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile networkProfile = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile ManagedClusterAgentPoolProfile(valuetype System.Nullable`1&lt;int32&gt; count, string vmSize, valuetype System.Nullable`1&lt;int32&gt; osDiskSizeInGB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt; osDiskType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; kubeletDiskType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; workloadRuntime, class Azure.Core.ResourceIdentifier vnetSubnetId, class Azure.Core.ResourceIdentifier podSubnetId, valuetype System.Nullable`1&lt;int32&gt; maxPods, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; osType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; osSku, valuetype System.Nullable`1&lt;int32&gt; maxCount, valuetype System.Nullable`1&lt;int32&gt; minCount, valuetype System.Nullable`1&lt;bool&gt; enableAutoScaling, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; scaleDownMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; agentPoolType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; mode, string orchestratorVersion, string currentOrchestratorVersion, string nodeImageVersion, class Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings upgradeSettings, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; powerStateCode, class System.Collections.Generic.IEnumerable`1&lt;string&gt; availabilityZones, valuetype System.Nullable`1&lt;bool&gt; enableNodePublicIP, class Azure.Core.ResourceIdentifier nodePublicIPPrefixId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; scaleSetPriority, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; scaleSetEvictionPolicy, valuetype System.Nullable`1&lt;float32&gt; spotMaxPrice, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; nodeLabels, class System.Collections.Generic.IEnumerable`1&lt;string&gt; nodeTaints, class Azure.Core.ResourceIdentifier proximityPlacementGroupId, class Azure.ResourceManager.ContainerService.Models.KubeletConfig kubeletConfig, class Azure.ResourceManager.ContainerService.Models.LinuxOSConfig linuxOSConfig, valuetype System.Nullable`1&lt;bool&gt; enableEncryptionAtHost, valuetype System.Nullable`1&lt;bool&gt; enableUltraSsd, valuetype System.Nullable`1&lt;bool&gt; enableFips, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt; gpuInstanceProfile, class Azure.Core.ResourceIdentifier creationDataSourceResourceId, class Azure.Core.ResourceIdentifier capacityReservationGroupId, class Azure.Core.ResourceIdentifier hostGroupId, class Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile networkProfile, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAgentPoolProfile(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType},System.Nullable{Azure.ResourceManager.ContainerService.Models.KubeletDiskType},System.Nullable{Azure.ResourceManager.ContainerService.Models.WorkloadRuntime},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleDownMode},System.Nullable{Azure.ResourceManager.ContainerService.Models.AgentPoolType},System.Nullable{Azure.ResourceManager.ContainerService.Models.AgentPoolMode},System.String,System.String,System.String,Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings,System.String,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleSetPriority},System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy},System.Nullable{System.Single},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String},Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerService.Models.KubeletConfig,Azure.ResourceManager.ContainerService.Models.LinuxOSConfig,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterAgentPoolProfile (Optional count As Nullable(Of Integer) = Nothing, Optional vmSize As String = Nothing, Optional osDiskSizeInGB As Nullable(Of Integer) = Nothing, Optional osDiskType As Nullable(Of ContainerServiceOSDiskType) = Nothing, Optional kubeletDiskType As Nullable(Of KubeletDiskType) = Nothing, Optional workloadRuntime As Nullable(Of WorkloadRuntime) = Nothing, Optional vnetSubnetId As ResourceIdentifier = Nothing, Optional podSubnetId As ResourceIdentifier = Nothing, Optional maxPods As Nullable(Of Integer) = Nothing, Optional osType As Nullable(Of ContainerServiceOSType) = Nothing, Optional osSku As Nullable(Of ContainerServiceOSSku) = Nothing, Optional maxCount As Nullable(Of Integer) = Nothing, Optional minCount As Nullable(Of Integer) = Nothing, Optional enableAutoScaling As Nullable(Of Boolean) = Nothing, Optional scaleDownMode As Nullable(Of ScaleDownMode) = Nothing, Optional agentPoolType As Nullable(Of AgentPoolType) = Nothing, Optional mode As Nullable(Of AgentPoolMode) = Nothing, Optional orchestratorVersion As String = Nothing, Optional currentOrchestratorVersion As String = Nothing, Optional nodeImageVersion As String = Nothing, Optional upgradeSettings As AgentPoolUpgradeSettings = Nothing, Optional provisioningState As String = Nothing, Optional powerStateCode As Nullable(Of ContainerServiceStateCode) = Nothing, Optional availabilityZones As IEnumerable(Of String) = Nothing, Optional enableNodePublicIP As Nullable(Of Boolean) = Nothing, Optional nodePublicIPPrefixId As ResourceIdentifier = Nothing, Optional scaleSetPriority As Nullable(Of ScaleSetPriority) = Nothing, Optional scaleSetEvictionPolicy As Nullable(Of ScaleSetEvictionPolicy) = Nothing, Optional spotMaxPrice As Nullable(Of Single) = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional nodeLabels As IDictionary(Of String, String) = Nothing, Optional nodeTaints As IEnumerable(Of String) = Nothing, Optional proximityPlacementGroupId As ResourceIdentifier = Nothing, Optional kubeletConfig As KubeletConfig = Nothing, Optional linuxOSConfig As LinuxOSConfig = Nothing, Optional enableEncryptionAtHost As Nullable(Of Boolean) = Nothing, Optional enableUltraSsd As Nullable(Of Boolean) = Nothing, Optional enableFips As Nullable(Of Boolean) = Nothing, Optional gpuInstanceProfile As Nullable(Of GpuInstanceProfile) = Nothing, Optional creationDataSourceResourceId As ResourceIdentifier = Nothing, Optional capacityReservationGroupId As ResourceIdentifier = Nothing, Optional hostGroupId As ResourceIdentifier = Nothing, Optional networkProfile As AgentPoolNetworkProfile = Nothing, Optional name As String = Nothing) As ManagedClusterAgentPoolProfile" />
      <MemberSignature Language="F#" Value="static member ManagedClusterAgentPoolProfile : Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; * string * string * string * Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings * string * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; * Nullable&lt;single&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * seq&lt;string&gt; * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerService.Models.KubeletConfig * Azure.ResourceManager.ContainerService.Models.LinuxOSConfig * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile * string -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAgentPoolProfile (count, vmSize, osDiskSizeInGB, osDiskType, kubeletDiskType, workloadRuntime, vnetSubnetId, podSubnetId, maxPods, osType, osSku, maxCount, minCount, enableAutoScaling, scaleDownMode, agentPoolType, mode, orchestratorVersion, currentOrchestratorVersion, nodeImageVersion, upgradeSettings, provisioningState, powerStateCode, availabilityZones, enableNodePublicIP, nodePublicIPPrefixId, scaleSetPriority, scaleSetEvictionPolicy, spotMaxPrice, tags, nodeLabels, nodeTaints, proximityPlacementGroupId, kubeletConfig, linuxOSConfig, enableEncryptionAtHost, enableUltraSsd, enableFips, gpuInstanceProfile, creationDataSourceResourceId, capacityReservationGroupId, hostGroupId, networkProfile, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="osDiskSizeInGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt;" />
        <Parameter Name="kubeletDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt;" />
        <Parameter Name="workloadRuntime" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt;" />
        <Parameter Name="vnetSubnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="podSubnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="maxPods" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt;" />
        <Parameter Name="osSku" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt;" />
        <Parameter Name="maxCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enableAutoScaling" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scaleDownMode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt;" />
        <Parameter Name="agentPoolType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt;" />
        <Parameter Name="mode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt;" />
        <Parameter Name="orchestratorVersion" Type="System.String" />
        <Parameter Name="currentOrchestratorVersion" Type="System.String" />
        <Parameter Name="nodeImageVersion" Type="System.String" />
        <Parameter Name="upgradeSettings" Type="Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="powerStateCode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt;" />
        <Parameter Name="availabilityZones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="enableNodePublicIP" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="nodePublicIPPrefixId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scaleSetPriority" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt;" />
        <Parameter Name="scaleSetEvictionPolicy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt;" />
        <Parameter Name="spotMaxPrice" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeLabels" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeTaints" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="proximityPlacementGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kubeletConfig" Type="Azure.ResourceManager.ContainerService.Models.KubeletConfig" />
        <Parameter Name="linuxOSConfig" Type="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig" />
        <Parameter Name="enableEncryptionAtHost" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableUltraSsd" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableFips" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="gpuInstanceProfile" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt;" />
        <Parameter Name="creationDataSourceResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="capacityReservationGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="hostGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="networkProfile" Type="Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="count"> Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. </param>
        <param name="vmSize"> VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions. </param>
        <param name="osDiskSizeInGB"> OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </param>
        <param name="osDiskType"> The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). </param>
        <param name="kubeletDiskType"> Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. </param>
        <param name="workloadRuntime"> Determines the type of workload a node can run. </param>
        <param name="vnetSubnetId"> If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </param>
        <param name="podSubnetId"> If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </param>
        <param name="maxPods"> The maximum number of pods that can run on a node. </param>
        <param name="osType"> The operating system type. The default is Linux. </param>
        <param name="osSku"> Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows. </param>
        <param name="maxCount"> The maximum number of nodes for auto-scaling. </param>
        <param name="minCount"> The minimum number of nodes for auto-scaling. </param>
        <param name="enableAutoScaling"> Whether to enable auto-scaler. </param>
        <param name="scaleDownMode"> This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. </param>
        <param name="agentPoolType"> The type of Agent Pool. </param>
        <param name="mode"> A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools. </param>
        <param name="orchestratorVersion"> Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). </param>
        <param name="currentOrchestratorVersion"> If orchestratorVersion is a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If orchestratorVersion is &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used. </param>
        <param name="nodeImageVersion"> The version of node image. </param>
        <param name="upgradeSettings"> Settings for upgrading the agentpool. </param>
        <param name="provisioningState"> The current deployment or provisioning state. </param>
        <param name="powerStateCode"> When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded. </param>
        <param name="availabilityZones"> The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. </param>
        <param name="enableNodePublicIP"> Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. </param>
        <param name="nodePublicIPPrefixId"> This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}. </param>
        <param name="scaleSetPriority"> The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. </param>
        <param name="scaleSetEvictionPolicy"> This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. </param>
        <param name="spotMaxPrice"> Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing). </param>
        <param name="tags"> The tags to be persisted on the agent pool virtual machine scale set. </param>
        <param name="nodeLabels"> The node labels to be persisted across all nodes in agent pool. </param>
        <param name="nodeTaints"> The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. </param>
        <param name="proximityPlacementGroupId"> The ID for Proximity Placement Group. </param>
        <param name="kubeletConfig"> The Kubelet configuration on the agent pool nodes. </param>
        <param name="linuxOSConfig"> The OS configuration of Linux agent nodes. </param>
        <param name="enableEncryptionAtHost"> This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption. </param>
        <param name="enableUltraSsd"> Whether to enable UltraSSD. </param>
        <param name="enableFips"> See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. </param>
        <param name="gpuInstanceProfile"> GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. </param>
        <param name="creationDataSourceResourceId"> CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot. </param>
        <param name="capacityReservationGroupId"> AKS will associate the specified agent pool with the Capacity Reservation Group. </param>
        <param name="hostGroupId"> This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts). </param>
        <param name="networkProfile"> Network-related settings of an agent pool. </param>
        <param name="name"> Windows agent pool names must be 6 characters or less. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterAgentPoolProfileProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfileProperties ManagedClusterAgentPoolProfileProperties (int? count = default, string vmSize = default, int? osDiskSizeInGB = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType? osDiskType = default, Azure.ResourceManager.ContainerService.Models.KubeletDiskType? kubeletDiskType = default, Azure.ResourceManager.ContainerService.Models.WorkloadRuntime? workloadRuntime = default, Azure.Core.ResourceIdentifier vnetSubnetId = default, Azure.Core.ResourceIdentifier podSubnetId = default, int? maxPods = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType? osType = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku? osSku = default, int? maxCount = default, int? minCount = default, bool? enableAutoScaling = default, Azure.ResourceManager.ContainerService.Models.ScaleDownMode? scaleDownMode = default, Azure.ResourceManager.ContainerService.Models.AgentPoolType? agentPoolType = default, Azure.ResourceManager.ContainerService.Models.AgentPoolMode? mode = default, string orchestratorVersion = default, string currentOrchestratorVersion = default, string nodeImageVersion = default, Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings upgradeSettings = default, string provisioningState = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode? powerStateCode = default, System.Collections.Generic.IEnumerable&lt;string&gt; availabilityZones = default, bool? enableNodePublicIP = default, Azure.Core.ResourceIdentifier nodePublicIPPrefixId = default, Azure.ResourceManager.ContainerService.Models.ScaleSetPriority? scaleSetPriority = default, Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy? scaleSetEvictionPolicy = default, float? spotMaxPrice = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IDictionary&lt;string,string&gt; nodeLabels = default, System.Collections.Generic.IEnumerable&lt;string&gt; nodeTaints = default, Azure.Core.ResourceIdentifier proximityPlacementGroupId = default, Azure.ResourceManager.ContainerService.Models.KubeletConfig kubeletConfig = default, Azure.ResourceManager.ContainerService.Models.LinuxOSConfig linuxOSConfig = default, bool? enableEncryptionAtHost = default, bool? enableUltraSsd = default, bool? enableFips = default, Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile? gpuInstanceProfile = default, Azure.Core.ResourceIdentifier creationDataSourceResourceId = default, Azure.Core.ResourceIdentifier capacityReservationGroupId = default, Azure.Core.ResourceIdentifier hostGroupId = default, Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile networkProfile = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfileProperties ManagedClusterAgentPoolProfileProperties(valuetype System.Nullable`1&lt;int32&gt; count, string vmSize, valuetype System.Nullable`1&lt;int32&gt; osDiskSizeInGB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt; osDiskType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; kubeletDiskType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; workloadRuntime, class Azure.Core.ResourceIdentifier vnetSubnetId, class Azure.Core.ResourceIdentifier podSubnetId, valuetype System.Nullable`1&lt;int32&gt; maxPods, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; osType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; osSku, valuetype System.Nullable`1&lt;int32&gt; maxCount, valuetype System.Nullable`1&lt;int32&gt; minCount, valuetype System.Nullable`1&lt;bool&gt; enableAutoScaling, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; scaleDownMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; agentPoolType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; mode, string orchestratorVersion, string currentOrchestratorVersion, string nodeImageVersion, class Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings upgradeSettings, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; powerStateCode, class System.Collections.Generic.IEnumerable`1&lt;string&gt; availabilityZones, valuetype System.Nullable`1&lt;bool&gt; enableNodePublicIP, class Azure.Core.ResourceIdentifier nodePublicIPPrefixId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; scaleSetPriority, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; scaleSetEvictionPolicy, valuetype System.Nullable`1&lt;float32&gt; spotMaxPrice, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; nodeLabels, class System.Collections.Generic.IEnumerable`1&lt;string&gt; nodeTaints, class Azure.Core.ResourceIdentifier proximityPlacementGroupId, class Azure.ResourceManager.ContainerService.Models.KubeletConfig kubeletConfig, class Azure.ResourceManager.ContainerService.Models.LinuxOSConfig linuxOSConfig, valuetype System.Nullable`1&lt;bool&gt; enableEncryptionAtHost, valuetype System.Nullable`1&lt;bool&gt; enableUltraSsd, valuetype System.Nullable`1&lt;bool&gt; enableFips, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt; gpuInstanceProfile, class Azure.Core.ResourceIdentifier creationDataSourceResourceId, class Azure.Core.ResourceIdentifier capacityReservationGroupId, class Azure.Core.ResourceIdentifier hostGroupId, class Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile networkProfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAgentPoolProfileProperties(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType},System.Nullable{Azure.ResourceManager.ContainerService.Models.KubeletDiskType},System.Nullable{Azure.ResourceManager.ContainerService.Models.WorkloadRuntime},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType},System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleDownMode},System.Nullable{Azure.ResourceManager.ContainerService.Models.AgentPoolType},System.Nullable{Azure.ResourceManager.ContainerService.Models.AgentPoolMode},System.String,System.String,System.String,Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings,System.String,System.Nullable{Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleSetPriority},System.Nullable{Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy},System.Nullable{System.Single},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String},Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerService.Models.KubeletConfig,Azure.ResourceManager.ContainerService.Models.LinuxOSConfig,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterAgentPoolProfileProperties (Optional count As Nullable(Of Integer) = Nothing, Optional vmSize As String = Nothing, Optional osDiskSizeInGB As Nullable(Of Integer) = Nothing, Optional osDiskType As Nullable(Of ContainerServiceOSDiskType) = Nothing, Optional kubeletDiskType As Nullable(Of KubeletDiskType) = Nothing, Optional workloadRuntime As Nullable(Of WorkloadRuntime) = Nothing, Optional vnetSubnetId As ResourceIdentifier = Nothing, Optional podSubnetId As ResourceIdentifier = Nothing, Optional maxPods As Nullable(Of Integer) = Nothing, Optional osType As Nullable(Of ContainerServiceOSType) = Nothing, Optional osSku As Nullable(Of ContainerServiceOSSku) = Nothing, Optional maxCount As Nullable(Of Integer) = Nothing, Optional minCount As Nullable(Of Integer) = Nothing, Optional enableAutoScaling As Nullable(Of Boolean) = Nothing, Optional scaleDownMode As Nullable(Of ScaleDownMode) = Nothing, Optional agentPoolType As Nullable(Of AgentPoolType) = Nothing, Optional mode As Nullable(Of AgentPoolMode) = Nothing, Optional orchestratorVersion As String = Nothing, Optional currentOrchestratorVersion As String = Nothing, Optional nodeImageVersion As String = Nothing, Optional upgradeSettings As AgentPoolUpgradeSettings = Nothing, Optional provisioningState As String = Nothing, Optional powerStateCode As Nullable(Of ContainerServiceStateCode) = Nothing, Optional availabilityZones As IEnumerable(Of String) = Nothing, Optional enableNodePublicIP As Nullable(Of Boolean) = Nothing, Optional nodePublicIPPrefixId As ResourceIdentifier = Nothing, Optional scaleSetPriority As Nullable(Of ScaleSetPriority) = Nothing, Optional scaleSetEvictionPolicy As Nullable(Of ScaleSetEvictionPolicy) = Nothing, Optional spotMaxPrice As Nullable(Of Single) = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional nodeLabels As IDictionary(Of String, String) = Nothing, Optional nodeTaints As IEnumerable(Of String) = Nothing, Optional proximityPlacementGroupId As ResourceIdentifier = Nothing, Optional kubeletConfig As KubeletConfig = Nothing, Optional linuxOSConfig As LinuxOSConfig = Nothing, Optional enableEncryptionAtHost As Nullable(Of Boolean) = Nothing, Optional enableUltraSsd As Nullable(Of Boolean) = Nothing, Optional enableFips As Nullable(Of Boolean) = Nothing, Optional gpuInstanceProfile As Nullable(Of GpuInstanceProfile) = Nothing, Optional creationDataSourceResourceId As ResourceIdentifier = Nothing, Optional capacityReservationGroupId As ResourceIdentifier = Nothing, Optional hostGroupId As ResourceIdentifier = Nothing, Optional networkProfile As AgentPoolNetworkProfile = Nothing) As ManagedClusterAgentPoolProfileProperties" />
      <MemberSignature Language="F#" Value="static member ManagedClusterAgentPoolProfileProperties : Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; * string * string * string * Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings * string * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; * Nullable&lt;single&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * seq&lt;string&gt; * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerService.Models.KubeletConfig * Azure.ResourceManager.ContainerService.Models.LinuxOSConfig * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfileProperties" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterAgentPoolProfileProperties (count, vmSize, osDiskSizeInGB, osDiskType, kubeletDiskType, workloadRuntime, vnetSubnetId, podSubnetId, maxPods, osType, osSku, maxCount, minCount, enableAutoScaling, scaleDownMode, agentPoolType, mode, orchestratorVersion, currentOrchestratorVersion, nodeImageVersion, upgradeSettings, provisioningState, powerStateCode, availabilityZones, enableNodePublicIP, nodePublicIPPrefixId, scaleSetPriority, scaleSetEvictionPolicy, spotMaxPrice, tags, nodeLabels, nodeTaints, proximityPlacementGroupId, kubeletConfig, linuxOSConfig, enableEncryptionAtHost, enableUltraSsd, enableFips, gpuInstanceProfile, creationDataSourceResourceId, capacityReservationGroupId, hostGroupId, networkProfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfileProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="osDiskSizeInGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSDiskType&gt;" />
        <Parameter Name="kubeletDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt;" />
        <Parameter Name="workloadRuntime" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt;" />
        <Parameter Name="vnetSubnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="podSubnetId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="maxPods" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType&gt;" />
        <Parameter Name="osSku" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSSku&gt;" />
        <Parameter Name="maxCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enableAutoScaling" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scaleDownMode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt;" />
        <Parameter Name="agentPoolType" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt;" />
        <Parameter Name="mode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt;" />
        <Parameter Name="orchestratorVersion" Type="System.String" />
        <Parameter Name="currentOrchestratorVersion" Type="System.String" />
        <Parameter Name="nodeImageVersion" Type="System.String" />
        <Parameter Name="upgradeSettings" Type="Azure.ResourceManager.ContainerService.Models.AgentPoolUpgradeSettings" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="powerStateCode" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceStateCode&gt;" />
        <Parameter Name="availabilityZones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="enableNodePublicIP" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="nodePublicIPPrefixId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scaleSetPriority" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt;" />
        <Parameter Name="scaleSetEvictionPolicy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt;" />
        <Parameter Name="spotMaxPrice" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeLabels" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="nodeTaints" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="proximityPlacementGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kubeletConfig" Type="Azure.ResourceManager.ContainerService.Models.KubeletConfig" />
        <Parameter Name="linuxOSConfig" Type="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig" />
        <Parameter Name="enableEncryptionAtHost" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableUltraSsd" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="enableFips" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="gpuInstanceProfile" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.GpuInstanceProfile&gt;" />
        <Parameter Name="creationDataSourceResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="capacityReservationGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="hostGroupId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="networkProfile" Type="Azure.ResourceManager.ContainerService.Models.AgentPoolNetworkProfile" />
      </Parameters>
      <Docs>
        <param name="count"> Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. </param>
        <param name="vmSize"> VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions. </param>
        <param name="osDiskSizeInGB"> OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </param>
        <param name="osDiskType"> The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). </param>
        <param name="kubeletDiskType"> Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. </param>
        <param name="workloadRuntime"> Determines the type of workload a node can run. </param>
        <param name="vnetSubnetId"> If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </param>
        <param name="podSubnetId"> If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </param>
        <param name="maxPods"> The maximum number of pods that can run on a node. </param>
        <param name="osType"> The operating system type. The default is Linux. </param>
        <param name="osSku"> Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes &lt;= 1.24 or Windows2022 when Kubernetes &gt;= 1.25 if OSType is Windows. </param>
        <param name="maxCount"> The maximum number of nodes for auto-scaling. </param>
        <param name="minCount"> The minimum number of nodes for auto-scaling. </param>
        <param name="enableAutoScaling"> Whether to enable auto-scaler. </param>
        <param name="scaleDownMode"> This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. </param>
        <param name="agentPoolType"> The type of Agent Pool. </param>
        <param name="mode"> A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools. </param>
        <param name="orchestratorVersion"> Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). </param>
        <param name="currentOrchestratorVersion"> If orchestratorVersion is a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If orchestratorVersion is &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used. </param>
        <param name="nodeImageVersion"> The version of node image. </param>
        <param name="upgradeSettings"> Settings for upgrading the agentpool. </param>
        <param name="provisioningState"> The current deployment or provisioning state. </param>
        <param name="powerStateCode"> When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded. </param>
        <param name="availabilityZones"> The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. </param>
        <param name="enableNodePublicIP"> Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. </param>
        <param name="nodePublicIPPrefixId"> This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}. </param>
        <param name="scaleSetPriority"> The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. </param>
        <param name="scaleSetEvictionPolicy"> This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. </param>
        <param name="spotMaxPrice"> Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing). </param>
        <param name="tags"> The tags to be persisted on the agent pool virtual machine scale set. </param>
        <param name="nodeLabels"> The node labels to be persisted across all nodes in agent pool. </param>
        <param name="nodeTaints"> The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. </param>
        <param name="proximityPlacementGroupId"> The ID for Proximity Placement Group. </param>
        <param name="kubeletConfig"> The Kubelet configuration on the agent pool nodes. </param>
        <param name="linuxOSConfig"> The OS configuration of Linux agent nodes. </param>
        <param name="enableEncryptionAtHost"> This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption. </param>
        <param name="enableUltraSsd"> Whether to enable UltraSSD. </param>
        <param name="enableFips"> See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. </param>
        <param name="gpuInstanceProfile"> GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. </param>
        <param name="creationDataSourceResourceId"> CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot. </param>
        <param name="capacityReservationGroupId"> AKS will associate the specified agent pool with the Capacity Reservation Group. </param>
        <param name="hostGroupId"> This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts). </param>
        <param name="networkProfile"> Network-related settings of an agent pool. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfileProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterAgentPoolProfileProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterCredential">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential ManagedClusterCredential (string name = default, byte[] value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential ManagedClusterCredential(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterCredential(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterCredential (Optional name As String = Nothing, Optional value As Byte() = Nothing) As ManagedClusterCredential" />
      <MemberSignature Language="F#" Value="static member ManagedClusterCredential : string * byte[] -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterCredential (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the credential. </param>
        <param name="value"> Base64-encoded Kubernetes configuration file. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterCredentials">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterCredentials ManagedClusterCredentials (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential&gt; kubeconfigs = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterCredentials ManagedClusterCredentials(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential&gt; kubeconfigs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterCredentials(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterCredentials (Optional kubeconfigs As IEnumerable(Of ManagedClusterCredential) = Nothing) As ManagedClusterCredentials" />
      <MemberSignature Language="F#" Value="static member ManagedClusterCredentials : seq&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterCredentials" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterCredentials kubeconfigs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kubeconfigs" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterCredential&gt;" />
      </Parameters>
      <Docs>
        <param name="kubeconfigs"> Base64-encoded Kubernetes configuration file. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterCredentials" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterCredentials" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterOidcIssuerProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile ManagedClusterOidcIssuerProfile (string issuerUriInfo = default, bool? isEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile ManagedClusterOidcIssuerProfile(string issuerUriInfo, valuetype System.Nullable`1&lt;bool&gt; isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterOidcIssuerProfile(System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterOidcIssuerProfile (Optional issuerUriInfo As String = Nothing, Optional isEnabled As Nullable(Of Boolean) = Nothing) As ManagedClusterOidcIssuerProfile" />
      <MemberSignature Language="F#" Value="static member ManagedClusterOidcIssuerProfile : string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterOidcIssuerProfile (issuerUriInfo, isEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuerUriInfo" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="issuerUriInfo"> The OIDC issuer url of the Managed Cluster. </param>
        <param name="isEnabled"> Whether the OIDC issuer is enabled. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterOidcIssuerProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterPodIdentity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentity ManagedClusterPodIdentity (string name = default, string namespace = default, string bindingSelector = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity identity = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProvisioningState? provisioningState = default, Azure.ResponseError errorDetail = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentity ManagedClusterPodIdentity(string name, string namespace, string bindingSelector, class Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity identity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProvisioningState&gt; provisioningState, class Azure.ResponseError errorDetail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterPodIdentity(System.String,System.String,System.String,Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity,System.Nullable{Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProvisioningState},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterPodIdentity (Optional name As String = Nothing, Optional namespace As String = Nothing, Optional bindingSelector As String = Nothing, Optional identity As ContainerServiceUserAssignedIdentity = Nothing, Optional provisioningState As Nullable(Of ManagedClusterPodIdentityProvisioningState) = Nothing, Optional errorDetail As ResponseError = Nothing) As ManagedClusterPodIdentity" />
      <MemberSignature Language="F#" Value="static member ManagedClusterPodIdentity : string * string * string * Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity * Nullable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProvisioningState&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentity" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterPodIdentity (name, namespace, bindingSelector, identity, provisioningState, errorDetail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="bindingSelector" Type="System.String" />
        <Parameter Name="identity" Type="Azure.ResourceManager.ContainerService.Models.ContainerServiceUserAssignedIdentity" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentityProvisioningState&gt;" />
        <Parameter Name="errorDetail" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the pod identity. </param>
        <param name="namespace"> The namespace of the pod identity. </param>
        <param name="bindingSelector"> The binding selector to use for the AzureIdentityBinding resource. </param>
        <param name="identity"> The user assigned identity details. </param>
        <param name="provisioningState"> The current provisioning state of the pod identity. </param>
        <param name="errorDetail" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterPodIdentity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterPoolUpgradeProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile ManagedClusterPoolUpgradeProfile (string kubernetesVersion = default, string name = default, Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType osType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem&gt; upgrades = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile ManagedClusterPoolUpgradeProfile(string kubernetesVersion, string name, valuetype Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType osType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem&gt; upgrades) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterPoolUpgradeProfile(System.String,System.String,Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterPoolUpgradeProfile (Optional kubernetesVersion As String = Nothing, Optional name As String = Nothing, Optional osType As ContainerServiceOSType = Nothing, Optional upgrades As IEnumerable(Of ManagedClusterPoolUpgradeProfileUpgradesItem) = Nothing) As ManagedClusterPoolUpgradeProfile" />
      <MemberSignature Language="F#" Value="static member ManagedClusterPoolUpgradeProfile : string * string * Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType * seq&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterPoolUpgradeProfile (kubernetesVersion, name, osType, upgrades)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kubernetesVersion" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="osType" Type="Azure.ResourceManager.ContainerService.Models.ContainerServiceOSType" />
        <Parameter Name="upgrades" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem&gt;" />
      </Parameters>
      <Docs>
        <param name="kubernetesVersion"> The Kubernetes version (major.minor.patch). </param>
        <param name="name"> The Agent Pool name. </param>
        <param name="osType"> The operating system type. The default is Linux. </param>
        <param name="upgrades"> List of orchestrator types and versions available for upgrade. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterPoolUpgradeProfileUpgradesItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem ManagedClusterPoolUpgradeProfileUpgradesItem (string kubernetesVersion = default, bool? isPreview = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem ManagedClusterPoolUpgradeProfileUpgradesItem(string kubernetesVersion, valuetype System.Nullable`1&lt;bool&gt; isPreview) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterPoolUpgradeProfileUpgradesItem(System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterPoolUpgradeProfileUpgradesItem (Optional kubernetesVersion As String = Nothing, Optional isPreview As Nullable(Of Boolean) = Nothing) As ManagedClusterPoolUpgradeProfileUpgradesItem" />
      <MemberSignature Language="F#" Value="static member ManagedClusterPoolUpgradeProfileUpgradesItem : string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterPoolUpgradeProfileUpgradesItem (kubernetesVersion, isPreview)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kubernetesVersion" Type="System.String" />
        <Parameter Name="isPreview" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="kubernetesVersion"> The Kubernetes version (major.minor.patch). </param>
        <param name="isPreview"> Whether the Kubernetes version is currently in preview. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfileUpgradesItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterRunCommandContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandContent ManagedClusterRunCommandContent (string command = default, string context = default, string clusterToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandContent ManagedClusterRunCommandContent(string command, string context, string clusterToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterRunCommandContent(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterRunCommandContent (Optional command As String = Nothing, Optional context As String = Nothing, Optional clusterToken As String = Nothing) As ManagedClusterRunCommandContent" />
      <MemberSignature Language="F#" Value="static member ManagedClusterRunCommandContent : string * string * string -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandContent" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterRunCommandContent (command, context, clusterToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clusterToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="command"> The command to run. </param>
        <param name="context"> A base64 encoded zip file containing the files required by the command. </param>
        <param name="clusterToken"> AuthToken issued for AKS AAD Server App. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterRunCommandResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandResult ManagedClusterRunCommandResult (string id = default, string provisioningState = default, int? exitCode = default, DateTimeOffset? startedOn = default, DateTimeOffset? finishedOn = default, string logs = default, string reason = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandResult ManagedClusterRunCommandResult(string id, string provisioningState, valuetype System.Nullable`1&lt;int32&gt; exitCode, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; finishedOn, string logs, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterRunCommandResult(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterRunCommandResult (Optional id As String = Nothing, Optional provisioningState As String = Nothing, Optional exitCode As Nullable(Of Integer) = Nothing, Optional startedOn As Nullable(Of DateTimeOffset) = Nothing, Optional finishedOn As Nullable(Of DateTimeOffset) = Nothing, Optional logs As String = Nothing, Optional reason As String = Nothing) As ManagedClusterRunCommandResult" />
      <MemberSignature Language="F#" Value="static member ManagedClusterRunCommandResult : string * string * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string -&gt; Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandResult" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterRunCommandResult (id, provisioningState, exitCode, startedOn, finishedOn, logs, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="exitCode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="startedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="finishedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="logs" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The command id. </param>
        <param name="provisioningState"> provisioning State. </param>
        <param name="exitCode"> The exit code of the command. </param>
        <param name="startedOn"> The time when the command started. </param>
        <param name="finishedOn"> The time when the command finished. </param>
        <param name="logs"> The command output. </param>
        <param name="reason"> An explanation of why provisioningState is set to failed (if so). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.Models.ManagedClusterRunCommandResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedClusterUpgradeProfileData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileData ManagedClusterUpgradeProfileData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile controlPlaneProfile = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile&gt; agentPoolProfiles = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileData ManagedClusterUpgradeProfileData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile controlPlaneProfile, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile&gt; agentPoolProfiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterUpgradeProfileData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedClusterUpgradeProfileData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional controlPlaneProfile As ManagedClusterPoolUpgradeProfile = Nothing, Optional agentPoolProfiles As IEnumerable(Of ManagedClusterPoolUpgradeProfile) = Nothing) As ManagedClusterUpgradeProfileData" />
      <MemberSignature Language="F#" Value="static member ManagedClusterUpgradeProfileData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile * seq&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile&gt; -&gt; Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.ManagedClusterUpgradeProfileData (id, name, resourceType, systemData, controlPlaneProfile, agentPoolProfiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="controlPlaneProfile" Type="Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile" />
        <Parameter Name="agentPoolProfiles" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ManagedClusterPoolUpgradeProfile&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="controlPlaneProfile"> The list of available upgrade versions for the control plane. </param>
        <param name="agentPoolProfiles"> The list of available upgrade versions for agent pools. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeshRevisionProfileData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.MeshRevisionProfileData MeshRevisionProfileData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.MeshRevision&gt; meshRevisions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.MeshRevisionProfileData MeshRevisionProfileData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.MeshRevision&gt; meshRevisions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.MeshRevisionProfileData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.MeshRevision})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeshRevisionProfileData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional meshRevisions As IEnumerable(Of MeshRevision) = Nothing) As MeshRevisionProfileData" />
      <MemberSignature Language="F#" Value="static member MeshRevisionProfileData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.ContainerService.Models.MeshRevision&gt; -&gt; Azure.ResourceManager.ContainerService.MeshRevisionProfileData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.MeshRevisionProfileData (id, name, resourceType, systemData, meshRevisions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.MeshRevisionProfileData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="meshRevisions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.MeshRevision&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="meshRevisions"> Mesh revision profile properties for a mesh. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.MeshRevisionProfileData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.MeshRevisionProfileData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeshUpgradeProfileData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.MeshUpgradeProfileData MeshUpgradeProfileData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ContainerService.Models.MeshUpgradeProfileProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.MeshUpgradeProfileData MeshUpgradeProfileData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.ContainerService.Models.MeshUpgradeProfileProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.MeshUpgradeProfileData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.ContainerService.Models.MeshUpgradeProfileProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeshUpgradeProfileData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As MeshUpgradeProfileProperties = Nothing) As MeshUpgradeProfileData" />
      <MemberSignature Language="F#" Value="static member MeshUpgradeProfileData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.ContainerService.Models.MeshUpgradeProfileProperties -&gt; Azure.ResourceManager.ContainerService.MeshUpgradeProfileData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.MeshUpgradeProfileData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.MeshUpgradeProfileData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.ContainerService.Models.MeshUpgradeProfileProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Mesh upgrade profile properties for a major.minor release. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.MeshUpgradeProfileData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.MeshUpgradeProfileData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSOptionProfileData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerService.OSOptionProfileData OSOptionProfileData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty&gt; osOptionPropertyList = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerService.OSOptionProfileData OSOptionProfileData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty&gt; osOptionPropertyList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.OSOptionProfileData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OSOptionProfileData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional osOptionPropertyList As IEnumerable(Of ContainerServiceOSOptionProperty) = Nothing) As OSOptionProfileData" />
      <MemberSignature Language="F#" Value="static member OSOptionProfileData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty&gt; -&gt; Azure.ResourceManager.ContainerService.OSOptionProfileData" Usage="Azure.ResourceManager.ContainerService.Models.ArmContainerServiceModelFactory.OSOptionProfileData (id, name, resourceType, systemData, osOptionPropertyList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.OSOptionProfileData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="osOptionPropertyList" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceOSOptionProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="osOptionPropertyList"> The list of OS options. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerService.OSOptionProfileData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerService.OSOptionProfileData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
