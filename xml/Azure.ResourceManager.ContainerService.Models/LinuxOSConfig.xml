<Type Name="LinuxOSConfig" FullName="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig">
  <TypeSignature Language="C#" Value="public class LinuxOSConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinuxOSConfig extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerService.Models.LinuxOSConfig" />
  <TypeSignature Language="VB.NET" Value="Public Class LinuxOSConfig" />
  <TypeSignature Language="F#" Value="type LinuxOSConfig = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinuxOSConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of LinuxOSConfig. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapFileSizeInMB">
      <MemberSignature Language="C#" Value="public int? SwapFileSizeInMB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; SwapFileSizeInMB" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.SwapFileSizeInMB" />
      <MemberSignature Language="VB.NET" Value="Public Property SwapFileSizeInMB As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.SwapFileSizeInMB : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.SwapFileSizeInMB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The size in MB of a swap file that will be created on each node. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sysctls">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.SysctlConfig Sysctls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ContainerService.Models.SysctlConfig Sysctls" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.Sysctls" />
      <MemberSignature Language="VB.NET" Value="Public Property Sysctls As SysctlConfig" />
      <MemberSignature Language="F#" Value="member this.Sysctls : Azure.ResourceManager.ContainerService.Models.SysctlConfig with get, set" Usage="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.Sysctls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.SysctlConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Sysctl settings for Linux agent nodes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparentHugePageDefrag">
      <MemberSignature Language="C#" Value="public string TransparentHugePageDefrag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransparentHugePageDefrag" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.TransparentHugePageDefrag" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparentHugePageDefrag As String" />
      <MemberSignature Language="F#" Value="member this.TransparentHugePageDefrag : string with get, set" Usage="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.TransparentHugePageDefrag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparentHugePageEnabled">
      <MemberSignature Language="C#" Value="public string TransparentHugePageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransparentHugePageEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.TransparentHugePageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparentHugePageEnabled As String" />
      <MemberSignature Language="F#" Value="member this.TransparentHugePageEnabled : string with get, set" Usage="Azure.ResourceManager.ContainerService.Models.LinuxOSConfig.TransparentHugePageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
