<Type Name="EventGridPublisherClientExtensions" FullName="Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions">
  <TypeSignature Language="C#" Value="public static class EventGridPublisherClientExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventGridPublisherClientExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EventGridPublisherClientExtensions" />
  <TypeSignature Language="F#" Value="type EventGridPublisherClientExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class contains extension methods to enable usage of the CloudNative.CloudEvent
            library with the Azure Event Grid library.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SendCloudNativeCloudEvent">
      <MemberSignature Language="C#" Value="public static Azure.Response SendCloudNativeCloudEvent (this Azure.Messaging.EventGrid.EventGridPublisherClient client, CloudNative.CloudEvents.CloudEvent cloudEvent, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response SendCloudNativeCloudEvent(class Azure.Messaging.EventGrid.EventGridPublisherClient client, class CloudNative.CloudEvents.CloudEvent cloudEvent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEvent(Azure.Messaging.EventGrid.EventGridPublisherClient,CloudNative.CloudEvents.CloudEvent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendCloudNativeCloudEvent (client As EventGridPublisherClient, cloudEvent As CloudEvent, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="static member SendCloudNativeCloudEvent : Azure.Messaging.EventGrid.EventGridPublisherClient * CloudNative.CloudEvents.CloudEvent * System.Threading.CancellationToken -&gt; Azure.Response" Usage="Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEvent (client, cloudEvent, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.Messaging.EventGrid.EventGridPublisherClient" RefType="this" />
        <Parameter Name="cloudEvent" Type="CloudNative.CloudEvents.CloudEvent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> instance to extend.</param>
        <param name="cloudEvent"> The event to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of CloudEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCloudNativeCloudEventAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&gt; SendCloudNativeCloudEventAsync (this Azure.Messaging.EventGrid.EventGridPublisherClient client, CloudNative.CloudEvents.CloudEvent cloudEvent, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendCloudNativeCloudEventAsync(class Azure.Messaging.EventGrid.EventGridPublisherClient client, class CloudNative.CloudEvents.CloudEvent cloudEvent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEventAsync(Azure.Messaging.EventGrid.EventGridPublisherClient,CloudNative.CloudEvents.CloudEvent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendCloudNativeCloudEventAsync (client As EventGridPublisherClient, cloudEvent As CloudEvent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="static member SendCloudNativeCloudEventAsync : Azure.Messaging.EventGrid.EventGridPublisherClient * CloudNative.CloudEvents.CloudEvent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEventAsync (client, cloudEvent, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.Messaging.EventGrid.EventGridPublisherClient" RefType="this" />
        <Parameter Name="cloudEvent" Type="CloudNative.CloudEvents.CloudEvent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> instance to extend.</param>
        <param name="cloudEvent"> The event to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of CloudEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCloudNativeCloudEvents">
      <MemberSignature Language="C#" Value="public static Azure.Response SendCloudNativeCloudEvents (this Azure.Messaging.EventGrid.EventGridPublisherClient client, System.Collections.Generic.IEnumerable&lt;CloudNative.CloudEvents.CloudEvent&gt; cloudEvents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response SendCloudNativeCloudEvents(class Azure.Messaging.EventGrid.EventGridPublisherClient client, class System.Collections.Generic.IEnumerable`1&lt;class CloudNative.CloudEvents.CloudEvent&gt; cloudEvents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEvents(Azure.Messaging.EventGrid.EventGridPublisherClient,System.Collections.Generic.IEnumerable{CloudNative.CloudEvents.CloudEvent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendCloudNativeCloudEvents (client As EventGridPublisherClient, cloudEvents As IEnumerable(Of CloudEvent), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="static member SendCloudNativeCloudEvents : Azure.Messaging.EventGrid.EventGridPublisherClient * seq&lt;CloudNative.CloudEvents.CloudEvent&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEvents (client, cloudEvents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.Messaging.EventGrid.EventGridPublisherClient" RefType="this" />
        <Parameter Name="cloudEvents" Type="System.Collections.Generic.IEnumerable&lt;CloudNative.CloudEvents.CloudEvent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> instance to extend.</param>
        <param name="cloudEvents"> The set of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of CloudEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCloudNativeCloudEventsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&gt; SendCloudNativeCloudEventsAsync (this Azure.Messaging.EventGrid.EventGridPublisherClient client, System.Collections.Generic.IEnumerable&lt;CloudNative.CloudEvents.CloudEvent&gt; cloudEvents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendCloudNativeCloudEventsAsync(class Azure.Messaging.EventGrid.EventGridPublisherClient client, class System.Collections.Generic.IEnumerable`1&lt;class CloudNative.CloudEvents.CloudEvent&gt; cloudEvents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEventsAsync(Azure.Messaging.EventGrid.EventGridPublisherClient,System.Collections.Generic.IEnumerable{CloudNative.CloudEvents.CloudEvent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendCloudNativeCloudEventsAsync (client As EventGridPublisherClient, cloudEvents As IEnumerable(Of CloudEvent), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="static member SendCloudNativeCloudEventsAsync : Azure.Messaging.EventGrid.EventGridPublisherClient * seq&lt;CloudNative.CloudEvents.CloudEvent&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents.EventGridPublisherClientExtensions.SendCloudNativeCloudEventsAsync (client, cloudEvents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.Messaging.EventGrid.EventGridPublisherClient" RefType="this" />
        <Parameter Name="cloudEvents" Type="System.Collections.Generic.IEnumerable&lt;CloudNative.CloudEvents.CloudEvent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> instance to extend.</param>
        <param name="cloudEvents"> The set of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of CloudEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
