<Type Name="MockableChangeAnalysisSubscriptionResource" FullName="Azure.ResourceManager.ChangeAnalysis.Mocking.MockableChangeAnalysisSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableChangeAnalysisSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableChangeAnalysisSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ChangeAnalysis.Mocking.MockableChangeAnalysisSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableChangeAnalysisSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableChangeAnalysisSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ChangeAnalysis</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableChangeAnalysisSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ChangeAnalysis.Mocking.MockableChangeAnalysisSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ChangeAnalysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ChangeAnalysis.Mocking.MockableChangeAnalysisSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesBySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt; GetChangesBySubscription (DateTimeOffset startTime, DateTimeOffset endTime, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt; GetChangesBySubscription(valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ChangeAnalysis.Mocking.MockableChangeAnalysisSubscriptionResource.GetChangesBySubscription(System.DateTimeOffset,System.DateTimeOffset,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesBySubscription (startTime As DateTimeOffset, endTime As DateTimeOffset, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DetectedChangeData)" />
      <MemberSignature Language="F#" Value="abstract member GetChangesBySubscription : DateTimeOffset * DateTimeOffset * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt;&#xA;override this.GetChangesBySubscription : DateTimeOffset * DateTimeOffset * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt;" Usage="mockableChangeAnalysisSubscriptionResource.GetChangesBySubscription (startTime, endTime, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ChangeAnalysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startTime"> Specifies the start time of the changes request. </param>
        <param name="endTime"> Specifies the end time of the changes request. </param>
        <param name="skipToken"> A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the changes of a subscription within the specified time range. Customer data will always be masked.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ChangeAnalysis/changes</description></item><item><term>Operation Id</term><description>Changes_ListChangesBySubscription</description></item><item><term>Default Api Version</term><description>2021-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt; GetChangesBySubscriptionAsync (DateTimeOffset startTime, DateTimeOffset endTime, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt; GetChangesBySubscriptionAsync(valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ChangeAnalysis.Mocking.MockableChangeAnalysisSubscriptionResource.GetChangesBySubscriptionAsync(System.DateTimeOffset,System.DateTimeOffset,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesBySubscriptionAsync (startTime As DateTimeOffset, endTime As DateTimeOffset, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DetectedChangeData)" />
      <MemberSignature Language="F#" Value="abstract member GetChangesBySubscriptionAsync : DateTimeOffset * DateTimeOffset * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt;&#xA;override this.GetChangesBySubscriptionAsync : DateTimeOffset * DateTimeOffset * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt;" Usage="mockableChangeAnalysisSubscriptionResource.GetChangesBySubscriptionAsync (startTime, endTime, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ChangeAnalysis</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startTime"> Specifies the start time of the changes request. </param>
        <param name="endTime"> Specifies the end time of the changes request. </param>
        <param name="skipToken"> A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the changes of a subscription within the specified time range. Customer data will always be masked.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ChangeAnalysis/changes</description></item><item><term>Operation Id</term><description>Changes_ListChangesBySubscription</description></item><item><term>Default Api Version</term><description>2021-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ChangeAnalysis.Models.DetectedChangeData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
