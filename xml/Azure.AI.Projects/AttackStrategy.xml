<Type Name="AttackStrategy" FullName="Azure.AI.Projects.AttackStrategy">
  <TypeSignature Language="C#" Value="public readonly struct AttackStrategy : IEquatable&lt;Azure.AI.Projects.AttackStrategy&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AttackStrategy extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.AI.Projects.AttackStrategy&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Projects.AttackStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Structure AttackStrategy&#xA;Implements IEquatable(Of AttackStrategy)" />
  <TypeSignature Language="F#" Value="type AttackStrategy = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Projects</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.AI.Projects.AttackStrategy&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Strategies for attacks. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttackStrategy (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Projects.AttackStrategy : string -&gt; Azure.AI.Projects.AttackStrategy" Usage="new Azure.AI.Projects.AttackStrategy value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Projects.AttackStrategy" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AnsiiAttack">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy AnsiiAttack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy AnsiiAttack" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.AnsiiAttack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AnsiiAttack As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member AnsiiAttack : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.AnsiiAttack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Utilizes ANSI escape sequences to manipulate text appearance and behavior. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsciiArt">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy AsciiArt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy AsciiArt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.AsciiArt" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AsciiArt As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member AsciiArt : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.AsciiArt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Generates visual art using ASCII characters, often used for creative or obfuscation purposes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsciiSmuggler">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy AsciiSmuggler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy AsciiSmuggler" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.AsciiSmuggler" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AsciiSmuggler As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member AsciiSmuggler : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.AsciiSmuggler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Conceals data within ASCII characters, making it harder to detect. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atbash">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Atbash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Atbash" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Atbash" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Atbash As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Atbash : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Atbash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Implements the Atbash cipher, a simple substitution cipher where each letter is mapped to its reverse. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Base64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Base64" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Base64" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Base64 As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Base64 : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Base64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Encodes binary data into a text format using Base64, commonly used for data transmission. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Baseline" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Baseline As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Baseline : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Represents the baseline direct adversarial probing, which is used by attack strategies as the attack objective. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binary">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Binary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Binary" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Binary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Binary As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Binary : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Binary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Converts text into binary code, representing data in a series of 0s and 1s. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caesar">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Caesar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Caesar" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Caesar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Caesar As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Caesar : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Caesar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Applies the Caesar cipher, a substitution cipher that shifts characters by a fixed number of positions. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterSpace">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy CharacterSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy CharacterSpace" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.CharacterSpace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CharacterSpace As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member CharacterSpace : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.CharacterSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Alters text by adding spaces between characters, often used for obfuscation. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterSwap">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy CharacterSwap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy CharacterSwap" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.CharacterSwap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CharacterSwap As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member CharacterSwap : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.CharacterSwap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Swaps characters within text to create variations or obfuscate the original content. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diacritic">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Diacritic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Diacritic" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Diacritic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Diacritic As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Diacritic : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Diacritic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Adds diacritical marks to characters, changing their appearance and sometimes their meaning. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Difficult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Difficult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Difficult" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Difficult" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Difficult As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Difficult : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Difficult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Represents a default set of difficult complexity attacks. Difficult complexity attacks include attacks that require access to significant resources and effort to execute an attack such as knowledge of search-based algorithms in addition to a generative AI model. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Easy">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Easy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Easy" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Easy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Easy As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Easy : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Easy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Represents a default set of easy complexity attacks. Easy complexity attacks require less effort, such as translation of a prompt into some encoding, and does not require any Large Language Model to convert or orchestrate. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.AI.Projects.AttackStrategy other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.AI.Projects.AttackStrategy other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.Equals(Azure.AI.Projects.AttackStrategy)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As AttackStrategy) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.AI.Projects.AttackStrategy -&gt; bool" Usage="attackStrategy.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.AI.Projects.AttackStrategy" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object.</param>
        <summary>Indicates whether the current object is equal to another object of the same type.</summary>
        <returns>
          <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attackStrategy.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current instance.</param>
        <summary>Indicates whether this instance and a specified object are equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Flip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Flip" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Flip" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Flip As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Flip : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Flip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Flips characters from front to back, creating a mirrored effect. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attackStrategy.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Jailbreak">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Jailbreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Jailbreak" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Jailbreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Jailbreak As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Jailbreak : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Jailbreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Injects specially crafted prompts to bypass AI safeguards, known as User Injected Prompt Attacks (UPIA). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Leetspeak">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Leetspeak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Leetspeak" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Leetspeak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Leetspeak As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Leetspeak : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Leetspeak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Transforms text into Leetspeak, a form of encoding that replaces letters with similar-looking numbers or symbols. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Moderate">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Moderate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Moderate" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Moderate" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Moderate As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Moderate : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Moderate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Represents a default set of moderate complexity attacks. Moderate complexity attacks require having access to resources such as another generative AI model. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Morse">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Morse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Morse" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Morse" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Morse As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Morse : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Morse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Encodes text into Morse code, using dots and dashes to represent characters. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.AI.Projects.AttackStrategy left, Azure.AI.Projects.AttackStrategy right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.AI.Projects.AttackStrategy left, valuetype Azure.AI.Projects.AttackStrategy right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.op_Equality(Azure.AI.Projects.AttackStrategy,Azure.AI.Projects.AttackStrategy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As AttackStrategy, right As AttackStrategy) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.AI.Projects.AttackStrategy * Azure.AI.Projects.AttackStrategy -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.AI.Projects.AttackStrategy" />
        <Parameter Name="right" Type="Azure.AI.Projects.AttackStrategy" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.AI.Projects.AttackStrategy" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.AI.Projects.AttackStrategy (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.AI.Projects.AttackStrategy op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.op_Implicit(System.String)~Azure.AI.Projects.AttackStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.AI.Projects.AttackStrategy" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.AI.Projects.AttackStrategy left, Azure.AI.Projects.AttackStrategy right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.AI.Projects.AttackStrategy left, valuetype Azure.AI.Projects.AttackStrategy right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.op_Inequality(Azure.AI.Projects.AttackStrategy,Azure.AI.Projects.AttackStrategy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As AttackStrategy, right As AttackStrategy) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.AI.Projects.AttackStrategy * Azure.AI.Projects.AttackStrategy -&gt; bool" Usage="Azure.AI.Projects.AttackStrategy.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.AI.Projects.AttackStrategy" />
        <Parameter Name="right" Type="Azure.AI.Projects.AttackStrategy" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.AI.Projects.AttackStrategy" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ROT13">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy ROT13 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy ROT13" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.ROT13" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ROT13 As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member ROT13 : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.ROT13" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Applies the ROT13 cipher, a simple substitution cipher that shifts characters by 13 positions. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringJoin">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy StringJoin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy StringJoin" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.StringJoin" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StringJoin As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member StringJoin : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.StringJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Joins multiple strings together, often used for concatenation or obfuscation. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuffixAppend">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy SuffixAppend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy SuffixAppend" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.SuffixAppend" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SuffixAppend As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member SuffixAppend : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.SuffixAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Appends an adversarial suffix to the prompt. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AttackStrategy.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="attackStrategy.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the fully qualified type name of this instance.</summary>
        <returns>The fully qualified type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeConfusable">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy UnicodeConfusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy UnicodeConfusable" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.UnicodeConfusable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnicodeConfusable As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member UnicodeConfusable : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.UnicodeConfusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Uses Unicode characters that look similar to standard characters, creating visual confusion. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeSubstitution">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy UnicodeSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy UnicodeSubstitution" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.UnicodeSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnicodeSubstitution As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member UnicodeSubstitution : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.UnicodeSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Substitutes standard characters with Unicode equivalents, often for obfuscation. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AttackStrategy Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.AI.Projects.AttackStrategy Url" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.AttackStrategy.Url" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Url As AttackStrategy" />
      <MemberSignature Language="F#" Value="static member Url : Azure.AI.Projects.AttackStrategy" Usage="Azure.AI.Projects.AttackStrategy.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AttackStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Encodes text into URL format. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
