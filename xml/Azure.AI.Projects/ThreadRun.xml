<Type Name="ThreadRun" FullName="Azure.AI.Projects.ThreadRun">
  <TypeSignature Language="C#" Value="public class ThreadRun : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadRun extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Projects.ThreadRun&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Projects.ThreadRun&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Projects.ThreadRun" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadRun&#xA;Implements IJsonModel(Of ThreadRun), IPersistableModel(Of ThreadRun)" />
  <TypeSignature Language="F#" Value="type ThreadRun = class&#xA;    interface IJsonModel&lt;ThreadRun&gt;&#xA;    interface IPersistableModel&lt;ThreadRun&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Projects</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Data representing a single evaluation run of an agent thread. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AssistantId">
      <MemberSignature Language="C#" Value="public string AssistantId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssistantId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.AssistantId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssistantId As String" />
      <MemberSignature Language="F#" Value="member this.AssistantId : string" Usage="Azure.AI.Projects.ThreadRun.AssistantId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ID of the agent associated with the thread this run was performed against. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelledAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset? CancelledAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; CancelledAt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.CancelledAt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancelledAt As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.CancelledAt : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.AI.Projects.ThreadRun.CancelledAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Unix timestamp, in seconds, representing when this was cancelled. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset? CompletedAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; CompletedAt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.CompletedAt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedAt As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.CompletedAt : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.AI.Projects.ThreadRun.CompletedAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Unix timestamp, in seconds, representing when this completed. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset CreatedAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset CreatedAt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.CreatedAt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreatedAt As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.CreatedAt : DateTimeOffset" Usage="Azure.AI.Projects.ThreadRun.CreatedAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Unix timestamp, in seconds, representing when this object was created. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset? ExpiresAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; ExpiresAt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.ExpiresAt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpiresAt As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.ExpiresAt : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.AI.Projects.ThreadRun.ExpiresAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Unix timestamp, in seconds, representing when this item expires. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset? FailedAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; FailedAt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.FailedAt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FailedAt As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.FailedAt : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.AI.Projects.ThreadRun.FailedAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Unix timestamp, in seconds, representing when this failed. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.AI.Projects.ThreadRun.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The identifier, which can be referenced in API endpoints. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompleteDetails">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.IncompleteRunDetails IncompleteDetails { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Projects.IncompleteRunDetails IncompleteDetails" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.IncompleteDetails" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncompleteDetails As IncompleteRunDetails" />
      <MemberSignature Language="F#" Value="member this.IncompleteDetails : Azure.AI.Projects.IncompleteRunDetails" Usage="Azure.AI.Projects.ThreadRun.IncompleteDetails" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.IncompleteRunDetails</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Details on why the run is incomplete. Will be `null` if the run is not incomplete. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instructions">
      <MemberSignature Language="C#" Value="public string Instructions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Instructions" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Instructions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Instructions As String" />
      <MemberSignature Language="F#" Value="member this.Instructions : string" Usage="Azure.AI.Projects.ThreadRun.Instructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The overridden system instructions used for this agent thread run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadRun.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="threadRun.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastError">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.RunError LastError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Projects.RunError LastError" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.LastError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastError As RunError" />
      <MemberSignature Language="F#" Value="member this.LastError : Azure.AI.Projects.RunError" Usage="Azure.AI.Projects.ThreadRun.LastError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.RunError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The last error, if any, encountered by this agent thread run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCompletionTokens">
      <MemberSignature Language="C#" Value="public int? MaxCompletionTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxCompletionTokens" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.MaxCompletionTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxCompletionTokens As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxCompletionTokens : Nullable&lt;int&gt;" Usage="Azure.AI.Projects.ThreadRun.MaxCompletionTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum number of completion tokens specified to have been used over the course of the run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPromptTokens">
      <MemberSignature Language="C#" Value="public int? MaxPromptTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxPromptTokens" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.MaxPromptTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxPromptTokens As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxPromptTokens : Nullable&lt;int&gt;" Usage="Azure.AI.Projects.ThreadRun.MaxPromptTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum number of prompt tokens specified to have been used over the course of the run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IReadOnlyDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;" Usage="Azure.AI.Projects.ThreadRun.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public string Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Model" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As String" />
      <MemberSignature Language="F#" Value="member this.Model : string" Usage="Azure.AI.Projects.ThreadRun.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ID of the model to use. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelToolCalls">
      <MemberSignature Language="C#" Value="public bool ParallelToolCalls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParallelToolCalls" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.ParallelToolCalls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParallelToolCalls As Boolean" />
      <MemberSignature Language="F#" Value="member this.ParallelToolCalls : bool" Usage="Azure.AI.Projects.ThreadRun.ParallelToolCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Determines if tools can be executed in parallel within the run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAction">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.RequiredAction RequiredAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Projects.RequiredAction RequiredAction" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.RequiredAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredAction As RequiredAction" />
      <MemberSignature Language="F#" Value="member this.RequiredAction : Azure.AI.Projects.RequiredAction" Usage="Azure.AI.Projects.ThreadRun.RequiredAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.RequiredAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The details of the action required for the agent thread run to continue.
            Please note <see cref="T:Azure.AI.Projects.RequiredAction" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Projects.SubmitToolOutputsAction" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.Projects.RequiredFunctionToolCall&gt; RequiredActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.Projects.RequiredFunctionToolCall&gt; RequiredActions" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.RequiredActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredActions As IReadOnlyList(Of RequiredFunctionToolCall)" />
      <MemberSignature Language="F#" Value="member this.RequiredActions : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.Projects.RequiredFunctionToolCall&gt;" Usage="Azure.AI.Projects.ThreadRun.RequiredActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.Projects.RequiredFunctionToolCall&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of required actions that must have their results submitted for the run to continue.
            </summary>
        <value>To be added.</value>
        <remarks>
          <see cref="T:Azure.AI.Projects.RequiredAction" /> is the abstract base type for all required actions. Its
            concrete type can be one of:
            <list type="bullet"><item><see cref="T:Azure.AI.Projects.RequiredFunctionToolCall" /></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public BinaryData ResponseFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.ResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseFormat As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ResponseFormat : BinaryData" Usage="Azure.AI.Projects.ThreadRun.ResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The response format of the tool calls used in this run.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para><remarks>
            Supported types:
            <list type="bullet"><item><description><see cref="T:System.String" /></description></item><item><description><see cref="T:Azure.AI.Projects.AgentsApiResponseFormatMode" /></description></item><item><description><see cref="T:Azure.AI.Projects.AgentsApiResponseFormat" /></description></item></list></remarks>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartedAt">
      <MemberSignature Language="C#" Value="public DateTimeOffset? StartedAt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; StartedAt" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.StartedAt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartedAt As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.StartedAt : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.AI.Projects.ThreadRun.StartedAt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Unix timestamp, in seconds, representing when this item was started. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.RunStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.AI.Projects.RunStatus Status" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As RunStatus" />
      <MemberSignature Language="F#" Value="member this.Status : Azure.AI.Projects.RunStatus" Usage="Azure.AI.Projects.ThreadRun.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.RunStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The status of the agent thread run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Projects.ThreadRun IJsonModel&lt;ThreadRun&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Projects.ThreadRun System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadRun.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Projects#ThreadRun&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ThreadRun Implements IJsonModel(Of ThreadRun).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadRun&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadRun" Usage="threadRun.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ThreadRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ThreadRun&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadRun.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Projects#ThreadRun&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ThreadRun).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="threadRun.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Projects.ThreadRun IPersistableModel&lt;ThreadRun&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Projects.ThreadRun System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadRun.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Projects#ThreadRun&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ThreadRun Implements IPersistableModel(Of ThreadRun).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadRun&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadRun" Usage="threadRun.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ThreadRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ThreadRun&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadRun.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Projects#ThreadRun&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ThreadRun).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="threadRun.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ThreadRun&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadRun.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Projects#ThreadRun&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ThreadRun).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="threadRun.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadRun&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Temperature">
      <MemberSignature Language="C#" Value="public float? Temperature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; Temperature" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Temperature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Temperature As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.Temperature : Nullable&lt;single&gt;" Usage="Azure.AI.Projects.ThreadRun.Temperature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The sampling temperature used for this run. If not set, defaults to 1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="Azure.AI.Projects.ThreadRun.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ID of the thread associated with this run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolChoice">
      <MemberSignature Language="C#" Value="public BinaryData ToolChoice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ToolChoice" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.ToolChoice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolChoice As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ToolChoice : BinaryData" Usage="Azure.AI.Projects.ThreadRun.ToolChoice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls whether or not and which tool is called by the model.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para><remarks>
            Supported types:
            <list type="bullet"><item><description><see cref="T:System.String" /></description></item><item><description><see cref="T:Azure.AI.Projects.AgentsApiToolChoiceOptionMode" /></description></item><item><description><see cref="T:Azure.AI.Projects.AgentsNamedToolChoice" /></description></item></list></remarks>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolResources">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.UpdateToolResourcesOptions ToolResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Projects.UpdateToolResourcesOptions ToolResources" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.ToolResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolResources As UpdateToolResourcesOptions" />
      <MemberSignature Language="F#" Value="member this.ToolResources : Azure.AI.Projects.UpdateToolResourcesOptions" Usage="Azure.AI.Projects.ThreadRun.ToolResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.UpdateToolResourcesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Override the tools the agent can use for this run. This is useful for modifying the behavior on a per-run basis. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tools">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.AI.Projects.ToolDefinition&gt; Tools { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.AI.Projects.ToolDefinition&gt; Tools" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Tools" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tools As IReadOnlyList(Of ToolDefinition)" />
      <MemberSignature Language="F#" Value="member this.Tools : System.Collections.Generic.IReadOnlyList&lt;Azure.AI.Projects.ToolDefinition&gt;" Usage="Azure.AI.Projects.ThreadRun.Tools" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.AI.Projects.ToolDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The overridden enabled tools used for this agent thread run.
            Please note <see cref="T:Azure.AI.Projects.ToolDefinition" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Projects.AzureAISearchToolDefinition" />, <see cref="T:Azure.AI.Projects.AzureFunctionToolDefinition" />, <see cref="T:Azure.AI.Projects.BingGroundingToolDefinition" />, <see cref="T:Azure.AI.Projects.CodeInterpreterToolDefinition" />, <see cref="T:Azure.AI.Projects.MicrosoftFabricToolDefinition" />, <see cref="T:Azure.AI.Projects.FileSearchToolDefinition" />, <see cref="T:Azure.AI.Projects.FunctionToolDefinition" />, <see cref="T:Azure.AI.Projects.OpenApiToolDefinition" /> and <see cref="T:Azure.AI.Projects.SharepointToolDefinition" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopP">
      <MemberSignature Language="C#" Value="public float? TopP { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; TopP" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.TopP" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopP As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.TopP : Nullable&lt;single&gt;" Usage="Azure.AI.Projects.ThreadRun.TopP" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The nucleus sampling value used for this run. If not set, defaults to 1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TruncationStrategy">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.TruncationObject TruncationStrategy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Projects.TruncationObject TruncationStrategy" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.TruncationStrategy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TruncationStrategy As TruncationObject" />
      <MemberSignature Language="F#" Value="member this.TruncationStrategy : Azure.AI.Projects.TruncationObject" Usage="Azure.AI.Projects.ThreadRun.TruncationStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.TruncationObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The strategy to use for dropping messages as the context windows moves forward. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Usage">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.RunCompletionUsage Usage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Projects.RunCompletionUsage Usage" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadRun.Usage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Usage As RunCompletionUsage" />
      <MemberSignature Language="F#" Value="member this.Usage : Azure.AI.Projects.RunCompletionUsage" Usage="Azure.AI.Projects.ThreadRun.Usage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.RunCompletionUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Usage statistics related to the run. This value will be `null` if the run is not in a terminal state (i.e. `in_progress`, `queued`, etc.). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
