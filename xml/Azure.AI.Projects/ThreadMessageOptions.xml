<Type Name="ThreadMessageOptions" FullName="Azure.AI.Projects.ThreadMessageOptions">
  <TypeSignature Language="C#" Value="public class ThreadMessageOptions : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadMessageOptions extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Projects.ThreadMessageOptions&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Projects.ThreadMessageOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Projects.ThreadMessageOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadMessageOptions&#xA;Implements IJsonModel(Of ThreadMessageOptions), IPersistableModel(Of ThreadMessageOptions)" />
  <TypeSignature Language="F#" Value="type ThreadMessageOptions = class&#xA;    interface IJsonModel&lt;ThreadMessageOptions&gt;&#xA;    interface IPersistableModel&lt;ThreadMessageOptions&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Projects</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents the options for creating or adding a message in an agent thread. This class provides
            convenient ways to specify the message role (e.g., user or assistant) and the message content,
            which can be either plain text or one or more structured content blocks (e.g., text, images).
            </summary>
    <remarks>
            This partial class builds on the generated code, offering two primary ways to define a message:
            <list type="bullet"><item><description>A single string for simple textual content.</description></item><item><description>
                  A list of <see cref="T:Azure.AI.Projects.MessageInputContentBlock" /> items for more advanced scenarios, such
                  as including multiple blocks of text, images, or other media.
                </description></item></list></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadMessageOptions (Azure.AI.Projects.MessageRole role, BinaryData content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.AI.Projects.MessageRole role, class System.BinaryData content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.#ctor(Azure.AI.Projects.MessageRole,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (role As MessageRole, content As BinaryData)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Projects.ThreadMessageOptions : Azure.AI.Projects.MessageRole * BinaryData -&gt; Azure.AI.Projects.ThreadMessageOptions" Usage="new Azure.AI.Projects.ThreadMessageOptions (role, content)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="role" Type="Azure.AI.Projects.MessageRole" />
        <Parameter Name="content" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="role">
            The role of the entity that is creating the message. Allowed values include:
            `user`, which indicates the message is sent by an actual user (and should be
            used in most cases to represent user-generated messages), and `assistant`,
            which indicates the message is generated by the agent (use this value to insert
            messages from the agent into the conversation).
            </param>
        <param name="content">
            The content of the initial message. This may be a basic string (if you only
            need text) or an array of typed content blocks (for example, text, image_file,
            image_url, and so on).
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Projects.ThreadMessageOptions" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadMessageOptions (Azure.AI.Projects.MessageRole role, System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.MessageInputContentBlock&gt; contentBlocks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.AI.Projects.MessageRole role, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Projects.MessageInputContentBlock&gt; contentBlocks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.#ctor(Azure.AI.Projects.MessageRole,System.Collections.Generic.IEnumerable{Azure.AI.Projects.MessageInputContentBlock})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (role As MessageRole, contentBlocks As IEnumerable(Of MessageInputContentBlock))" />
      <MemberSignature Language="F#" Value="new Azure.AI.Projects.ThreadMessageOptions : Azure.AI.Projects.MessageRole * seq&lt;Azure.AI.Projects.MessageInputContentBlock&gt; -&gt; Azure.AI.Projects.ThreadMessageOptions" Usage="new Azure.AI.Projects.ThreadMessageOptions (role, contentBlocks)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="role" Type="Azure.AI.Projects.MessageRole" />
        <Parameter Name="contentBlocks" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.MessageInputContentBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="role">
            The role of the entity creating the message (e.g., user or agent).
            Valid values typically include <see cref="P:Azure.AI.Projects.MessageRole.User" /> or <see cref="P:Azure.AI.Projects.MessageRole.Agent" />.
            </param>
        <param name="contentBlocks">
            A collection of specialized content blocks (e.g., <see cref="T:Azure.AI.Projects.MessageInputTextBlock" />,
            <see cref="T:Azure.AI.Projects.MessageInputImageFileBlock" />, <see cref="T:Azure.AI.Projects.MessageInputImageUrlBlock" />)
            that can include text, images, or other media.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Projects.ThreadMessageOptions" /> class, converting
            one or more structured blocks into JSON and storing them as <see cref="P:Azure.AI.Projects.ThreadMessageOptions.Content" />.
            </summary>
        <remarks>
            Each block expresses a particular piece of message content or media. This overload is best for advanced
            scenarios where messages contain multiple text segments, embedded images, or a mix of different content types.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="contentBlocks" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadMessageOptions (Azure.AI.Projects.MessageRole role, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.AI.Projects.MessageRole role, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.#ctor(Azure.AI.Projects.MessageRole,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (role As MessageRole, content As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Projects.ThreadMessageOptions : Azure.AI.Projects.MessageRole * string -&gt; Azure.AI.Projects.ThreadMessageOptions" Usage="new Azure.AI.Projects.ThreadMessageOptions (role, content)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="role" Type="Azure.AI.Projects.MessageRole" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">
            The role of the entity creating the message (e.g., user or agent).
            Valid values typically include <see cref="P:Azure.AI.Projects.MessageRole.User" /> or <see cref="P:Azure.AI.Projects.MessageRole.Agent" />.
            </param>
        <param name="content">
            The plain-text content of the message. If <paramref name="content" /> is <c>null</c>,
            an <see cref="T:System.ArgumentNullException" /> is thrown.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Projects.ThreadMessageOptions" /> class, setting
            the message content to a single, plain-text string.
            </summary>
        <remarks>
            The string is internally converted into a <see cref="T:System.BinaryData" /> structure for further processing.
            This overload suits simple scenarios where only a single text block is needed.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="content" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Projects.MessageAttachment&gt; Attachments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.AI.Projects.MessageAttachment&gt; Attachments" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadMessageOptions.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public Property Attachments As IList(Of MessageAttachment)" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Collections.Generic.IList&lt;Azure.AI.Projects.MessageAttachment&gt; with get, set" Usage="Azure.AI.Projects.ThreadMessageOptions.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Projects.MessageAttachment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of files attached to the message, and the tools they should be added to. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public BinaryData Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Content" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadMessageOptions.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Content : BinaryData" Usage="Azure.AI.Projects.ThreadMessageOptions.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The content of the initial message. This may be a basic string (if you only
            need text) or an array of typed content blocks (for example, text, image_file,
            image_url, and so on).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para><remarks>
            Supported types:
            <list type="bullet"><item><description><see cref="T:System.String" /></description></item><item><description><see cref="T:System.Collections.Generic.IList`1" /> where <c>T</c> is of type <see cref="T:Azure.AI.Projects.MessageInputContentBlock" /></description></item></list></remarks>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentBlocks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.MessageInputContentBlock&gt; GetContentBlocks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Projects.MessageInputContentBlock&gt; GetContentBlocks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.GetContentBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContentBlocks () As IEnumerable(Of MessageInputContentBlock)" />
      <MemberSignature Language="F#" Value="member this.GetContentBlocks : unit -&gt; seq&lt;Azure.AI.Projects.MessageInputContentBlock&gt;" Usage="threadMessageOptions.GetContentBlocks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.MessageInputContentBlock&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Deserializes the underlying message content (stored as <see cref="T:System.BinaryData" />) into a
            collection of <see cref="T:Azure.AI.Projects.MessageInputContentBlock" /> objects.
            </summary>
        <returns>
            A sequence of content blocks if the original data was supplied as multiple structured elements.
            </returns>
        <remarks>
            Use this method when you know or expect that <see cref="P:Azure.AI.Projects.ThreadMessageOptions.Content" /> was provided as
            one or more structured content blocks. If the message content was just a single string,
            this may cause a deserialization error.
            </remarks>
        <exception cref="T:System.Text.Json.JsonException">
            Thrown if the binary content cannot be deserialized as a collection of <see cref="T:Azure.AI.Projects.MessageInputContentBlock" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextContent">
      <MemberSignature Language="C#" Value="public string GetTextContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.GetTextContent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextContent () As String" />
      <MemberSignature Language="F#" Value="member this.GetTextContent : unit -&gt; string" Usage="threadMessageOptions.GetTextContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Deserializes the underlying message content (stored as <see cref="T:System.BinaryData" />) into a plain string.
            </summary>
        <returns>The original text string if the content was provided in that format; otherwise, a JSON parsing error may occur.</returns>
        <remarks>
            Use this method when you know or expect that <see cref="P:Azure.AI.Projects.ThreadMessageOptions.Content" /> was originally provided as a single plain-text string.
            For richer content, see <see cref="M:Azure.AI.Projects.ThreadMessageOptions.GetContentBlocks" />.
            </remarks>
        <exception cref="T:System.Text.Json.JsonException">
            Thrown if the binary content cannot be deserialized as a string (e.g., it was originally a collection of blocks).
            </exception>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="threadMessageOptions.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadMessageOptions.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Azure.AI.Projects.ThreadMessageOptions.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public Azure.AI.Projects.MessageRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.AI.Projects.MessageRole Role" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.ThreadMessageOptions.Role" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role As MessageRole" />
      <MemberSignature Language="F#" Value="member this.Role : Azure.AI.Projects.MessageRole" Usage="Azure.AI.Projects.ThreadMessageOptions.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.MessageRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The role of the entity that is creating the message. Allowed values include:
            `user`, which indicates the message is sent by an actual user (and should be
            used in most cases to represent user-generated messages), and `assistant`,
            which indicates the message is generated by the agent (use this value to insert
            messages from the agent into the conversation).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Projects.ThreadMessageOptions IJsonModel&lt;ThreadMessageOptions&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Projects.ThreadMessageOptions System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Projects#ThreadMessageOptions&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ThreadMessageOptions Implements IJsonModel(Of ThreadMessageOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadMessageOptions&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadMessageOptions" Usage="threadMessageOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ThreadMessageOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ThreadMessageOptions&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Projects#ThreadMessageOptions&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ThreadMessageOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="threadMessageOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Projects.ThreadMessageOptions IPersistableModel&lt;ThreadMessageOptions&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Projects.ThreadMessageOptions System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Projects#ThreadMessageOptions&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ThreadMessageOptions Implements IPersistableModel(Of ThreadMessageOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadMessageOptions&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Projects.ThreadMessageOptions" Usage="threadMessageOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ThreadMessageOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ThreadMessageOptions&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Projects#ThreadMessageOptions&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ThreadMessageOptions).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="threadMessageOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ThreadMessageOptions&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.ThreadMessageOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Projects#ThreadMessageOptions&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ThreadMessageOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="threadMessageOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Projects.ThreadMessageOptions&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
