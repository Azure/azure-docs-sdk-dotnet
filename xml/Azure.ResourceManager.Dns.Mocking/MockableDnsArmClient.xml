<Type Name="MockableDnsArmClient" FullName="Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient">
  <TypeSignature Language="C#" Value="public class MockableDnsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDnsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDnsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDnsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDnsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsAaaaRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsAaaaRecordResource GetDnsAaaaRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsAaaaRecordResource GetDnsAaaaRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsAaaaRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsAaaaRecordResource (id As ResourceIdentifier) As DnsAaaaRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsAaaaRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsAaaaRecordResource&#xA;override this.GetDnsAaaaRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsAaaaRecordResource" Usage="mockableDnsArmClient.GetDnsAaaaRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsAaaaRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsAaaaRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsAaaaRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsAaaaRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsAaaaRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsARecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsARecordResource GetDnsARecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsARecordResource GetDnsARecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsARecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsARecordResource (id As ResourceIdentifier) As DnsARecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsARecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsARecordResource&#xA;override this.GetDnsARecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsARecordResource" Usage="mockableDnsArmClient.GetDnsARecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsARecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsARecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsARecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsARecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsARecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsCaaRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsCaaRecordResource GetDnsCaaRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsCaaRecordResource GetDnsCaaRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsCaaRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsCaaRecordResource (id As ResourceIdentifier) As DnsCaaRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsCaaRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsCaaRecordResource&#xA;override this.GetDnsCaaRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsCaaRecordResource" Usage="mockableDnsArmClient.GetDnsCaaRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsCaaRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsCaaRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsCaaRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsCaaRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsCaaRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsCnameRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsCnameRecordResource GetDnsCnameRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsCnameRecordResource GetDnsCnameRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsCnameRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsCnameRecordResource (id As ResourceIdentifier) As DnsCnameRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsCnameRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsCnameRecordResource&#xA;override this.GetDnsCnameRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsCnameRecordResource" Usage="mockableDnsArmClient.GetDnsCnameRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsCnameRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsCnameRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsCnameRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsCnameRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsCnameRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsMXRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsMXRecordResource GetDnsMXRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsMXRecordResource GetDnsMXRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsMXRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsMXRecordResource (id As ResourceIdentifier) As DnsMXRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsMXRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsMXRecordResource&#xA;override this.GetDnsMXRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsMXRecordResource" Usage="mockableDnsArmClient.GetDnsMXRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsMXRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsMXRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsMXRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsMXRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsMXRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsNSRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsNSRecordResource GetDnsNSRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsNSRecordResource GetDnsNSRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsNSRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsNSRecordResource (id As ResourceIdentifier) As DnsNSRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsNSRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsNSRecordResource&#xA;override this.GetDnsNSRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsNSRecordResource" Usage="mockableDnsArmClient.GetDnsNSRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsNSRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsNSRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsNSRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsNSRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsNSRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsPtrRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsPtrRecordResource GetDnsPtrRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsPtrRecordResource GetDnsPtrRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsPtrRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsPtrRecordResource (id As ResourceIdentifier) As DnsPtrRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsPtrRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsPtrRecordResource&#xA;override this.GetDnsPtrRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsPtrRecordResource" Usage="mockableDnsArmClient.GetDnsPtrRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsPtrRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsPtrRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsPtrRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsPtrRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsPtrRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsSoaRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsSoaRecordResource GetDnsSoaRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsSoaRecordResource GetDnsSoaRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsSoaRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsSoaRecordResource (id As ResourceIdentifier) As DnsSoaRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsSoaRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsSoaRecordResource&#xA;override this.GetDnsSoaRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsSoaRecordResource" Usage="mockableDnsArmClient.GetDnsSoaRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsSoaRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsSoaRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsSoaRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsSoaRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsSoaRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsSrvRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsSrvRecordResource GetDnsSrvRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsSrvRecordResource GetDnsSrvRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsSrvRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsSrvRecordResource (id As ResourceIdentifier) As DnsSrvRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsSrvRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsSrvRecordResource&#xA;override this.GetDnsSrvRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsSrvRecordResource" Usage="mockableDnsArmClient.GetDnsSrvRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsSrvRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsSrvRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsSrvRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsSrvRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsSrvRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsTxtRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsTxtRecordResource GetDnsTxtRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsTxtRecordResource GetDnsTxtRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsTxtRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsTxtRecordResource (id As ResourceIdentifier) As DnsTxtRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsTxtRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsTxtRecordResource&#xA;override this.GetDnsTxtRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsTxtRecordResource" Usage="mockableDnsArmClient.GetDnsTxtRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsTxtRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsTxtRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsTxtRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsTxtRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsTxtRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDnsZoneResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsZoneResource GetDnsZoneResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.DnsZoneResource GetDnsZoneResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Mocking.MockableDnsArmClient.GetDnsZoneResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDnsZoneResource (id As ResourceIdentifier) As DnsZoneResource" />
      <MemberSignature Language="F#" Value="abstract member GetDnsZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsZoneResource&#xA;override this.GetDnsZoneResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Dns.DnsZoneResource" Usage="mockableDnsArmClient.GetDnsZoneResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsZoneResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Dns.DnsZoneResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
