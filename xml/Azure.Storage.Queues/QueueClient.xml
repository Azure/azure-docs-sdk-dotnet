<Type Name="QueueClient" FullName="Azure.Storage.Queues.QueueClient">
  <TypeSignature Language="C#" Value="public class QueueClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueueClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Queues.QueueClient" />
  <TypeSignature Language="VB.NET" Value="Public Class QueueClient" />
  <TypeSignature Language="F#" Value="type QueueClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Queues</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A QueueClient represents a URI to the Azure Storage Queue service allowing you to manipulate a queue.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QueueClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (string connectionString, string queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, queueName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : string * string -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (connectionString, queueName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="queueName">
             The name of the queue in the storage account to reference.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (Uri queueUri, Azure.Storage.Queues.QueueClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri queueUri, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queueUri As Uri, Optional options As QueueClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : Uri * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (queueUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> referencing the queue that includes the
            name of the account, and the name of the queue.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (string connectionString, string queueName, Azure.Storage.Queues.QueueClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string queueName, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, queueName As String, options As QueueClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : string * string * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (connectionString, queueName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queueName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="queueName">
             The name of the queue in the storage account to reference.
             </param>
        <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (Uri queueUri, Azure.Core.TokenCredential credential, Azure.Storage.Queues.QueueClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri queueUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queueUri As Uri, credential As TokenCredential, Optional options As QueueClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (queueUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> referencing the queue that includes the
            name of the account, and the name of the queue.
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (Uri queueUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Queues.QueueClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri queueUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queueUri As Uri, credential As StorageSharedKeyCredential, Optional options As QueueClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (queueUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> referencing the queue that includes the
            name of the account, and the name of the queue.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public virtual string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccountName As String" />
      <MemberSignature Language="F#" Value="member this.AccountName : string" Usage="Azure.Storage.Queues.QueueClient.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Storage account name corresponding to the queue client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ClearMessages (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ClearMessages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ClearMessages(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ClearMessages : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ClearMessages : System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.ClearMessages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Deletes all messages from a queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/clear-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ClearMessagesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ClearMessagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ClearMessagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ClearMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ClearMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.ClearMessagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Deletes all messages from a queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/clear-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Create (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Create(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.Create (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Creates a queue.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-queue4" />.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.CreateAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Creates a queue.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-queue4" />.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Deletes a queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Deletes a queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteMessage (string messageId, string popReceipt, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteMessage(string messageId, string popReceipt, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.DeleteMessage (messageId, popReceipt, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to delete.</param>
        <param name="popReceipt">
            Required. A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Permanently removes the specified message from its queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-message2" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteMessageAsync (string messageId, string popReceipt, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteMessageAsync(string messageId, string popReceipt, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.DeleteMessageAsync (messageId, popReceipt, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to delete.</param>
        <param name="popReceipt">
            Required. A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Permanently removes the specified message from its queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-message2" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt; GetAccessPolicy (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt; GetAccessPolicy(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetAccessPolicy(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAccessPolicy : System.Threading.CancellationToken -&gt; Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&#xA;override this.GetAccessPolicy : System.Threading.CancellationToken -&gt; Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;" Usage="queueClient.GetAccessPolicy cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Returns details about any stored access policies specified on the queue that may be used with
            Shared Access Signatures.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-acl" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt; GetAccessPolicyAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt; GetAccessPolicyAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAccessPolicyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt;&#xA;override this.GetAccessPolicyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt;" Usage="queueClient.GetAccessPolicyAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Returns details about any stored access policies specified on the queue that may be used with
            Shared Access Signatures.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-acl" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt; GetProperties (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueProperties&gt; GetProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&#xA;override this.GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;" Usage="queueClient.GetProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Retrieves queue properties and user-defined metadata and properties on the specified queue.
            Metadata is associated with the queue as name-values pairs.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-metadata" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt; GetPropertiesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueProperties&gt;&gt; GetPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt;" Usage="queueClient.GetPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Retrieves queue properties and user-defined metadata and properties on the specified queue.
            Metadata is associated with the queue as name-values pairs.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-queue-metadata" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPeekableMessages">
      <MemberSignature Language="C#" Value="public virtual int MaxPeekableMessages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPeekableMessages" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.MaxPeekableMessages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxPeekableMessages As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPeekableMessages : int" Usage="Azure.Storage.Queues.QueueClient.MaxPeekableMessages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            QueueMaxMessagesPeek indicates the maximum number of messages
            you can retrieve with each call to Peek.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageMaxBytes">
      <MemberSignature Language="C#" Value="public virtual int MessageMaxBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MessageMaxBytes" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.MessageMaxBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MessageMaxBytes As Integer" />
      <MemberSignature Language="F#" Value="member this.MessageMaxBytes : int" Usage="Azure.Storage.Queues.QueueClient.MessageMaxBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum number of bytes allowed for a message's UTF-8 text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessagesUri">
      <MemberSignature Language="C#" Value="protected virtual Uri MessagesUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri MessagesUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.MessagesUri" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MessagesUri As Uri" />
      <MemberSignature Language="F#" Value="member this.MessagesUri : Uri" Usage="Azure.Storage.Queues.QueueClient.MessagesUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Uri endpoint used by the object's messages.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Storage.Queues.QueueClient.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the queue.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt; PeekMessages (Nullable&lt;int&gt; maxMessages = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.PeekedMessage[]&gt; PeekMessages(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.PeekMessages(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PeekMessages : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&#xA;override this.PeekMessages : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;" Usage="queueClient.PeekMessages (maxMessages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
            Optional. A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32.
            By default, a single message is peeked from the queue with this operation.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
            Retrieves one or more messages from the front of the queue but does not alter the visibility of the message.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/peek-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.PeekedMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt; PeekMessagesAsync (Nullable&lt;int&gt; maxMessages = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt; PeekMessagesAsync(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.PeekMessagesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PeekMessagesAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt;&#xA;override this.PeekMessagesAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt;" Usage="queueClient.PeekMessagesAsync (maxMessages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
            Optional. A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32.
            By default, a single message is peeked from the queue with this operation.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
            Retrieves one or more messages from the front of the queue but does not alter the visibility of the message.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/peek-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.PeekedMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessages () As Response(Of QueueMessage())" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessages : unit -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&#xA;override this.ReceiveMessages : unit -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;" Usage="queueClient.ReceiveMessages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Receives one or more messages from the front of the queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessages : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&#xA;override this.ReceiveMessages : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;" Usage="queueClient.ReceiveMessages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
            Receives one or more messages from the front of the queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages (Nullable&lt;int&gt; maxMessages = null, Nullable&lt;TimeSpan&gt; visibilityTimeout = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessages : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&#xA;override this.ReceiveMessages : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;" Usage="queueClient.ReceiveMessages (maxMessages, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
            Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32.
            If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.
            </param>
        <param name="visibilityTimeout">
            Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
            Receives one or more messages from the front of the queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessagesAsync () As Task(Of Response(Of QueueMessage()))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;&#xA;override this.ReceiveMessagesAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;" Usage="queueClient.ReceiveMessagesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves one or more messages from the front of the queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;&#xA;override this.ReceiveMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;" Usage="queueClient.ReceiveMessagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
            Retrieves one or more messages from the front of the queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync (Nullable&lt;int&gt; maxMessages = null, Nullable&lt;TimeSpan&gt; visibilityTimeout = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;&#xA;override this.ReceiveMessagesAsync : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;" Usage="queueClient.ReceiveMessagesAsync (maxMessages, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
            Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32.
            If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.
            </param>
        <param name="visibilityTimeout">
            Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
            Retrieves one or more messages from the front of the queue.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage (string messageText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage(string messageText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessage (messageText As String) As Response(Of SendReceipt)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&#xA;override this.SendMessage : string -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;" Usage="queueClient.SendMessage messageText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Message text.
            </param>
        <summary>
            Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
            to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage (string messageText, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage(string messageText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&#xA;override this.SendMessage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;" Usage="queueClient.SendMessage (messageText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Message text.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
            to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage (string messageText, Nullable&lt;TimeSpan&gt; visibilityTimeout = null, Nullable&lt;TimeSpan&gt; timeToLive = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage(string messageText, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&#xA;override this.SendMessage : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;" Usage="queueClient.SendMessage (messageText, visibilityTimeout, timeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="timeToLive" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Message text.
            </param>
        <param name="visibilityTimeout">
            Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
            </param>
        <param name="timeToLive">
            Optional. Specifies the time-to-live interval for the message
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
            to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync (string messageText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync(string messageText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessageAsync (messageText As String) As Task(Of Response(Of SendReceipt))" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;&#xA;override this.SendMessageAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;" Usage="queueClient.SendMessageAsync messageText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Message text.
            </param>
        <summary>
            Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
            to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync (string messageText, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync(string messageText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;&#xA;override this.SendMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;" Usage="queueClient.SendMessageAsync (messageText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Message text.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
            to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync (string messageText, Nullable&lt;TimeSpan&gt; visibilityTimeout = null, Nullable&lt;TimeSpan&gt; timeToLive = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync(string messageText, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;&#xA;override this.SendMessageAsync : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;" Usage="queueClient.SendMessageAsync (messageText, visibilityTimeout, timeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="timeToLive" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Message text.
            </param>
        <param name="visibilityTimeout">
            Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
            </param>
        <param name="timeToLive">
            Optional. Specifies the time-to-live interval for the message
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
            to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetAccessPolicy (System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetAccessPolicy(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessPolicy : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SetAccessPolicy : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.SetAccessPolicy (permissions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
            IEnumerable of <see cref="T:Azure.Storage.Queues.Models.QueueSignedIdentifier" /></param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            SetAccessPolicyAsync sets stored access policies for the queue that may be used with Shared Access Signatures.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-acl" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetAccessPolicyAsync (System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetAccessPolicyAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessPolicyAsync : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetAccessPolicyAsync : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.SetAccessPolicyAsync (permissions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
            IEnumerable of <see cref="T:Azure.Storage.Queues.Models.QueueSignedIdentifier" /></param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            SetAccessPolicyAsync sets stored access policies for the queue that may be used with Shared Access Signatures.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-acl" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.SetMetadata (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <see cref="T:System.Collections.Generic.IDictionary`2" />
        </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-metadata" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.SetMetadataAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <see cref="T:System.Collections.Generic.IDictionary`2" />
        </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
            Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-metadata" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt; UpdateMessage (string messageText, string messageId, string popReceipt, TimeSpan visibilityTimeout = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.UpdatedMessage&gt; UpdateMessage(string messageText, string messageId, string popReceipt, valuetype System.TimeSpan visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessage : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt;&#xA;override this.UpdateMessage : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt;" Usage="queueClient.UpdateMessage (messageText, messageId, popReceipt, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Updated message text.
            </param>
        <param name="messageId">ID of the message to update.</param>
        <param name="popReceipt">
            Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
            </param>
        <param name="visibilityTimeout">
            Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
            or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
            expiry time. A message can be updated until it has been deleted or has expired.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Changes a message's visibility timeout and contents. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/update-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt;&gt; UpdateMessageAsync (string messageText, string messageId, string popReceipt, TimeSpan visibilityTimeout = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.UpdatedMessage&gt;&gt; UpdateMessageAsync(string messageText, string messageId, string popReceipt, valuetype System.TimeSpan visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessageAsync : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt;&gt;&#xA;override this.UpdateMessageAsync : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt;&gt;" Usage="queueClient.UpdateMessageAsync (messageText, messageId, popReceipt, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdatedMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
            Updated message text.
            </param>
        <param name="messageId">ID of the message to update.</param>
        <param name="popReceipt">
            Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
            </param>
        <param name="visibilityTimeout">
            Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
            or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
            expiry time. A message can be updated until it has been deleted or has expired.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" />.
            </param>
        <summary>
            Changes a message's visibility timeout and contents. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/update-message" />.
            </summary>
        <returns>
          <see cref="T:Azure.Response`1" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public virtual Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Queues.QueueClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Uri endpoint used by the object.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
