<Type Name="QueueClient" FullName="Azure.Storage.Queues.QueueClient">
  <TypeSignature Language="C#" Value="public class QueueClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueueClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Queues.QueueClient" />
  <TypeSignature Language="VB.NET" Value="Public Class QueueClient" />
  <TypeSignature Language="F#" Value="type QueueClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Queues</AssemblyName>
    <AssemblyVersion>12.6.1.0</AssemblyVersion>
    <AssemblyVersion>12.6.2.0</AssemblyVersion>
    <AssemblyVersion>12.7.0.0</AssemblyVersion>
    <AssemblyVersion>12.8.0.0</AssemblyVersion>
    <AssemblyVersion>12.9.0.0</AssemblyVersion>
    <AssemblyVersion>12.10.0.0</AssemblyVersion>
    <AssemblyVersion>12.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A QueueClient represents a URI to the Azure Storage Queue service allowing you to manipulate a queue.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QueueClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (string connectionString, string queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, queueName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : string * string -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (connectionString, queueName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
        <param name="queueName">
             The name of the queue in the storage account to reference.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (Uri queueUri, Azure.Storage.Queues.QueueClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri queueUri, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queueUri As Uri, Optional options As QueueClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : Uri * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (queueUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> referencing the queue that includes the
            name of the account, the name of the queue, and a SAS token.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}?{sas_token}".
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (string connectionString, string queueName, Azure.Storage.Queues.QueueClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string queueName, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, queueName As String, options As QueueClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : string * string * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (connectionString, queueName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queueName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
        <param name="queueName">
             The name of the queue in the storage account to reference.
             </param>
        <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (Uri queueUri, Azure.AzureSasCredential credential, Azure.Storage.Queues.QueueClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri queueUri, class Azure.AzureSasCredential credential, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queueUri As Uri, credential As AzureSasCredential, Optional options As QueueClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : Uri * Azure.AzureSasCredential * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (queueUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
        <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class.
            </summary>
        <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (Uri queueUri, Azure.Core.TokenCredential credential, Azure.Storage.Queues.QueueClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri queueUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queueUri As Uri, credential As TokenCredential, Optional options As QueueClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (queueUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClient (Uri queueUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Queues.QueueClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri queueUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Queues.QueueClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queueUri As Uri, credential As StorageSharedKeyCredential, Optional options As QueueClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Queues.QueueClientOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="new Azure.Storage.Queues.QueueClient (queueUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Queues.QueueClientOptions" />
      </Parameters>
      <Docs>
        <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public virtual string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccountName As String" />
      <MemberSignature Language="F#" Value="member this.AccountName : string" Usage="Azure.Storage.Queues.QueueClient.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Storage account name corresponding to the queue client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGenerateSasUri">
      <MemberSignature Language="C#" Value="public virtual bool CanGenerateSasUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGenerateSasUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.CanGenerateSasUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanGenerateSasUri As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanGenerateSasUri : bool" Usage="Azure.Storage.Queues.QueueClient.CanGenerateSasUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ClearMessages (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ClearMessages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ClearMessages(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearMessages (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ClearMessages : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ClearMessages : System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.ClearMessages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Deletes all messages from a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/clear-messages">
             Clear Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ClearMessagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ClearMessagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ClearMessagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearMessagesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ClearMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ClearMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.ClearMessagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Deletes all messages from a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/clear-messages">
             Clear Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Create (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Create(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.Create (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Creates a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.CreateAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Creates a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateIfNotExists (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateIfNotExists(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExists : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CreateIfNotExists : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.CreateIfNotExists (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this queue.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
             operation creates a new queue under the specified account.
             If the queue already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
        <returns>
             If the queue does not already exist, a <see cref="T:Azure.Response" />
             describing the newly created queue. If the queue already exists, <c>null</c>.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateIfNotExistsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateIfNotExistsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (Optional metadata As IDictionary(Of String, String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateIfNotExistsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.CreateIfNotExistsAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this queue.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
             operation creates a new queue under the specified account.
             If the queue already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
        <returns>
             If the queue does not already exist, a <see cref="T:Azure.Response" />
             describing the newly created queue. If the queue already exists, <c>null</c>.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Deletes a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Deletes a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteIfExists (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteIfExists(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteIfExists(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExists (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.DeleteIfExists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="queueClient.DeleteIfExists cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.DeleteIfExists(System.Threading.CancellationToken)" /> operation deletes the specified
             queue if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> Returns true if queue exists and was
             deleted, return false otherwise.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteIfExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteIfExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.DeleteIfExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="queueClient.DeleteIfExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.DeleteIfExistsAsync(System.Threading.CancellationToken)" /> operation deletes the specified
             queue if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> Returns true if queue exists and was
             deleted, return false otherwise.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteMessage (string messageId, string popReceipt, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteMessage(string messageId, string popReceipt, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteMessage (messageId As String, popReceipt As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.DeleteMessage (messageId, popReceipt, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to delete.</param>
        <param name="popReceipt">
             Required. A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Permanently removes the specified message from its queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-message2">
             Delete Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteMessageAsync (string messageId, string popReceipt, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteMessageAsync(string messageId, string popReceipt, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteMessageAsync (messageId As String, popReceipt As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.DeleteMessageAsync (messageId, popReceipt, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to delete.</param>
        <param name="popReceipt">
             Required. A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Permanently removes the specified message from its queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-message2">
             Delete Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.Exists(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="queueClient.Exists cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Queues.QueueClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Queues.QueueClient" /> to see if the associated queue
            exists on the storage account in the storage service.
            </summary>
        <returns>
            Returns true if the queue exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="queueClient.ExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Queues.QueueClient.ExistsAsync(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Queues.QueueClient" /> to see if the associated queue
            exists on the storage account in the storage service.
            </summary>
        <returns>
            Returns true if the queue exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSasUri">
      <MemberSignature Language="C#" Value="public virtual Uri GenerateSasUri (Azure.Storage.Sas.QueueSasBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GenerateSasUri(class Azure.Storage.Sas.QueueSasBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateSasUri (builder As QueueSasBuilder) As Uri" />
      <MemberSignature Language="F#" Value="abstract member GenerateSasUri : Azure.Storage.Sas.QueueSasBuilder -&gt; Uri&#xA;override this.GenerateSasUri : Azure.Storage.Sas.QueueSasBuilder -&gt; Uri" Usage="queueClient.GenerateSasUri builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Azure.Storage.Sas.QueueSasBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
             Used to generate a Shared Access Signature (SAS)
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasBuilder)" /> returns a
             <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> that generates a Queue Service SAS Uri based
             on the Client properties and builder passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see></summary>
        <returns>
             A <see cref="T:Azure.Storage.Sas.QueueSasBuilder" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSasUri">
      <MemberSignature Language="C#" Value="public virtual Uri GenerateSasUri (Azure.Storage.Sas.QueueSasPermissions permissions, DateTimeOffset expiresOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GenerateSasUri(valuetype Azure.Storage.Sas.QueueSasPermissions permissions, valuetype System.DateTimeOffset expiresOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateSasUri (permissions As QueueSasPermissions, expiresOn As DateTimeOffset) As Uri" />
      <MemberSignature Language="F#" Value="abstract member GenerateSasUri : Azure.Storage.Sas.QueueSasPermissions * DateTimeOffset -&gt; Uri&#xA;override this.GenerateSasUri : Azure.Storage.Sas.QueueSasPermissions * DateTimeOffset -&gt; Uri" Usage="queueClient.GenerateSasUri (permissions, expiresOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="Azure.Storage.Sas.QueueSasPermissions" />
        <Parameter Name="expiresOn" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.QueueSasPermissions" />.
             </param>
        <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)" />
             returns a <see cref="P:Azure.Storage.Queues.QueueClient.Uri" /> that generates a Queue Service
             Shared Access Signature (SAS) Uri based on the Client properties
             and parameters passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Storage.Sas.QueueSasBuilder" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt; GetAccessPolicy (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt; GetAccessPolicy(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetAccessPolicy(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessPolicy (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IEnumerable(Of QueueSignedIdentifier))" />
      <MemberSignature Language="F#" Value="abstract member GetAccessPolicy : System.Threading.CancellationToken -&gt; Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&#xA;override this.GetAccessPolicy : System.Threading.CancellationToken -&gt; Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;" Usage="queueClient.GetAccessPolicy cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Returns details about any stored access policies specified on the queue that may be used with
             Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-acl">
             Get Queue ACL</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt; GetAccessPolicyAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt; GetAccessPolicyAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessPolicyAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IEnumerable(Of QueueSignedIdentifier)))" />
      <MemberSignature Language="F#" Value="abstract member GetAccessPolicyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt;&#xA;override this.GetAccessPolicyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt;" Usage="queueClient.GetAccessPolicyAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Returns details about any stored access policies specified on the queue that may be used with
             Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-acl">
             Get Queue ACL</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentQueueServiceClientCore">
      <MemberSignature Language="C#" Value="protected internal virtual Azure.Storage.Queues.QueueServiceClient GetParentQueueServiceClientCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Azure.Storage.Queues.QueueServiceClient GetParentQueueServiceClientCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetParentQueueServiceClientCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetParentQueueServiceClientCore () As QueueServiceClient" />
      <MemberSignature Language="F#" Value="abstract member GetParentQueueServiceClientCore : unit -&gt; Azure.Storage.Queues.QueueServiceClient&#xA;override this.GetParentQueueServiceClientCore : unit -&gt; Azure.Storage.Queues.QueueServiceClient" Usage="queueClient.GetParentQueueServiceClientCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Queues.QueueServiceClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create a new <see cref="T:Azure.Storage.Queues.QueueServiceClient" /> that pointing to this <see cref="T:Azure.Storage.Queues.QueueClient" />'s queue service.
            The new <see cref="T:Azure.Storage.Queues.QueueServiceClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Queues.QueueClient" />.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Queues.QueueServiceClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt; GetProperties (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueProperties&gt; GetProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueueProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&#xA;override this.GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;" Usage="queueClient.GetProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Retrieves queue properties and user-defined metadata and properties on the specified queue.
             Metadata is associated with the queue as name-values pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-metadata">
             Get Queue Metadata</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt; GetPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueProperties&gt;&gt; GetPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueueProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt;" Usage="queueClient.GetPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Retrieves queue properties and user-defined metadata and properties on the specified queue.
             Metadata is associated with the queue as name-values pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-metadata">
             Get Queue Metadata</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPeekableMessages">
      <MemberSignature Language="C#" Value="public virtual int MaxPeekableMessages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPeekableMessages" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.MaxPeekableMessages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxPeekableMessages As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPeekableMessages : int" Usage="Azure.Storage.Queues.QueueClient.MaxPeekableMessages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            QueueMaxMessagesPeek indicates the maximum number of messages
            you can retrieve with each call to Peek.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageMaxBytes">
      <MemberSignature Language="C#" Value="public virtual int MessageMaxBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MessageMaxBytes" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.MessageMaxBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MessageMaxBytes As Integer" />
      <MemberSignature Language="F#" Value="member this.MessageMaxBytes : int" Usage="Azure.Storage.Queues.QueueClient.MessageMaxBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum number of bytes allowed for a message's UTF-8 text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessagesUri">
      <MemberSignature Language="C#" Value="protected virtual Uri MessagesUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri MessagesUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.MessagesUri" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MessagesUri As Uri" />
      <MemberSignature Language="F#" Value="member this.MessagesUri : Uri" Usage="Azure.Storage.Queues.QueueClient.MessagesUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Uri endpoint used by the object's messages.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Storage.Queues.QueueClient.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the queue.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageDecodingFailedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageDecodingFailedAsync (Azure.Storage.Queues.Models.QueueMessage receivedMessage, Azure.Storage.Queues.Models.PeekedMessage peekedMessage, bool isRunningSynchronously, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageDecodingFailedAsync(class Azure.Storage.Queues.Models.QueueMessage receivedMessage, class Azure.Storage.Queues.Models.PeekedMessage peekedMessage, bool isRunningSynchronously, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.OnMessageDecodingFailedAsync(Azure.Storage.Queues.Models.QueueMessage,Azure.Storage.Queues.Models.PeekedMessage,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageDecodingFailedAsync (receivedMessage As QueueMessage, peekedMessage As PeekedMessage, isRunningSynchronously As Boolean, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageDecodingFailedAsync : Azure.Storage.Queues.Models.QueueMessage * Azure.Storage.Queues.Models.PeekedMessage * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageDecodingFailedAsync : Azure.Storage.Queues.Models.QueueMessage * Azure.Storage.Queues.Models.PeekedMessage * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="queueClient.OnMessageDecodingFailedAsync (receivedMessage, peekedMessage, isRunningSynchronously, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receivedMessage" Type="Azure.Storage.Queues.Models.QueueMessage" />
        <Parameter Name="peekedMessage" Type="Azure.Storage.Queues.Models.PeekedMessage" />
        <Parameter Name="isRunningSynchronously" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="receivedMessage">The <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /> with raw body, if present.</param>
        <param name="peekedMessage">The <see cref="T:Azure.Storage.Queues.Models.PeekedMessage" /> with raw body, if present.</param>
        <param name="isRunningSynchronously">A value indicating whether the event handler was invoked
            synchronously or asynchronously.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Raises <see cref="E:Azure.Storage.Queues.QueueClientOptions.MessageDecodingFailed" /> event.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt; PeekMessage (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.PeekedMessage&gt; PeekMessage(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.PeekMessage(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekMessage (Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeekedMessage)" />
      <MemberSignature Language="F#" Value="abstract member PeekMessage : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt;&#xA;override this.PeekMessage : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt;" Usage="queueClient.PeekMessage cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Retrieves one message from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is a <see cref="T:Azure.Storage.Queues.Models.PeekedMessage" />. Returns null if there are no messages in the queue.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt;&gt; PeekMessageAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.PeekedMessage&gt;&gt; PeekMessageAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.PeekMessageAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekMessageAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeekedMessage))" />
      <MemberSignature Language="F#" Value="abstract member PeekMessageAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt;&gt;&#xA;override this.PeekMessageAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt;&gt;" Usage="queueClient.PeekMessageAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Retrieves one message from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is a <see cref="T:Azure.Storage.Queues.Models.PeekedMessage" />. Returns null if there are no messages in the queue.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt; PeekMessages (int? maxMessages = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.PeekedMessage[]&gt; PeekMessages(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.PeekMessages(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekMessages (Optional maxMessages As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PeekedMessage())" />
      <MemberSignature Language="F#" Value="abstract member PeekMessages : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&#xA;override this.PeekMessages : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;" Usage="queueClient.PeekMessages (maxMessages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32.
             By default, a single message is peeked from the queue with this operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Retrieves one or more messages from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.PeekedMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt; PeekMessagesAsync (int? maxMessages = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt; PeekMessagesAsync(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.PeekMessagesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekMessagesAsync (Optional maxMessages As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PeekedMessage()))" />
      <MemberSignature Language="F#" Value="abstract member PeekMessagesAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt;&#xA;override this.PeekMessagesAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt;" Usage="queueClient.PeekMessagesAsync (maxMessages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.PeekedMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32.
             By default, a single message is peeked from the queue with this operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Retrieves one or more messages from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.PeekedMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt; ReceiveMessage (TimeSpan? visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage&gt; ReceiveMessage(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessage(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessage (Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueueMessage)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessage : Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt;&#xA;override this.ReceiveMessage : Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt;" Usage="queueClient.ReceiveMessage (visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Receives one message from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is a <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt;&gt; ReceiveMessageAsync (TimeSpan? visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage&gt;&gt; ReceiveMessageAsync(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessageAsync (Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueueMessage))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessageAsync : Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt;&gt;&#xA;override this.ReceiveMessageAsync : Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt;&gt;" Usage="queueClient.ReceiveMessageAsync (visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Retrieves one message from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is a <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessages () As Response(Of QueueMessage())" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessages : unit -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&#xA;override this.ReceiveMessages : unit -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;" Usage="queueClient.ReceiveMessages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Receives one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessages (Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueueMessage())" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessages : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&#xA;override this.ReceiveMessages : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;" Usage="queueClient.ReceiveMessages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Receives one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages (int? maxMessages = default, TimeSpan? visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt; ReceiveMessages(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessages (Optional maxMessages As Nullable(Of Integer) = Nothing, Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QueueMessage())" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessages : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&#xA;override this.ReceiveMessages : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;" Usage="queueClient.ReceiveMessages (maxMessages, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32.
             If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.
             </param>
        <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Receives one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessagesAsync () As Task(Of Response(Of QueueMessage()))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;&#xA;override this.ReceiveMessagesAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;" Usage="queueClient.ReceiveMessagesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Retrieves one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessagesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueueMessage()))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;&#xA;override this.ReceiveMessagesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;" Usage="queueClient.ReceiveMessagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Retrieves one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync (int? maxMessages = default, TimeSpan? visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt; ReceiveMessagesAsync(valuetype System.Nullable`1&lt;int32&gt; maxMessages, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessagesAsync (Optional maxMessages As Nullable(Of Integer) = Nothing, Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QueueMessage()))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;&#xA;override this.ReceiveMessagesAsync : Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;" Usage="queueClient.ReceiveMessagesAsync (maxMessages, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.QueueMessage[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32.
             If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.
             </param>
        <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
             Retrieves one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" /> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage (string messageText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage(string messageText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessage (messageText As String) As Response(Of SendReceipt)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&#xA;override this.SendMessage : string -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;" Usage="queueClient.SendMessage messageText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageText">
             Message text.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage (string messageText, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage(string messageText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessage (messageText As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendReceipt)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&#xA;override this.SendMessage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;" Usage="queueClient.SendMessage (messageText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
             Message text.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage (BinaryData message, TimeSpan? visibilityTimeout = default, TimeSpan? timeToLive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage(class System.BinaryData message, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessage(System.BinaryData,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessage (message As BinaryData, Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional timeToLive As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendReceipt)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : BinaryData * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&#xA;override this.SendMessage : BinaryData * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;" Usage="queueClient.SendMessage (message, visibilityTimeout, timeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.BinaryData" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="timeToLive" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">
             Message.
             </param>
        <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
        <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage (string messageText, TimeSpan? visibilityTimeout = default, TimeSpan? timeToLive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt; SendMessage(string messageText, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessage (messageText As String, Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional timeToLive As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendReceipt)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&#xA;override this.SendMessage : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;" Usage="queueClient.SendMessage (messageText, visibilityTimeout, timeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="timeToLive" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
             Message text.
             </param>
        <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
        <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync (string messageText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync(string messageText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessageAsync (messageText As String) As Task(Of Response(Of SendReceipt))" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;&#xA;override this.SendMessageAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;" Usage="queueClient.SendMessageAsync messageText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageText">
             Message text.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync (string messageText, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync(string messageText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessageAsync (messageText As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendReceipt))" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;&#xA;override this.SendMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;" Usage="queueClient.SendMessageAsync (messageText, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
             Message text.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync (BinaryData message, TimeSpan? visibilityTimeout = default, TimeSpan? timeToLive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync(class System.BinaryData message, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.BinaryData,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessageAsync (message As BinaryData, Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional timeToLive As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendReceipt))" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : BinaryData * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;&#xA;override this.SendMessageAsync : BinaryData * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;" Usage="queueClient.SendMessageAsync (message, visibilityTimeout, timeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.BinaryData" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="timeToLive" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">
             Message.
             </param>
        <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
        <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync (string messageText, TimeSpan? visibilityTimeout = default, TimeSpan? timeToLive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.SendReceipt&gt;&gt; SendMessageAsync(string messageText, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessageAsync (messageText As String, Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional timeToLive As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendReceipt))" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;&#xA;override this.SendMessageAsync : string * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;" Usage="queueClient.SendMessageAsync (messageText, visibilityTimeout, timeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.SendReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="timeToLive" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageText">
             Message text.
             </param>
        <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
        <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />
        </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetAccessPolicy (System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetAccessPolicy(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessPolicy (permissions As IEnumerable(Of QueueSignedIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SetAccessPolicy : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SetAccessPolicy : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.SetAccessPolicy (permissions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
             IEnumerable of <see cref="T:Azure.Storage.Queues.Models.QueueSignedIdentifier" /></param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             SetAccessPolicyAsync sets stored access policies for the queue that may be used with Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-acl">
             Set Queue ACL</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetAccessPolicyAsync (System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetAccessPolicyAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; permissions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessPolicyAsync (permissions As IEnumerable(Of QueueSignedIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessPolicyAsync : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetAccessPolicyAsync : seq&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.SetAccessPolicyAsync (permissions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Queues.Models.QueueSignedIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
             IEnumerable of <see cref="T:Azure.Storage.Queues.Models.QueueSignedIdentifier" /></param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             SetAccessPolicyAsync sets stored access policies for the queue that may be used with Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-acl">
             Set Queue ACL</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadata (metadata As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="queueClient.SetMetadata (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <see cref="T:System.Collections.Generic.IDictionary`2" />
        </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-metadata">
             Set Queue Metadata</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync (metadata As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="queueClient.SetMetadataAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <see cref="T:System.Collections.Generic.IDictionary`2" />
        </param>
        <param name="cancellationToken">
          <see cref="T:System.Threading.CancellationToken" />
        </param>
        <summary>
             Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-metadata">
             Set Queue Metadata</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt; UpdateMessage (string messageId, string popReceipt, BinaryData message, TimeSpan visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.UpdateReceipt&gt; UpdateMessage(string messageId, string popReceipt, class System.BinaryData message, valuetype System.TimeSpan visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.BinaryData,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessage (messageId As String, popReceipt As String, message As BinaryData, Optional visibilityTimeout As TimeSpan = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UpdateReceipt)" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessage : string * string * BinaryData * TimeSpan * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&#xA;override this.UpdateMessage : string * string * BinaryData * TimeSpan * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;" Usage="queueClient.UpdateMessage (messageId, popReceipt, message, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="message" Type="System.BinaryData" />
        <Parameter Name="visibilityTimeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to update.</param>
        <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
        <param name="message">
             Optional. Updated message.
             </param>
        <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Changes a message's visibility timeout and contents.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />.
             </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt; UpdateMessage (string messageId, string popReceipt, string messageText = default, TimeSpan visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Queues.Models.UpdateReceipt&gt; UpdateMessage(string messageId, string popReceipt, string messageText, valuetype System.TimeSpan visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessage (messageId As String, popReceipt As String, Optional messageText As String = Nothing, Optional visibilityTimeout As TimeSpan = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UpdateReceipt)" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessage : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&#xA;override this.UpdateMessage : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;" Usage="queueClient.UpdateMessage (messageId, popReceipt, messageText, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to update.</param>
        <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
        <param name="messageText">
             Optional. Updated message text.
             </param>
        <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Changes a message's visibility timeout and contents.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />.
             </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt; UpdateMessageAsync (string messageId, string popReceipt, BinaryData message, TimeSpan visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt; UpdateMessageAsync(string messageId, string popReceipt, class System.BinaryData message, valuetype System.TimeSpan visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.BinaryData,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessageAsync (messageId As String, popReceipt As String, message As BinaryData, Optional visibilityTimeout As TimeSpan = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UpdateReceipt))" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessageAsync : string * string * BinaryData * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt;&#xA;override this.UpdateMessageAsync : string * string * BinaryData * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt;" Usage="queueClient.UpdateMessageAsync (messageId, popReceipt, message, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="message" Type="System.BinaryData" />
        <Parameter Name="visibilityTimeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to update.</param>
        <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
        <param name="message">
             Optional. Updated message.
             </param>
        <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Changes a message's visibility timeout and contents.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />.
             </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt; UpdateMessageAsync (string messageId, string popReceipt, string messageText = default, TimeSpan visibilityTimeout = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt; UpdateMessageAsync(string messageId, string popReceipt, string messageText, valuetype System.TimeSpan visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessageAsync (messageId As String, popReceipt As String, Optional messageText As String = Nothing, Optional visibilityTimeout As TimeSpan = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UpdateReceipt))" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessageAsync : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt;&#xA;override this.UpdateMessageAsync : string * string * string * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt;" Usage="queueClient.UpdateMessageAsync (messageId, popReceipt, messageText, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Queues.Models.UpdateReceipt&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="popReceipt" Type="System.String" />
        <Parameter Name="messageText" Type="System.String" />
        <Parameter Name="visibilityTimeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId">ID of the message to update.</param>
        <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
        <param name="messageText">
             Optional. Updated message text.
             </param>
        <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" />.
             </param>
        <summary>
             Changes a message's visibility timeout and contents.
            
             A message must be in a format that can be included in an XML request with UTF-8 encoding.
             Otherwise <see cref="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" /> option can be set to <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> to handle non compliant messages.
             The encoded message can be up to 64 KiB in size for versions 2011-08-18 and newer, or 8 KiB in size for previous versions.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
        <returns>
          <see cref="T:Azure.Response`1" />.
             </returns>
        <remarks>
             This version of library does not encode message by default.
             <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" /> was the default behavior in the prior v11 library.  See
             <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public virtual Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Queues.QueueClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Uri endpoint used by the object.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithClientSideEncryptionOptionsCore">
      <MemberSignature Language="C#" Value="protected internal virtual Azure.Storage.Queues.QueueClient WithClientSideEncryptionOptionsCore (Azure.Storage.ClientSideEncryptionOptions clientSideEncryptionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Azure.Storage.Queues.QueueClient WithClientSideEncryptionOptionsCore(class Azure.Storage.ClientSideEncryptionOptions clientSideEncryptionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClient.WithClientSideEncryptionOptionsCore(Azure.Storage.ClientSideEncryptionOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WithClientSideEncryptionOptionsCore (clientSideEncryptionOptions As ClientSideEncryptionOptions) As QueueClient" />
      <MemberSignature Language="F#" Value="abstract member WithClientSideEncryptionOptionsCore : Azure.Storage.ClientSideEncryptionOptions -&gt; Azure.Storage.Queues.QueueClient&#xA;override this.WithClientSideEncryptionOptionsCore : Azure.Storage.ClientSideEncryptionOptions -&gt; Azure.Storage.Queues.QueueClient" Usage="queueClient.WithClientSideEncryptionOptionsCore clientSideEncryptionOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Queues.QueueClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSideEncryptionOptions" Type="Azure.Storage.ClientSideEncryptionOptions" />
      </Parameters>
      <Docs>
        <param name="clientSideEncryptionOptions">New encryption options. Setting this to <code>default</code> will clear client-side encryption.</param>
        <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient" /> class, maintaining all the same
            internals but specifying new <see cref="T:Azure.Storage.ClientSideEncryptionOptions" />.
            </summary>
        <returns>New instance with provided options and same internals otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
