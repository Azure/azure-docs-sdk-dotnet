<Type Name="QueueClientOptions" FullName="Azure.Storage.Queues.QueueClientOptions">
  <TypeSignature Language="C#" Value="public class QueueClientOptions : Azure.Core.ClientOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueueClientOptions extends Azure.Core.ClientOptions" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Queues.QueueClientOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class QueueClientOptions&#xA;Inherits ClientOptions" />
  <TypeSignature Language="F#" Value="type QueueClientOptions = class&#xA;    inherit ClientOptions" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Queues</AssemblyName>
    <AssemblyVersion>12.6.1.0</AssemblyVersion>
    <AssemblyVersion>12.6.2.0</AssemblyVersion>
    <AssemblyVersion>12.7.0.0</AssemblyVersion>
    <AssemblyVersion>12.8.0.0</AssemblyVersion>
    <AssemblyVersion>12.9.0.0</AssemblyVersion>
    <AssemblyVersion>12.10.0.0</AssemblyVersion>
    <AssemblyVersion>12.11.0.0</AssemblyVersion>
    <AssemblyVersion>12.11.1.0</AssemblyVersion>
    <AssemblyVersion>12.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.ClientOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides the client configuration options for connecting to Azure Queue
            Storage
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueueClientOptions (Azure.Storage.Queues.QueueClientOptions.ServiceVersion version = Azure.Storage.Queues.QueueClientOptions+ServiceVersion.V2021_08_06);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.Storage.Queues.QueueClientOptions/ServiceVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Queues.QueueClientOptions.#ctor(Azure.Storage.Queues.QueueClientOptions.ServiceVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional version As QueueClientOptions.ServiceVersion = Azure.Storage.Queues.QueueClientOptions+ServiceVersion.V2021_08_06)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Queues.QueueClientOptions : Azure.Storage.Queues.QueueClientOptions.ServiceVersion -&gt; Azure.Storage.Queues.QueueClientOptions" Usage="new Azure.Storage.Queues.QueueClientOptions version" />
      <MemberSignature Language="C#" Value="public QueueClientOptions (Azure.Storage.Queues.QueueClientOptions.ServiceVersion version = Azure.Storage.Queues.QueueClientOptions+ServiceVersion.V2021_10_04);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional version As QueueClientOptions.ServiceVersion = Azure.Storage.Queues.QueueClientOptions+ServiceVersion.V2021_10_04)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.1.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="Azure.Storage.Queues.QueueClientOptions+ServiceVersion" />
      </Parameters>
      <Docs>
        <param name="version">
            The <see cref="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion" /> of the service API used when
            making requests.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClientOptions" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTenantDiscovery">
      <MemberSignature Language="C#" Value="public bool EnableTenantDiscovery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTenantDiscovery" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClientOptions.EnableTenantDiscovery" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTenantDiscovery As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableTenantDiscovery : bool with get, set" Usage="Azure.Storage.Queues.QueueClientOptions.EnableTenantDiscovery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.1.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Enables tenant discovery through the authorization challenge when the client is configured to use a TokenCredential.
            When enabled, the client will attempt an initial un-authorized request to prompt a challenge in order to discover the correct tenant for the resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoRedundantSecondaryUri">
      <MemberSignature Language="C#" Value="public Uri GeoRedundantSecondaryUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri GeoRedundantSecondaryUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClientOptions.GeoRedundantSecondaryUri" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoRedundantSecondaryUri As Uri" />
      <MemberSignature Language="F#" Value="member this.GeoRedundantSecondaryUri : Uri with get, set" Usage="Azure.Storage.Queues.QueueClientOptions.GeoRedundantSecondaryUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.1.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the secondary storage <see cref="T:System.Uri" /> that can be read from for the storage account if the
             account is enabled for RA-GRS.
            
             If this property is set, the secondary Uri will be used for GET or HEAD requests during retries.
             If the status of the response from the secondary Uri is a 404, then subsequent retries for
             the request will not use the secondary Uri again, as this indicates that the resource
             may not have propagated there yet. Otherwise, subsequent retries will alternate back and forth
             between primary and secondary Uri.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageDecodingFailed">
      <MemberSignature Language="C#" Value="public event Azure.Core.SyncAsyncEventHandler&lt;Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs&gt; MessageDecodingFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class Azure.Core.SyncAsyncEventHandler`1&lt;class Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs&gt; MessageDecodingFailed" />
      <MemberSignature Language="DocId" Value="E:Azure.Storage.Queues.QueueClientOptions.MessageDecodingFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event MessageDecodingFailed As SyncAsyncEventHandler(Of QueueMessageDecodingFailedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.MessageDecodingFailed : Azure.Core.SyncAsyncEventHandler&lt;Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs&gt; " Usage="member this.MessageDecodingFailed : Azure.Core.SyncAsyncEventHandler&lt;Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.1.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.SyncAsyncEventHandler&lt;Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Optional. Performs the tasks needed when a message is received or peaked from the queue but cannot be decoded.
            
             <para>Such message can be received or peaked when <see cref="T:Azure.Storage.Queues.QueueClient" /> is expecting certain <see cref="T:Azure.Storage.Queues.QueueMessageEncoding" />
             but there's another producer that is not encoding messages in expected way. I.e. the queue contains messages with different encoding.</para><para><see cref="T:Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs" /> contains <see cref="T:Azure.Storage.Queues.QueueClient" /> that has received the message as well as
             <see cref="P:Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs.ReceivedMessage" /> or <see cref="P:Azure.Storage.Queues.QueueMessageDecodingFailedEventArgs.PeekedMessage" />
             with raw body, i.e. no decoding will be attempted so that
             body can be inspected as has been received from the queue.</para><para>The <see cref="T:Azure.Storage.Queues.QueueClient" /> won't attempt to remove the message from the queue. Therefore such handling should be included into
             the event handler itself.</para><para>The handler is potentially invoked by both synchronous and asynchronous receive and peek APIs. Therefore implementation of the handler should align with
             <see cref="T:Azure.Storage.Queues.QueueClient" /> APIs that are being used.
             See <see cref="T:Azure.Core.SyncAsyncEventHandler`1" /> about how to implement handler correctly. The example below shows a handler with all possible cases explored.
             <code snippet="Snippet:Azure_Storage_Queues_Samples_Sample03_MessageEncoding_MessageDecodingFailedHandlerAsync" language="csharp">
             QueueClientOptions queueClientOptions = new QueueClientOptions()
             {
                 MessageEncoding = QueueMessageEncoding.Base64
             };
            
             queueClientOptions.MessageDecodingFailed += async (QueueMessageDecodingFailedEventArgs args) =&gt;
             {
                 if (args.PeekedMessage != null)
                 {
                     Console.WriteLine($"Invalid message has been peeked, message id={args.PeekedMessage.MessageId} body={args.PeekedMessage.Body}");
                 }
                 else if (args.ReceivedMessage != null)
                 {
                     Console.WriteLine($"Invalid message has been received, message id={args.ReceivedMessage.MessageId} body={args.ReceivedMessage.Body}");
            
                     if (args.IsRunningSynchronously)
                     {
                         args.Queue.DeleteMessage(args.ReceivedMessage.MessageId, args.ReceivedMessage.PopReceipt);
                     }
                     else
                     {
                         await args.Queue.DeleteMessageAsync(args.ReceivedMessage.MessageId, args.ReceivedMessage.PopReceipt);
                     }
                 }
             };
            
             QueueClient queueClient = new QueueClient(connectionString, queueName, queueClientOptions);
             </code></para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public Azure.Storage.Queues.QueueMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Storage.Queues.QueueMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As QueueMessageEncoding" />
      <MemberSignature Language="F#" Value="member this.MessageEncoding : Azure.Storage.Queues.QueueMessageEncoding with get, set" Usage="Azure.Storage.Queues.QueueClientOptions.MessageEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.1.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Queues.QueueMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a message encoding that determines how <see cref="P:Azure.Storage.Queues.Models.QueueMessage.Body" /> is represented in HTTP requests and responses.
            The default is <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.None" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Azure.Storage.Queues.QueueClientOptions.ServiceVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Storage.Queues.QueueClientOptions/ServiceVersion Version" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Queues.QueueClientOptions.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As QueueClientOptions.ServiceVersion" />
      <MemberSignature Language="F#" Value="member this.Version : Azure.Storage.Queues.QueueClientOptions.ServiceVersion" Usage="Azure.Storage.Queues.QueueClientOptions.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Queues</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.1.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Queues.QueueClientOptions+ServiceVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion" /> of the service API used when
            making requests.  For more, see
            For more information, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services">
            Versioning for the Azure Storage services</see>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
