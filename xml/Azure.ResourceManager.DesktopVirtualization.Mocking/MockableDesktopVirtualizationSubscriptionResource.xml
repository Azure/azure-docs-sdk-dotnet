<Type Name="MockableDesktopVirtualizationSubscriptionResource" FullName="Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableDesktopVirtualizationSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDesktopVirtualizationSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDesktopVirtualizationSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDesktopVirtualizationSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDesktopVirtualizationSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPools (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPools(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetHostPools(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPools (cancellationToken As CancellationToken) As Pageable(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHostPools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&#xA;override this.GetHostPools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetHostPools cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools</description></item><item><term>Operation Id</term><description>HostPools_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPools (int? pageSize = default, bool? isDescending = default, int? initialSkip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPools(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Nullable`1&lt;bool&gt; isDescending, valuetype System.Nullable`1&lt;int32&gt; initialSkip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetHostPools(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPools (Optional pageSize As Nullable(Of Integer) = Nothing, Optional isDescending As Nullable(Of Boolean) = Nothing, Optional initialSkip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHostPools : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&#xA;override this.GetHostPools : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetHostPools (pageSize, isDescending, initialSkip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isDescending" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="initialSkip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize"> Number of items per page. </param>
        <param name="isDescending"> Indicates whether the collection is descending. </param>
        <param name="initialSkip"> Initial number of items to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools</description></item><item><term>Operation Id</term><description>HostPools_List</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPoolsAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPoolsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetHostPoolsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPoolsAsync (cancellationToken As CancellationToken) As AsyncPageable(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHostPoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&#xA;override this.GetHostPoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetHostPoolsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools</description></item><item><term>Operation Id</term><description>HostPools_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPoolsAsync (int? pageSize = default, bool? isDescending = default, int? initialSkip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPoolsAsync(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Nullable`1&lt;bool&gt; isDescending, valuetype System.Nullable`1&lt;int32&gt; initialSkip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetHostPoolsAsync(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPoolsAsync (Optional pageSize As Nullable(Of Integer) = Nothing, Optional isDescending As Nullable(Of Boolean) = Nothing, Optional initialSkip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHostPoolsAsync : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&#xA;override this.GetHostPoolsAsync : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetHostPoolsAsync (pageSize, isDescending, initialSkip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isDescending" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="initialSkip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize"> Number of items per page. </param>
        <param name="isDescending"> Indicates whether the collection is descending. </param>
        <param name="initialSkip"> Initial number of items to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools</description></item><item><term>Operation Id</term><description>HostPools_List</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlans (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlans(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetScalingPlans(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlans (cancellationToken As CancellationToken) As Pageable(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&#xA;override this.GetScalingPlans : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetScalingPlans cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans</description></item><item><term>Operation Id</term><description>ScalingPlans_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlans (int? pageSize = default, bool? isDescending = default, int? initialSkip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlans(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Nullable`1&lt;bool&gt; isDescending, valuetype System.Nullable`1&lt;int32&gt; initialSkip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetScalingPlans(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlans (Optional pageSize As Nullable(Of Integer) = Nothing, Optional isDescending As Nullable(Of Boolean) = Nothing, Optional initialSkip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlans : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&#xA;override this.GetScalingPlans : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetScalingPlans (pageSize, isDescending, initialSkip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isDescending" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="initialSkip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize"> Number of items per page. </param>
        <param name="isDescending"> Indicates whether the collection is descending. </param>
        <param name="initialSkip"> Initial number of items to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans</description></item><item><term>Operation Id</term><description>ScalingPlans_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlansAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlansAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlansAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetScalingPlansAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlansAsync (cancellationToken As CancellationToken) As AsyncPageable(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&#xA;override this.GetScalingPlansAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetScalingPlansAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans</description></item><item><term>Operation Id</term><description>ScalingPlans_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlansAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlansAsync (int? pageSize = default, bool? isDescending = default, int? initialSkip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlansAsync(valuetype System.Nullable`1&lt;int32&gt; pageSize, valuetype System.Nullable`1&lt;bool&gt; isDescending, valuetype System.Nullable`1&lt;int32&gt; initialSkip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetScalingPlansAsync(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlansAsync (Optional pageSize As Nullable(Of Integer) = Nothing, Optional isDescending As Nullable(Of Boolean) = Nothing, Optional initialSkip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlansAsync : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&#xA;override this.GetScalingPlansAsync : Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetScalingPlansAsync (pageSize, isDescending, initialSkip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isDescending" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="initialSkip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize"> Number of items per page. </param>
        <param name="isDescending"> Indicates whether the collection is descending. </param>
        <param name="initialSkip"> Initial number of items to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans</description></item><item><term>Operation Id</term><description>ScalingPlans_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroups (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroups(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetVirtualApplicationGroups(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplicationGroups (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualApplicationGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplicationGroups : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&#xA;override this.GetVirtualApplicationGroups : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetVirtualApplicationGroups (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> OData filter expression. Valid properties for filtering are applicationGroupType. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List applicationGroups in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups</description></item><item><term>Operation Id</term><description>ApplicationGroups_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroupsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroupsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetVirtualApplicationGroupsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplicationGroupsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualApplicationGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplicationGroupsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&#xA;override this.GetVirtualApplicationGroupsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetVirtualApplicationGroupsAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> OData filter expression. Valid properties for filtering are applicationGroupType. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List applicationGroups in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups</description></item><item><term>Operation Id</term><description>ApplicationGroups_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspaces (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspaces(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetVirtualWorkspaces(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWorkspaces (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWorkspaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&#xA;override this.GetVirtualWorkspaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetVirtualWorkspaces cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List workspaces in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces</description></item><item><term>Operation Id</term><description>Workspaces_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspacesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspacesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationSubscriptionResource.GetVirtualWorkspacesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWorkspacesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWorkspacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&#xA;override this.GetVirtualWorkspacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;" Usage="mockableDesktopVirtualizationSubscriptionResource.GetVirtualWorkspacesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List workspaces in subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces</description></item><item><term>Operation Id</term><description>Workspaces_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
