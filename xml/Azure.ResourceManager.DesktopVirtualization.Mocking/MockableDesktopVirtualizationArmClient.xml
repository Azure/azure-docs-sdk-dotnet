<Type Name="MockableDesktopVirtualizationArmClient" FullName="Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient">
  <TypeSignature Language="C#" Value="public class MockableDesktopVirtualizationArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDesktopVirtualizationArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDesktopVirtualizationArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDesktopVirtualizationArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDesktopVirtualizationArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource GetHostPoolPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource GetHostPoolPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetHostPoolPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPoolPrivateEndpointConnectionResource (id As ResourceIdentifier) As HostPoolPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetHostPoolPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource&#xA;override this.GetHostPoolPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource" Usage="mockableDesktopVirtualizationArmClient.GetHostPoolPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.HostPoolResource GetHostPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.HostPoolResource GetHostPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetHostPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPoolResource (id As ResourceIdentifier) As HostPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetHostPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolResource&#xA;override this.GetHostPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolResource" Usage="mockableDesktopVirtualizationArmClient.GetHostPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.HostPoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMsixPackageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.MsixPackageResource GetMsixPackageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.MsixPackageResource GetMsixPackageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetMsixPackageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMsixPackageResource (id As ResourceIdentifier) As MsixPackageResource" />
      <MemberSignature Language="F#" Value="abstract member GetMsixPackageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.MsixPackageResource&#xA;override this.GetMsixPackageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" Usage="mockableDesktopVirtualizationArmClient.GetMsixPackageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.MsixPackageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanPersonalScheduleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource GetScalingPlanPersonalScheduleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource GetScalingPlanPersonalScheduleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetScalingPlanPersonalScheduleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlanPersonalScheduleResource (id As ResourceIdentifier) As ScalingPlanPersonalScheduleResource" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlanPersonalScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource&#xA;override this.GetScalingPlanPersonalScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource" Usage="mockableDesktopVirtualizationArmClient.GetScalingPlanPersonalScheduleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanPooledScheduleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource GetScalingPlanPooledScheduleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource GetScalingPlanPooledScheduleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetScalingPlanPooledScheduleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlanPooledScheduleResource (id As ResourceIdentifier) As ScalingPlanPooledScheduleResource" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlanPooledScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource&#xA;override this.GetScalingPlanPooledScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource" Usage="mockableDesktopVirtualizationArmClient.GetScalingPlanPooledScheduleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource GetScalingPlanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource GetScalingPlanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetScalingPlanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlanResource (id As ResourceIdentifier) As ScalingPlanResource" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&#xA;override this.GetScalingPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" Usage="mockableDesktopVirtualizationArmClient.GetScalingPlanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionHostResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.SessionHostResource GetSessionHostResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.SessionHostResource GetSessionHostResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetSessionHostResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSessionHostResource (id As ResourceIdentifier) As SessionHostResource" />
      <MemberSignature Language="F#" Value="abstract member GetSessionHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.SessionHostResource&#xA;override this.GetSessionHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.SessionHostResource" Usage="mockableDesktopVirtualizationArmClient.GetSessionHostResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.SessionHostResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.SessionHostResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserSessionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.UserSessionResource GetUserSessionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.UserSessionResource GetUserSessionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetUserSessionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUserSessionResource (id As ResourceIdentifier) As UserSessionResource" />
      <MemberSignature Language="F#" Value="abstract member GetUserSessionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.UserSessionResource&#xA;override this.GetUserSessionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.UserSessionResource" Usage="mockableDesktopVirtualizationArmClient.GetUserSessionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.UserSessionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.UserSessionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource GetVirtualApplicationGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource GetVirtualApplicationGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetVirtualApplicationGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplicationGroupResource (id As ResourceIdentifier) As VirtualApplicationGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplicationGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&#xA;override this.GetVirtualApplicationGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" Usage="mockableDesktopVirtualizationArmClient.GetVirtualApplicationGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource GetVirtualApplicationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource GetVirtualApplicationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetVirtualApplicationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplicationResource (id As ResourceIdentifier) As VirtualApplicationResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource&#xA;override this.GetVirtualApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" Usage="mockableDesktopVirtualizationArmClient.GetVirtualApplicationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualDesktopResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource GetVirtualDesktopResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource GetVirtualDesktopResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetVirtualDesktopResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualDesktopResource (id As ResourceIdentifier) As VirtualDesktopResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualDesktopResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource&#xA;override this.GetVirtualDesktopResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" Usage="mockableDesktopVirtualizationArmClient.GetVirtualDesktopResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource GetVirtualWorkspaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource GetVirtualWorkspaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetVirtualWorkspaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWorkspaceResource (id As ResourceIdentifier) As VirtualWorkspaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&#xA;override this.GetVirtualWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" Usage="mockableDesktopVirtualizationArmClient.GetVirtualWorkspaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspacePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource GetWorkspacePrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource GetWorkspacePrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationArmClient.GetWorkspacePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspacePrivateEndpointConnectionResource (id As ResourceIdentifier) As WorkspacePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspacePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource&#xA;override this.GetWorkspacePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource" Usage="mockableDesktopVirtualizationArmClient.GetWorkspacePrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.WorkspacePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
