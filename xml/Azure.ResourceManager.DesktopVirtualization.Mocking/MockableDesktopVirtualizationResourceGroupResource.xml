<Type Name="MockableDesktopVirtualizationResourceGroupResource" FullName="Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableDesktopVirtualizationResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDesktopVirtualizationResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDesktopVirtualizationResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDesktopVirtualizationResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDesktopVirtualizationResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPool (string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt; GetHostPool(string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetHostPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPool (hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HostPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHostPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&#xA;override this.GetHostPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetHostPool (hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}</description></item><item><term>Operation Id</term><description>HostPools_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt; GetHostPoolAsync (string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt; GetHostPoolAsync(string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetHostPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPoolAsync (hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HostPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHostPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt;&#xA;override this.GetHostPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetHostPoolAsync (hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}</description></item><item><term>Operation Id</term><description>HostPools_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetHostPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostPools () As HostPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHostPools : unit -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolCollection&#xA;override this.GetHostPools : unit -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolCollection" Usage="mockableDesktopVirtualizationResourceGroupResource.GetHostPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of HostPoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of HostPoolResources and their operations over a HostPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlan">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlan (string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt; GetScalingPlan(string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetScalingPlan(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlan (scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScalingPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&#xA;override this.GetScalingPlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetScalingPlan (scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}</description></item><item><term>Operation Id</term><description>ScalingPlans_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt; GetScalingPlanAsync (string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt; GetScalingPlanAsync(string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetScalingPlanAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlanAsync (scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScalingPlanResource))" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt;&#xA;override this.GetScalingPlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetScalingPlanAsync (scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}</description></item><item><term>Operation Id</term><description>ScalingPlans_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetScalingPlans" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScalingPlans () As ScalingPlanCollection" />
      <MemberSignature Language="F#" Value="abstract member GetScalingPlans : unit -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection&#xA;override this.GetScalingPlans : unit -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection" Usage="mockableDesktopVirtualizationResourceGroupResource.GetScalingPlans " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ScalingPlanResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ScalingPlanResources and their operations over a ScalingPlanResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroup (string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt; GetVirtualApplicationGroup(string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetVirtualApplicationGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplicationGroup (applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualApplicationGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplicationGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&#xA;override this.GetVirtualApplicationGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetVirtualApplicationGroup (applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}</description></item><item><term>Operation Id</term><description>ApplicationGroups_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt; GetVirtualApplicationGroupAsync (string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt; GetVirtualApplicationGroupAsync(string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetVirtualApplicationGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplicationGroupAsync (applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualApplicationGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplicationGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt;&#xA;override this.GetVirtualApplicationGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetVirtualApplicationGroupAsync (applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}</description></item><item><term>Operation Id</term><description>ApplicationGroups_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetVirtualApplicationGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualApplicationGroups () As VirtualApplicationGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualApplicationGroups : unit -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection&#xA;override this.GetVirtualApplicationGroups : unit -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection" Usage="mockableDesktopVirtualizationResourceGroupResource.GetVirtualApplicationGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualApplicationGroupResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualApplicationGroupResources and their operations over a VirtualApplicationGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspace (string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt; GetVirtualWorkspace(string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetVirtualWorkspace(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWorkspace (workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWorkspace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&#xA;override this.GetVirtualWorkspace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetVirtualWorkspace (workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt; GetVirtualWorkspaceAsync (string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt; GetVirtualWorkspaceAsync(string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetVirtualWorkspaceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWorkspaceAsync (workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWorkspaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt;&#xA;override this.GetVirtualWorkspaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt;" Usage="mockableDesktopVirtualizationResourceGroupResource.GetVirtualWorkspaceAsync (workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2023-09-05</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaces">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Mocking.MockableDesktopVirtualizationResourceGroupResource.GetVirtualWorkspaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWorkspaces () As VirtualWorkspaceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWorkspaces : unit -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection&#xA;override this.GetVirtualWorkspaces : unit -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection" Usage="mockableDesktopVirtualizationResourceGroupResource.GetVirtualWorkspaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualWorkspaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualWorkspaceResources and their operations over a VirtualWorkspaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
