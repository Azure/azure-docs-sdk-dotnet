<Type Name="MockableScVmmArmClient" FullName="Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient">
  <TypeSignature Language="C#" Value="public class MockableScVmmArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableScVmmArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableScVmmArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableScVmmArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableScVmmArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmAvailabilitySetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource GetScVmmAvailabilitySetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource GetScVmmAvailabilitySetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmAvailabilitySetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmAvailabilitySetResource (id As ResourceIdentifier) As ScVmmAvailabilitySetResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmAvailabilitySetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource&#xA;override this.GetScVmmAvailabilitySetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource" Usage="mockableScVmmArmClient.GetScVmmAvailabilitySetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmAvailabilitySetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmCloudResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmCloudResource GetScVmmCloudResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmCloudResource GetScVmmCloudResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmCloudResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmCloudResource (id As ResourceIdentifier) As ScVmmCloudResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmCloudResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmCloudResource&#xA;override this.GetScVmmCloudResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmCloudResource" Usage="mockableScVmmArmClient.GetScVmmCloudResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmCloudResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmCloudResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmCloudResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmCloudResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmCloudResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmGuestAgentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource GetScVmmGuestAgentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource GetScVmmGuestAgentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmGuestAgentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmGuestAgentResource (id As ResourceIdentifier) As ScVmmGuestAgentResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmGuestAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource&#xA;override this.GetScVmmGuestAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource" Usage="mockableScVmmArmClient.GetScVmmGuestAgentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmGuestAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmHybridIdentityMetadataResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource GetScVmmHybridIdentityMetadataResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource GetScVmmHybridIdentityMetadataResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmHybridIdentityMetadataResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmHybridIdentityMetadataResource (id As ResourceIdentifier) As ScVmmHybridIdentityMetadataResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource&#xA;override this.GetScVmmHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource" Usage="mockableScVmmArmClient.GetScVmmHybridIdentityMetadataResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmHybridIdentityMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmInventoryItemResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource GetScVmmInventoryItemResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource GetScVmmInventoryItemResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmInventoryItemResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmInventoryItemResource (id As ResourceIdentifier) As ScVmmInventoryItemResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmInventoryItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource&#xA;override this.GetScVmmInventoryItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource" Usage="mockableScVmmArmClient.GetScVmmInventoryItemResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmInventoryItemResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmServerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmServerResource GetScVmmServerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmServerResource GetScVmmServerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmServerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmServerResource (id As ResourceIdentifier) As ScVmmServerResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmServerResource&#xA;override this.GetScVmmServerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmServerResource" Usage="mockableScVmmArmClient.GetScVmmServerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmServerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmServerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmServerResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmServerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmServerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmVirtualMachineInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource GetScVmmVirtualMachineInstance (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource GetScVmmVirtualMachineInstance(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmVirtualMachineInstance(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmVirtualMachineInstance (scope As ResourceIdentifier) As ScVmmVirtualMachineInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmVirtualMachineInstance : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource&#xA;override this.GetScVmmVirtualMachineInstance : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource" Usage="mockableScVmmArmClient.GetScVmmVirtualMachineInstance scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a ScVmmVirtualMachineInstanceResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmVirtualMachineInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource GetScVmmVirtualMachineInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource GetScVmmVirtualMachineInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmVirtualMachineInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmVirtualMachineInstanceResource (id As ResourceIdentifier) As ScVmmVirtualMachineInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmVirtualMachineInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource&#xA;override this.GetScVmmVirtualMachineInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource" Usage="mockableScVmmArmClient.GetScVmmVirtualMachineInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmVirtualMachineTemplateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource GetScVmmVirtualMachineTemplateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource GetScVmmVirtualMachineTemplateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmVirtualMachineTemplateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmVirtualMachineTemplateResource (id As ResourceIdentifier) As ScVmmVirtualMachineTemplateResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmVirtualMachineTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource&#xA;override this.GetScVmmVirtualMachineTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource" Usage="mockableScVmmArmClient.GetScVmmVirtualMachineTemplateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualMachineTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScVmmVirtualNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource GetScVmmVirtualNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource GetScVmmVirtualNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ScVmm.Mocking.MockableScVmmArmClient.GetScVmmVirtualNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScVmmVirtualNetworkResource (id As ResourceIdentifier) As ScVmmVirtualNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetScVmmVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource&#xA;override this.GetScVmmVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource" Usage="mockableScVmmArmClient.GetScVmmVirtualNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ScVmm</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ScVmm.ScVmmVirtualNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
