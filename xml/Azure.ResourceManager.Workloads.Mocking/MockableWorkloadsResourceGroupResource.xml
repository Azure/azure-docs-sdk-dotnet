<Type Name="MockableWorkloadsResourceGroupResource" FullName="Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableWorkloadsResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableWorkloadsResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableWorkloadsResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableWorkloadsResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableWorkloadsResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapMonitor">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt; GetSapMonitor (string monitorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Workloads.SapMonitorResource&gt; GetSapMonitor(string monitorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource.GetSapMonitor(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapMonitor (monitorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SapMonitorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSapMonitor : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt;&#xA;override this.GetSapMonitor : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt;" Usage="mockableWorkloadsResourceGroupResource.GetSapMonitor (monitorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monitorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="monitorName"> Name of the SAP monitor resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets properties of a SAP monitor for the specified subscription, resource group, and resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}</description></item><item><term>Operation Id</term><description>monitors_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Workloads.SapMonitorResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="monitorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="monitorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapMonitorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt;&gt; GetSapMonitorAsync (string monitorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Workloads.SapMonitorResource&gt;&gt; GetSapMonitorAsync(string monitorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource.GetSapMonitorAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapMonitorAsync (monitorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SapMonitorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSapMonitorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt;&gt;&#xA;override this.GetSapMonitorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt;&gt;" Usage="mockableWorkloadsResourceGroupResource.GetSapMonitorAsync (monitorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapMonitorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monitorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="monitorName"> Name of the SAP monitor resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets properties of a SAP monitor for the specified subscription, resource group, and resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}</description></item><item><term>Operation Id</term><description>monitors_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Workloads.SapMonitorResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="monitorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="monitorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapMonitors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapMonitorCollection GetSapMonitors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapMonitorCollection GetSapMonitors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource.GetSapMonitors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapMonitors () As SapMonitorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSapMonitors : unit -&gt; Azure.ResourceManager.Workloads.SapMonitorCollection&#xA;override this.GetSapMonitors : unit -&gt; Azure.ResourceManager.Workloads.SapMonitorCollection" Usage="mockableWorkloadsResourceGroupResource.GetSapMonitors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapMonitorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SapMonitorResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SapMonitorResources and their operations over a SapMonitorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt; GetSapVirtualInstance (string sapVirtualInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt; GetSapVirtualInstance(string sapVirtualInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource.GetSapVirtualInstance(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapVirtualInstance (sapVirtualInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SapVirtualInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSapVirtualInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;&#xA;override this.GetSapVirtualInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;" Usage="mockableWorkloadsResourceGroupResource.GetSapVirtualInstance (sapVirtualInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sapVirtualInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sapVirtualInstanceName"> The name of the Virtual Instances for SAP solutions resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Virtual Instance for SAP solutions resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Workloads.SapVirtualInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sapVirtualInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sapVirtualInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;&gt; GetSapVirtualInstanceAsync (string sapVirtualInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;&gt; GetSapVirtualInstanceAsync(string sapVirtualInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource.GetSapVirtualInstanceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapVirtualInstanceAsync (sapVirtualInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SapVirtualInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSapVirtualInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;&gt;&#xA;override this.GetSapVirtualInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;&gt;" Usage="mockableWorkloadsResourceGroupResource.GetSapVirtualInstanceAsync (sapVirtualInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Workloads.SapVirtualInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sapVirtualInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sapVirtualInstanceName"> The name of the Virtual Instances for SAP solutions resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Virtual Instance for SAP solutions resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_Get</description></item><item><term>Default Api Version</term><description>2023-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Workloads.SapVirtualInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sapVirtualInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sapVirtualInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstances">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapVirtualInstanceCollection GetSapVirtualInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapVirtualInstanceCollection GetSapVirtualInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsResourceGroupResource.GetSapVirtualInstances" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapVirtualInstances () As SapVirtualInstanceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSapVirtualInstances : unit -&gt; Azure.ResourceManager.Workloads.SapVirtualInstanceCollection&#xA;override this.GetSapVirtualInstances : unit -&gt; Azure.ResourceManager.Workloads.SapVirtualInstanceCollection" Usage="mockableWorkloadsResourceGroupResource.GetSapVirtualInstances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapVirtualInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SapVirtualInstanceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SapVirtualInstanceResources and their operations over a SapVirtualInstanceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
