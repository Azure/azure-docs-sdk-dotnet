<Type Name="MockableWorkloadsArmClient" FullName="Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient">
  <TypeSignature Language="C#" Value="public class MockableWorkloadsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableWorkloadsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableWorkloadsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableWorkloadsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableWorkloadsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapApplicationServerInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource GetSapApplicationServerInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource GetSapApplicationServerInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.GetSapApplicationServerInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapApplicationServerInstanceResource (id As ResourceIdentifier) As SapApplicationServerInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSapApplicationServerInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource&#xA;override this.GetSapApplicationServerInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource" Usage="mockableWorkloadsArmClient.GetSapApplicationServerInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Workloads.SapApplicationServerInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapCentralServerInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapCentralServerInstanceResource GetSapCentralServerInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapCentralServerInstanceResource GetSapCentralServerInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.GetSapCentralServerInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapCentralServerInstanceResource (id As ResourceIdentifier) As SapCentralServerInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSapCentralServerInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapCentralServerInstanceResource&#xA;override this.GetSapCentralServerInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapCentralServerInstanceResource" Usage="mockableWorkloadsArmClient.GetSapCentralServerInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapCentralServerInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Workloads.SapCentralServerInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Workloads.SapCentralServerInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Workloads.SapCentralServerInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Workloads.SapCentralServerInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapDatabaseInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapDatabaseInstanceResource GetSapDatabaseInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapDatabaseInstanceResource GetSapDatabaseInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.GetSapDatabaseInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapDatabaseInstanceResource (id As ResourceIdentifier) As SapDatabaseInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSapDatabaseInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapDatabaseInstanceResource&#xA;override this.GetSapDatabaseInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapDatabaseInstanceResource" Usage="mockableWorkloadsArmClient.GetSapDatabaseInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapDatabaseInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Workloads.SapDatabaseInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Workloads.SapDatabaseInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Workloads.SapDatabaseInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Workloads.SapDatabaseInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapLandscapeMonitorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapLandscapeMonitorResource GetSapLandscapeMonitorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapLandscapeMonitorResource GetSapLandscapeMonitorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.GetSapLandscapeMonitorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapLandscapeMonitorResource (id As ResourceIdentifier) As SapLandscapeMonitorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSapLandscapeMonitorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapLandscapeMonitorResource&#xA;override this.GetSapLandscapeMonitorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapLandscapeMonitorResource" Usage="mockableWorkloadsArmClient.GetSapLandscapeMonitorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapLandscapeMonitorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Workloads.SapLandscapeMonitorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Workloads.SapLandscapeMonitorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Workloads.SapLandscapeMonitorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Workloads.SapLandscapeMonitorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapMonitorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapMonitorResource GetSapMonitorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapMonitorResource GetSapMonitorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.GetSapMonitorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapMonitorResource (id As ResourceIdentifier) As SapMonitorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSapMonitorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapMonitorResource&#xA;override this.GetSapMonitorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapMonitorResource" Usage="mockableWorkloadsArmClient.GetSapMonitorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapMonitorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Workloads.SapMonitorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Workloads.SapMonitorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Workloads.SapMonitorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Workloads.SapMonitorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapProviderInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapProviderInstanceResource GetSapProviderInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapProviderInstanceResource GetSapProviderInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.GetSapProviderInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapProviderInstanceResource (id As ResourceIdentifier) As SapProviderInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSapProviderInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapProviderInstanceResource&#xA;override this.GetSapProviderInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapProviderInstanceResource" Usage="mockableWorkloadsArmClient.GetSapProviderInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapProviderInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Workloads.SapProviderInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Workloads.SapProviderInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Workloads.SapProviderInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Workloads.SapProviderInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Workloads.SapVirtualInstanceResource GetSapVirtualInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Workloads.SapVirtualInstanceResource GetSapVirtualInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Workloads.Mocking.MockableWorkloadsArmClient.GetSapVirtualInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSapVirtualInstanceResource (id As ResourceIdentifier) As SapVirtualInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSapVirtualInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapVirtualInstanceResource&#xA;override this.GetSapVirtualInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Workloads.SapVirtualInstanceResource" Usage="mockableWorkloadsArmClient.GetSapVirtualInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Workloads</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Workloads.SapVirtualInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Workloads.SapVirtualInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Workloads.SapVirtualInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Workloads.SapVirtualInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Workloads.SapVirtualInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
