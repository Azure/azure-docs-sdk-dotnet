<Type Name="IContainerGroups" FullName="Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups">
  <TypeSignature Language="C#" Value="public interface IContainerGroups : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchDeletion, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.ContainerGroup.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroupsOperations&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerInstanceManager&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContainerGroups implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchDeletion, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.ContainerGroup.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroupsOperations&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerInstanceManager&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContainerGroups&#xA;Implements IHasInner(Of IContainerGroupsOperations), IHasManager(Of IContainerInstanceManager), ISupportsBatchCreation(Of IContainerGroup), ISupportsBatchDeletion, ISupportsCreating(Of IBlank), ISupportsDeletingById, ISupportsDeletingByResourceGroup, ISupportsGettingById(Of IContainerGroup), ISupportsGettingByResourceGroup(Of IContainerGroup), ISupportsListing(Of IContainerGroup), ISupportsListingByResourceGroup(Of IContainerGroup)" />
  <TypeSignature Language="F#" Value="type IContainerGroups = interface&#xA;    interface IBeta&#xA;    interface ISupportsCreating&lt;IBlank&gt;&#xA;    interface IHasManager&lt;IContainerInstanceManager&gt;&#xA;    interface IHasInner&lt;IContainerGroupsOperations&gt;&#xA;    interface ISupportsBatchCreation&lt;IContainerGroup&gt;&#xA;    interface ISupportsGettingByResourceGroup&lt;IContainerGroup&gt;&#xA;    interface ISupportsGettingById&lt;IContainerGroup&gt;&#xA;    interface ISupportsDeletingByResourceGroup&#xA;    interface ISupportsDeletingById&#xA;    interface ISupportsBatchDeletion&#xA;    interface ISupportsListingByResourceGroup&lt;IContainerGroup&gt;&#xA;    interface ISupportsListing&lt;IContainerGroup&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerInstance.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchDeletion</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.ContainerGroup.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroup&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroupsOperations&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerInstanceManager&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point to the container instance management API.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetLogContent">
      <MemberSignature Language="C#" Value="public string GetLogContent (string resourceGroupName, string containerGroupName, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLogContent(string resourceGroupName, string containerGroupName, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups.GetLogContent(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogContent (resourceGroupName As String, containerGroupName As String, containerName As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GetLogContent : string * string * string -&gt; string" Usage="iContainerGroups.GetLogContent (resourceGroupName, containerGroupName, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerInstance.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="containerGroupName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The Azure resource group name.</param>
        <param name="containerGroupName">The container group name.</param>
        <param name="containerName">The container instance name.</param>
        <summary>
            Get the log content for the specified container instance within a container group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>All available log lines.</return>
      </Docs>
    </Member>
    <Member MemberName="GetLogContent">
      <MemberSignature Language="C#" Value="public string GetLogContent (string resourceGroupName, string containerGroupName, string containerName, int tailLineCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLogContent(string resourceGroupName, string containerGroupName, string containerName, int32 tailLineCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups.GetLogContent(System.String,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogContent (resourceGroupName As String, containerGroupName As String, containerName As String, tailLineCount As Integer) As String" />
      <MemberSignature Language="F#" Value="abstract member GetLogContent : string * string * string * int -&gt; string" Usage="iContainerGroups.GetLogContent (resourceGroupName, containerGroupName, containerName, tailLineCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerInstance.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="containerGroupName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="tailLineCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The Azure resource group name.</param>
        <param name="containerGroupName">The container group name.</param>
        <param name="containerName">The container instance name.</param>
        <param name="tailLineCount">Only get the last log lines up to this.</param>
        <summary>
            Get the log content for the specified container instance within a container group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The log lines from the end, up to the number specified.</return>
      </Docs>
    </Member>
    <Member MemberName="GetLogContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetLogContentAsync (string resourceGroupName, string containerGroupName, string containerName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetLogContentAsync(string resourceGroupName, string containerGroupName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups.GetLogContentAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetLogContentAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iContainerGroups.GetLogContentAsync (resourceGroupName, containerGroupName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerInstance.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="containerGroupName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The Azure resource group name.</param>
        <param name="containerGroupName">The container group name.</param>
        <param name="containerName">The container instance name.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Get the log content for the specified container instance within a container group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>A representation of the future computation of this call.</return>
      </Docs>
    </Member>
    <Member MemberName="GetLogContentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetLogContentAsync (string resourceGroupName, string containerGroupName, string containerName, int tailLineCount, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetLogContentAsync(string resourceGroupName, string containerGroupName, string containerName, int32 tailLineCount, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups.GetLogContentAsync(System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetLogContentAsync : string * string * string * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iContainerGroups.GetLogContentAsync (resourceGroupName, containerGroupName, containerName, tailLineCount, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerInstance.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="containerGroupName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="tailLineCount" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The Azure resource group name.</param>
        <param name="containerGroupName">The container group name.</param>
        <param name="containerName">The container instance name.</param>
        <param name="tailLineCount">Only get the last log lines up to this.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Get the log content for the specified container instance within a container group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>A representation of the future computation of this call.</return>
      </Docs>
    </Member>
    <Member MemberName="ListOperations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt; ListOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt; ListOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups.ListOperations" />
      <MemberSignature Language="VB.NET" Value="Public Function ListOperations () As IReadOnlyCollection(Of Operation)" />
      <MemberSignature Language="F#" Value="abstract member ListOperations : unit -&gt; System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt;" Usage="iContainerGroups.ListOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerInstance.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Lists all operations for Azure Container Instance service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>All operations for Azure Container Instance service.</return>
      </Docs>
    </Member>
    <Member MemberName="ListOperationsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt;&gt; ListOperationsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt;&gt; ListOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerInstance.Fluent.IContainerGroups.ListOperationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListOperationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt;&gt;" Usage="iContainerGroups.ListOperationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerInstance.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Azure.Management.ContainerInstance.Fluent.Models.Operation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Lists all operations for Azure Container Instance service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the future computation of this call.</return>
      </Docs>
    </Member>
  </Members>
</Type>