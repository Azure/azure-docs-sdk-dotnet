<Type Name="DataProtectionBackupVaultResource" FullName="Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource">
  <TypeSignature Language="C#" Value="public class DataProtectionBackupVaultResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataProtectionBackupVaultResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DataProtectionBackupVaultResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DataProtectionBackupVaultResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DataProtectionBackupVault along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDataProtectionBackupVaultResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetDataProtectionBackupVault method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataProtectionBackupVaultResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;" Usage="dataProtectionBackupVaultResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string vaultName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string vaultName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, vaultName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, vaultName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="vaultName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="vaultName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DataProtectionBackupVaultData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultData" Usage="Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataProtectionBackupVaultResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a BackupVault resource from the resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataProtectionBackupVaultResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a BackupVault resource from the resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;" Usage="dataProtectionBackupVaultResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a resource belonging to a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a resource belonging to a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt; GetDataProtectionBackupInstance (string backupInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt; GetDataProtectionBackupInstance(string backupInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupInstance(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupInstance (backupInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;&#xA;override this.GetDataProtectionBackupInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupInstance (backupInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backupInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backupInstanceName"> The name of the backup instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a backup instance with name in a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}</description></item><item><term>Operation Id</term><description>BackupInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backupInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backupInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupInstanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;&gt; GetDataProtectionBackupInstanceAsync (string backupInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;&gt; GetDataProtectionBackupInstanceAsync(string backupInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupInstanceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupInstanceAsync (backupInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;&gt;&#xA;override this.GetDataProtectionBackupInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupInstanceAsync (backupInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backupInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backupInstanceName"> The name of the backup instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a backup instance with name in a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}</description></item><item><term>Operation Id</term><description>BackupInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backupInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backupInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupInstances">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceCollection GetDataProtectionBackupInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceCollection GetDataProtectionBackupInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupInstances" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupInstances () As DataProtectionBackupInstanceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupInstances : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceCollection&#xA;override this.GetDataProtectionBackupInstances : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceCollection" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupInstances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataProtectionBackupInstanceResources in the DataProtectionBackupVault. </summary>
        <returns> An object representing collection of DataProtectionBackupInstanceResources and their operations over a DataProtectionBackupInstanceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetDataProtectionBackupJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt; GetDataProtectionBackupJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&#xA;override this.GetDataProtectionBackupJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupJob (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The Job ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a job with id in a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs/{jobId}</description></item><item><term>Operation Id</term><description>Jobs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt; GetDataProtectionBackupJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt; GetDataProtectionBackupJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupJobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt;&#xA;override this.GetDataProtectionBackupJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The Job ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a job with id in a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs/{jobId}</description></item><item><term>Operation Id</term><description>Jobs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobCollection GetDataProtectionBackupJobs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobCollection GetDataProtectionBackupJobs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupJobs () As DataProtectionBackupJobCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupJobs : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobCollection&#xA;override this.GetDataProtectionBackupJobs : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobCollection" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupJobs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupJobCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataProtectionBackupJobResources in the DataProtectionBackupVault. </summary>
        <returns> An object representing collection of DataProtectionBackupJobResources and their operations over a DataProtectionBackupJobResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyCollection GetDataProtectionBackupPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyCollection GetDataProtectionBackupPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupPolicies () As DataProtectionBackupPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupPolicies : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyCollection&#xA;override this.GetDataProtectionBackupPolicies : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyCollection" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataProtectionBackupPolicyResources in the DataProtectionBackupVault. </summary>
        <returns> An object representing collection of DataProtectionBackupPolicyResources and their operations over a DataProtectionBackupPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt; GetDataProtectionBackupPolicy (string backupPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt; GetDataProtectionBackupPolicy(string backupPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupPolicy (backupPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;&#xA;override this.GetDataProtectionBackupPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupPolicy (backupPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backupPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backupPolicyName"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a backup policy belonging to a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}</description></item><item><term>Operation Id</term><description>BackupPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backupPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backupPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataProtectionBackupPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;&gt; GetDataProtectionBackupPolicyAsync (string backupPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;&gt; GetDataProtectionBackupPolicyAsync(string backupPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDataProtectionBackupPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataProtectionBackupPolicyAsync (backupPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataProtectionBackupPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;&gt;&#xA;override this.GetDataProtectionBackupPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.GetDataProtectionBackupPolicyAsync (backupPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backupPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backupPolicyName"> The String to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a backup policy belonging to a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}</description></item><item><term>Operation Id</term><description>BackupPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backupPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backupPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedDataProtectionBackupInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt; GetDeletedDataProtectionBackupInstance (string backupInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt; GetDeletedDataProtectionBackupInstance(string backupInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDeletedDataProtectionBackupInstance(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedDataProtectionBackupInstance (backupInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedDataProtectionBackupInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedDataProtectionBackupInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;&#xA;override this.GetDeletedDataProtectionBackupInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;" Usage="dataProtectionBackupVaultResource.GetDeletedDataProtectionBackupInstance (backupInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backupInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backupInstanceName"> The name of the deleted backup instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted backup instance with name in a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances/{backupInstanceName}</description></item><item><term>Operation Id</term><description>DeletedBackupInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backupInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backupInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedDataProtectionBackupInstanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;&gt; GetDeletedDataProtectionBackupInstanceAsync (string backupInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;&gt; GetDeletedDataProtectionBackupInstanceAsync(string backupInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDeletedDataProtectionBackupInstanceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedDataProtectionBackupInstanceAsync (backupInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedDataProtectionBackupInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedDataProtectionBackupInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;&gt;&#xA;override this.GetDeletedDataProtectionBackupInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.GetDeletedDataProtectionBackupInstanceAsync (backupInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backupInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backupInstanceName"> The name of the deleted backup instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a deleted backup instance with name in a backup vault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances/{backupInstanceName}</description></item><item><term>Operation Id</term><description>DeletedBackupInstances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backupInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backupInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedDataProtectionBackupInstances">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceCollection GetDeletedDataProtectionBackupInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceCollection GetDeletedDataProtectionBackupInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetDeletedDataProtectionBackupInstances" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedDataProtectionBackupInstances () As DeletedDataProtectionBackupInstanceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedDataProtectionBackupInstances : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceCollection&#xA;override this.GetDeletedDataProtectionBackupInstances : unit -&gt; Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceCollection" Usage="dataProtectionBackupVaultResource.GetDeletedDataProtectionBackupInstances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.DeletedDataProtectionBackupInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DeletedDataProtectionBackupInstanceResources in the DataProtectionBackupVault. </summary>
        <returns> An object representing collection of DeletedDataProtectionBackupInstanceResources and their operations over a DeletedDataProtectionBackupInstanceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuardProxyBaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt; GetResourceGuardProxyBaseResource (string resourceGuardProxyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt; GetResourceGuardProxyBaseResource(string resourceGuardProxyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetResourceGuardProxyBaseResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuardProxyBaseResource (resourceGuardProxyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGuardProxyBaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuardProxyBaseResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;&#xA;override this.GetResourceGuardProxyBaseResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;" Usage="dataProtectionBackupVaultResource.GetResourceGuardProxyBaseResource (resourceGuardProxyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGuardProxyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGuardProxyName"> name of the resource guard proxy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the ResourceGuardProxy object associated with the vault, and that matches the name in the request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}</description></item><item><term>Operation Id</term><description>DppResourceGuardProxy_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceGuardProxyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGuardProxyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuardProxyBaseResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;&gt; GetResourceGuardProxyBaseResourceAsync (string resourceGuardProxyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;&gt; GetResourceGuardProxyBaseResourceAsync(string resourceGuardProxyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetResourceGuardProxyBaseResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuardProxyBaseResourceAsync (resourceGuardProxyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGuardProxyBaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuardProxyBaseResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;&gt;&#xA;override this.GetResourceGuardProxyBaseResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.GetResourceGuardProxyBaseResourceAsync (resourceGuardProxyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGuardProxyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGuardProxyName"> name of the resource guard proxy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the ResourceGuardProxy object associated with the vault, and that matches the name in the request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}</description></item><item><term>Operation Id</term><description>DppResourceGuardProxy_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceGuardProxyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGuardProxyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuardProxyBaseResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResourceCollection GetResourceGuardProxyBaseResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResourceCollection GetResourceGuardProxyBaseResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.GetResourceGuardProxyBaseResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuardProxyBaseResources () As ResourceGuardProxyBaseResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuardProxyBaseResources : unit -&gt; Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResourceCollection&#xA;override this.GetResourceGuardProxyBaseResources : unit -&gt; Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResourceCollection" Usage="dataProtectionBackupVaultResource.GetResourceGuardProxyBaseResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataProtectionBackup.ResourceGuardProxyBaseResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ResourceGuardProxyBaseResources in the DataProtectionBackupVault. </summary>
        <returns> An object representing collection of ResourceGuardProxyBaseResources and their operations over a ResourceGuardProxyBaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;" Usage="dataProtectionBackupVaultResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataProtectionBackupVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;" Usage="dataProtectionBackupVaultResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataProtectionBackupVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerExportJob">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation TriggerExportJob (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation TriggerExportJob(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.TriggerExportJob(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerExportJob (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member TriggerExportJob : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.TriggerExportJob : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataProtectionBackupVaultResource.TriggerExportJob (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers export of jobs and returns an OperationID to track.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/exportBackupJobs</description></item><item><term>Operation Id</term><description>ExportJobs_Trigger</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerExportJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; TriggerExportJobAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; TriggerExportJobAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.TriggerExportJobAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerExportJobAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member TriggerExportJobAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.TriggerExportJobAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataProtectionBackupVaultResource.TriggerExportJobAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers export of jobs and returns an OperationID to track.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/exportBackupJobs</description></item><item><term>Operation Id</term><description>ExportJobs_Trigger</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As DataProtectionBackupPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataProtectionBackupVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;" Usage="dataProtectionBackupVaultResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release. Please use Update(WaitUntil waitUntil, DataProtectionBackupVaultPatch patch, CancellationToken cancellationToken = default) instead.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release. Please use Update(WaitUntil waitUntil, DataProtectionBackupVaultPatch patch, CancellationToken cancellationToken = default) instead.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a BackupVault resource belonging to a resource group. For example, updating tags for a resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As DataProtectionBackupVaultPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataProtectionBackupVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;" Usage="dataProtectionBackupVaultResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a BackupVault resource belonging to a resource group. For example, updating tags for a resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As DataProtectionBackupPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataProtectionBackupVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release. Please use UpdateAsync(WaitUntil waitUntil, DataProtectionBackupVaultPatch patch, CancellationToken cancellationToken = default) instead.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release. Please use UpdateAsync(WaitUntil waitUntil, DataProtectionBackupVaultPatch patch, CancellationToken cancellationToken = default) instead.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a BackupVault resource belonging to a resource group. For example, updating tags for a resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As DataProtectionBackupVaultPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataProtectionBackupVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;" Usage="dataProtectionBackupVaultResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionBackupVaultPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a BackupVault resource belonging to a resource group. For example, updating tags for a resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}</description></item><item><term>Operation Id</term><description>BackupVaults_Update</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateAdhocBackup">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt; ValidateAdhocBackup (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt; ValidateAdhocBackup(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.ValidateAdhocBackup(Azure.WaitUntil,Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateAdhocBackup (waitUntil As WaitUntil, content As AdhocBackupValidateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataProtectionOperationJobExtendedInfo)" />
      <MemberSignature Language="F#" Value="abstract member ValidateAdhocBackup : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&#xA;override this.ValidateAdhocBackup : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;" Usage="dataProtectionBackupVaultResource.ValidateAdhocBackup (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Validate whether adhoc backup will be successful or not
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/validateForBackup</description></item><item><term>Operation Id</term><description>BackupInstances_ValidateForBackup</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateAdhocBackupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt; ValidateAdhocBackupAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt; ValidateAdhocBackupAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataProtectionBackup.DataProtectionBackupVaultResource.ValidateAdhocBackupAsync(Azure.WaitUntil,Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateAdhocBackupAsync (waitUntil As WaitUntil, content As AdhocBackupValidateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataProtectionOperationJobExtendedInfo))" />
      <MemberSignature Language="F#" Value="abstract member ValidateAdhocBackupAsync : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;&#xA;override this.ValidateAdhocBackupAsync : Azure.WaitUntil * Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;" Usage="dataProtectionBackupVaultResource.ValidateAdhocBackupAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataProtectionBackup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataProtectionBackup.Models.DataProtectionOperationJobExtendedInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataProtectionBackup.Models.AdhocBackupValidateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request body for operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Validate whether adhoc backup will be successful or not
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/validateForBackup</description></item><item><term>Operation Id</term><description>BackupInstances_ValidateForBackup</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
