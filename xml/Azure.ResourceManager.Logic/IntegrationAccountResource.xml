<Type Name="IntegrationAccountResource" FullName="Azure.ResourceManager.Logic.IntegrationAccountResource">
  <TypeSignature Language="C#" Value="public class IntegrationAccountResource : Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegrationAccountResource extends Azure.ResourceManager.ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Logic.IntegrationAccountResource" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegrationAccountResource&#xA;Inherits ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type IntegrationAccountResource = class&#xA;    inherit ArmResource" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class IntegrationAccountResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegrationAccountResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegrationAccountResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of IntegrationAccountData), IPersistableModel(Of IntegrationAccountData)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type IntegrationAccountResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;IntegrationAccountData&gt;&#xA;    interface IPersistableModel&lt;IntegrationAccountData&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing an IntegrationAccount along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetIntegrationAccountResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetIntegrationAccount method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IntegrationAccountResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="integrationAccountResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;" Usage="integrationAccountResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string integrationAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string integrationAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, integrationAccountName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Logic.IntegrationAccountResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, integrationAccountName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="integrationAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="integrationAccountName"> The integrationAccountName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Logic.IntegrationAccountData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.IntegrationAccountResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IntegrationAccountData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Logic.IntegrationAccountData" Usage="Azure.ResourceManager.Logic.IntegrationAccountResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="integrationAccountResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Delete</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="integrationAccountResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Delete</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="integrationAccountResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;" Usage="integrationAccountResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackUrl">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt; GetCallbackUrl (Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo info, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt; GetCallbackUrl(class Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo info, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetCallbackUrl(Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCallbackUrl (info As ListOperationCallbackUrlParameterInfo, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ListOperationCallbackUri)" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackUrl : Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;&#xA;override this.GetCallbackUrl : Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;" Usage="integrationAccountResource.GetCallbackUrl (info, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="info"> The callback URL parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the integration account callback URL.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listCallbackUrl</description></item><item><term>Operation Id</term><description>IntegrationAccounts_ListCallbackUrl</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackUrlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;&gt; GetCallbackUrlAsync (Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo info, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;&gt; GetCallbackUrlAsync(class Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo info, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetCallbackUrlAsync(Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCallbackUrlAsync (info As ListOperationCallbackUrlParameterInfo, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ListOperationCallbackUri))" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackUrlAsync : Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;&gt;&#xA;override this.GetCallbackUrlAsync : Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;&gt;" Usage="integrationAccountResource.GetCallbackUrlAsync (info, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.Models.ListOperationCallbackUri&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Azure.ResourceManager.Logic.Models.ListOperationCallbackUrlParameterInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="info"> The callback URL parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the integration account callback URL.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listCallbackUrl</description></item><item><term>Operation Id</term><description>IntegrationAccounts_ListCallbackUrl</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAgreement">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt; GetIntegrationAccountAgreement (string agreementName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt; GetIntegrationAccountAgreement(string agreementName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountAgreement(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountAgreement (agreementName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountAgreementResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountAgreement : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;&#xA;override this.GetIntegrationAccountAgreement : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountAgreement (agreementName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agreementName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="agreementName"> The integration account agreement name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account agreement.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}</description></item><item><term>Operation Id</term><description>IntegrationAccountAgreements_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountAgreementResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="agreementName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="agreementName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAgreementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;&gt; GetIntegrationAccountAgreementAsync (string agreementName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;&gt; GetIntegrationAccountAgreementAsync(string agreementName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountAgreementAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountAgreementAsync (agreementName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountAgreementResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountAgreementAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;&gt;&#xA;override this.GetIntegrationAccountAgreementAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountAgreementAsync (agreementName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAgreementResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agreementName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="agreementName"> The integration account agreement name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account agreement.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}</description></item><item><term>Operation Id</term><description>IntegrationAccountAgreements_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountAgreementResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="agreementName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="agreementName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAgreements">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountAgreementCollection GetIntegrationAccountAgreements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountAgreementCollection GetIntegrationAccountAgreements() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountAgreements" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountAgreements () As IntegrationAccountAgreementCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountAgreements : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountAgreementCollection&#xA;override this.GetIntegrationAccountAgreements : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountAgreementCollection" Usage="integrationAccountResource.GetIntegrationAccountAgreements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountAgreementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountAgreementResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountAgreementResources and their operations over a IntegrationAccountAgreementResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAssemblyDefinition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt; GetIntegrationAccountAssemblyDefinition (string assemblyArtifactName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt; GetIntegrationAccountAssemblyDefinition(string assemblyArtifactName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountAssemblyDefinition(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountAssemblyDefinition (assemblyArtifactName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountAssemblyDefinitionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountAssemblyDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;&#xA;override this.GetIntegrationAccountAssemblyDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountAssemblyDefinition (assemblyArtifactName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyArtifactName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assemblyArtifactName"> The assembly artifact name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an assembly for an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}</description></item><item><term>Operation Id</term><description>IntegrationAccountAssemblies_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyArtifactName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyArtifactName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAssemblyDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;&gt; GetIntegrationAccountAssemblyDefinitionAsync (string assemblyArtifactName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;&gt; GetIntegrationAccountAssemblyDefinitionAsync(string assemblyArtifactName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountAssemblyDefinitionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountAssemblyDefinitionAsync (assemblyArtifactName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountAssemblyDefinitionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountAssemblyDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;&gt;&#xA;override this.GetIntegrationAccountAssemblyDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountAssemblyDefinitionAsync (assemblyArtifactName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyArtifactName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assemblyArtifactName"> The assembly artifact name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an assembly for an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}</description></item><item><term>Operation Id</term><description>IntegrationAccountAssemblies_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyArtifactName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyArtifactName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAssemblyDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionCollection GetIntegrationAccountAssemblyDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionCollection GetIntegrationAccountAssemblyDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountAssemblyDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountAssemblyDefinitions () As IntegrationAccountAssemblyDefinitionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountAssemblyDefinitions : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionCollection&#xA;override this.GetIntegrationAccountAssemblyDefinitions : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionCollection" Usage="integrationAccountResource.GetIntegrationAccountAssemblyDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountAssemblyDefinitionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountAssemblyDefinitionResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountAssemblyDefinitionResources and their operations over a IntegrationAccountAssemblyDefinitionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountBatchConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt; GetIntegrationAccountBatchConfiguration (string batchConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt; GetIntegrationAccountBatchConfiguration(string batchConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountBatchConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountBatchConfiguration (batchConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountBatchConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountBatchConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;&#xA;override this.GetIntegrationAccountBatchConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountBatchConfiguration (batchConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batchConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batchConfigurationName"> The batch configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a batch configuration for an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations/{batchConfigurationName}</description></item><item><term>Operation Id</term><description>IntegrationAccountBatchConfigurations_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="batchConfigurationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="batchConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountBatchConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;&gt; GetIntegrationAccountBatchConfigurationAsync (string batchConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;&gt; GetIntegrationAccountBatchConfigurationAsync(string batchConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountBatchConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountBatchConfigurationAsync (batchConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountBatchConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountBatchConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;&gt;&#xA;override this.GetIntegrationAccountBatchConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountBatchConfigurationAsync (batchConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batchConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batchConfigurationName"> The batch configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a batch configuration for an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations/{batchConfigurationName}</description></item><item><term>Operation Id</term><description>IntegrationAccountBatchConfigurations_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="batchConfigurationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="batchConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountBatchConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationCollection GetIntegrationAccountBatchConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationCollection GetIntegrationAccountBatchConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountBatchConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountBatchConfigurations () As IntegrationAccountBatchConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountBatchConfigurations : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationCollection&#xA;override this.GetIntegrationAccountBatchConfigurations : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationCollection" Usage="integrationAccountResource.GetIntegrationAccountBatchConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountBatchConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountBatchConfigurationResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountBatchConfigurationResources and their operations over a IntegrationAccountBatchConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt; GetIntegrationAccountCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt; GetIntegrationAccountCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountCertificate (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountCertificateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;&#xA;override this.GetIntegrationAccountCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The integration account certificate name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account certificate.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}</description></item><item><term>Operation Id</term><description>IntegrationAccountCertificates_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountCertificateResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;&gt; GetIntegrationAccountCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;&gt; GetIntegrationAccountCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountCertificateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;&gt;&#xA;override this.GetIntegrationAccountCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountCertificateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The integration account certificate name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account certificate.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}</description></item><item><term>Operation Id</term><description>IntegrationAccountCertificates_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountCertificateResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountCertificateCollection GetIntegrationAccountCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountCertificateCollection GetIntegrationAccountCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountCertificates () As IntegrationAccountCertificateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountCertificates : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountCertificateCollection&#xA;override this.GetIntegrationAccountCertificates : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountCertificateCollection" Usage="integrationAccountResource.GetIntegrationAccountCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountCertificateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountCertificateResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountCertificateResources and their operations over a IntegrationAccountCertificateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt; GetIntegrationAccountMap (string mapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt; GetIntegrationAccountMap(string mapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountMap(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountMap (mapName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountMapResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountMap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;&#xA;override this.GetIntegrationAccountMap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountMap (mapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mapName"> The integration account map name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account map.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}</description></item><item><term>Operation Id</term><description>IntegrationAccountMaps_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountMapResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mapName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mapName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;&gt; GetIntegrationAccountMapAsync (string mapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;&gt; GetIntegrationAccountMapAsync(string mapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountMapAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountMapAsync (mapName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountMapResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountMapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;&gt;&#xA;override this.GetIntegrationAccountMapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountMapAsync (mapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountMapResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mapName"> The integration account map name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account map.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}</description></item><item><term>Operation Id</term><description>IntegrationAccountMaps_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountMapResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mapName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mapName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountMaps">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountMapCollection GetIntegrationAccountMaps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountMapCollection GetIntegrationAccountMaps() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountMaps" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountMaps () As IntegrationAccountMapCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountMaps : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountMapCollection&#xA;override this.GetIntegrationAccountMaps : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountMapCollection" Usage="integrationAccountResource.GetIntegrationAccountMaps " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountMapCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountMapResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountMapResources and their operations over a IntegrationAccountMapResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountPartner">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt; GetIntegrationAccountPartner (string partnerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt; GetIntegrationAccountPartner(string partnerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountPartner(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountPartner (partnerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountPartnerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountPartner : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;&#xA;override this.GetIntegrationAccountPartner : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountPartner (partnerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partnerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partnerName"> The integration account partner name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account partner.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}</description></item><item><term>Operation Id</term><description>IntegrationAccountPartners_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountPartnerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountPartnerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;&gt; GetIntegrationAccountPartnerAsync (string partnerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;&gt; GetIntegrationAccountPartnerAsync(string partnerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountPartnerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountPartnerAsync (partnerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountPartnerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountPartnerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;&gt;&#xA;override this.GetIntegrationAccountPartnerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountPartnerAsync (partnerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountPartnerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partnerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partnerName"> The integration account partner name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account partner.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}</description></item><item><term>Operation Id</term><description>IntegrationAccountPartners_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountPartnerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partnerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partnerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountPartners">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountPartnerCollection GetIntegrationAccountPartners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountPartnerCollection GetIntegrationAccountPartners() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountPartners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountPartners () As IntegrationAccountPartnerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountPartners : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountPartnerCollection&#xA;override this.GetIntegrationAccountPartners : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountPartnerCollection" Usage="integrationAccountResource.GetIntegrationAccountPartners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountPartnerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountPartnerResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountPartnerResources and their operations over a IntegrationAccountPartnerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSchema">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt; GetIntegrationAccountSchema (string schemaName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt; GetIntegrationAccountSchema(string schemaName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountSchema(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountSchema (schemaName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountSchemaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountSchema : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;&#xA;override this.GetIntegrationAccountSchema : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountSchema (schemaName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="schemaName"> The integration account schema name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account schema.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}</description></item><item><term>Operation Id</term><description>IntegrationAccountSchemas_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSchemaResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSchemaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;&gt; GetIntegrationAccountSchemaAsync (string schemaName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;&gt; GetIntegrationAccountSchemaAsync(string schemaName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountSchemaAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountSchemaAsync (schemaName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountSchemaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountSchemaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;&gt;&#xA;override this.GetIntegrationAccountSchemaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountSchemaAsync (schemaName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSchemaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="schemaName"> The integration account schema name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account schema.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}</description></item><item><term>Operation Id</term><description>IntegrationAccountSchemas_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSchemaResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSchemas">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountSchemaCollection GetIntegrationAccountSchemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountSchemaCollection GetIntegrationAccountSchemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountSchemas" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountSchemas () As IntegrationAccountSchemaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountSchemas : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountSchemaCollection&#xA;override this.GetIntegrationAccountSchemas : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountSchemaCollection" Usage="integrationAccountResource.GetIntegrationAccountSchemas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountSchemaCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountSchemaResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountSchemaResources and their operations over a IntegrationAccountSchemaResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSession">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt; GetIntegrationAccountSession (string sessionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt; GetIntegrationAccountSession(string sessionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountSession(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountSession (sessionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountSessionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountSession : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;&#xA;override this.GetIntegrationAccountSession : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;" Usage="integrationAccountResource.GetIntegrationAccountSession (sessionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionName"> The integration account session name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions/{sessionName}</description></item><item><term>Operation Id</term><description>IntegrationAccountSessions_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSessionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sessionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;&gt; GetIntegrationAccountSessionAsync (string sessionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;&gt; GetIntegrationAccountSessionAsync(string sessionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountSessionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountSessionAsync (sessionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountSessionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountSessionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;&gt;&#xA;override this.GetIntegrationAccountSessionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;&gt;" Usage="integrationAccountResource.GetIntegrationAccountSessionAsync (sessionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountSessionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionName"> The integration account session name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account session.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions/{sessionName}</description></item><item><term>Operation Id</term><description>IntegrationAccountSessions_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSessionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sessionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSessions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Logic.IntegrationAccountSessionCollection GetIntegrationAccountSessions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountSessionCollection GetIntegrationAccountSessions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetIntegrationAccountSessions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIntegrationAccountSessions () As IntegrationAccountSessionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIntegrationAccountSessions : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountSessionCollection&#xA;override this.GetIntegrationAccountSessions : unit -&gt; Azure.ResourceManager.Logic.IntegrationAccountSessionCollection" Usage="integrationAccountResource.GetIntegrationAccountSessions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountSessionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IntegrationAccountSessionResources in the IntegrationAccount. </summary>
        <returns> An object representing collection of IntegrationAccountSessionResources and their operations over a IntegrationAccountSessionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt; GetKeyVaultKeys (Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt; GetKeyVaultKeys(class Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetKeyVaultKeys(Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaultKeys (content As IntegrationAccountListKeyVaultKeyContent, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IntegrationAccountKeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaultKeys : Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt;&#xA;override this.GetKeyVaultKeys : Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt;" Usage="integrationAccountResource.GetKeyVaultKeys (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The key vault parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the integration account's Key Vault keys.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listKeyVaultKeys</description></item><item><term>Operation Id</term><description>IntegrationAccounts_ListKeyVaultKeys</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt; GetKeyVaultKeysAsync (Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt; GetKeyVaultKeysAsync(class Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.GetKeyVaultKeysAsync(Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaultKeysAsync (content As IntegrationAccountListKeyVaultKeyContent, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IntegrationAccountKeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaultKeysAsync : Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt;&#xA;override this.GetKeyVaultKeysAsync : Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt;" Usage="integrationAccountResource.GetKeyVaultKeysAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Logic.Models.IntegrationAccountListKeyVaultKeyContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The key vault parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the integration account's Key Vault keys.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listKeyVaultKeys</description></item><item><term>Operation Id</term><description>IntegrationAccounts_ListKeyVaultKeys</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Logic.Models.IntegrationAccountKeyVaultKey" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.IntegrationAccountResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Logic.IntegrationAccountResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTrackingEvents">
      <MemberSignature Language="C#" Value="public virtual Azure.Response LogTrackingEvents (Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response LogTrackingEvents(class Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.LogTrackingEvents(Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LogTrackingEvents (content As IntegrationAccountTrackingEventsContent, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member LogTrackingEvents : Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.LogTrackingEvents : Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent * System.Threading.CancellationToken -&gt; Azure.Response" Usage="integrationAccountResource.LogTrackingEvents (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The callback URL parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Logs the integration account's tracking events.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/logTrackingEvents</description></item><item><term>Operation Id</term><description>IntegrationAccounts_LogTrackingEvents</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LogTrackingEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; LogTrackingEventsAsync (Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; LogTrackingEventsAsync(class Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.LogTrackingEventsAsync(Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LogTrackingEventsAsync (content As IntegrationAccountTrackingEventsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member LogTrackingEventsAsync : Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.LogTrackingEventsAsync : Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="integrationAccountResource.LogTrackingEventsAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Logic.Models.IntegrationAccountTrackingEventsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The callback URL parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Logs the integration account's tracking events.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/logTrackingEvents</description></item><item><term>Operation Id</term><description>IntegrationAccounts_LogTrackingEvents</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAccessKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; RegenerateAccessKey (Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; RegenerateAccessKey(class Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.RegenerateAccessKey(Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateAccessKey (content As LogicWorkflowRegenerateActionContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAccessKey : Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&#xA;override this.RegenerateAccessKey : Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="integrationAccountResource.RegenerateAccessKey (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The access key type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerates the integration account access key.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/regenerateAccessKey</description></item><item><term>Operation Id</term><description>IntegrationAccounts_RegenerateAccessKey</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAccessKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; RegenerateAccessKeyAsync (Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; RegenerateAccessKeyAsync(class Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.RegenerateAccessKeyAsync(Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateAccessKeyAsync (content As LogicWorkflowRegenerateActionContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAccessKeyAsync : Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;&#xA;override this.RegenerateAccessKeyAsync : Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;" Usage="integrationAccountResource.RegenerateAccessKeyAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Logic.Models.LogicWorkflowRegenerateActionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The access key type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerates the integration account access key.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/regenerateAccessKey</description></item><item><term>Operation Id</term><description>IntegrationAccounts_RegenerateAccessKey</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="integrationAccountResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;" Usage="integrationAccountResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Logic.IntegrationAccountResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Logic.IntegrationAccountResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="integrationAccountResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;" Usage="integrationAccountResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Get</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Logic.IntegrationAccountData IJsonModel&lt;IntegrationAccountData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Logic#IntegrationAccountData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As IntegrationAccountData Implements IJsonModel(Of IntegrationAccountData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.IntegrationAccountData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.IntegrationAccountData" Usage="integrationAccountResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;IntegrationAccountData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Logic#IntegrationAccountData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of IntegrationAccountData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="integrationAccountResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Logic.IntegrationAccountData IPersistableModel&lt;IntegrationAccountData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Logic.IntegrationAccountData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#IntegrationAccountData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As IntegrationAccountData Implements IPersistableModel(Of IntegrationAccountData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.IntegrationAccountData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.IntegrationAccountData" Usage="integrationAccountResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;IntegrationAccountData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#IntegrationAccountData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of IntegrationAccountData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="integrationAccountResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;IntegrationAccountData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#IntegrationAccountData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of IntegrationAccountData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="integrationAccountResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.IntegrationAccountData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; Update (Azure.ResourceManager.Logic.IntegrationAccountData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; Update(class Azure.ResourceManager.Logic.IntegrationAccountData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.Update(Azure.ResourceManager.Logic.IntegrationAccountData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (data As IntegrationAccountData, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.Logic.IntegrationAccountData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&#xA;override this.Update : Azure.ResourceManager.Logic.IntegrationAccountData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="integrationAccountResource.Update (data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Azure.ResourceManager.Logic.IntegrationAccountData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="data"> The integration account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Update</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; UpdateAsync (Azure.ResourceManager.Logic.IntegrationAccountData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.Logic.IntegrationAccountData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.IntegrationAccountResource.UpdateAsync(Azure.ResourceManager.Logic.IntegrationAccountData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (data As IntegrationAccountData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.Logic.IntegrationAccountData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.Logic.IntegrationAccountData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;" Usage="integrationAccountResource.UpdateAsync (data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Azure.ResourceManager.Logic.IntegrationAccountData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="data"> The integration account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an integration account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}</description></item><item><term>Operation Id</term><description>IntegrationAccounts_Update</description></item><item><term>Default Api Version</term><description>2019-05-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
