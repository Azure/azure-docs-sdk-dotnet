<Type Name="ActorNameFormat" FullName="Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat">
  <TypeSignature Language="C#" Value="public static class ActorNameFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ActorNameFormat extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains static methods for generating names like service name, application name form the actor interface type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCodePackageName">
      <MemberSignature Language="C#" Value="public static string GetCodePackageName (Type actorImplementationType = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCodePackageName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets the code package name used in service package for the actor.
            </summary>
        <returns>code package name.</returns>
        <remarks>Code package name can be accessed from within a service as <see cref="P:System.Fabric.CodePackageActivationContext.CodePackageName" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigPackageName">
      <MemberSignature Language="C#" Value="public static string GetConfigPackageName (Type actorImplementationType = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetConfigPackageName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets the configuration package name used in service package for the actor.
            </summary>
        <returns>configuration package name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricApplicationName">
      <MemberSignature Language="C#" Value="public static string GetFabricApplicationName (string appPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricApplicationName(string appPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appPrefix">Prefix to be used for the application name.</param>
        <summary>
            Gets the application name used to create application in Service Fabric cluster.
            </summary>
        <returns>Application name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricApplicationPackageName">
      <MemberSignature Language="C#" Value="public static string GetFabricApplicationPackageName (string appPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricApplicationPackageName(string appPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appPrefix">Prefix to be used for the application package name.</param>
        <summary>
            Gets package name used to create Service Fabric Application package for the actor.
            </summary>
        <returns>Application package name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricApplicationTypeName">
      <MemberSignature Language="C#" Value="public static string GetFabricApplicationTypeName (string appPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricApplicationTypeName(string appPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appPrefix">Prefix to be used for the application type name.</param>
        <summary>
            Gets the application type name used in application manifest when creating Service Fabric Application package for the actor.
            </summary>
        <returns>Application type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceEndpointName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceEndpointName (Type actorImplementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceEndpointName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets the service endpoint for the actor type which is specified in service manifest for the actor service.
            </summary>
        <returns>Service endpoint name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceName (Type actorInterfaceType, string serviceName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceName(class System.Type actorInterfaceType, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName(System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorInterfaceType" Type="System.Type" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actorInterfaceType">Type of the actor interface.</param>
        <param name="serviceName">Name of service hosting the actor type. If this value is null then
            service name is constructed using the actorInterfaceType.</param>
        <summary>
            Gets name of service which hosts the actor type in Service Fabric cluster.
            </summary>
        <returns>Service Fabric service name hosting the actor type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServicePackageName">
      <MemberSignature Language="C#" Value="public static string GetFabricServicePackageName (string servicePackageNamePrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServicePackageName(string servicePackageNamePrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicePackageNamePrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="servicePackageNamePrefix">Prefix to be used for the service package name.</param>
        <summary>
            Gets service package name which is used in Service Fabric Application package for the actor.
            </summary>
        <returns>Service package name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceReplicatorConfigSectionName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceReplicatorConfigSectionName (Type actorImplementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceReplicatorConfigSectionName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets the replicator configuration section name specified in configuration package for the actor service.
            </summary>
        <returns>Replicator configuration section name.</returns>
        <remarks>Values specified in replicator configuration section are used to configure <see cref="T:System.Fabric.ReplicatorSettings" />
            for the replication of actor state between primary and secondary replicas.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceReplicatorEndpointName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceReplicatorEndpointName (Type actorImplementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceReplicatorEndpointName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets the replicator endpoint which is specified in service manifest for the actor service.
            </summary>
        <returns>Service replicator endpoint name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceReplicatorSecurityConfigSectionName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceReplicatorSecurityConfigSectionName (Type actorImplementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceReplicatorSecurityConfigSectionName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets the replicator security configuration section name specified in configuration package for the actor service.
            </summary>
        <returns>Replicator security configuration section name.</returns>
        <remarks>Values specified in replicator security configuration section are used to configure <see cref="P:System.Fabric.ReplicatorSettings.SecurityCredentials" />
            for the replication of actor state between primary and secondary replicas.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceReplicatorSecurityCredentialTypeName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceReplicatorSecurityCredentialTypeName (Type actorImplementationType = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceReplicatorSecurityCredentialTypeName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets the credential type name used in replicator security configuration section in configuration package for the actor service.
            </summary>
        <returns>Replicator security credential type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceTransportSettingsSectionName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceTransportSettingsSectionName (Type actorImplementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceTransportSettingsSectionName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
             Gets the fabrictransport configuration section name specified in configuration package for the actor service.
             </summary>
        <returns>FabricTransport configuration section name.</returns>
        <remarks>Values specified in FabricTransport configuration section are used to configure <see cref="T:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportRemotingListenerSettings" />
             for the communication.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceTypeName">
      <MemberSignature Language="C#" Value="public static string GetFabricServiceTypeName (Type actorImplementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFabricServiceTypeName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Actor implementation type.</param>
        <summary>
            Gets service type name for the actor.
            </summary>
        <returns>Service type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceUri">
      <MemberSignature Language="C#" Value="public static Uri GetFabricServiceUri (Type actorInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetFabricServiceUri(class System.Type actorInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorInterfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorInterfaceType">Type of the actor interface.</param>
        <summary>
            Gets service Uri which hosts the actor type in Service Fabric cluster.
            </summary>
        <returns>Service Fabric service Uri hosting the actor type.</returns>
        <remarks>Method will try to get application name from <see cref="T:System.Fabric.CodePackageActivationContext" />.
            If the method still cannot determine application name, <see cref="T:System.ArgumentException" /> is thrown. </remarks>
        <exception cref="T:System.ArgumentException">
            When application name cannot be determined using <see cref="T:System.Fabric.CodePackageActivationContext" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceUri">
      <MemberSignature Language="C#" Value="public static Uri GetFabricServiceUri (Type actorInterfaceType, Uri applicationUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetFabricServiceUri(class System.Type actorInterfaceType, class System.Uri applicationUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorInterfaceType" Type="System.Type" />
        <Parameter Name="applicationUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="actorInterfaceType">Type of the actor interface.</param>
        <param name="applicationUri">Service Fabric application Uri containing the actor service.
            If this value is null application name is obtained from <see cref="P:System.Fabric.CodePackageActivationContext.ApplicationName" />.</param>
        <summary>
            Gets service Uri which hosts the actor type in Service Fabric cluster.
            </summary>
        <returns>Service Fabric service Uri hosting the actor type.</returns>
        <remarks>Method will create service name using the actorInterfaceType. If applicationUri is passed as null, an attempt is made to get application name from
            <see cref="T:System.Fabric.CodePackageActivationContext" />. If the method still cannot determine application name,
            <see cref="T:System.ArgumentException" /> is thrown. </remarks>
        <exception cref="T:System.ArgumentException">
            When application name cannot be determined using <see cref="T:System.Fabric.CodePackageActivationContext" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceUri">
      <MemberSignature Language="C#" Value="public static Uri GetFabricServiceUri (Type actorInterfaceType, string applicationName = null, string serviceName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetFabricServiceUri(class System.Type actorInterfaceType, string applicationName, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorInterfaceType" Type="System.Type" />
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actorInterfaceType">Type of the actor interface.</param>
        <param name="applicationName">Service Fabric application name containing the actor service.
            If this value is null application name is obtained from <see cref="P:System.Fabric.CodePackageActivationContext.ApplicationName" />.</param>
        <param name="serviceName">Name of service hosting the actor type. If this value is null then
            service name is constructed using the actorInterfaceType.</param>
        <summary>
            Gets service Uri which hosts the actor type in Service Fabric cluster.
            </summary>
        <returns>Service Fabric service Uri hosting the actor type.</returns>
        <remarks>If applicationName is passed as null or empty string, an attempt is made to get application name from
            <see cref="T:System.Fabric.CodePackageActivationContext" />. If the method still cannot determine application name,
            <see cref="T:System.ArgumentException" /> is thrown. </remarks>
        <exception cref="T:System.ArgumentException">
            When applicationName cannot be determined using <see cref="T:System.Fabric.CodePackageActivationContext" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFabricServiceUri">
      <MemberSignature Language="C#" Value="public static Uri GetFabricServiceUri (Type actorInterfaceType, Uri applicationUri, string serviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetFabricServiceUri(class System.Type actorInterfaceType, class System.Uri applicationUri, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorInterfaceType" Type="System.Type" />
        <Parameter Name="applicationUri" Type="System.Uri" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actorInterfaceType">Type of the actor interface.</param>
        <param name="applicationUri">Service Fabric application Uri containing the actor service.
            If this value is null application name is obtained from <see cref="P:System.Fabric.CodePackageActivationContext.ApplicationName" />.</param>
        <param name="serviceName">Name of service hosting the actor type. If this value is null then
            service name is constructed using the actorInterfaceType.</param>
        <summary>
            Gets service Uri which hosts the actor type in Service Fabric cluster.
            </summary>
        <returns>Service Fabric service Uri hosting the actor type.</returns>
        <remarks>If applicationUri is passed as null, an attempt is made to get application name from
            <see cref="T:System.Fabric.CodePackageActivationContext" />. If the method still cannot determine application name,
            <see cref="T:System.ArgumentException" /> is thrown. </remarks>
        <exception cref="T:System.ArgumentException">
            When application name cannot be determined using <see cref="T:System.Fabric.CodePackageActivationContext" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalEseStoreConfigSectionName">
      <MemberSignature Language="C#" Value="public static string GetLocalEseStoreConfigSectionName (Type actorImplementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalEseStoreConfigSectionName(class System.Type actorImplementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorImplementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorImplementationType">Type of class implementing the actor.</param>
        <summary>
            Gets local store configuration section name specified in configuration package for the actor service. 
            </summary>
        <returns>Local store configuration section name.</returns>
        <remarks>Values specified in local ESE configuration section are used to configure <see cref="T:System.Fabric.LocalEseStoreSettings" />
            for storing the state of actor.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type actorInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type actorInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorInterfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="actorInterfaceType">Type of the actor interface.</param>
        <summary>
            Gets name of Actor from actorInterfaceType.
            </summary>
        <returns>Name of Actor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>