<Type Name="DedicatedCircuitPeeringRouteTableInfoOperationsExtensions" FullName="Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class DedicatedCircuitPeeringRouteTableInfoOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DedicatedCircuitPeeringRouteTableInfoOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DedicatedCircuitPeeringRouteTableInfoOperationsExtensions" />
  <TypeSignature Language="F#" Value="type DedicatedCircuitPeeringRouteTableInfoOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Express Route API provides programmatic access to the functionality
            needed by the customer to set up Dedicated Circuits and Dedicated
            Circuit Links. The Express Route Customer API is a REST API. All API
            operations are performed over SSL and mutually authenticated using
            X.509 v3 certificates.  (see
            http://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for
            more information)
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGet">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse BeginGet (this Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse BeginGet(class Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.BeginGet(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginGet (operations As IDedicatedCircuitPeeringRouteTableInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As ExpressRouteOperationResponse" />
      <MemberSignature Language="F#" Value="static member BeginGet : Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations * string * Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType * Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath -&gt; Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse" Usage="Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.BeginGet (operations, serviceKey, accessType, devicePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations" RefType="this" />
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="accessType" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType" />
        <Parameter Name="devicePath" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath" />
      </Parameters>
      <Docs>
        <param name="operations">
            Reference to the
            Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations.
            </param>
        <param name="serviceKey">
            Required. The service key representing the circuit.
            </param>
        <param name="accessType">
            Required. Whether the peering is private or public or microsoft.
            </param>
        <param name="devicePath">
            Required. Whether the device is primary or secondary.
            </param>
        <summary>
            The Get DedicatedCircuitPeeringRouteTableInfo operation retrives
            RouteTable.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginGetAsync (this Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginGetAsync(class Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.BeginGetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginGetAsync (operations As IDedicatedCircuitPeeringRouteTableInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As Task(Of ExpressRouteOperationResponse)" />
      <MemberSignature Language="F#" Value="static member BeginGetAsync : Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations * string * Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType * Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;" Usage="Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.BeginGetAsync (operations, serviceKey, accessType, devicePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations" RefType="this" />
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="accessType" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType" />
        <Parameter Name="devicePath" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath" />
      </Parameters>
      <Docs>
        <param name="operations">
            Reference to the
            Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations.
            </param>
        <param name="serviceKey">
            Required. The service key representing the circuit.
            </param>
        <param name="accessType">
            Required. Whether the peering is private or public or microsoft.
            </param>
        <param name="devicePath">
            Required. Whether the device is primary or secondary.
            </param>
        <summary>
            The Get DedicatedCircuitPeeringRouteTableInfo operation retrives
            RouteTable.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse Get (this Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse Get(class Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get (operations As IDedicatedCircuitPeeringRouteTableInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As ExpressRouteOperationStatusResponse" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations * string * Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType * Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath -&gt; Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse" Usage="Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.Get (operations, serviceKey, accessType, devicePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations" RefType="this" />
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="accessType" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType" />
        <Parameter Name="devicePath" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath" />
      </Parameters>
      <Docs>
        <param name="operations">
            Reference to the
            Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations.
            </param>
        <param name="serviceKey">
            Required. The service key representing the circuit.
            </param>
        <param name="accessType">
            Required. Whether the peering is private or public or microsoft.
            </param>
        <param name="devicePath">
            Required. Whether the device is primary or secondary.
            </param>
        <summary>
            The Get DedicatedCircuitPeeringRouteTableInfo operation retrives
            RouteTable.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetAsync (this Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetAsync(class Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string serviceKey, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAsync (operations As IDedicatedCircuitPeeringRouteTableInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As Task(Of ExpressRouteOperationStatusResponse)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations * string * Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType * Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;" Usage="Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.GetAsync (operations, serviceKey, accessType, devicePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations" RefType="this" />
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="accessType" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType" />
        <Parameter Name="devicePath" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath" />
      </Parameters>
      <Docs>
        <param name="operations">
            Reference to the
            Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations.
            </param>
        <param name="serviceKey">
            Required. The service key representing the circuit.
            </param>
        <param name="accessType">
            Required. Whether the peering is private or public or microsoft.
            </param>
        <param name="devicePath">
            Required. Whether the device is primary or secondary.
            </param>
        <summary>
            The Get DedicatedCircuitPeeringRouteTableInfo operation retrives
            RouteTable.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationStatus">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse GetOperationStatus (this Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string operationId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse GetOperationStatus(class Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string operationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOperationStatus (operations As IDedicatedCircuitPeeringRouteTableInfoOperations, operationId As String) As ExpressRouteOperationStatusResponse" />
      <MemberSignature Language="F#" Value="static member GetOperationStatus : Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations * string -&gt; Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse" Usage="Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.GetOperationStatus (operations, operationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations" RefType="this" />
        <Parameter Name="operationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            Reference to the
            Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations.
            </param>
        <param name="operationId">
            Required. The id  of the operation.
            </param>
        <summary>
            The Get Express Route operation status gets information on the
            status of Express Route operations in Windows Azure.  (see
            http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
            for more information)
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetOperationStatusAsync (this Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string operationId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetOperationStatusAsync(class Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations operations, string operationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOperationStatusAsync (operations As IDedicatedCircuitPeeringRouteTableInfoOperations, operationId As String) As Task(Of ExpressRouteOperationStatusResponse)" />
      <MemberSignature Language="F#" Value="static member GetOperationStatusAsync : Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;" Usage="Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringRouteTableInfoOperationsExtensions.GetOperationStatusAsync (operations, operationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations" RefType="this" />
        <Parameter Name="operationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            Reference to the
            Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableInfoOperations.
            </param>
        <param name="operationId">
            Required. The id  of the operation.
            </param>
        <summary>
            The Get Express Route operation status gets information on the
            status of Express Route operations in Windows Azure.  (see
            http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
            for more information)
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
