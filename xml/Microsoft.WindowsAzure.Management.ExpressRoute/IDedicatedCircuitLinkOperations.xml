<Type Name="IDedicatedCircuitLinkOperations" FullName="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations">
  <TypeSignature Language="C#" Value="public interface IDedicatedCircuitLinkOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDedicatedCircuitLinkOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDedicatedCircuitLinkOperations" />
  <TypeSignature Language="F#" Value="type IDedicatedCircuitLinkOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginNewAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginNewAsync (string serviceKey, string vnetName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginNewAsync(string serviceKey, string vnetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.BeginNewAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginNewAsync (serviceKey As String, vnetName As String, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member BeginNewAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;" Usage="iDedicatedCircuitLinkOperations.BeginNewAsync (serviceKey, vnetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="vnetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceKey">To be added.</param>
        <param name="vnetName">To be added.</param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The New Dedicated Circuit Link operation creates a new dedicated
            circuit link.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRemoveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginRemoveAsync (string serviceKey, string vnetName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginRemoveAsync(string serviceKey, string vnetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.BeginRemoveAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRemoveAsync (serviceKey As String, vnetName As String, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member BeginRemoveAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;" Usage="iDedicatedCircuitLinkOperations.BeginRemoveAsync (serviceKey, vnetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="vnetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vnetName">To be added.</param>
        <param name="serviceKey">
            Service key representing the dedicated circuit.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The Remove Dedicated Circuit Link operation deletes an existing
            dedicated circuit link.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse&gt; GetAsync (string serviceKey, string vnetName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse&gt; GetAsync(string serviceKey, string vnetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (serviceKey As String, vnetName As String, cancellationToken As CancellationToken) As Task(Of DedicatedCircuitLinkGetResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse&gt;" Usage="iDedicatedCircuitLinkOperations.GetAsync (serviceKey, vnetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="vnetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vnetName">To be added.</param>
        <param name="serviceKey">
            The service key representing the circuit.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The Get Dedicated Circuit Link operation retrieves the specified
            dedicated circuit link.
            </summary>
        <returns>
            The Get Dedicated Circuit Link operation response.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetOperationStatusAsync (string operationId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetOperationStatusAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.GetOperationStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOperationStatusAsync (operationId As String, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetOperationStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;" Usage="iDedicatedCircuitLinkOperations.GetOperationStatusAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId">
            The id  of the operation.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The Get Express Route operation status gets information on the
            status of Express Route operations in Windows Azure.  (see
            http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
            for more information)
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse&gt; ListAsync (string serviceKey, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse&gt; ListAsync(string serviceKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.ListAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListAsync (serviceKey As String, cancellationToken As CancellationToken) As Task(Of DedicatedCircuitLinkListResponse)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse&gt;" Usage="iDedicatedCircuitLinkOperations.ListAsync (serviceKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceKey">To be added.</param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The List Dedicated Circuit Links operation retrieves a list of
            Vnets that are linked to the circuit with the specified service
            key.
            </summary>
        <returns>
            The List Dedicated Circuit Link operation response.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; NewAsync (string serviceKey, string vnetName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; NewAsync(string serviceKey, string vnetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.NewAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function NewAsync (serviceKey As String, vnetName As String, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member NewAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;" Usage="iDedicatedCircuitLinkOperations.NewAsync (serviceKey, vnetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="vnetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceKey">To be added.</param>
        <param name="vnetName">To be added.</param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The New Dedicated Circuit Link operation creates a new dedicated
            circuit link.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; RemoveAsync (string serviceKey, string vnetName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; RemoveAsync(string serviceKey, string vnetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.RemoveAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAsync (serviceKey As String, vnetName As String, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;" Usage="iDedicatedCircuitLinkOperations.RemoveAsync (serviceKey, vnetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="vnetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vnetName">To be added.</param>
        <param name="serviceKey">
            Service Key associated with the dedicated circuit.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The Remove Dedicated Circuit Link operation deletes an existing
            dedicated circuit link.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
