<Type Name="IDedicatedCircuitPeeringRouteTableSummaryOperations" FullName="Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableSummaryOperations">
  <TypeSignature Language="C#" Value="public interface IDedicatedCircuitPeeringRouteTableSummaryOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDedicatedCircuitPeeringRouteTableSummaryOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableSummaryOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDedicatedCircuitPeeringRouteTableSummaryOperations" />
  <TypeSignature Language="F#" Value="type IDedicatedCircuitPeeringRouteTableSummaryOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginGetAsync (string serviceKey, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt; BeginGetAsync(string serviceKey, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableSummaryOperations.BeginGetAsync(System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetAsync (serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member BeginGetAsync : string * Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType * Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;" Usage="iDedicatedCircuitPeeringRouteTableSummaryOperations.BeginGetAsync (serviceKey, accessType, devicePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="accessType" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType" />
        <Parameter Name="devicePath" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceKey">
            The service key representing the circuit.
            </param>
        <param name="accessType">
            Whether the peering is private or public or microsoft.
            </param>
        <param name="devicePath">
            Whether the device is primary or secondary.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The Get DedicatedCircuitPeeringRouteTableSummary operation retrives
            RouteTableSummary.
            </summary>
        <returns>
            A standard service response including an HTTP status code and
            request ID.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetAsync (string serviceKey, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetAsync(string serviceKey, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType accessType, valuetype Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath devicePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableSummaryOperations.GetAsync(System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType * Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;" Usage="iDedicatedCircuitPeeringRouteTableSummaryOperations.GetAsync (serviceKey, accessType, devicePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceKey" Type="System.String" />
        <Parameter Name="accessType" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType" />
        <Parameter Name="devicePath" Type="Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceKey">
            The service key representing the circuit.
            </param>
        <param name="accessType">
            Whether the peering is private or public or microsoft.
            </param>
        <param name="devicePath">
            Whether the device is primary or secondary.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The Get DedicatedCircuitPeeringRouteTableSummary operation retrives
            RouteTableSummary.
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetOperationStatusAsync (string operationId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt; GetOperationStatusAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringRouteTableSummaryOperations.GetOperationStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOperationStatusAsync (operationId As String, cancellationToken As CancellationToken) As Task(Of ExpressRouteOperationStatusResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetOperationStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;" Usage="iDedicatedCircuitPeeringRouteTableSummaryOperations.GetOperationStatusAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Management.ExpressRoute</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId">
            The id  of the operation.
            </param>
        <param name="cancellationToken">
            Cancellation token.
            </param>
        <summary>
            The Get Express Route operation status gets information on the
            status of Express Route operations in Windows Azure.  (see
            http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
            for more information)
            </summary>
        <returns>
            The response body contains the status of the specified asynchronous
            operation, indicating whether it has succeeded, is inprogress, or
            has failed. Note that this status is distinct from the HTTP status
            code returned for the Get Operation Status operation itself.  If
            the asynchronous operation succeeded, the response body includes
            the HTTP status code for the successful request.  If the
            asynchronous operation failed, the response body includes the HTTP
            status code for the failed request, and also includes error
            information regarding the failure.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
