<Type Name="QuestionAnsweringClient" FullName="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient">
  <TypeSignature Language="C#" Value="public class QuestionAnsweringClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuestionAnsweringClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" />
  <TypeSignature Language="VB.NET" Value="Public Class QuestionAnsweringClient" />
  <TypeSignature Language="F#" Value="type QuestionAnsweringClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" /> allows you to ask questions of a custom or built-in knowledge base.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QuestionAnsweringClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor to allow mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnsweringClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" Usage="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The Question Answering endpoint on which to operate.</param>
        <param name="credential">An <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests to the <paramref name="endpoint" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnsweringClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient : Uri * Azure.Core.TokenCredential -&gt; Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" Usage="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="endpoint"> Supported Cognitive Services endpoint (e.g., https://&lt;resource-name&gt;.cognitiveservices.azure.com). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of QuestionAnsweringClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnsweringClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As QuestionAnsweringClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient : Uri * Azure.AzureKeyCredential * Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions -&gt; Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" Usage="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The Question Answering endpoint on which to operate.</param>
        <param name="credential">An <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests to the <paramref name="endpoint" />.</param>
        <param name="options">Optional <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions" /> to customize requests sent to the endpoint.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnsweringClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As QuestionAnsweringClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient : Uri * Azure.Core.TokenCredential * Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions -&gt; Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient" Usage="new Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="endpoint"> Supported Cognitive Services endpoint (e.g., https://&lt;resource-name&gt;.cognitiveservices.azure.com). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of QuestionAnsweringClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the service endpoint for this client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnswers">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt; GetAnswers (int qnaId, Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, Azure.AI.Language.QuestionAnswering.AnswersOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersResult&gt; GetAnswers(int32 qnaId, class Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, class Azure.AI.Language.QuestionAnswering.AnswersOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(System.Int32,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswers (qnaId As Integer, project As QuestionAnsweringProject, Optional options As AnswersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnswersResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAnswers : int * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&#xA;override this.GetAnswers : int * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;" Usage="questionAnsweringClient.GetAnswers (qnaId, project, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qnaId" Type="System.Int32" />
        <Parameter Name="project" Type="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" />
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.AnswersOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="qnaId">The exact QnA ID to fetch from the knowledge base.</param>
        <param name="project">The <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" /> to query.</param>
        <param name="options">Optional <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersOptions" /> with additional query options.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Gets the specified QnA.</summary>
        <returns>An <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersResult" /> containing answers from the knowledge base to the specified question.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="project" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswers">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt; GetAnswers (string question, Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, Azure.AI.Language.QuestionAnswering.AnswersOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersResult&gt; GetAnswers(string question, class Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, class Azure.AI.Language.QuestionAnswering.AnswersOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswers(System.String,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswers (question As String, project As QuestionAnsweringProject, Optional options As AnswersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnswersResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAnswers : string * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&#xA;override this.GetAnswers : string * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;" Usage="questionAnsweringClient.GetAnswers (question, project, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="question" Type="System.String" />
        <Parameter Name="project" Type="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" />
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.AnswersOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="question">The question to ask of the knowledge base.</param>
        <param name="project">The <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" /> to query.</param>
        <param name="options">Optional <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersOptions" /> with additional query options.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using your knowledge base.</summary>
        <returns>An <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersResult" /> containing answers from the knowledge base to the specified question.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="question" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="question" /> or <paramref name="project" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt; GetAnswersAsync (int qnaId, Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, Azure.AI.Language.QuestionAnswering.AnswersOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt; GetAnswersAsync(int32 qnaId, class Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, class Azure.AI.Language.QuestionAnswering.AnswersOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersAsync(System.Int32,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersAsync (qnaId As Integer, project As QuestionAnsweringProject, Optional options As AnswersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersAsync : int * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt;&#xA;override this.GetAnswersAsync : int * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt;" Usage="questionAnsweringClient.GetAnswersAsync (qnaId, project, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qnaId" Type="System.Int32" />
        <Parameter Name="project" Type="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" />
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.AnswersOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="qnaId">The exact QnA ID to fetch from the knowledge base.</param>
        <param name="project">The <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" /> to query.</param>
        <param name="options">Optional <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersOptions" /> with additional query options.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Gets the specified QnA.</summary>
        <returns>An <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersResult" /> containing answers from the knowledge base to the specified question.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="project" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt; GetAnswersAsync (string question, Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, Azure.AI.Language.QuestionAnswering.AnswersOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt; GetAnswersAsync(string question, class Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject project, class Azure.AI.Language.QuestionAnswering.AnswersOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersAsync(System.String,Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject,Azure.AI.Language.QuestionAnswering.AnswersOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersAsync (question As String, project As QuestionAnsweringProject, Optional options As AnswersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersAsync : string * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt;&#xA;override this.GetAnswersAsync : string * Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject * Azure.AI.Language.QuestionAnswering.AnswersOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt;" Usage="questionAnsweringClient.GetAnswersAsync (question, project, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="question" Type="System.String" />
        <Parameter Name="project" Type="Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" />
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.AnswersOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="question">The question to ask of the knowledge base.</param>
        <param name="project">The <see cref="T:Azure.AI.Language.QuestionAnswering.QuestionAnsweringProject" /> to query.</param>
        <param name="options">Optional <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersOptions" /> with additional query options.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using your knowledge base.</summary>
        <returns>An <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersResult" /> containing answers from the knowledge base to the specified question.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="question" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="question" /> or <paramref name="project" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersFromText">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt; GetAnswersFromText (Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt; GetAnswersFromText(class Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromText(Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersFromText (options As AnswersFromTextOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnswersFromTextResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersFromText : Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&#xA;override this.GetAnswersFromText : Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;" Usage="questionAnsweringClient.GetAnswersFromText (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The question to answer.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using the provided text in the body.</summary>
        <returns>
          <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersFromTextResult" /> containing answers to the <see cref="P:Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions.Question" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersFromText">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt; GetAnswersFromText (string question, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt; textDocuments, string language = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt; GetAnswersFromText(string question, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.QuestionAnswering.TextDocument&gt; textDocuments, string language, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromText(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.QuestionAnswering.TextDocument},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersFromText (question As String, textDocuments As IEnumerable(Of TextDocument), Optional language As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnswersFromTextResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersFromText : string * seq&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&#xA;override this.GetAnswersFromText : string * seq&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;" Usage="questionAnsweringClient.GetAnswersFromText (question, textDocuments, language, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="question" Type="System.String" />
        <Parameter Name="textDocuments" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt;" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="question">The question to answer.</param>
        <param name="textDocuments">A collection of <see cref="T:Azure.AI.Language.QuestionAnswering.TextDocument" /> to query.</param>
        <param name="language">
            The language of the text documents.
            This is the <see href="https://tools.ietf.org/rfc/bcp/bcp47.txt">BCP-47</see> representation of a language. For example, use "en" for English, "es" for Spanish, etc.
            If not set, uses <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> as the default.
            If <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> is not set, the service default, "en" for English, is used.
            See <see href="https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support" /> for list of currently supported languages.
            </param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using the text <paramref name="textDocuments" />.</summary>
        <returns>
          <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersFromTextResult" /> containing answers to the <paramref name="question" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="question" /> or <paramref name="textDocuments" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersFromText">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt; GetAnswersFromText (string question, System.Collections.Generic.IEnumerable&lt;string&gt; textDocuments, string language = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt; GetAnswersFromText(string question, class System.Collections.Generic.IEnumerable`1&lt;string&gt; textDocuments, string language, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromText(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersFromText (question As String, textDocuments As IEnumerable(Of String), Optional language As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnswersFromTextResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersFromText : string * seq&lt;string&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&#xA;override this.GetAnswersFromText : string * seq&lt;string&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;" Usage="questionAnsweringClient.GetAnswersFromText (question, textDocuments, language, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="question" Type="System.String" />
        <Parameter Name="textDocuments" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="question">The question to answer.</param>
        <param name="textDocuments">The text documents to query.</param>
        <param name="language">
            The language of the text documents.
            This is the <see href="https://tools.ietf.org/rfc/bcp/bcp47.txt">BCP-47</see> representation of a language. For example, use "en" for English, "es" for Spanish, etc.
            If not set, uses <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> as the default.
            If <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> is not set, the service default, "en" for English, is used.
            See <see href="https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support" /> for list of currently supported languages.
            </param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using the text <paramref name="textDocuments" />.</summary>
        <returns>
          <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersFromTextResult" /> containing answers to the <paramref name="question" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="question" /> or <paramref name="textDocuments" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersFromTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt; GetAnswersFromTextAsync (Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt; GetAnswersFromTextAsync(class Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersFromTextAsync (options As AnswersFromTextOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersFromTextResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersFromTextAsync : Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;&#xA;override this.GetAnswersFromTextAsync : Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;" Usage="questionAnsweringClient.GetAnswersFromTextAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The question to answer.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using the provided text in the body.</summary>
        <returns>
          <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersFromTextResult" /> containing answers to the <see cref="P:Azure.AI.Language.QuestionAnswering.AnswersFromTextOptions.Question" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersFromTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt; GetAnswersFromTextAsync (string question, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt; textDocuments, string language = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt; GetAnswersFromTextAsync(string question, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.QuestionAnswering.TextDocument&gt; textDocuments, string language, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.QuestionAnswering.TextDocument},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersFromTextAsync (question As String, textDocuments As IEnumerable(Of TextDocument), Optional language As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersFromTextResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersFromTextAsync : string * seq&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;&#xA;override this.GetAnswersFromTextAsync : string * seq&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;" Usage="questionAnsweringClient.GetAnswersFromTextAsync (question, textDocuments, language, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="question" Type="System.String" />
        <Parameter Name="textDocuments" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.QuestionAnswering.TextDocument&gt;" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="question">The question to answer.</param>
        <param name="textDocuments">A collection of <see cref="T:Azure.AI.Language.QuestionAnswering.TextDocument" /> to query.</param>
        <param name="language">
            The language of the text documents.
            This is the <see href="https://tools.ietf.org/rfc/bcp/bcp47.txt">BCP-47</see> representation of a language. For example, use "en" for English, "es" for Spanish, etc.
            If not set, uses <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> as the default.
            If <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> is not set, the service default, "en" for English, is used.
            See <see href="https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support" /> for list of currently supported languages.
            </param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using the text <paramref name="textDocuments" />.</summary>
        <returns>
          <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersFromTextResult" /> containing answers to the <paramref name="question" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="question" /> or <paramref name="textDocuments" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersFromTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt; GetAnswersFromTextAsync (string question, System.Collections.Generic.IEnumerable&lt;string&gt; textDocuments, string language = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt; GetAnswersFromTextAsync(string question, class System.Collections.Generic.IEnumerable`1&lt;string&gt; textDocuments, string language, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClient.GetAnswersFromTextAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAnswersFromTextAsync (question As String, textDocuments As IEnumerable(Of String), Optional language As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnswersFromTextResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersFromTextAsync : string * seq&lt;string&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;&#xA;override this.GetAnswersFromTextAsync : string * seq&lt;string&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;" Usage="questionAnsweringClient.GetAnswersFromTextAsync (question, textDocuments, language, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.QuestionAnswering</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Language.QuestionAnswering.AnswersFromTextResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="question" Type="System.String" />
        <Parameter Name="textDocuments" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="question">The question to answer.</param>
        <param name="textDocuments">The text documents to query.</param>
        <param name="language">
            The language of the text documents.
            This is the <see href="https://tools.ietf.org/rfc/bcp/bcp47.txt">BCP-47</see> representation of a language. For example, use "en" for English, "es" for Spanish, etc.
            If not set, uses <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> as the default.
            If <see cref="P:Azure.AI.Language.QuestionAnswering.QuestionAnsweringClientOptions.DefaultLanguage" /> is not set, the service default, "en" for English, is used.
            See <see href="https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/language-support" /> for list of currently supported languages.
            </param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> to cancel the request.</param>
        <summary>Answers the specified question using the text <paramref name="textDocuments" />.</summary>
        <returns>
          <see cref="T:Azure.AI.Language.QuestionAnswering.AnswersFromTextResult" /> containing answers to the <paramref name="question" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="question" /> or <paramref name="textDocuments" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The service returned an error. The exception contains details of the service error.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
