<Type Name="PolicyAssignmentsOperationsExtensions" FullName="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class PolicyAssignmentsOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PolicyAssignmentsOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PolicyAssignmentsOperationsExtensions" />
  <TypeSignature Language="F#" Value="type PolicyAssignmentsOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for PolicyAssignmentsOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment Create (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment Create(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Create(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Create (operations As IPolicyAssignmentsOperations, scope As String, policyAssignmentName As String, parameters As PolicyAssignment) As PolicyAssignment" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string * Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment -&gt; Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Create (operations, scope, policyAssignmentName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="policyAssignmentName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
        <param name="policyAssignmentName">
            The name of the policy assignment.
            </param>
        <param name="parameters">
            Parameters for the policy assignment.
            </param>
        <summary>
            Creates or updates a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation creates or updates a policy assignment with the given scope
            and name. Policy assignments apply to all resources contained within their
            scope. For example, when you assign a policy at resource group scope, that
            policy applies to all resources in the group.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; CreateAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; CreateAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CreateAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string * Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateAsync (operations, scope, policyAssignmentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="policyAssignmentName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
        <param name="policyAssignmentName">
            The name of the policy assignment.
            </param>
        <param name="parameters">
            Parameters for the policy assignment.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates or updates a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation creates or updates a policy assignment with the given scope
            and name. Policy assignments apply to all resources contained within their
            scope. For example, when you assign a policy at resource group scope, that
            policy applies to all resources in the group.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateById">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment CreateById (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment CreateById(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateById(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateById (operations As IPolicyAssignmentsOperations, policyAssignmentId As String, parameters As PolicyAssignment) As PolicyAssignment" />
      <MemberSignature Language="F#" Value="static member CreateById : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment -&gt; Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateById (operations, policyAssignmentId, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="policyAssignmentId" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="policyAssignmentId">
            The ID of the policy assignment to create. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        <param name="parameters">
            Parameters for policy assignment.
            </param>
        <summary>
            Creates or updates a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation creates or updates the policy assignment with the given ID.
            Policy assignments made on a scope apply to all resources contained in that
            scope. For example, when you assign a policy to a resource group that
            policy applies to all resources in the group. Policy assignment IDs have
            this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateByIdAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; CreateByIdAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; CreateByIdAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateByIdAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CreateByIdAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateByIdAsync (operations, policyAssignmentId, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="policyAssignmentId" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="policyAssignmentId">
            The ID of the policy assignment to create. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        <param name="parameters">
            Parameters for policy assignment.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates or updates a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation creates or updates the policy assignment with the given ID.
            Policy assignments made on a scope apply to all resources contained in that
            scope. For example, when you assign a policy to a resource group that
            policy applies to all resources in the group. Policy assignment IDs have
            this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment Delete (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment Delete(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Delete (operations As IPolicyAssignmentsOperations, scope As String, policyAssignmentName As String) As PolicyAssignment" />
      <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string -&gt; Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Delete (operations, scope, policyAssignmentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="policyAssignmentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
        <param name="policyAssignmentName">
            The name of the policy assignment to delete.
            </param>
        <summary>
            Deletes a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation deletes a policy assignment, given its name and the scope it
            was created in. The scope of a policy assignment is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; DeleteAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; DeleteAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteAsync (operations, scope, policyAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="policyAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
        <param name="policyAssignmentName">
            The name of the policy assignment to delete.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation deletes a policy assignment, given its name and the scope it
            was created in. The scope of a policy assignment is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteById">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment DeleteById (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment DeleteById(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteById(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DeleteById (operations As IPolicyAssignmentsOperations, policyAssignmentId As String) As PolicyAssignment" />
      <MemberSignature Language="F#" Value="static member DeleteById : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string -&gt; Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteById (operations, policyAssignmentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="policyAssignmentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="policyAssignmentId">
            The ID of the policy assignment to delete. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        <summary>
            Deletes a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation deletes the policy with the given ID. Policy assignment IDs
            have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid formats for {scope} are:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'
            (management group), '/subscriptions/{subscriptionId}' (subscription),
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            (resource group), or
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            (resource).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByIdAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; DeleteByIdAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; DeleteByIdAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteByIdAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeleteByIdAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteByIdAsync (operations, policyAssignmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="policyAssignmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="policyAssignmentId">
            The ID of the policy assignment to delete. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation deletes the policy with the given ID. Policy assignment IDs
            have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid formats for {scope} are:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'
            (management group), '/subscriptions/{subscriptionId}' (subscription),
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            (resource group), or
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            (resource).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment Get (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment Get(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get (operations As IPolicyAssignmentsOperations, scope As String, policyAssignmentName As String) As PolicyAssignment" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string -&gt; Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Get (operations, scope, policyAssignmentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="policyAssignmentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
        <param name="policyAssignmentName">
            The name of the policy assignment to get.
            </param>
        <summary>
            Retrieves a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves a single policy assignment, given its name and the
            scope it was created at.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; GetAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; GetAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string scope, string policyAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetAsync (operations, scope, policyAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="policyAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
        <param name="policyAssignmentName">
            The name of the policy assignment to get.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves a policy assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves a single policy assignment, given its name and the
            scope it was created at.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetById">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment GetById (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment GetById(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetById(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetById (operations As IPolicyAssignmentsOperations, policyAssignmentId As String) As PolicyAssignment" />
      <MemberSignature Language="F#" Value="static member GetById : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string -&gt; Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetById (operations, policyAssignmentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="policyAssignmentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="policyAssignmentId">
            The ID of the policy assignment to get. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        <summary>
            Retrieves the policy assignment with the given ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The operation retrieves the policy assignment with the given ID. Policy
            assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByIdAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; GetByIdAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; GetByIdAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string policyAssignmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetByIdAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetByIdAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetByIdAsync (operations, policyAssignmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="policyAssignmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="policyAssignmentId">
            The ID of the policy assignment to get. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves the policy assignment with the given ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The operation retrieves the policy assignment with the given ID. Policy
            assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; List (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; List(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function List (operations As IPolicyAssignmentsOperations, Optional odataQuery As ODataQuery(Of PolicyAssignment) = null) As IPage(Of PolicyAssignment)" />
      <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.List (operations, odataQuery)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the subscription, including those that apply
            directly or from management groups that contain the given subscription, as
            well as any applied to objects contained within the subscription. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the subscription, which is everything in the
            unfiltered list except those applied to objects contained within the
            subscription. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the
            subscription and assign the policy definition whose id is {value}.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListAsync (operations, odataQuery, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the subscription, including those that apply
            directly or from management groups that contain the given subscription, as
            well as any applied to objects contained within the subscription. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the subscription, which is everything in the
            unfiltered list except those applied to objects contained within the
            subscription. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the
            subscription and assign the policy definition whose id is {value}.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResource">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResource (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResource(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResource(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListForResource (operations As IPolicyAssignmentsOperations, resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, Optional odataQuery As ODataQuery(Of PolicyAssignment) = null) As IPage(Of PolicyAssignment)" />
      <MemberSignature Language="F#" Value="static member ListForResource : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string * string * string * string * Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResource (operations, resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, odataQuery)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group containing the resource.
            </param>
        <param name="resourceProviderNamespace">
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
        <param name="parentResourcePath">
            The parent resource path. Use empty string if there is none.
            </param>
        <param name="resourceType">
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
        <param name="resourceName">
            The name of the resource.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are: 'atScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource, including those that apply directly or from all containing
            scopes, as well as any applied to resources contained within the resource.
            If $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the resource, which is everything in the
            unfiltered list except those applied to resources contained within the
            resource. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the resource
            and assign the policy definition whose id is {value}. Three parameters plus
            the resource name are used to identify a specific resource. If the resource
            is not part of a parent resource (the more common case), the parent
            resource path should not be provided (or provided as ''). For example a web
            app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, class Microsoft.Rest.Azure.OData.ODataQuery`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; odataQuery, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListForResourceAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string * string * string * string * Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceAsync (operations, resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, odataQuery, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="odataQuery" Type="Microsoft.Rest.Azure.OData.ODataQuery&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group containing the resource.
            </param>
        <param name="resourceProviderNamespace">
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
        <param name="parentResourcePath">
            The parent resource path. Use empty string if there is none.
            </param>
        <param name="resourceType">
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
        <param name="resourceName">
            The name of the resource.
            </param>
        <param name="odataQuery">
            OData parameters to apply to the operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are: 'atScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource, including those that apply directly or from all containing
            scopes, as well as any applied to resources contained within the resource.
            If $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the resource, which is everything in the
            unfiltered list except those applied to resources contained within the
            resource. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the resource
            and assign the policy definition whose id is {value}. Three parameters plus
            the resource name are used to identify a specific resource. If the resource
            is not part of a parent resource (the more common case), the parent
            resource path should not be provided (or provided as ''). For example a web
            app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResourceGroup">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResourceGroup (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string filter = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResourceGroup(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroup(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListForResourceGroup (operations As IPolicyAssignmentsOperations, resourceGroupName As String, Optional filter As String = null) As IPage(Of PolicyAssignment)" />
      <MemberSignature Language="F#" Value="static member ListForResourceGroup : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroup (operations, resourceGroupName, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains policy assignments.
            </param>
        <param name="filter">
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not
            provided, no filtering is performed.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()' or
            'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=policyDefinitionId eq
            '{value}' is provided, the returned list includes only policy assignments
            that apply to the resource group and assign the policy definition whose id
            is {value}.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResourceGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceGroupAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string filter = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceGroupAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string resourceGroupName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListForResourceGroupAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupAsync (operations, resourceGroupName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains policy assignments.
            </param>
        <param name="filter">
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not
            provided, no filtering is performed.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()' or
            'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=policyDefinitionId eq
            '{value}' is provided, the returned list includes only policy assignments
            that apply to the resource group and assign the policy definition whose id
            is {value}.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResourceGroupNext">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResourceGroupNext (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResourceGroupNext(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupNext(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListForResourceGroupNext (operations As IPolicyAssignmentsOperations, nextPageLink As String) As IPage(Of PolicyAssignment)" />
      <MemberSignature Language="F#" Value="static member ListForResourceGroupNext : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupNext (operations, nextPageLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()' or
            'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=policyDefinitionId eq
            '{value}' is provided, the returned list includes only policy assignments
            that apply to the resource group and assign the policy definition whose id
            is {value}.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResourceGroupNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceGroupNextAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceGroupNextAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListForResourceGroupNextAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupNextAsync (operations, nextPageLink, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()' or
            'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=policyDefinitionId eq
            '{value}' is provided, the returned list includes only policy assignments
            that apply to the resource group and assign the policy definition whose id
            is {value}.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResourceNext">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResourceNext (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListForResourceNext(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceNext(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListForResourceNext (operations As IPolicyAssignmentsOperations, nextPageLink As String) As IPage(Of PolicyAssignment)" />
      <MemberSignature Language="F#" Value="static member ListForResourceNext : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceNext (operations, nextPageLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are: 'atScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource, including those that apply directly or from all containing
            scopes, as well as any applied to resources contained within the resource.
            If $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the resource, which is everything in the
            unfiltered list except those applied to resources contained within the
            resource. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the resource
            and assign the policy definition whose id is {value}. Three parameters plus
            the resource name are used to identify a specific resource. If the resource
            is not part of a parent resource (the more common case), the parent
            resource path should not be provided (or provided as ''). For example a web
            app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForResourceNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceNextAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListForResourceNextAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListForResourceNextAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceNextAsync (operations, nextPageLink, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are: 'atScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource, including those that apply directly or from all containing
            scopes, as well as any applied to resources contained within the resource.
            If $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the resource, which is everything in the
            unfiltered list except those applied to resources contained within the
            resource. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the resource
            and assign the policy definition whose id is {value}. Three parameters plus
            the resource name are used to identify a specific resource. If the resource
            is not part of a parent resource (the more common case), the parent
            resource path should not be provided (or provided as ''). For example a web
            app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNext">
      <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListNext (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt; ListNext(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListNext (operations As IPolicyAssignmentsOperations, nextPageLink As String) As IPage(Of PolicyAssignment)" />
      <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListNext (operations, nextPageLink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the subscription, including those that apply
            directly or from management groups that contain the given subscription, as
            well as any applied to objects contained within the subscription. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the subscription, which is everything in the
            unfiltered list except those applied to objects contained within the
            subscription. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the
            subscription and assign the policy definition whose id is {value}.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListNextAsync (this Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt; ListNextAsync(class Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListNextAsync (operations, nextPageLink, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the subscription, including those that apply
            directly or from management groups that contain the given subscription, as
            well as any applied to objects contained within the subscription. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that apply to the subscription, which is everything in the
            unfiltered list except those applied to objects contained within the
            subscription. If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes only policy assignments that apply to the
            subscription and assign the policy definition whose id is {value}.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>