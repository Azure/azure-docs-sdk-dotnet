<Type Name="MockableHybridConnectivityArmClient" FullName="Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient">
  <TypeSignature Language="C#" Value="public class MockableHybridConnectivityArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableHybridConnectivityArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableHybridConnectivityArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableHybridConnectivityArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableHybridConnectivityArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt; GetHybridConnectivityEndpoint (Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt; GetHybridConnectivityEndpoint(class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpoint(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridConnectivityEndpoint (scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HybridConnectivityEndpointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHybridConnectivityEndpoint : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&#xA;override this.GetHybridConnectivityEndpoint : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;" Usage="mockableHybridConnectivityArmClient.GetHybridConnectivityEndpoint (scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>EndpointResource_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt; GetHybridConnectivityEndpointAsync (Azure.Core.ResourceIdentifier scope, string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt; GetHybridConnectivityEndpointAsync(class Azure.Core.ResourceIdentifier scope, string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpointAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridConnectivityEndpointAsync (scope As ResourceIdentifier, endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HybridConnectivityEndpointResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHybridConnectivityEndpointAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt;&#xA;override this.GetHybridConnectivityEndpointAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt;" Usage="mockableHybridConnectivityArmClient.GetHybridConnectivityEndpointAsync (scope, endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="endpointName"> The endpoint name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the endpoint to the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}</description></item><item><term>Operation Id</term><description>EndpointResource_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource GetHybridConnectivityEndpointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource GetHybridConnectivityEndpointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridConnectivityEndpointResource (id As ResourceIdentifier) As HybridConnectivityEndpointResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridConnectivityEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource&#xA;override this.GetHybridConnectivityEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" Usage="mockableHybridConnectivityArmClient.GetHybridConnectivityEndpointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityEndpoints">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection GetHybridConnectivityEndpoints (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection GetHybridConnectivityEndpoints(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityEndpoints(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridConnectivityEndpoints (scope As ResourceIdentifier) As HybridConnectivityEndpointCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHybridConnectivityEndpoints : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection&#xA;override this.GetHybridConnectivityEndpoints : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection" Usage="mockableHybridConnectivityArmClient.GetHybridConnectivityEndpoints scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of HybridConnectivityEndpointResources in the ArmClient. </summary>
        <returns> An object representing collection of HybridConnectivityEndpointResources and their operations over a HybridConnectivityEndpointResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridConnectivityServiceConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource GetHybridConnectivityServiceConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource GetHybridConnectivityServiceConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetHybridConnectivityServiceConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridConnectivityServiceConfigurationResource (id As ResourceIdentifier) As HybridConnectivityServiceConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetHybridConnectivityServiceConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource&#xA;override this.GetHybridConnectivityServiceConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" Usage="mockableHybridConnectivityArmClient.GetHybridConnectivityServiceConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.HybridConnectivityServiceConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource GetPublicCloudConnectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource GetPublicCloudConnectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicCloudConnectorResource (id As ResourceIdentifier) As PublicCloudConnectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetPublicCloudConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource&#xA;override this.GetPublicCloudConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" Usage="mockableHybridConnectivityArmClient.GetPublicCloudConnectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt; GetPublicCloudConnectorSolutionConfiguration (Azure.Core.ResourceIdentifier scope, string solutionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt; GetPublicCloudConnectorSolutionConfiguration(class Azure.Core.ResourceIdentifier scope, string solutionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfiguration(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicCloudConnectorSolutionConfiguration (scope As ResourceIdentifier, solutionConfiguration As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PublicCloudConnectorSolutionConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPublicCloudConnectorSolutionConfiguration : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&#xA;override this.GetPublicCloudConnectorSolutionConfiguration : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;" Usage="mockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfiguration (scope, solutionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="solutionConfiguration" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionConfiguration"> Represent Solution Configuration Resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SolutionConfiguration
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}</description></item><item><term>Operation Id</term><description>SolutionConfiguration_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionConfiguration" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionConfiguration" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt; GetPublicCloudConnectorSolutionConfigurationAsync (Azure.Core.ResourceIdentifier scope, string solutionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt; GetPublicCloudConnectorSolutionConfigurationAsync(class Azure.Core.ResourceIdentifier scope, string solutionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurationAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicCloudConnectorSolutionConfigurationAsync (scope As ResourceIdentifier, solutionConfiguration As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PublicCloudConnectorSolutionConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPublicCloudConnectorSolutionConfigurationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt;&#xA;override this.GetPublicCloudConnectorSolutionConfigurationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt;" Usage="mockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurationAsync (scope, solutionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="solutionConfiguration" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionConfiguration"> Represent Solution Configuration Resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a SolutionConfiguration
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}</description></item><item><term>Operation Id</term><description>SolutionConfiguration_Get</description></item><item><term>Default Api Version</term><description>2024-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionConfiguration" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionConfiguration" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource GetPublicCloudConnectorSolutionConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource GetPublicCloudConnectorSolutionConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicCloudConnectorSolutionConfigurationResource (id As ResourceIdentifier) As PublicCloudConnectorSolutionConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetPublicCloudConnectorSolutionConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource&#xA;override this.GetPublicCloudConnectorSolutionConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" Usage="mockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection GetPublicCloudConnectorSolutionConfigurations (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection GetPublicCloudConnectorSolutionConfigurations(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurations(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicCloudConnectorSolutionConfigurations (scope As ResourceIdentifier) As PublicCloudConnectorSolutionConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPublicCloudConnectorSolutionConfigurations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection&#xA;override this.GetPublicCloudConnectorSolutionConfigurations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection" Usage="mockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionConfigurations scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of PublicCloudConnectorSolutionConfigurationResources in the ArmClient. </summary>
        <returns> An object representing collection of PublicCloudConnectorSolutionConfigurationResources and their operations over a PublicCloudConnectorSolutionConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudConnectorSolutionTypeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource GetPublicCloudConnectorSolutionTypeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource GetPublicCloudConnectorSolutionTypeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionTypeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicCloudConnectorSolutionTypeResource (id As ResourceIdentifier) As PublicCloudConnectorSolutionTypeResource" />
      <MemberSignature Language="F#" Value="abstract member GetPublicCloudConnectorSolutionTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource&#xA;override this.GetPublicCloudConnectorSolutionTypeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" Usage="mockableHybridConnectivityArmClient.GetPublicCloudConnectorSolutionTypeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudConnectorSolutionTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicCloudInventoryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource GetPublicCloudInventoryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource GetPublicCloudInventoryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridConnectivity.Mocking.MockableHybridConnectivityArmClient.GetPublicCloudInventoryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicCloudInventoryResource (id As ResourceIdentifier) As PublicCloudInventoryResource" />
      <MemberSignature Language="F#" Value="abstract member GetPublicCloudInventoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource&#xA;override this.GetPublicCloudInventoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" Usage="mockableHybridConnectivityArmClient.GetPublicCloudInventoryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridConnectivity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.HybridConnectivity.PublicCloudInventoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
