<Type Name="MockableStorageArmClient" FullName="Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient">
  <TypeSignature Language="C#" Value="public class MockableStorageArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableStorageArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableStorageArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableStorageArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableStorageArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlobContainerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.BlobContainerResource GetBlobContainerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.BlobContainerResource GetBlobContainerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobContainerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBlobContainerResource (id As ResourceIdentifier) As BlobContainerResource" />
      <MemberSignature Language="F#" Value="abstract member GetBlobContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.BlobContainerResource&#xA;override this.GetBlobContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.BlobContainerResource" Usage="mockableStorageArmClient.GetBlobContainerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.BlobContainerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlobInventoryPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.BlobInventoryPolicyResource GetBlobInventoryPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.BlobInventoryPolicyResource GetBlobInventoryPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobInventoryPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBlobInventoryPolicyResource (id As ResourceIdentifier) As BlobInventoryPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetBlobInventoryPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.BlobInventoryPolicyResource&#xA;override this.GetBlobInventoryPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.BlobInventoryPolicyResource" Usage="mockableStorageArmClient.GetBlobInventoryPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.BlobInventoryPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlobServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.BlobServiceResource GetBlobServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.BlobServiceResource GetBlobServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBlobServiceResource (id As ResourceIdentifier) As BlobServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetBlobServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.BlobServiceResource&#xA;override this.GetBlobServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.BlobServiceResource" Usage="mockableStorageArmClient.GetBlobServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.BlobServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.DeletedAccountResource GetDeletedAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.DeletedAccountResource GetDeletedAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetDeletedAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedAccountResource (id As ResourceIdentifier) As DeletedAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.DeletedAccountResource&#xA;override this.GetDeletedAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.DeletedAccountResource" Usage="mockableStorageArmClient.GetDeletedAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.DeletedAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.DeletedAccountResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionScopeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.EncryptionScopeResource GetEncryptionScopeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.EncryptionScopeResource GetEncryptionScopeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetEncryptionScopeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncryptionScopeResource (id As ResourceIdentifier) As EncryptionScopeResource" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionScopeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.EncryptionScopeResource&#xA;override this.GetEncryptionScopeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.EncryptionScopeResource" Usage="mockableStorageArmClient.GetEncryptionScopeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.EncryptionScopeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.EncryptionScopeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.FileServiceResource GetFileServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.FileServiceResource GetFileServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetFileServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileServiceResource (id As ResourceIdentifier) As FileServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetFileServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.FileServiceResource&#xA;override this.GetFileServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.FileServiceResource" Usage="mockableStorageArmClient.GetFileServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.FileServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.FileServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileShareResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.FileShareResource GetFileShareResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.FileShareResource GetFileShareResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetFileShareResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileShareResource (id As ResourceIdentifier) As FileShareResource" />
      <MemberSignature Language="F#" Value="abstract member GetFileShareResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.FileShareResource&#xA;override this.GetFileShareResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.FileShareResource" Usage="mockableStorageArmClient.GetFileShareResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.FileShareResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.FileShareResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImmutabilityPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.ImmutabilityPolicyResource GetImmutabilityPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.ImmutabilityPolicyResource GetImmutabilityPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetImmutabilityPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImmutabilityPolicyResource (id As ResourceIdentifier) As ImmutabilityPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetImmutabilityPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.ImmutabilityPolicyResource&#xA;override this.GetImmutabilityPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.ImmutabilityPolicyResource" Usage="mockableStorageArmClient.GetImmutabilityPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.ImmutabilityPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityPerimeterConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource GetNetworkSecurityPerimeterConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource GetNetworkSecurityPerimeterConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetNetworkSecurityPerimeterConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityPerimeterConfigurationResource (id As ResourceIdentifier) As NetworkSecurityPerimeterConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityPerimeterConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource&#xA;override this.GetNetworkSecurityPerimeterConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource" Usage="mockableStorageArmClient.GetNetworkSecurityPerimeterConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.NetworkSecurityPerimeterConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectReplicationPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.ObjectReplicationPolicyResource GetObjectReplicationPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.ObjectReplicationPolicyResource GetObjectReplicationPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetObjectReplicationPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObjectReplicationPolicyResource (id As ResourceIdentifier) As ObjectReplicationPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetObjectReplicationPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.ObjectReplicationPolicyResource&#xA;override this.GetObjectReplicationPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" Usage="mockableStorageArmClient.GetObjectReplicationPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.ObjectReplicationPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueueServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.QueueServiceResource GetQueueServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.QueueServiceResource GetQueueServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetQueueServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueueServiceResource (id As ResourceIdentifier) As QueueServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetQueueServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.QueueServiceResource&#xA;override this.GetQueueServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.QueueServiceResource" Usage="mockableStorageArmClient.GetQueueServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.QueueServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.QueueServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountLocalUserResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.StorageAccountLocalUserResource GetStorageAccountLocalUserResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.StorageAccountLocalUserResource GetStorageAccountLocalUserResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountLocalUserResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountLocalUserResource (id As ResourceIdentifier) As StorageAccountLocalUserResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountLocalUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountLocalUserResource&#xA;override this.GetStorageAccountLocalUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountLocalUserResource" Usage="mockableStorageArmClient.GetStorageAccountLocalUserResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountLocalUserResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountManagementPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource GetStorageAccountManagementPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource GetStorageAccountManagementPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountManagementPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountManagementPolicyResource (id As ResourceIdentifier) As StorageAccountManagementPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountManagementPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource&#xA;override this.GetStorageAccountManagementPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" Usage="mockableStorageArmClient.GetStorageAccountManagementPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountMigrationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.StorageAccountMigrationResource GetStorageAccountMigrationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.StorageAccountMigrationResource GetStorageAccountMigrationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountMigrationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountMigrationResource (id As ResourceIdentifier) As StorageAccountMigrationResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountMigrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountMigrationResource&#xA;override this.GetStorageAccountMigrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountMigrationResource" Usage="mockableStorageArmClient.GetStorageAccountMigrationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountMigrationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountMigrationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountMigrationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.StorageAccountMigrationName)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountMigrationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountMigrationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.StorageAccountResource GetStorageAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.StorageAccountResource GetStorageAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountResource (id As ResourceIdentifier) As StorageAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountResource&#xA;override this.GetStorageAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageAccountResource" Usage="mockableStorageArmClient.GetStorageAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoragePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource GetStoragePrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource GetStoragePrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStoragePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStoragePrivateEndpointConnectionResource (id As ResourceIdentifier) As StoragePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetStoragePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource&#xA;override this.GetStoragePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" Usage="mockableStorageArmClient.GetStoragePrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageQueueResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.StorageQueueResource GetStorageQueueResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.StorageQueueResource GetStorageQueueResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageQueueResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageQueueResource (id As ResourceIdentifier) As StorageQueueResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageQueueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageQueueResource&#xA;override this.GetStorageQueueResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageQueueResource" Usage="mockableStorageArmClient.GetStorageQueueResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageQueueResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageQueueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageTaskAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.StorageTaskAssignmentResource GetStorageTaskAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.StorageTaskAssignmentResource GetStorageTaskAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageTaskAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageTaskAssignmentResource (id As ResourceIdentifier) As StorageTaskAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageTaskAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageTaskAssignmentResource&#xA;override this.GetStorageTaskAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.StorageTaskAssignmentResource" Usage="mockableStorageArmClient.GetStorageTaskAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.StorageTaskAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageTaskAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageTaskAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageTaskAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageTaskAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.TableResource GetTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.TableResource GetTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTableResource (id As ResourceIdentifier) As TableResource" />
      <MemberSignature Language="F#" Value="abstract member GetTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.TableResource&#xA;override this.GetTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.TableResource" Usage="mockableStorageArmClient.GetTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.TableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.TableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.TableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.TableServiceResource GetTableServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.TableServiceResource GetTableServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetTableServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTableServiceResource (id As ResourceIdentifier) As TableServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetTableServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.TableServiceResource&#xA;override this.GetTableServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Storage.TableServiceResource" Usage="mockableStorageArmClient.GetTableServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.TableServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.TableServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
