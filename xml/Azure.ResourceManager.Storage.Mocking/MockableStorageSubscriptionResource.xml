<Type Name="MockableStorageSubscriptionResource" FullName="Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableStorageSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableStorageSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableStorageSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableStorageSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableStorageSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckStorageAccountNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt; CheckStorageAccountNameAvailability (Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt; CheckStorageAccountNameAvailability(class Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.CheckStorageAccountNameAvailability(Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckStorageAccountNameAvailability (content As StorageAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StorageAccountNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckStorageAccountNameAvailability : Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;&#xA;override this.CheckStorageAccountNameAvailability : Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;" Usage="mockableStorageSubscriptionResource.CheckStorageAccountNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the storage account name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability</description></item><item><term>Operation Id</term><description>StorageAccounts_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckStorageAccountNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;&gt; CheckStorageAccountNameAvailabilityAsync (Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;&gt; CheckStorageAccountNameAvailabilityAsync(class Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.CheckStorageAccountNameAvailabilityAsync(Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckStorageAccountNameAvailabilityAsync (content As StorageAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StorageAccountNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckStorageAccountNameAvailabilityAsync : Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;&gt;&#xA;override this.CheckStorageAccountNameAvailabilityAsync : Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;&gt;" Usage="mockableStorageSubscriptionResource.CheckStorageAccountNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the storage account name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability</description></item><item><term>Operation Id</term><description>StorageAccounts_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedAccount">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt; GetDeletedAccount (Azure.Core.AzureLocation location, string deletedAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Storage.DeletedAccountResource&gt; GetDeletedAccount(valuetype Azure.Core.AzureLocation location, string deletedAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccount(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedAccount (location As AzureLocation, deletedAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedAccount : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;&#xA;override this.GetDeletedAccount : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;" Usage="mockableStorageSubscriptionResource.GetDeletedAccount (location, deletedAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="deletedAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted storage account. </param>
        <param name="deletedAccountName"> Name of the deleted storage account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of specified deleted account resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description></item><item><term>Operation Id</term><description>DeletedAccounts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deletedAccountName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;&gt; GetDeletedAccountAsync (Azure.Core.AzureLocation location, string deletedAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Storage.DeletedAccountResource&gt;&gt; GetDeletedAccountAsync(valuetype Azure.Core.AzureLocation location, string deletedAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccountAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedAccountAsync (location As AzureLocation, deletedAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedAccountAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;&gt;&#xA;override this.GetDeletedAccountAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;&gt;" Usage="mockableStorageSubscriptionResource.GetDeletedAccountAsync (location, deletedAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="deletedAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted storage account. </param>
        <param name="deletedAccountName"> Name of the deleted storage account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get properties of specified deleted account resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description></item><item><term>Operation Id</term><description>DeletedAccounts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deletedAccountName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Storage.DeletedAccountCollection GetDeletedAccounts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Storage.DeletedAccountCollection GetDeletedAccounts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccounts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedAccounts () As DeletedAccountCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedAccounts : unit -&gt; Azure.ResourceManager.Storage.DeletedAccountCollection&#xA;override this.GetDeletedAccounts : unit -&gt; Azure.ResourceManager.Storage.DeletedAccountCollection" Usage="mockableStorageSubscriptionResource.GetDeletedAccounts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Storage.DeletedAccountCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DeletedAccountResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of DeletedAccountResources and their operations over a DeletedAccountResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt; GetDeletedAccounts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Storage.DeletedAccountResource&gt; GetDeletedAccounts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccounts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedAccounts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;&#xA;override this.GetDeletedAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;" Usage="mockableStorageSubscriptionResource.GetDeletedAccounts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists deleted accounts under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts</description></item><item><term>Operation Id</term><description>DeletedAccounts_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt; GetDeletedAccountsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Storage.DeletedAccountResource&gt; GetDeletedAccountsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccountsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedAccountsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;&#xA;override this.GetDeletedAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;" Usage="mockableStorageSubscriptionResource.GetDeletedAccountsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.DeletedAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists deleted accounts under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts</description></item><item><term>Operation Id</term><description>DeletedAccounts_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt; GetSkus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt; GetSkus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetSkus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkus (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StorageSkuInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt;&#xA;override this.GetSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt;" Usage="mockableStorageSubscriptionResource.GetSkus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the available SKUs supported by Microsoft.Storage for given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus</description></item><item><term>Operation Id</term><description>Skus_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt; GetSkusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt; GetSkusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetSkusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StorageSkuInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt;&#xA;override this.GetSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt;" Usage="mockableStorageSubscriptionResource.GetSkusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageSkuInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the available SKUs supported by Microsoft.Storage for given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus</description></item><item><term>Operation Id</term><description>Skus_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt; GetStorageAccounts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Storage.StorageAccountResource&gt; GetStorageAccounts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetStorageAccounts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccounts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StorageAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt;&#xA;override this.GetStorageAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt;" Usage="mockableStorageSubscriptionResource.GetStorageAccounts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts</description></item><item><term>Operation Id</term><description>StorageAccounts_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt; GetStorageAccountsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Storage.StorageAccountResource&gt; GetStorageAccountsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetStorageAccountsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StorageAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt;&#xA;override this.GetStorageAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt;" Usage="mockableStorageSubscriptionResource.GetStorageAccountsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.StorageAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts</description></item><item><term>Operation Id</term><description>StorageAccounts_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesByLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt; GetUsagesByLocation (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Storage.Models.StorageUsage&gt; GetUsagesByLocation(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetUsagesByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesByLocation (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of StorageUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt;&#xA;override this.GetUsagesByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt;" Usage="mockableStorageSubscriptionResource.GetUsagesByLocation (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the Azure Storage resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_ListByLocation</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesByLocationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt; GetUsagesByLocationAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Storage.Models.StorageUsage&gt; GetUsagesByLocationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetUsagesByLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesByLocationAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of StorageUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt;&#xA;override this.GetUsagesByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt;" Usage="mockableStorageSubscriptionResource.GetUsagesByLocationAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Storage</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Storage.Models.StorageUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the Azure Storage resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Usages_ListByLocation</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
