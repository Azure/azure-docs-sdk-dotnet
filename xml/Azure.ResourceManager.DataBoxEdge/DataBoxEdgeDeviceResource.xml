<Type Name="DataBoxEdgeDeviceResource" FullName="Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource">
  <TypeSignature Language="C#" Value="public class DataBoxEdgeDeviceResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataBoxEdgeDeviceResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DataBoxEdgeDeviceResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DataBoxEdgeDeviceResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DataBoxEdgeDevice along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDataBoxEdgeDeviceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetDataBoxEdgeDevice method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataBoxEdgeDeviceResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;" Usage="dataBoxEdgeDeviceResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckResourceCreationFeasibility">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CheckResourceCreationFeasibility (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CheckResourceCreationFeasibility(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CheckResourceCreationFeasibility(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckResourceCreationFeasibility (waitUntil As WaitUntil, content As DeviceCapacityRequestContent, Optional capacityName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CheckResourceCreationFeasibility : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CheckResourceCreationFeasibility : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.CheckResourceCreationFeasibility (waitUntil, content, capacityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="capacityName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The device capacity request info. </param>
        <param name="capacityName"> The capacity name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Posts the device capacity request info to check feasibility.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityCheck
            Operation Id: DeviceCapacityCheck_CheckResourceCreationFeasibility
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckResourceCreationFeasibilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CheckResourceCreationFeasibilityAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CheckResourceCreationFeasibilityAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CheckResourceCreationFeasibilityAsync(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckResourceCreationFeasibilityAsync (waitUntil As WaitUntil, content As DeviceCapacityRequestContent, Optional capacityName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CheckResourceCreationFeasibilityAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CheckResourceCreationFeasibilityAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.CheckResourceCreationFeasibilityAsync (waitUntil, content, capacityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="capacityName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The device capacity request info. </param>
        <param name="capacityName"> The capacity name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Posts the device capacity request info to check feasibility.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityCheck
            Operation Id: DeviceCapacityCheck_CheckResourceCreationFeasibility
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckResourceCreationFeasibilityDeviceCapacityCheck">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CheckResourceCreationFeasibilityDeviceCapacityCheck (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CheckResourceCreationFeasibilityDeviceCapacityCheck(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CheckResourceCreationFeasibilityDeviceCapacityCheck(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckResourceCreationFeasibilityDeviceCapacityCheck (waitUntil As WaitUntil, content As DeviceCapacityRequestContent, Optional capacityName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CheckResourceCreationFeasibilityDeviceCapacityCheck : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CheckResourceCreationFeasibilityDeviceCapacityCheck : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.CheckResourceCreationFeasibilityDeviceCapacityCheck (waitUntil, content, capacityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="capacityName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The device capacity request info. </param>
        <param name="capacityName"> The capacity name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Posts the device capacity request info to check feasibility.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityCheck
            Operation Id: DeviceCapacityCheck_CheckResourceCreationFeasibility
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckResourceCreationFeasibilityDeviceCapacityCheckAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CheckResourceCreationFeasibilityDeviceCapacityCheckAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CheckResourceCreationFeasibilityDeviceCapacityCheckAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent content, string capacityName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CheckResourceCreationFeasibilityDeviceCapacityCheckAsync(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckResourceCreationFeasibilityDeviceCapacityCheckAsync (waitUntil As WaitUntil, content As DeviceCapacityRequestContent, Optional capacityName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CheckResourceCreationFeasibilityDeviceCapacityCheckAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CheckResourceCreationFeasibilityDeviceCapacityCheckAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.CheckResourceCreationFeasibilityDeviceCapacityCheckAsync (waitUntil, content, capacityName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.DeviceCapacityRequestContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="capacityName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The device capacity request info. </param>
        <param name="capacityName"> The capacity name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Posts the device capacity request info to check feasibility.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityCheck
            Operation Id: DeviceCapacityCheck_CheckResourceCreationFeasibility
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CreateOrUpdateSecuritySettings (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings securitySettings, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CreateOrUpdateSecuritySettings(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings securitySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettings(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSecuritySettings (waitUntil As WaitUntil, securitySettings As DataBoxEdgeSecuritySettings, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSecuritySettings : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CreateOrUpdateSecuritySettings : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettings (waitUntil, securitySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="securitySettings" Type="Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="securitySettings"> The security settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the security settings on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update
            Operation Id: Devices_CreateOrUpdateSecuritySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securitySettings" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CreateOrUpdateSecuritySettings (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings securitySettings, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CreateOrUpdateSecuritySettings(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings securitySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettings(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSecuritySettings (waitUntil As WaitUntil, securitySettings As SecuritySettings, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSecuritySettings : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CreateOrUpdateSecuritySettings : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettings (waitUntil, securitySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="securitySettings" Type="Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="securitySettings"> The security settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the security settings on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update
            Operation Id: Devices_CreateOrUpdateSecuritySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securitySettings" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSecuritySettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CreateOrUpdateSecuritySettingsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings securitySettings, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CreateOrUpdateSecuritySettingsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings securitySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettingsAsync(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSecuritySettingsAsync (waitUntil As WaitUntil, securitySettings As DataBoxEdgeSecuritySettings, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSecuritySettingsAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CreateOrUpdateSecuritySettingsAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettingsAsync (waitUntil, securitySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="securitySettings" Type="Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeSecuritySettings" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="securitySettings"> The security settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the security settings on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update
            Operation Id: Devices_CreateOrUpdateSecuritySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securitySettings" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSecuritySettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CreateOrUpdateSecuritySettingsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings securitySettings, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CreateOrUpdateSecuritySettingsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings securitySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettingsAsync(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSecuritySettingsAsync (waitUntil As WaitUntil, securitySettings As SecuritySettings, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSecuritySettingsAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CreateOrUpdateSecuritySettingsAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.CreateOrUpdateSecuritySettingsAsync (waitUntil, securitySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="securitySettings" Type="Azure.ResourceManager.DataBoxEdge.Models.SecuritySettings" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="securitySettings"> The security settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the security settings on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update
            Operation Id: Devices_CreateOrUpdateSecuritySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securitySettings" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string deviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string deviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, deviceName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, deviceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="deviceName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DataBoxEdgeDeviceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceData" Usage="Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadUpdates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation DownloadUpdates (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation DownloadUpdates(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.DownloadUpdates(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadUpdates (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member DownloadUpdates : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.DownloadUpdates : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.DownloadUpdates (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Downloads the updates on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates
            Operation Id: Devices_DownloadUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadUpdatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DownloadUpdatesAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DownloadUpdatesAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.DownloadUpdatesAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadUpdatesAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DownloadUpdatesAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DownloadUpdatesAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.DownloadUpdatesAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Downloads the updates on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates
            Operation Id: Devices_DownloadUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt; GenerateCertificate (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt; GenerateCertificate(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GenerateCertificate(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateCertificate (Optional cancellationToken As CancellationToken = Nothing) As Response(Of GenerateCertResult)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GenerateCertificate : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;&#xA;override this.GenerateCertificate : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;" Usage="dataBoxEdgeDeviceResource.GenerateCertificate cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt; GenerateCertificate (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt; GenerateCertificate(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateCertificate (Optional cancellationToken As CancellationToken = Nothing) As Response(Of GenerateCertResponse)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GenerateCertificate : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;&#xA;override this.GenerateCertificate : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;" Usage="dataBoxEdgeDeviceResource.GenerateCertificate cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates certificate for activation key.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/generateCertificate
            Operation Id: Devices_GenerateCertificate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;&gt; GenerateCertificateAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;&gt; GenerateCertificateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GenerateCertificateAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateCertificateAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GenerateCertResult))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GenerateCertificateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;&gt;&#xA;override this.GenerateCertificateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GenerateCertificateAsync cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;&gt; GenerateCertificateAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;&gt; GenerateCertificateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateCertificateAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GenerateCertResponse))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GenerateCertificateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;&gt;&#xA;override this.GenerateCertificateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GenerateCertificateAsync cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.GenerateCertResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates certificate for activation key.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/generateCertificate
            Operation Id: Devices_GenerateCertificate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;" Usage="dataBoxEdgeDeviceResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlert">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt; GetAlert (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.AlertResource&gt; GetAlert(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetAlert(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlert (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAlert : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt;&#xA;override this.GetAlert : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt;" Usage="dataBoxEdgeDeviceResource.GetAlert (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The alert name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an alert by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}
            Operation Id: Alerts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt;&gt; GetAlertAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.AlertResource&gt;&gt; GetAlertAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetAlertAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AlertResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAlertAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt;&gt;&#xA;override this.GetAlertAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetAlertAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.AlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The alert name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an alert by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}
            Operation Id: Alerts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.AlertCollection GetAlerts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.AlertCollection GetAlerts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlerts () As AlertCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAlerts : unit -&gt; Azure.ResourceManager.DataBoxEdge.AlertCollection&#xA;override this.GetAlerts : unit -&gt; Azure.ResourceManager.DataBoxEdge.AlertCollection" Usage="dataBoxEdgeDeviceResource.GetAlerts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.AlertCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AlertResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of AlertResources and their operations over a AlertResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBandwidthSchedule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt; GetBandwidthSchedule (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt; GetBandwidthSchedule(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetBandwidthSchedule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBandwidthSchedule (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BandwidthScheduleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBandwidthSchedule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;&#xA;override this.GetBandwidthSchedule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;" Usage="dataBoxEdgeDeviceResource.GetBandwidthSchedule (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The bandwidth schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified bandwidth schedule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}
            Operation Id: BandwidthSchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBandwidthScheduleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;&gt; GetBandwidthScheduleAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;&gt; GetBandwidthScheduleAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetBandwidthScheduleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBandwidthScheduleAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BandwidthScheduleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBandwidthScheduleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;&gt;&#xA;override this.GetBandwidthScheduleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetBandwidthScheduleAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The bandwidth schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified bandwidth schedule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}
            Operation Id: BandwidthSchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBandwidthSchedules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.BandwidthScheduleCollection GetBandwidthSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.BandwidthScheduleCollection GetBandwidthSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetBandwidthSchedules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBandwidthSchedules () As BandwidthScheduleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBandwidthSchedules : unit -&gt; Azure.ResourceManager.DataBoxEdge.BandwidthScheduleCollection&#xA;override this.GetBandwidthSchedules : unit -&gt; Azure.ResourceManager.DataBoxEdge.BandwidthScheduleCollection" Usage="dataBoxEdgeDeviceResource.GetBandwidthSchedules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.BandwidthScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BandwidthScheduleResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of BandwidthScheduleResources and their operations over a BandwidthScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeAlert">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt; GetDataBoxEdgeAlert (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt; GetDataBoxEdgeAlert(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeAlert(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeAlert (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeAlert : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;&#xA;override this.GetDataBoxEdgeAlert : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeAlert (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The alert name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an alert by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}
            Operation Id: Alerts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeAlertAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;&gt; GetDataBoxEdgeAlertAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;&gt; GetDataBoxEdgeAlertAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeAlertAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeAlertAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeAlertResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeAlertAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;&gt;&#xA;override this.GetDataBoxEdgeAlertAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeAlertAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The alert name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an alert by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}
            Operation Id: Alerts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertCollection GetDataBoxEdgeAlerts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertCollection GetDataBoxEdgeAlerts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeAlerts () As DataBoxEdgeAlertCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeAlerts : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertCollection&#xA;override this.GetDataBoxEdgeAlerts : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeAlerts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeAlertResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeAlertResources and their operations over a DataBoxEdgeAlertResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeDeviceJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt; GetDataBoxEdgeDeviceJob (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt; GetDataBoxEdgeDeviceJob(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeDeviceJob (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeDeviceJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;&#xA;override this.GetDataBoxEdgeDeviceJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJob (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The job name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}
            Operation Id: Jobs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeDeviceJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;&gt; GetDataBoxEdgeDeviceJobAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;&gt; GetDataBoxEdgeDeviceJobAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeDeviceJobAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceJobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeDeviceJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;&gt;&#xA;override this.GetDataBoxEdgeDeviceJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The job name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}
            Operation Id: Jobs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeDeviceJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobCollection GetDataBoxEdgeDeviceJobs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobCollection GetDataBoxEdgeDeviceJobs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeDeviceJobs () As DataBoxEdgeDeviceJobCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeDeviceJobs : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobCollection&#xA;override this.GetDataBoxEdgeDeviceJobs : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeDeviceJobResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeDeviceJobResources and their operations over a DataBoxEdgeDeviceJobResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeDeviceJobStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt; GetDataBoxEdgeDeviceJobStatus (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt; GetDataBoxEdgeDeviceJobStatus(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobStatus(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeDeviceJobStatus (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceJobStatusResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeDeviceJobStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;&#xA;override this.GetDataBoxEdgeDeviceJobStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobStatus (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The job name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}
            Operation Id: OperationsStatus_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeDeviceJobStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;&gt; GetDataBoxEdgeDeviceJobStatusAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;&gt; GetDataBoxEdgeDeviceJobStatusAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeDeviceJobStatusAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceJobStatusResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeDeviceJobStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;&gt;&#xA;override this.GetDataBoxEdgeDeviceJobStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobStatusAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The job name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}
            Operation Id: OperationsStatus_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeDeviceJobStatuses">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusCollection GetDataBoxEdgeDeviceJobStatuses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusCollection GetDataBoxEdgeDeviceJobStatuses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobStatuses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeDeviceJobStatuses () As DataBoxEdgeDeviceJobStatusCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeDeviceJobStatuses : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusCollection&#xA;override this.GetDataBoxEdgeDeviceJobStatuses : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeDeviceJobStatuses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceJobStatusCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeDeviceJobStatusResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeDeviceJobStatusResources and their operations over a DataBoxEdgeDeviceJobStatusResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt; GetDataBoxEdgeJob (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt; GetDataBoxEdgeJob(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeJob (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;&#xA;override this.GetDataBoxEdgeJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeJob (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The job name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}
            Operation Id: Jobs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;&gt; GetDataBoxEdgeJobAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;&gt; GetDataBoxEdgeJobAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeJobAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeJobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;&gt;&#xA;override this.GetDataBoxEdgeJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeJobAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The job name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}
            Operation Id: Jobs_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobCollection GetDataBoxEdgeJobs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobCollection GetDataBoxEdgeJobs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeJobs () As DataBoxEdgeJobCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeJobs : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobCollection&#xA;override this.GetDataBoxEdgeJobs : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeJobs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeJobResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeJobResources and their operations over a DataBoxEdgeJobResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeOrder">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource GetDataBoxEdgeOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource GetDataBoxEdgeOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeOrder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeOrder () As DataBoxEdgeOrderResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeOrder : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource&#xA;override this.GetDataBoxEdgeOrder : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a DataBoxEdgeOrderResource along with the instance operations that can be performed on it in the DataBoxEdgeDevice. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeRole">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt; GetDataBoxEdgeRole (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt; GetDataBoxEdgeRole(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeRole(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeRole (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeRoleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeRole : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;&#xA;override this.GetDataBoxEdgeRole : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeRole (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The role name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific role by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}
            Operation Id: Roles_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeRoleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;&gt; GetDataBoxEdgeRoleAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;&gt; GetDataBoxEdgeRoleAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeRoleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeRoleAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeRoleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeRoleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;&gt;&#xA;override this.GetDataBoxEdgeRoleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeRoleAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The role name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific role by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}
            Operation Id: Roles_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeRoles">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleCollection GetDataBoxEdgeRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleCollection GetDataBoxEdgeRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeRoles () As DataBoxEdgeRoleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeRoles : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleCollection&#xA;override this.GetDataBoxEdgeRoles : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeRoleResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeRoleResources and their operations over a DataBoxEdgeRoleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeShare">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt; GetDataBoxEdgeShare (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt; GetDataBoxEdgeShare(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeShare(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeShare (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeShareResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeShare : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;&#xA;override this.GetDataBoxEdgeShare : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeShare (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The share name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a share by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}
            Operation Id: Shares_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeShareAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;&gt; GetDataBoxEdgeShareAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;&gt; GetDataBoxEdgeShareAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeShareAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeShareAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeShareResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeShareAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;&gt;&#xA;override this.GetDataBoxEdgeShareAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeShareAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The share name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a share by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}
            Operation Id: Shares_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeShares">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareCollection GetDataBoxEdgeShares ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareCollection GetDataBoxEdgeShares() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeShares" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeShares () As DataBoxEdgeShareCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeShares : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareCollection&#xA;override this.GetDataBoxEdgeShares : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeShares " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeShareResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeShareResources and their operations over a DataBoxEdgeShareResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccount">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt; GetDataBoxEdgeStorageAccount (string storageAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt; GetDataBoxEdgeStorageAccount(string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccount(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccount (storageAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeStorageAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccount : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;&#xA;override this.GetDataBoxEdgeStorageAccount : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccount (storageAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="storageAccountName"> The storage account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a StorageAccount by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}
            Operation Id: StorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;&gt; GetDataBoxEdgeStorageAccountAsync (string storageAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;&gt; GetDataBoxEdgeStorageAccountAsync(string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccountAsync (storageAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeStorageAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccountAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;&gt;&#xA;override this.GetDataBoxEdgeStorageAccountAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountAsync (storageAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="storageAccountName"> The storage account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a StorageAccount by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}
            Operation Id: StorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccountCredential">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt; GetDataBoxEdgeStorageAccountCredential (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt; GetDataBoxEdgeStorageAccountCredential(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountCredential(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccountCredential (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeStorageAccountCredentialResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccountCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;&#xA;override this.GetDataBoxEdgeStorageAccountCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountCredential (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The storage account credential name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified storage account credential.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}
            Operation Id: StorageAccountCredentials_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccountCredentialAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;&gt; GetDataBoxEdgeStorageAccountCredentialAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;&gt; GetDataBoxEdgeStorageAccountCredentialAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountCredentialAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccountCredentialAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeStorageAccountCredentialResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccountCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;&gt;&#xA;override this.GetDataBoxEdgeStorageAccountCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountCredentialAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The storage account credential name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified storage account credential.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}
            Operation Id: StorageAccountCredentials_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccountCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialCollection GetDataBoxEdgeStorageAccountCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialCollection GetDataBoxEdgeStorageAccountCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccountCredentials () As DataBoxEdgeStorageAccountCredentialCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccountCredentials : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialCollection&#xA;override this.GetDataBoxEdgeStorageAccountCredentials : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccountCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeStorageAccountCredentialResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeStorageAccountCredentialResources and their operations over a DataBoxEdgeStorageAccountCredentialResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCollection GetDataBoxEdgeStorageAccounts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCollection GetDataBoxEdgeStorageAccounts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccounts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccounts () As DataBoxEdgeStorageAccountCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccounts : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCollection&#xA;override this.GetDataBoxEdgeStorageAccounts : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeStorageAccounts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeStorageAccountResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeStorageAccountResources and their operations over a DataBoxEdgeStorageAccountResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeTrigger">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt; GetDataBoxEdgeTrigger (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt; GetDataBoxEdgeTrigger(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeTrigger(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeTrigger (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeTriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;&#xA;override this.GetDataBoxEdgeTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeTrigger (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The trigger name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific trigger by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeTriggerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;&gt; GetDataBoxEdgeTriggerAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;&gt; GetDataBoxEdgeTriggerAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeTriggerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeTriggerAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeTriggerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;&gt;&#xA;override this.GetDataBoxEdgeTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeTriggerAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The trigger name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific trigger by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeTriggers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerCollection GetDataBoxEdgeTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerCollection GetDataBoxEdgeTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeTriggers () As DataBoxEdgeTriggerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeTriggers : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerCollection&#xA;override this.GetDataBoxEdgeTriggers : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeTriggerResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeTriggerResources and their operations over a DataBoxEdgeTriggerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt; GetDataBoxEdgeUser (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt; GetDataBoxEdgeUser(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeUser(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeUser (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeUserResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;&#xA;override this.GetDataBoxEdgeUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeUser (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The user name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified user.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}
            Operation Id: Users_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;&gt; GetDataBoxEdgeUserAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;&gt; GetDataBoxEdgeUserAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeUserAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeUserAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeUserResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;&gt;&#xA;override this.GetDataBoxEdgeUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeUserAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name"> The user name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified user.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}
            Operation Id: Users_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeUsers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserCollection GetDataBoxEdgeUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserCollection GetDataBoxEdgeUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDataBoxEdgeUsers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeUsers () As DataBoxEdgeUserCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeUsers : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserCollection&#xA;override this.GetDataBoxEdgeUsers : unit -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserCollection" Usage="dataBoxEdgeDeviceResource.GetDataBoxEdgeUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataBoxEdgeUserResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of DataBoxEdgeUserResources and their operations over a DataBoxEdgeUserResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceCapacityInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DeviceCapacityInfoResource GetDeviceCapacityInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DeviceCapacityInfoResource GetDeviceCapacityInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDeviceCapacityInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeviceCapacityInfo () As DeviceCapacityInfoResource" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceCapacityInfo : unit -&gt; Azure.ResourceManager.DataBoxEdge.DeviceCapacityInfoResource&#xA;override this.GetDeviceCapacityInfo : unit -&gt; Azure.ResourceManager.DataBoxEdge.DeviceCapacityInfoResource" Usage="dataBoxEdgeDeviceResource.GetDeviceCapacityInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DeviceCapacityInfoResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a DeviceCapacityInfoResource along with the instance operations that can be performed on it in the DataBoxEdgeDevice. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DeviceCapacityInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceCapacityInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt; GetDeviceCapacityInfo (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt; GetDeviceCapacityInfo(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDeviceCapacityInfo(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeviceCapacityInfo (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceCapacityInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceCapacityInfo : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;&#xA;override this.GetDeviceCapacityInfo : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;" Usage="dataBoxEdgeDeviceResource.GetDeviceCapacityInfo cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified device capacity info.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityInfo/default
            Operation Id: DeviceCapacityInfo_GetDeviceCapacityInfo
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceCapacityInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;&gt; GetDeviceCapacityInfoAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;&gt; GetDeviceCapacityInfoAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDeviceCapacityInfoAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeviceCapacityInfoAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceCapacityInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceCapacityInfoAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;&gt;&#xA;override this.GetDeviceCapacityInfoAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetDeviceCapacityInfoAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceCapacityInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified device capacity info.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityInfo/default
            Operation Id: DeviceCapacityInfo_GetDeviceCapacityInfo
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticProactiveLogCollectionSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource GetDiagnosticProactiveLogCollectionSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource GetDiagnosticProactiveLogCollectionSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDiagnosticProactiveLogCollectionSetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticProactiveLogCollectionSetting () As DiagnosticProactiveLogCollectionSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticProactiveLogCollectionSetting : unit -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource&#xA;override this.GetDiagnosticProactiveLogCollectionSetting : unit -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource" Usage="dataBoxEdgeDeviceResource.GetDiagnosticProactiveLogCollectionSetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a DiagnosticProactiveLogCollectionSettingResource along with the instance operations that can be performed on it in the DataBoxEdgeDevice. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticRemoteSupportSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource GetDiagnosticRemoteSupportSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource GetDiagnosticRemoteSupportSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetDiagnosticRemoteSupportSetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticRemoteSupportSetting () As DiagnosticRemoteSupportSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticRemoteSupportSetting : unit -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource&#xA;override this.GetDiagnosticRemoteSupportSetting : unit -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource" Usage="dataBoxEdgeDeviceResource.GetDiagnosticRemoteSupportSetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a DiagnosticRemoteSupportSettingResource along with the instance operations that can be performed on it in the DataBoxEdgeDevice. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeNodes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt; GetEdgeNodes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt; GetEdgeNodes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetEdgeNodes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEdgeNodes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataBoxEdgeNode)" />
      <MemberSignature Language="F#" Value="abstract member GetEdgeNodes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt;&#xA;override this.GetEdgeNodes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt;" Usage="dataBoxEdgeDeviceResource.GetEdgeNodes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the nodes currently configured under this Data Box Edge device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes
            Operation Id: Nodes_ListByDataBoxEdgeDevice
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeNodesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt; GetEdgeNodesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt; GetEdgeNodesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetEdgeNodesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEdgeNodesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataBoxEdgeNode)" />
      <MemberSignature Language="F#" Value="abstract member GetEdgeNodesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt;&#xA;override this.GetEdgeNodesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt;" Usage="dataBoxEdgeDeviceResource.GetEdgeNodesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the nodes currently configured under this Data Box Edge device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes
            Operation Id: Nodes_ListByDataBoxEdgeDevice
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeNode" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt; GetExtendedInformation (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt; GetExtendedInformation(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetExtendedInformation(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedInformation (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceExtendedInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedInformation : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&#xA;override this.GetExtendedInformation : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;" Usage="dataBoxEdgeDeviceResource.GetExtendedInformation cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets additional information for the specified Azure Stack Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation
            Operation Id: Devices_GetExtendedInformation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt; GetExtendedInformationAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt; GetExtendedInformationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetExtendedInformationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedInformationAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceExtendedInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedInformationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt;&#xA;override this.GetExtendedInformationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetExtendedInformationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets additional information for the specified Azure Stack Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation
            Operation Id: Devices_GetExtendedInformation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.NetworkSettingResource GetNetworkSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.NetworkSettingResource GetNetworkSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetNetworkSetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSetting () As NetworkSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSetting : unit -&gt; Azure.ResourceManager.DataBoxEdge.NetworkSettingResource&#xA;override this.GetNetworkSetting : unit -&gt; Azure.ResourceManager.DataBoxEdge.NetworkSettingResource" Usage="dataBoxEdgeDeviceResource.GetNetworkSetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.NetworkSettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a NetworkSettingResource along with the instance operations that can be performed on it in the DataBoxEdgeDevice. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.NetworkSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt; GetNetworkSettings (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt; GetNetworkSettings(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetNetworkSettings(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSettings (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceNetworkSettings)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSettings : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;&#xA;override this.GetNetworkSettings : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;" Usage="dataBoxEdgeDeviceResource.GetNetworkSettings cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the network settings of the specified Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default
            Operation Id: Devices_GetNetworkSettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;&gt; GetNetworkSettingsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;&gt; GetNetworkSettingsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetNetworkSettingsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSettingsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceNetworkSettings))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSettingsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;&gt;&#xA;override this.GetNetworkSettingsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetNetworkSettingsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceNetworkSettings&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the network settings of the specified Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default
            Operation Id: Devices_GetNetworkSettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodesByDataBoxEdgeDevice">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt; GetNodesByDataBoxEdgeDevice (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.Node&gt; GetNodesByDataBoxEdgeDevice(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetNodesByDataBoxEdgeDevice(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNodesByDataBoxEdgeDevice (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Node)" />
      <MemberSignature Language="F#" Value="abstract member GetNodesByDataBoxEdgeDevice : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt;&#xA;override this.GetNodesByDataBoxEdgeDevice : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt;" Usage="dataBoxEdgeDeviceResource.GetNodesByDataBoxEdgeDevice cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the nodes currently configured under this Data Box Edge device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes
            Operation Id: Nodes_ListByDataBoxEdgeDevice
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataBoxEdge.Models.Node" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodesByDataBoxEdgeDeviceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt; GetNodesByDataBoxEdgeDeviceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.Node&gt; GetNodesByDataBoxEdgeDeviceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetNodesByDataBoxEdgeDeviceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNodesByDataBoxEdgeDeviceAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Node)" />
      <MemberSignature Language="F#" Value="abstract member GetNodesByDataBoxEdgeDeviceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt;&#xA;override this.GetNodesByDataBoxEdgeDeviceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt;" Usage="dataBoxEdgeDeviceResource.GetNodesByDataBoxEdgeDeviceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataBoxEdge.Models.Node&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the nodes currently configured under this Data Box Edge device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes
            Operation Id: Nodes_ListByDataBoxEdgeDevice
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataBoxEdge.Models.Node" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrder">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.OrderResource GetOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.OrderResource GetOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetOrder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrder () As OrderResource" />
      <MemberSignature Language="F#" Value="abstract member GetOrder : unit -&gt; Azure.ResourceManager.DataBoxEdge.OrderResource&#xA;override this.GetOrder : unit -&gt; Azure.ResourceManager.DataBoxEdge.OrderResource" Usage="dataBoxEdgeDeviceResource.GetOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.OrderResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a OrderResource along with the instance operations that can be performed on it in the DataBoxEdgeDevice. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.OrderResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRole">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt; GetRole (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.RoleResource&gt; GetRole(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetRole(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRole (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRole : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt;&#xA;override this.GetRole : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt;" Usage="dataBoxEdgeDeviceResource.GetRole (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The role name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific role by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}
            Operation Id: Roles_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt;&gt; GetRoleAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.RoleResource&gt;&gt; GetRoleAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetRoleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRoleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt;&gt;&#xA;override this.GetRoleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetRoleAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.RoleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The role name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific role by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}
            Operation Id: Roles_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.RoleCollection GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.RoleCollection GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoles () As RoleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRoles : unit -&gt; Azure.ResourceManager.DataBoxEdge.RoleCollection&#xA;override this.GetRoles : unit -&gt; Azure.ResourceManager.DataBoxEdge.RoleCollection" Usage="dataBoxEdgeDeviceResource.GetRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.RoleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RoleResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of RoleResources and their operations over a RoleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShare">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt; GetShare (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.ShareResource&gt; GetShare(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetShare(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShare (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareResource)" />
      <MemberSignature Language="F#" Value="abstract member GetShare : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt;&#xA;override this.GetShare : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt;" Usage="dataBoxEdgeDeviceResource.GetShare (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The share name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a share by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}
            Operation Id: Shares_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShareAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt;&gt; GetShareAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.ShareResource&gt;&gt; GetShareAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetShareAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShareAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareResource))" />
      <MemberSignature Language="F#" Value="abstract member GetShareAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt;&gt;&#xA;override this.GetShareAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetShareAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.ShareResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The share name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a share by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}
            Operation Id: Shares_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetShares">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.ShareCollection GetShares ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.ShareCollection GetShares() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetShares" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShares () As ShareCollection" />
      <MemberSignature Language="F#" Value="abstract member GetShares : unit -&gt; Azure.ResourceManager.DataBoxEdge.ShareCollection&#xA;override this.GetShares : unit -&gt; Azure.ResourceManager.DataBoxEdge.ShareCollection" Usage="dataBoxEdgeDeviceResource.GetShares " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.ShareCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ShareResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of ShareResources and their operations over a ShareResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccount">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt; GetStorageAccount (string storageAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt; GetStorageAccount(string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetStorageAccount(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccount (storageAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StorageAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccount : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;&#xA;override this.GetStorageAccount : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;" Usage="dataBoxEdgeDeviceResource.GetStorageAccount (storageAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="storageAccountName"> The storage account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a StorageAccount by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}
            Operation Id: StorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;&gt; GetStorageAccountAsync (string storageAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;&gt; GetStorageAccountAsync(string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetStorageAccountAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountAsync (storageAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StorageAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;&gt;&#xA;override this.GetStorageAccountAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetStorageAccountAsync (storageAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="storageAccountName"> The storage account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a StorageAccount by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}
            Operation Id: StorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountCredential">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt; GetStorageAccountCredential (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt; GetStorageAccountCredential(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetStorageAccountCredential(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountCredential (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StorageAccountCredentialResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;&#xA;override this.GetStorageAccountCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;" Usage="dataBoxEdgeDeviceResource.GetStorageAccountCredential (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The storage account credential name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified storage account credential.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}
            Operation Id: StorageAccountCredentials_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountCredentialAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;&gt; GetStorageAccountCredentialAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;&gt; GetStorageAccountCredentialAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetStorageAccountCredentialAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountCredentialAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StorageAccountCredentialResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;&gt;&#xA;override this.GetStorageAccountCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetStorageAccountCredentialAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The storage account credential name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified storage account credential.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}
            Operation Id: StorageAccountCredentials_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialCollection GetStorageAccountCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialCollection GetStorageAccountCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetStorageAccountCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountCredentials () As StorageAccountCredentialCollection" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountCredentials : unit -&gt; Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialCollection&#xA;override this.GetStorageAccountCredentials : unit -&gt; Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialCollection" Usage="dataBoxEdgeDeviceResource.GetStorageAccountCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.StorageAccountCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StorageAccountCredentialResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of StorageAccountCredentialResources and their operations over a StorageAccountCredentialResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.StorageAccountCollection GetStorageAccounts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.StorageAccountCollection GetStorageAccounts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetStorageAccounts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccounts () As StorageAccountCollection" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccounts : unit -&gt; Azure.ResourceManager.DataBoxEdge.StorageAccountCollection&#xA;override this.GetStorageAccounts : unit -&gt; Azure.ResourceManager.DataBoxEdge.StorageAccountCollection" Usage="dataBoxEdgeDeviceResource.GetStorageAccounts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.StorageAccountCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StorageAccountResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of StorageAccountResources and their operations over a StorageAccountResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrigger">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt; GetTrigger (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.TriggerResource&gt; GetTrigger(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetTrigger(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrigger (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TriggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;&#xA;override this.GetTrigger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;" Usage="dataBoxEdgeDeviceResource.GetTrigger (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The trigger name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific trigger by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTriggerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;&gt; GetTriggerAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;&gt; GetTriggerAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetTriggerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggerAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TriggerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;&gt;&#xA;override this.GetTriggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetTriggerAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.TriggerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The trigger name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific trigger by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}
            Operation Id: Triggers_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTriggers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.TriggerCollection GetTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.TriggerCollection GetTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTriggers () As TriggerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTriggers : unit -&gt; Azure.ResourceManager.DataBoxEdge.TriggerCollection&#xA;override this.GetTriggers : unit -&gt; Azure.ResourceManager.DataBoxEdge.TriggerCollection" Usage="dataBoxEdgeDeviceResource.GetTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.TriggerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TriggerResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of TriggerResources and their operations over a TriggerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateSummary">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.UpdateSummaryResource GetUpdateSummary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.UpdateSummaryResource GetUpdateSummary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetUpdateSummary" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUpdateSummary () As UpdateSummaryResource" />
      <MemberSignature Language="F#" Value="abstract member GetUpdateSummary : unit -&gt; Azure.ResourceManager.DataBoxEdge.UpdateSummaryResource&#xA;override this.GetUpdateSummary : unit -&gt; Azure.ResourceManager.DataBoxEdge.UpdateSummaryResource" Usage="dataBoxEdgeDeviceResource.GetUpdateSummary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.UpdateSummaryResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a UpdateSummaryResource along with the instance operations that can be performed on it in the DataBoxEdgeDevice. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.UpdateSummaryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateSummary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt; GetUpdateSummary (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt; GetUpdateSummary(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetUpdateSummary(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUpdateSummary (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceUpdateSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetUpdateSummary : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;&#xA;override this.GetUpdateSummary : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;" Usage="dataBoxEdgeDeviceResource.GetUpdateSummary cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default
            Operation Id: Devices_GetUpdateSummary
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateSummaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;&gt; GetUpdateSummaryAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;&gt; GetUpdateSummaryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetUpdateSummaryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUpdateSummaryAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceUpdateSummary))" />
      <MemberSignature Language="F#" Value="abstract member GetUpdateSummaryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;&gt;&#xA;override this.GetUpdateSummaryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetUpdateSummaryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceUpdateSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default
            Operation Id: Devices_GetUpdateSummary
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt; GetUser (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.UserResource&gt; GetUser(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetUser(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUser (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UserResource)" />
      <MemberSignature Language="F#" Value="abstract member GetUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt;&#xA;override this.GetUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt;" Usage="dataBoxEdgeDeviceResource.GetUser (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The user name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified user.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}
            Operation Id: Users_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt;&gt; GetUserAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.UserResource&gt;&gt; GetUserAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetUserAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUserAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UserResource))" />
      <MemberSignature Language="F#" Value="abstract member GetUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt;&gt;&#xA;override this.GetUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.GetUserAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.UserResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The user name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified user.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}
            Operation Id: Users_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.UserCollection GetUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.UserCollection GetUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.GetUsers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsers () As UserCollection" />
      <MemberSignature Language="F#" Value="abstract member GetUsers : unit -&gt; Azure.ResourceManager.DataBoxEdge.UserCollection&#xA;override this.GetUsers : unit -&gt; Azure.ResourceManager.DataBoxEdge.UserCollection" Usage="dataBoxEdgeDeviceResource.GetUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.UserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of UserResources in the DataBoxEdgeDevice. </summary>
        <returns> An object representing collection of UserResources and their operations over a UserResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallUpdates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation InstallUpdates (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation InstallUpdates(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.InstallUpdates(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InstallUpdates (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member InstallUpdates : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.InstallUpdates : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.InstallUpdates (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Installs the updates on the Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates
            Operation Id: Devices_InstallUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallUpdatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; InstallUpdatesAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; InstallUpdatesAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.InstallUpdatesAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InstallUpdatesAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member InstallUpdatesAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.InstallUpdatesAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.InstallUpdatesAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Installs the updates on the Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates
            Operation Id: Devices_InstallUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;" Usage="dataBoxEdgeDeviceResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScanForUpdates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ScanForUpdates (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ScanForUpdates(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.ScanForUpdates(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ScanForUpdates (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ScanForUpdates : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ScanForUpdates : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.ScanForUpdates (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Scans for updates on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates
            Operation Id: Devices_ScanForUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScanForUpdatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ScanForUpdatesAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ScanForUpdatesAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.ScanForUpdatesAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ScanForUpdatesAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ScanForUpdatesAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ScanForUpdatesAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.ScanForUpdatesAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Scans for updates on a Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates
            Operation Id: Devices_ScanForUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;" Usage="dataBoxEdgeDeviceResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerSupportPackage">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation TriggerSupportPackage (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation TriggerSupportPackage(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.TriggerSupportPackage(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerSupportPackage (waitUntil As WaitUntil, content As TriggerSupportPackageContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member TriggerSupportPackage : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.TriggerSupportPackage : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.TriggerSupportPackage (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The trigger support package request object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers support package on the device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage
            Operation Id: SupportPackages_TriggerSupportPackage
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerSupportPackageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; TriggerSupportPackageAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; TriggerSupportPackageAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.TriggerSupportPackageAsync(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerSupportPackageAsync (waitUntil As WaitUntil, content As TriggerSupportPackageContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member TriggerSupportPackageAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.TriggerSupportPackageAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.TriggerSupportPackageAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The trigger support package request object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers support package on the device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage
            Operation Id: SupportPackages_TriggerSupportPackage
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerSupportPackageSupportPackage">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation TriggerSupportPackageSupportPackage (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation TriggerSupportPackageSupportPackage(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.TriggerSupportPackageSupportPackage(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerSupportPackageSupportPackage (waitUntil As WaitUntil, content As TriggerSupportPackageContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member TriggerSupportPackageSupportPackage : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.TriggerSupportPackageSupportPackage : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataBoxEdgeDeviceResource.TriggerSupportPackageSupportPackage (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The trigger support package request object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers support package on the device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage
            Operation Id: SupportPackages_TriggerSupportPackage
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerSupportPackageSupportPackageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; TriggerSupportPackageSupportPackageAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; TriggerSupportPackageSupportPackageAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.TriggerSupportPackageSupportPackageAsync(Azure.WaitUntil,Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerSupportPackageSupportPackageAsync (waitUntil As WaitUntil, content As TriggerSupportPackageContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member TriggerSupportPackageSupportPackageAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.TriggerSupportPackageSupportPackageAsync : Azure.WaitUntil * Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataBoxEdgeDeviceResource.TriggerSupportPackageSupportPackageAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.TriggerSupportPackageContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The trigger support package request object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers support package on the device
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage
            Operation Id: SupportPackages_TriggerSupportPackage
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; Update (Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt; Update(class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.Update(Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As DataBoxEdgeDevicePatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&#xA;override this.Update : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;" Usage="dataBoxEdgeDeviceResource.Update (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The resource parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Modifies a Data Box Edge/Data Box Gateway resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; UpdateAsync (Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.UpdateAsync(Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As DataBoxEdgeDevicePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;" Usage="dataBoxEdgeDeviceResource.UpdateAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDevicePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The resource parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Modifies a Data Box Edge/Data Box Gateway resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}
            Operation Id: Devices_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt; UpdateExtendedInformation (Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt; UpdateExtendedInformation(class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.UpdateExtendedInformation(Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateExtendedInformation (patch As DataBoxEdgeDeviceExtendedInfoPatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataBoxEdgeDeviceExtendedInfo)" />
      <MemberSignature Language="F#" Value="abstract member UpdateExtendedInformation : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&#xA;override this.UpdateExtendedInformation : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;" Usage="dataBoxEdgeDeviceResource.UpdateExtendedInformation (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The patch object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets additional information for the specified Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateExtendedInformation
            Operation Id: Devices_UpdateExtendedInformation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt; UpdateExtendedInformationAsync (Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt; UpdateExtendedInformationAsync(class Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.UpdateExtendedInformationAsync(Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateExtendedInformationAsync (patch As DataBoxEdgeDeviceExtendedInfoPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataBoxEdgeDeviceExtendedInfo))" />
      <MemberSignature Language="F#" Value="abstract member UpdateExtendedInformationAsync : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt;&#xA;override this.UpdateExtendedInformationAsync : Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt;" Usage="dataBoxEdgeDeviceResource.UpdateExtendedInformationAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.DataBoxEdge.Models.DataBoxEdgeDeviceExtendedInfoPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The patch object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets additional information for the specified Data Box Edge/Data Box Gateway device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateExtendedInformation
            Operation Id: Devices_UpdateExtendedInformation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UploadCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt; UploadCertificate (Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt; UploadCertificate(class Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.UploadCertificate(Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadCertificate (content As UploadCertificateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UploadCertificateResponse)" />
      <MemberSignature Language="F#" Value="abstract member UploadCertificate : Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;&#xA;override this.UploadCertificate : Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;" Usage="dataBoxEdgeDeviceResource.UploadCertificate (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The upload certificate request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads registration certificate for the device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate
            Operation Id: Devices_UploadCertificate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UploadCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;&gt; UploadCertificateAsync (Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;&gt; UploadCertificateAsync(class Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.UploadCertificateAsync(Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadCertificateAsync (content As UploadCertificateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UploadCertificateResponse))" />
      <MemberSignature Language="F#" Value="abstract member UploadCertificateAsync : Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;&gt;&#xA;override this.UploadCertificateAsync : Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;&gt;" Usage="dataBoxEdgeDeviceResource.UploadCertificateAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.DataBoxEdge.Models.UploadCertificateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The upload certificate request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads registration certificate for the device.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate
            Operation Id: Devices_UploadCertificate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
