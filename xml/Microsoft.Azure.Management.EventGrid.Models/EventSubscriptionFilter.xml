<Type Name="EventSubscriptionFilter" FullName="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter">
  <TypeSignature Language="C#" Value="public class EventSubscriptionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSubscriptionFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSubscriptionFilter" />
  <TypeSignature Language="F#" Value="type EventSubscriptionFilter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Filter for the Event Subscription.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSubscriptionFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the EventSubscriptionFilter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSubscriptionFilter (string subjectBeginsWith = default, string subjectEndsWith = default, System.Collections.Generic.IList&lt;string&gt; includedEventTypes = default, bool? isSubjectCaseSensitive = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; advancedFilters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subjectBeginsWith, string subjectEndsWith, class System.Collections.Generic.IList`1&lt;string&gt; includedEventTypes, valuetype System.Nullable`1&lt;bool&gt; isSubjectCaseSensitive, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; advancedFilters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional subjectBeginsWith As String = Nothing, Optional subjectEndsWith As String = Nothing, Optional includedEventTypes As IList(Of String) = Nothing, Optional isSubjectCaseSensitive As Nullable(Of Boolean) = Nothing, Optional advancedFilters As IList(Of AdvancedFilter) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter : string * string * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; -&gt; Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter" Usage="new Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter (subjectBeginsWith, subjectEndsWith, includedEventTypes, isSubjectCaseSensitive, advancedFilters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subjectBeginsWith" Type="System.String" />
        <Parameter Name="subjectEndsWith" Type="System.String" />
        <Parameter Name="includedEventTypes" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="isSubjectCaseSensitive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="advancedFilters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="subjectBeginsWith">An optional string to filter events
            for an event subscription based on a resource path prefix.
            The format of this depends on the publisher of the events.
            Wildcard characters are not supported in this path.</param>
        <param name="subjectEndsWith">An optional string to filter events
            for an event subscription based on a resource path suffix.
            Wildcard characters are not supported in this path.</param>
        <param name="includedEventTypes">A list of applicable event types
            that need to be part of the event subscription. If it is desired to
            subscribe to all default event types, set the IncludedEventTypes to
            null.</param>
        <param name="isSubjectCaseSensitive">Specifies if the
            SubjectBeginsWith and SubjectEndsWith properties of the filter
            should be compared in a case sensitive manner.</param>
        <param name="advancedFilters">An array of advanced filters that are
            used for filtering event subscriptions.</param>
        <summary>
            Initializes a new instance of the EventSubscriptionFilter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; AdvancedFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; AdvancedFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.AdvancedFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property AdvancedFilters As IList(Of AdvancedFilter)" />
      <MemberSignature Language="F#" Value="member this.AdvancedFilters : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.AdvancedFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="advancedFilters")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="advancedFilters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an array of advanced filters that are used for
            filtering event subscriptions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludedEventTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; IncludedEventTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; IncludedEventTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.IncludedEventTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludedEventTypes As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.IncludedEventTypes : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.IncludedEventTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="includedEventTypes")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="includedEventTypes")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of applicable event types that need to be part
            of the event subscription. If it is desired to subscribe to all
            default event types, set the IncludedEventTypes to null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubjectCaseSensitive">
      <MemberSignature Language="C#" Value="public bool? IsSubjectCaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSubjectCaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.IsSubjectCaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSubjectCaseSensitive As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSubjectCaseSensitive : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.IsSubjectCaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="isSubjectCaseSensitive")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="isSubjectCaseSensitive")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specifies if the SubjectBeginsWith and SubjectEndsWith
            properties of the filter
            should be compared in a case sensitive manner.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectBeginsWith">
      <MemberSignature Language="C#" Value="public string SubjectBeginsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubjectBeginsWith" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.SubjectBeginsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectBeginsWith As String" />
      <MemberSignature Language="F#" Value="member this.SubjectBeginsWith : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.SubjectBeginsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="subjectBeginsWith")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="subjectBeginsWith")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional string to filter events for an event
            subscription based on a resource path prefix.
            The format of this depends on the publisher of the events.
            Wildcard characters are not supported in this path.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEndsWith">
      <MemberSignature Language="C#" Value="public string SubjectEndsWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubjectEndsWith" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.SubjectEndsWith" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEndsWith As String" />
      <MemberSignature Language="F#" Value="member this.SubjectEndsWith : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFilter.SubjectEndsWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="subjectEndsWith")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="subjectEndsWith")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional string to filter events for an event
            subscription based on a resource path suffix.
            Wildcard characters are not supported in this path.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
