<Type Name="EventChannelFilter" FullName="Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter">
  <TypeSignature Language="C#" Value="public class EventChannelFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventChannelFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventChannelFilter" />
  <TypeSignature Language="F#" Value="type EventChannelFilter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Filter for the Event Channel.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventChannelFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the EventChannelFilter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventChannelFilter (bool? enableAdvancedFilteringOnArrays = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; advancedFilters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;bool&gt; enableAdvancedFilteringOnArrays, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; advancedFilters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional enableAdvancedFilteringOnArrays As Nullable(Of Boolean) = Nothing, Optional advancedFilters As IList(Of AdvancedFilter) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter : Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; -&gt; Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter" Usage="new Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter (enableAdvancedFilteringOnArrays, advancedFilters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableAdvancedFilteringOnArrays" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="advancedFilters" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="enableAdvancedFilteringOnArrays">Allows advanced
            filters to be evaluated against an array of values instead of
            expecting a singular value. The default value is either false or
            null.</param>
        <param name="advancedFilters">An array of advanced filters that are
            used for filtering event channels.</param>
        <summary>
            Initializes a new instance of the EventChannelFilter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; AdvancedFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; AdvancedFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter.AdvancedFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property AdvancedFilters As IList(Of AdvancedFilter)" />
      <MemberSignature Language="F#" Value="member this.AdvancedFilters : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter.AdvancedFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="advancedFilters")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="advancedFilters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.AdvancedFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an array of advanced filters that are used for
            filtering event channels.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAdvancedFilteringOnArrays">
      <MemberSignature Language="C#" Value="public bool? EnableAdvancedFilteringOnArrays { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableAdvancedFilteringOnArrays" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter.EnableAdvancedFilteringOnArrays" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAdvancedFilteringOnArrays As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableAdvancedFilteringOnArrays : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.EventChannelFilter.EnableAdvancedFilteringOnArrays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="enableAdvancedFilteringOnArrays")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="enableAdvancedFilteringOnArrays")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets allows advanced filters to be evaluated against an
            array of values instead of expecting a singular value. The default
            value is either false or null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
