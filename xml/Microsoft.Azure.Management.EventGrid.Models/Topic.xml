<Type Name="Topic" FullName="Microsoft.Azure.Management.EventGrid.Models.Topic">
  <TypeSignature Language="C#" Value="public class Topic : Microsoft.Azure.Management.EventGrid.Models.TrackedResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Topic extends Microsoft.Azure.Management.EventGrid.Models.TrackedResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.EventGrid.Models.Topic" />
  <TypeSignature Language="VB.NET" Value="Public Class Topic&#xA;Inherits TrackedResource" />
  <TypeSignature Language="F#" Value="type Topic = class&#xA;    inherit TrackedResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.EventGrid.Models.TrackedResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            EventGrid Topic
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Topic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.Topic.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Topic class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Topic (string location, string id = default, string name = default, string type = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; privateEndpointConnections = default, string provisioningState = default, string endpoint = default, string inputSchema = default, Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping inputSchemaMapping = default, string metricResourceId = default, string publicNetworkAccess = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; inboundIpRules = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string location, string id, string name, string type, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; privateEndpointConnections, string provisioningState, string endpoint, string inputSchema, class Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping inputSchemaMapping, string metricResourceId, string publicNetworkAccess, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; inboundIpRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.Topic.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection},System.String,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.EventGrid.Models.InboundIpRule})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As String, Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional privateEndpointConnections As IList(Of PrivateEndpointConnection) = Nothing, Optional provisioningState As String = Nothing, Optional endpoint As String = Nothing, Optional inputSchema As String = Nothing, Optional inputSchemaMapping As InputSchemaMapping = Nothing, Optional metricResourceId As String = Nothing, Optional publicNetworkAccess As String = Nothing, Optional inboundIpRules As IList(Of InboundIpRule) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.EventGrid.Models.Topic : string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; * string * string * string * Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping * string * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; -&gt; Microsoft.Azure.Management.EventGrid.Models.Topic" Usage="new Microsoft.Azure.Management.EventGrid.Models.Topic (location, id, name, type, tags, privateEndpointConnections, provisioningState, endpoint, inputSchema, inputSchemaMapping, metricResourceId, publicNetworkAccess, inboundIpRules)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="endpoint" Type="System.String" />
        <Parameter Name="inputSchema" Type="System.String" />
        <Parameter Name="inputSchemaMapping" Type="Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping" />
        <Parameter Name="metricResourceId" Type="System.String" />
        <Parameter Name="publicNetworkAccess" Type="System.String" />
        <Parameter Name="inboundIpRules" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt;" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnections">To be added.</param>
        <param name="location">Location of the resource.</param>
        <param name="id">Fully qualified identifier of the
            resource.</param>
        <param name="name">Name of the resource.</param>
        <param name="type">Type of the resource.</param>
        <param name="tags">Tags of the resource.</param>
        <param name="provisioningState">Provisioning state of the topic.
            Possible values include: 'Creating', 'Updating', 'Deleting',
            'Succeeded', 'Canceled', 'Failed'</param>
        <param name="endpoint">Endpoint for the topic.</param>
        <param name="inputSchema">This determines the format that Event
            Grid should expect for incoming events published to the topic.
            Possible values include: 'EventGridSchema', 'CustomEventSchema',
            'CloudEventSchemaV1_0'</param>
        <param name="inputSchemaMapping">This enables publishing using
            custom event schemas. An InputSchemaMapping can be specified to map
            various properties of a source schema to various required
            properties of the EventGridEvent schema.</param>
        <param name="metricResourceId">Metric resource id for the
            topic.</param>
        <param name="publicNetworkAccess">This determines if traffic is
            allowed over public network. By default it is enabled.
            You can further restrict to specific IPs by configuring &lt;seealso
            cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules"
            /&gt;. Possible values include: 'Enabled', 'Disabled'</param>
        <param name="inboundIpRules">This can be used to restrict traffic
            from specific IPs instead of all IPs. Note: These are considered
            only if PublicNetworkAccess is enabled.</param>
        <summary>
            Initializes a new instance of the Topic class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public string Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Endpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoint As String" />
      <MemberSignature Language="F#" Value="member this.Endpoint : string" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.endpoint")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.endpoint")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets endpoint for the topic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InboundIpRules">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; InboundIpRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; InboundIpRules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.InboundIpRules" />
      <MemberSignature Language="VB.NET" Value="Public Property InboundIpRules As IList(Of InboundIpRule)" />
      <MemberSignature Language="F#" Value="member this.InboundIpRules : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.InboundIpRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.inboundIpRules")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.inboundIpRules")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this can be used to restrict traffic from specific IPs
            instead of all IPs. Note: These are considered only if
            PublicNetworkAccess is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSchema">
      <MemberSignature Language="C#" Value="public string InputSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property InputSchema As String" />
      <MemberSignature Language="F#" Value="member this.InputSchema : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.inputSchema")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.inputSchema")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this determines the format that Event Grid should
            expect for incoming events published to the topic. Possible values
            include: 'EventGridSchema', 'CustomEventSchema',
            'CloudEventSchemaV1_0'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSchemaMapping">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping InputSchemaMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping InputSchemaMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchemaMapping" />
      <MemberSignature Language="VB.NET" Value="Public Property InputSchemaMapping As InputSchemaMapping" />
      <MemberSignature Language="F#" Value="member this.InputSchemaMapping : Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchemaMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.inputSchemaMapping")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.inputSchemaMapping")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this enables publishing using custom event schemas. An
            InputSchemaMapping can be specified to map various properties of a
            source schema to various required properties of the EventGridEvent
            schema.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetricResourceId">
      <MemberSignature Language="C#" Value="public string MetricResourceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetricResourceId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.MetricResourceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetricResourceId As String" />
      <MemberSignature Language="F#" Value="member this.MetricResourceId : string" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.MetricResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.metricResourceId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.metricResourceId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets metric resource id for the topic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; PrivateEndpointConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; PrivateEndpointConnections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.PrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateEndpointConnections As IList(Of PrivateEndpointConnection)" />
      <MemberSignature Language="F#" Value="member this.PrivateEndpointConnections : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.PrivateEndpointConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.privateEndpointConnections")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.privateEndpointConnections")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets provisioning state of the topic. Possible values include:
            'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled',
            'Failed'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicNetworkAccess">
      <MemberSignature Language="C#" Value="public string PublicNetworkAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicNetworkAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.PublicNetworkAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicNetworkAccess As String" />
      <MemberSignature Language="F#" Value="member this.PublicNetworkAccess : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.PublicNetworkAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.publicNetworkAccess")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.publicNetworkAccess")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this determines if traffic is allowed over public
            network. By default it is enabled.
            You can further restrict to specific IPs by configuring
            &amp;lt;seealso
            cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules"
            /&amp;gt;. Possible values include: 'Enabled', 'Disabled'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.Topic.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="topic.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
