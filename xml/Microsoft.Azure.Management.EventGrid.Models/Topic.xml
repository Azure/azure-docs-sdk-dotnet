<Type Name="Topic" FullName="Microsoft.Azure.Management.EventGrid.Models.Topic">
  <TypeSignature Language="C#" Value="public class Topic : Microsoft.Azure.Management.EventGrid.Models.TrackedResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Topic extends Microsoft.Azure.Management.EventGrid.Models.TrackedResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.EventGrid.Models.Topic" />
  <TypeSignature Language="VB.NET" Value="Public Class Topic&#xA;Inherits TrackedResource" />
  <TypeSignature Language="F#" Value="type Topic = class&#xA;    inherit TrackedResource" />
  <TypeSignature Language="C++ CLI" Value="public ref class Topic : Microsoft::Azure::Management::EventGrid::Models::TrackedResource" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class Topic : Microsoft::Azure::Management::EventGrid::Models::TrackedResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.EventGrid.Models.TrackedResource</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Rest.Serialization.JsonTransformation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            EventGrid Topic
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Topic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.Topic.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Topic();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Topic();" />
      <MemberSignature Language="C++ WINRT" Value=" Topic();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
            Initializes a new instance of the Topic class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Topic (string location, string id = null, string name = null, string type = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, string provisioningState = null, string endpoint = null, string inputSchema = null, Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping inputSchemaMapping = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string location, string id, string name, string type, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string provisioningState, string endpoint, string inputSchema, class Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping inputSchemaMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.Topic.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.EventGrid.Models.Topic : string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * string * Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping -&gt; Microsoft.Azure.Management.EventGrid.Models.Topic" Usage="new Microsoft.Azure.Management.EventGrid.Models.Topic (location, id, name, type, tags, provisioningState, endpoint, inputSchema, inputSchemaMapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="endpoint" Type="System.String" />
        <Parameter Name="inputSchema" Type="System.String" />
        <Parameter Name="inputSchemaMapping" Type="Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping" />
      </Parameters>
      <Docs>
        <param name="location">Location of the resource</param>
        <param name="id">Fully qualified identifier of the resource</param>
        <param name="name">Name of the resource</param>
        <param name="type">Type of the resource</param>
        <param name="tags">Tags of the resource</param>
        <param name="provisioningState">Provisioning state of the topic.
            Possible values include: 'Creating', 'Updating', 'Deleting',
            'Succeeded', 'Canceled', 'Failed'</param>
        <param name="endpoint">Endpoint for the topic.</param>
        <param name="inputSchema">This determines the format that Event
            Grid should expect for incoming events published to the topic.
            Possible values include: 'EventGridSchema', 'CustomEventSchema',
            'CloudEventV01Schema'</param>
        <param name="inputSchemaMapping">This enables publishing using
            custom event schemas. An InputSchemaMapping can be specified to map
            various properties of a source schema to various required
            properties of the EventGridEvent schema.</param>
        <summary>
            Initializes a new instance of the Topic class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public string Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Endpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoint As String" />
      <MemberSignature Language="F#" Value="member this.Endpoint : string" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.Endpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Endpoint { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Endpoint { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.endpoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets endpoint for the topic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSchema">
      <MemberSignature Language="C#" Value="public string InputSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property InputSchema As String" />
      <MemberSignature Language="F#" Value="member this.InputSchema : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.inputSchema")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this determines the format that Event Grid should
            expect for incoming events published to the topic. Possible values
            include: 'EventGridSchema', 'CustomEventSchema',
            'CloudEventV01Schema'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSchemaMapping">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping InputSchemaMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping InputSchemaMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchemaMapping" />
      <MemberSignature Language="VB.NET" Value="Public Property InputSchemaMapping As InputSchemaMapping" />
      <MemberSignature Language="F#" Value="member this.InputSchemaMapping : Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.InputSchemaMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.inputSchemaMapping")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.InputSchemaMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this enables publishing using custom event schemas. An
            InputSchemaMapping can be specified to map various properties of a
            source schema to various required properties of the EventGridEvent
            schema.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.Topic.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.EventGrid.Models.Topic.ProvisioningState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProvisioningState { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ProvisioningState { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets provisioning state of the topic. Possible values include:
            'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled',
            'Failed'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.Topic.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="topic.Validate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Validate();" />
      <MemberSignature Language="C++ WINRT" Value=" override void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>