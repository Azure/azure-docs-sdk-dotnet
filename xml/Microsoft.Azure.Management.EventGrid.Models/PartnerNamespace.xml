<Type Name="PartnerNamespace" FullName="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace">
  <TypeSignature Language="C#" Value="public class PartnerNamespace : Microsoft.Azure.Management.EventGrid.Models.TrackedResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartnerNamespace extends Microsoft.Azure.Management.EventGrid.Models.TrackedResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace" />
  <TypeSignature Language="VB.NET" Value="Public Class PartnerNamespace&#xA;Inherits TrackedResource" />
  <TypeSignature Language="F#" Value="type PartnerNamespace = class&#xA;    inherit TrackedResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.EventGrid.Models.TrackedResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            EventGrid Partner Namespace.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PartnerNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the PartnerNamespace class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PartnerNamespace (string location, string id = default, string name = default, string type = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; privateEndpointConnections = default, string provisioningState = default, string partnerRegistrationFullyQualifiedId = default, string endpoint = default, string publicNetworkAccess = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; inboundIpRules = default, bool? disableLocalAuth = default, string partnerTopicRoutingMode = default, Microsoft.Azure.Management.EventGrid.Models.SystemData systemData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string location, string id, string name, string type, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; privateEndpointConnections, string provisioningState, string partnerRegistrationFullyQualifiedId, string endpoint, string publicNetworkAccess, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; inboundIpRules, valuetype System.Nullable`1&lt;bool&gt; disableLocalAuth, string partnerTopicRoutingMode, class Microsoft.Azure.Management.EventGrid.Models.SystemData systemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection},System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.EventGrid.Models.InboundIpRule},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.EventGrid.Models.SystemData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As String, Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional privateEndpointConnections As IList(Of PrivateEndpointConnection) = Nothing, Optional provisioningState As String = Nothing, Optional partnerRegistrationFullyQualifiedId As String = Nothing, Optional endpoint As String = Nothing, Optional publicNetworkAccess As String = Nothing, Optional inboundIpRules As IList(Of InboundIpRule) = Nothing, Optional disableLocalAuth As Nullable(Of Boolean) = Nothing, Optional partnerTopicRoutingMode As String = Nothing, Optional systemData As SystemData = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace : string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; * string * string * string * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; * Nullable&lt;bool&gt; * string * Microsoft.Azure.Management.EventGrid.Models.SystemData -&gt; Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace" Usage="new Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace (location, id, name, type, tags, privateEndpointConnections, provisioningState, partnerRegistrationFullyQualifiedId, endpoint, publicNetworkAccess, inboundIpRules, disableLocalAuth, partnerTopicRoutingMode, systemData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="partnerRegistrationFullyQualifiedId" Type="System.String" />
        <Parameter Name="endpoint" Type="System.String" />
        <Parameter Name="publicNetworkAccess" Type="System.String" />
        <Parameter Name="inboundIpRules" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt;" />
        <Parameter Name="disableLocalAuth" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="partnerTopicRoutingMode" Type="System.String" />
        <Parameter Name="systemData" Type="Microsoft.Azure.Management.EventGrid.Models.SystemData" />
      </Parameters>
      <Docs>
        <param name="location">Location of the resource.</param>
        <param name="id">Fully qualified identifier of the
            resource.</param>
        <param name="name">Name of the resource.</param>
        <param name="type">Type of the resource.</param>
        <param name="tags">Tags of the resource.</param>
        <param name="privateEndpointConnections">To be added.</param>
        <param name="provisioningState">Provisioning state of the partner
            namespace. Possible values include: 'Creating', 'Updating',
            'Deleting', 'Succeeded', 'Canceled', 'Failed'</param>
        <param name="partnerRegistrationFullyQualifiedId">The fully
            qualified ARM Id of the partner registration that should be
            associated with this partner namespace. This takes the following
            format:
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.</param>
        <param name="endpoint">Endpoint for the partner namespace.</param>
        <param name="publicNetworkAccess">This determines if traffic is
            allowed over public network. By default it is enabled.
            You can further restrict to specific IPs by configuring &lt;seealso
            cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules"
            /&gt;. Possible values include: 'Enabled', 'Disabled'</param>
        <param name="inboundIpRules">This can be used to restrict traffic
            from specific IPs instead of all IPs. Note: These are considered
            only if PublicNetworkAccess is enabled.</param>
        <param name="disableLocalAuth">This boolean is used to enable or
            disable local auth. Default value is false. When the property is
            set to true, only AAD token will be used to authenticate if user is
            allowed to publish to the partner namespace.</param>
        <param name="partnerTopicRoutingMode">This determines if events
            published to this partner namespace should use the source attribute
            in the event payload
            or use the channel name in the header when matching to the partner
            topic. If none is specified, source attribute routing will be used
            to match the partner topic. Possible values include:
            'SourceEventAttribute', 'ChannelNameHeader'</param>
        <param name="systemData">The system metadata relating to Partner
            Namespace resource.</param>
        <summary>
            Initializes a new instance of the PartnerNamespace class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableLocalAuth">
      <MemberSignature Language="C#" Value="public bool? DisableLocalAuth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DisableLocalAuth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.DisableLocalAuth" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableLocalAuth As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DisableLocalAuth : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.DisableLocalAuth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.disableLocalAuth")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.disableLocalAuth")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this boolean is used to enable or disable local auth.
            Default value is false. When the property is set to true, only AAD
            token will be used to authenticate if user is allowed to publish to
            the partner namespace.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public string Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Endpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoint As String" />
      <MemberSignature Language="F#" Value="member this.Endpoint : string" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.endpoint")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.endpoint")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets endpoint for the partner namespace.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InboundIpRules">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; InboundIpRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; InboundIpRules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.InboundIpRules" />
      <MemberSignature Language="VB.NET" Value="Public Property InboundIpRules As IList(Of InboundIpRule)" />
      <MemberSignature Language="F#" Value="member this.InboundIpRules : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt; with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.InboundIpRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.inboundIpRules")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.inboundIpRules")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.InboundIpRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this can be used to restrict traffic from specific IPs
            instead of all IPs. Note: These are considered only if
            PublicNetworkAccess is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartnerRegistrationFullyQualifiedId">
      <MemberSignature Language="C#" Value="public string PartnerRegistrationFullyQualifiedId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartnerRegistrationFullyQualifiedId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PartnerRegistrationFullyQualifiedId" />
      <MemberSignature Language="VB.NET" Value="Public Property PartnerRegistrationFullyQualifiedId As String" />
      <MemberSignature Language="F#" Value="member this.PartnerRegistrationFullyQualifiedId : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PartnerRegistrationFullyQualifiedId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.partnerRegistrationFullyQualifiedId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.partnerRegistrationFullyQualifiedId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the fully qualified ARM Id of the partner registration
            that should be associated with this partner namespace. This takes
            the following format:
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartnerTopicRoutingMode">
      <MemberSignature Language="C#" Value="public string PartnerTopicRoutingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartnerTopicRoutingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PartnerTopicRoutingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PartnerTopicRoutingMode As String" />
      <MemberSignature Language="F#" Value="member this.PartnerTopicRoutingMode : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PartnerTopicRoutingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.partnerTopicRoutingMode")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.partnerTopicRoutingMode")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this determines if events published to this partner
            namespace should use the source attribute in the event payload
            or use the channel name in the header when matching to the partner
            topic. If none is specified, source attribute routing will be used
            to match the partner topic. Possible values include:
            'SourceEventAttribute', 'ChannelNameHeader'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; PrivateEndpointConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt; PrivateEndpointConnections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateEndpointConnections As IList(Of PrivateEndpointConnection)" />
      <MemberSignature Language="F#" Value="member this.PrivateEndpointConnections : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt;" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PrivateEndpointConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.privateEndpointConnections")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.privateEndpointConnections")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.EventGrid.Models.PrivateEndpointConnection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets provisioning state of the partner namespace. Possible values
            include: 'Creating', 'Updating', 'Deleting', 'Succeeded',
            'Canceled', 'Failed'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicNetworkAccess">
      <MemberSignature Language="C#" Value="public string PublicNetworkAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicNetworkAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PublicNetworkAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicNetworkAccess As String" />
      <MemberSignature Language="F#" Value="member this.PublicNetworkAccess : string with get, set" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.PublicNetworkAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.publicNetworkAccess")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.publicNetworkAccess")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this determines if traffic is allowed over public
            network. By default it is enabled.
            You can further restrict to specific IPs by configuring
            &amp;lt;seealso
            cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules"
            /&amp;gt;. Possible values include: 'Enabled', 'Disabled'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemData">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.EventGrid.Models.SystemData SystemData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.EventGrid.Models.SystemData SystemData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.SystemData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemData As SystemData" />
      <MemberSignature Language="F#" Value="member this.SystemData : Microsoft.Azure.Management.EventGrid.Models.SystemData" Usage="Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.SystemData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="systemData")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="systemData")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.SystemData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the system metadata relating to Partner Namespace resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.Models.PartnerNamespace.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="partnerNamespace.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
