<Type Name="EnergyServicesExtensions" FullName="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions">
  <TypeSignature Language="C#" Value="public static class EnergyServicesExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnergyServicesExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnergyServicesExtensions" />
  <TypeSignature Language="F#" Value="type EnergyServicesExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.EnergyServices. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailabilityLocation">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt; CheckNameAvailabilityLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt; CheckNameAvailabilityLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.CheckNameAvailabilityLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityLocation (subscriptionResource As SubscriptionResource, content As EnergyServiceNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EnergyServiceNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityLocation : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.CheckNameAvailabilityLocation (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.CheckNameAvailabilityLocation(Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityLocationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt; CheckNameAvailabilityLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt; CheckNameAvailabilityLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.CheckNameAvailabilityLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityLocationAsync (subscriptionResource As SubscriptionResource, content As EnergyServiceNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EnergyServiceNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.CheckNameAvailabilityLocationAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.CheckNameAvailabilityLocation(Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyService">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyService (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyService(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyService(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEnergyService (resourceGroupResource As ResourceGroupResource, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EnergyServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetEnergyService : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyService (resourceGroupResource, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="resourceName"> The resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns oep resource for a given name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OpenEnergyPlatform/energyServices/{resourceName}</description></item><item><term>Operation Id</term><description>EnergyServices_Get</description></item><item><term>Default Api Version</term><description>2022-04-04-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesResourceGroupResource.GetEnergyService(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyServiceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;&gt; GetEnergyServiceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;&gt; GetEnergyServiceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServiceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEnergyServiceAsync (resourceGroupResource As ResourceGroupResource, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EnergyServiceResource))" />
      <MemberSignature Language="F#" Value="static member GetEnergyServiceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;&gt;" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServiceAsync (resourceGroupResource, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="resourceName"> The resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns oep resource for a given name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OpenEnergyPlatform/energyServices/{resourceName}</description></item><item><term>Operation Id</term><description>EnergyServices_Get</description></item><item><term>Default Api Version</term><description>2022-04-04-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesResourceGroupResource.GetEnergyServiceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyServiceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EnergyServices.EnergyServiceResource GetEnergyServiceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EnergyServices.EnergyServiceResource GetEnergyServiceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEnergyServiceResource (client As ArmClient, id As ResourceIdentifier) As EnergyServiceResource" />
      <MemberSignature Language="F#" Value="static member GetEnergyServiceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EnergyServices.EnergyServiceResource" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServiceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EnergyServices.EnergyServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.EnergyServices.EnergyServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesArmClient.GetEnergyServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyServices">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EnergyServices.EnergyServiceCollection GetEnergyServices (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EnergyServices.EnergyServiceCollection GetEnergyServices(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServices(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEnergyServices (resourceGroupResource As ResourceGroupResource) As EnergyServiceCollection" />
      <MemberSignature Language="F#" Value="static member GetEnergyServices : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.EnergyServices.EnergyServiceCollection" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServices resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EnergyServices.EnergyServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of EnergyServiceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesResourceGroupResource.GetEnergyServices" /> instead.</description></item></summary>
        <returns> An object representing collection of EnergyServiceResources and their operations over a EnergyServiceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyServices">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServices (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServices(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServices(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEnergyServices (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EnergyServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetEnergyServices : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServices (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of oep resources under the given Azure Subscription ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/energyServices</description></item><item><term>Operation Id</term><description>EnergyServices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-04-04-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.GetEnergyServices(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyServicesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServicesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServicesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServicesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEnergyServicesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EnergyServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetEnergyServicesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;" Usage="Azure.ResourceManager.EnergyServices.EnergyServicesExtensions.GetEnergyServicesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of oep resources under the given Azure Subscription ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/energyServices</description></item><item><term>Operation Id</term><description>EnergyServices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-04-04-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.GetEnergyServices(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
