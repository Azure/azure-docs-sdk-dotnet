<Type Name="HttpClientPipelineTransport" FullName="System.ClientModel.Primitives.HttpClientPipelineTransport">
  <TypeSignature Language="C#" Value="public class HttpClientPipelineTransport : System.ClientModel.Primitives.PipelineTransport, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientPipelineTransport extends System.ClientModel.Primitives.PipelineTransport implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.HttpClientPipelineTransport" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientPipelineTransport&#xA;Inherits PipelineTransport&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type HttpClientPipelineTransport = class&#xA;    inherit PipelineTransport&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ClientModel.Primitives.PipelineTransport</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An implementation of <see cref="T:System.ClientModel.Primitives.PipelineTransport" /> that uses a
            <see cref="T:System.Net.Http.HttpClient" /> to send and receive HTTP requests and responses.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientPipelineTransport ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.Primitives.HttpClientPipelineTransport" /> that
            uses a shared default instance of <see cref="T:System.Net.Http.HttpClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientPipelineTransport (System.Net.Http.HttpClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.#ctor(System.Net.Http.HttpClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As HttpClient)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.Primitives.HttpClientPipelineTransport : System.Net.Http.HttpClient -&gt; System.ClientModel.Primitives.HttpClientPipelineTransport" Usage="new System.ClientModel.Primitives.HttpClientPipelineTransport client" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="System.Net.Http.HttpClient" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:System.Net.Http.HttpClient" /> that this transport
            instance will use to send and receive HTTP requests and responses.
            </param>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.Primitives.HttpClientPipelineTransport" /> that
            uses the provided <see cref="T:System.Net.Http.HttpClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageCore">
      <MemberSignature Language="C#" Value="protected override System.ClientModel.Primitives.PipelineMessage CreateMessageCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ClientModel.Primitives.PipelineMessage CreateMessageCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.CreateMessageCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateMessageCore () As PipelineMessage" />
      <MemberSignature Language="F#" Value="override this.CreateMessageCore : unit -&gt; System.ClientModel.Primitives.PipelineMessage" Usage="httpClientPipelineTransport.CreateMessageCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.PipelineMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new transport-specific instance of <see cref="T:System.ClientModel.Primitives.PipelineMessage" />.
            Types that derive from <see cref="T:System.ClientModel.Primitives.PipelineTransport" /> must implement this
            method to provide transport-specific functionality.
            </summary>
        <returns>A <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> that can be passed to
            <see cref="M:System.ClientModel.Primitives.PipelineTransport.Process(System.ClientModel.Primitives.PipelineMessage)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpClientPipelineTransport.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="httpClientPipelineTransport.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and
            unmanaged resources; <c>false</c> to release only unmanaged resources.
            </param>
        <summary>
            Releases the unmanaged resources used by the
            <see cref="T:System.ClientModel.Primitives.HttpClientPipelineTransport" /> and optionally disposes of
            the managed resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceivedResponse">
      <MemberSignature Language="C#" Value="protected virtual void OnReceivedResponse (System.ClientModel.Primitives.PipelineMessage message, System.Net.Http.HttpResponseMessage httpResponse);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReceivedResponse(class System.ClientModel.Primitives.PipelineMessage message, class System.Net.Http.HttpResponseMessage httpResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.OnReceivedResponse(System.ClientModel.Primitives.PipelineMessage,System.Net.Http.HttpResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReceivedResponse (message As PipelineMessage, httpResponse As HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="abstract member OnReceivedResponse : System.ClientModel.Primitives.PipelineMessage * System.Net.Http.HttpResponseMessage -&gt; unit&#xA;override this.OnReceivedResponse : System.ClientModel.Primitives.PipelineMessage * System.Net.Http.HttpResponseMessage -&gt; unit" Usage="httpClientPipelineTransport.OnReceivedResponse (message, httpResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="httpResponse" Type="System.Net.Http.HttpResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> containing the
            <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> created by the transport.</param>
        <param name="httpResponse">The <see cref="T:System.Net.Http.HttpResponseMessage" />
            returned by from the call to Send on <see cref="T:System.Net.Http.HttpClient" /> that the
            transport used to create <see cref="P:System.ClientModel.Primitives.PipelineMessage.Response" />.
            </param>
        <summary>
            A method that can be overridden by derived types to extend the default
            <see cref="T:System.ClientModel.Primitives.HttpClientPipelineTransport" /> logic.  It is called from
            <see cref="M:System.ClientModel.Primitives.HttpClientPipelineTransport.ProcessCore(System.ClientModel.Primitives.PipelineMessage)" /> after the transport has
            created the <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> and set it on
            <see cref="P:System.ClientModel.Primitives.PipelineMessage.Response" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendingRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnSendingRequest (System.ClientModel.Primitives.PipelineMessage message, System.Net.Http.HttpRequestMessage httpRequest);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendingRequest(class System.ClientModel.Primitives.PipelineMessage message, class System.Net.Http.HttpRequestMessage httpRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.OnSendingRequest(System.ClientModel.Primitives.PipelineMessage,System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSendingRequest (message As PipelineMessage, httpRequest As HttpRequestMessage)" />
      <MemberSignature Language="F#" Value="abstract member OnSendingRequest : System.ClientModel.Primitives.PipelineMessage * System.Net.Http.HttpRequestMessage -&gt; unit&#xA;override this.OnSendingRequest : System.ClientModel.Primitives.PipelineMessage * System.Net.Http.HttpRequestMessage -&gt; unit" Usage="httpClientPipelineTransport.OnSendingRequest (message, httpRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="httpRequest" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> containing the
            <see cref="T:System.ClientModel.Primitives.PipelineRequest" /> resulting from the processing of the
            policies in the <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> containing this transport.
            </param>
        <param name="httpRequest">The <see cref="T:System.Net.Http.HttpRequestMessage" /> created
            by the transport that will be sent to the service using this transport's
            <see cref="T:System.Net.Http.HttpClient" /> instance.</param>
        <summary>
            A method that can be overridden by derived types to extend the default
            <see cref="T:System.ClientModel.Primitives.HttpClientPipelineTransport" /> logic.  It is called from
            <see cref="M:System.ClientModel.Primitives.HttpClientPipelineTransport.ProcessCore(System.ClientModel.Primitives.PipelineMessage)" /> prior to sending the HTTP
            request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCore">
      <MemberSignature Language="C#" Value="protected override sealed void ProcessCore (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessCore(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.ProcessCore(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ProcessCore (message As PipelineMessage)" />
      <MemberSignature Language="F#" Value="override this.ProcessCore : System.ClientModel.Primitives.PipelineMessage -&gt; unit" Usage="httpClientPipelineTransport.ProcessCore message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> containing the
            request that was sent and response that was received by the transport.</param>
        <summary>
            Transport-specific implementation used to sends the HTTP request
            contained by <see cref="P:System.ClientModel.Primitives.PipelineMessage.Request" /> and set the
            value of <see cref="P:System.ClientModel.Primitives.PipelineMessage.Response" />. Types that derive
            from <see cref="T:System.ClientModel.Primitives.PipelineTransport" /> must implement this method to
            provide transport-specific functionality.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCoreAsync">
      <MemberSignature Language="C#" Value="protected override sealed System.Threading.Tasks.ValueTask ProcessCoreAsync (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Threading.Tasks.ValueTask ProcessCoreAsync(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.HttpClientPipelineTransport.ProcessCoreAsync(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function ProcessCoreAsync (message As PipelineMessage) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.ProcessCoreAsync : System.ClientModel.Primitives.PipelineMessage -&gt; System.Threading.Tasks.ValueTask" Usage="httpClientPipelineTransport.ProcessCoreAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> containing the
            request that was sent and response that was received by the transport.</param>
        <summary>
            Transport-specific implementation used to sends the HTTP request
            contained by <see cref="P:System.ClientModel.Primitives.PipelineMessage.Request" /> and set the
            value of <see cref="P:System.ClientModel.Primitives.PipelineMessage.Response" />. Types that derive
            from <see cref="T:System.ClientModel.Primitives.PipelineTransport" /> must implement this method to
            provide transport-specific functionality.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.HttpClientPipelineTransport Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ClientModel.Primitives.HttpClientPipelineTransport Shared" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.HttpClientPipelineTransport.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As HttpClientPipelineTransport" />
      <MemberSignature Language="F#" Value="static member Shared : System.ClientModel.Primitives.HttpClientPipelineTransport" Usage="System.ClientModel.Primitives.HttpClientPipelineTransport.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.HttpClientPipelineTransport</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A default instance of <see cref="T:System.ClientModel.Primitives.HttpClientPipelineTransport" /> that can
            be shared across pipelines and clients.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
