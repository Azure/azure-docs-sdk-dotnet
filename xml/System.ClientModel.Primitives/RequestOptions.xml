<Type Name="RequestOptions" FullName="System.ClientModel.Primitives.RequestOptions">
  <TypeSignature Language="C#" Value="public class RequestOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.RequestOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestOptions" />
  <TypeSignature Language="F#" Value="type RequestOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options that can be used to control the behavior of a request sent by a client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.RequestOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.ClientModel.Primitives.RequestOptions" /> class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.RequestOptions.AddHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHeader (name As String, value As String)" />
      <MemberSignature Language="F#" Value="member this.AddHeader : string * string -&gt; unit" Usage="requestOptions.AddHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header to add.</param>
        <param name="value">The value of the header.</param>
        <summary>
            Adds the specified header and its value to the request's header
            collection. If a header with this name is already present in the
            collection, the value will be added to the comma-separated list of
            values associated with the header.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicy">
      <MemberSignature Language="C#" Value="public void AddPolicy (System.ClientModel.Primitives.PipelinePolicy policy, System.ClientModel.Primitives.PipelinePosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolicy(class System.ClientModel.Primitives.PipelinePolicy policy, valuetype System.ClientModel.Primitives.PipelinePosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.RequestOptions.AddPolicy(System.ClientModel.Primitives.PipelinePolicy,System.ClientModel.Primitives.PipelinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolicy (policy As PipelinePolicy, position As PipelinePosition)" />
      <MemberSignature Language="F#" Value="member this.AddPolicy : System.ClientModel.Primitives.PipelinePolicy * System.ClientModel.Primitives.PipelinePosition -&gt; unit" Usage="requestOptions.AddPolicy (policy, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.ClientModel.Primitives.PipelinePolicy" />
        <Parameter Name="position" Type="System.ClientModel.Primitives.PipelinePosition" />
      </Parameters>
      <Docs>
        <param name="policy">The <see cref="T:System.ClientModel.Primitives.PipelinePolicy" /> to add to the
            pipeline.</param>
        <param name="position">The position of the policy in the pipeline.</param>
        <summary>
            Adds a <see cref="T:System.ClientModel.Primitives.PipelinePolicy" /> into the pipeline for the duration
            of this request.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown when the provided policy
            is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="protected internal virtual void Apply (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Apply(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.RequestOptions.Apply(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Apply (message As PipelineMessage)" />
      <MemberSignature Language="F#" Value="abstract member Apply : System.ClientModel.Primitives.PipelineMessage -&gt; unit&#xA;override this.Apply : System.ClientModel.Primitives.PipelineMessage -&gt; unit" Usage="requestOptions.Apply message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> to apply the
            options to.</param>
        <summary>
            Apply the options provided in this <see cref="T:System.ClientModel.Primitives.RequestOptions" />
            instance to the <paramref name="message" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertNotFrozen">
      <MemberSignature Language="C#" Value="protected void AssertNotFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AssertNotFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.RequestOptions.AssertNotFrozen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AssertNotFrozen ()" />
      <MemberSignature Language="F#" Value="member this.AssertNotFrozen : unit -&gt; unit" Usage="requestOptions.AssertNotFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Assert that <see cref="M:System.ClientModel.Primitives.RequestOptions.Freeze" /> has not been called on this
            <see cref="T:System.ClientModel.Primitives.RequestOptions" /> instance.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown when an attempt is
            made to change the state of this <see cref="T:System.ClientModel.Primitives.RequestOptions" /> instance
            after <see cref="M:System.ClientModel.Primitives.RequestOptions.Freeze" /> has been called.</exception>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.RequestOptions.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="F#" Value="member this.BufferResponse : bool with get, set" Usage="System.ClientModel.Primitives.RequestOptions.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the response content should be
            buffered in-memory by the pipeline. This value defaults to <c>true</c>.
            </summary>
        <value>To be added.</value>
        <remarks>Please note that setting this value to <c>false</c> will result
            in the <see cref="P:System.ClientModel.Primitives.PipelineResponse.ContentStream" /> obtained from
            <see cref="M:System.ClientModel.ClientResult.GetRawResponse" /> holding a live network stream.
            It is the responsibility of the caller to ensure the stream is disposed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.RequestOptions.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="System.ClientModel.Primitives.RequestOptions.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:System.ClientModel.Primitives.RequestOptions.CancellationToken" /> used for the duration
            of the call to <see cref="M:System.ClientModel.Primitives.ClientPipeline.Send(System.ClientModel.Primitives.PipelineMessage)" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorOptions">
      <MemberSignature Language="C#" Value="public System.ClientModel.Primitives.ClientErrorBehaviors ErrorOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ClientModel.Primitives.ClientErrorBehaviors ErrorOptions" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.RequestOptions.ErrorOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorOptions As ClientErrorBehaviors" />
      <MemberSignature Language="F#" Value="member this.ErrorOptions : System.ClientModel.Primitives.ClientErrorBehaviors with get, set" Usage="System.ClientModel.Primitives.RequestOptions.ErrorOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ClientErrorBehaviors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that describes when a client's service method will
            raise an exception if the underlying response is considered an error.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public virtual void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.RequestOptions.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Freeze ()" />
      <MemberSignature Language="F#" Value="abstract member Freeze : unit -&gt; unit&#xA;override this.Freeze : unit -&gt; unit" Usage="requestOptions.Freeze " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Freeze this instance of <see cref="T:System.ClientModel.Primitives.RequestOptions" />.  After this method
            has been called, any attempt to set properties on the instance or call
            methods that would change its state will throw <see cref="T:System.InvalidOperationException" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="public void SetHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.RequestOptions.SetHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHeader (name As String, value As String)" />
      <MemberSignature Language="F#" Value="member this.SetHeader : string * string -&gt; unit" Usage="requestOptions.SetHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header to set.</param>
        <param name="value">The value of the header.</param>
        <summary>
            Sets the specified header and its value in the request's header
            collection. If a header with this name is already present in the
            collection, the header's value will be replaced with the specified value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
