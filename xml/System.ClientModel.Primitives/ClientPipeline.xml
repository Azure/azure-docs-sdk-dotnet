<Type Name="ClientPipeline" FullName="System.ClientModel.Primitives.ClientPipeline">
  <TypeSignature Language="C#" Value="public sealed class ClientPipeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientPipeline extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.ClientPipeline" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientPipeline" />
  <TypeSignature Language="F#" Value="type ClientPipeline = class" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an extensible pipeline used by clients that call cloud services
            to send and receive HTTP request and responses. Creators of
            <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> can modify how it process a
            <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> by adding <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />
            instances at various points in the default pipeline.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.ClientPipeline Create (System.ClientModel.Primitives.ClientPipelineOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.ClientPipeline Create(class System.ClientModel.Primitives.ClientPipelineOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ClientPipeline.Create(System.ClientModel.Primitives.ClientPipelineOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (Optional options As ClientPipelineOptions = Nothing) As ClientPipeline" />
      <MemberSignature Language="F#" Value="static member Create : System.ClientModel.Primitives.ClientPipelineOptions -&gt; System.ClientModel.Primitives.ClientPipeline" Usage="System.ClientModel.Primitives.ClientPipeline.Create options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ClientPipeline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ClientPipelineOptions" />
      </Parameters>
      <Docs>
        <param name="options">If provided, the
            <see cref="T:System.ClientModel.Primitives.ClientPipelineOptions" /> to use to construct the
            <see cref="T:System.ClientModel.Primitives.ClientPipeline" />.</param>
        <summary>
            Create an instance of a <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> from the provided
            <see cref="T:System.ClientModel.Primitives.ClientPipelineOptions" />.
            </summary>
        <returns>The created <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.ClientPipeline Create (System.ClientModel.Primitives.ClientPipelineOptions options, ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt; perCallPolicies, ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt; perTryPolicies, ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt; beforeTransportPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.ClientPipeline Create(class System.ClientModel.Primitives.ClientPipelineOptions options, valuetype System.ReadOnlySpan`1&lt;class System.ClientModel.Primitives.PipelinePolicy&gt; perCallPolicies, valuetype System.ReadOnlySpan`1&lt;class System.ClientModel.Primitives.PipelinePolicy&gt; perTryPolicies, valuetype System.ReadOnlySpan`1&lt;class System.ClientModel.Primitives.PipelinePolicy&gt; beforeTransportPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ClientPipeline.Create(System.ClientModel.Primitives.ClientPipelineOptions,System.ReadOnlySpan{System.ClientModel.Primitives.PipelinePolicy},System.ReadOnlySpan{System.ClientModel.Primitives.PipelinePolicy},System.ReadOnlySpan{System.ClientModel.Primitives.PipelinePolicy})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (options As ClientPipelineOptions, perCallPolicies As ReadOnlySpan(Of PipelinePolicy), perTryPolicies As ReadOnlySpan(Of PipelinePolicy), beforeTransportPolicies As ReadOnlySpan(Of PipelinePolicy)) As ClientPipeline" />
      <MemberSignature Language="F#" Value="static member Create : System.ClientModel.Primitives.ClientPipelineOptions * ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt; * ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt; * ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt; -&gt; System.ClientModel.Primitives.ClientPipeline" Usage="System.ClientModel.Primitives.ClientPipeline.Create (options, perCallPolicies, perTryPolicies, beforeTransportPolicies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ClientPipeline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ClientPipelineOptions" />
        <Parameter Name="perCallPolicies" Type="System.ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt;" />
        <Parameter Name="perTryPolicies" Type="System.ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt;" />
        <Parameter Name="beforeTransportPolicies" Type="System.ReadOnlySpan&lt;System.ClientModel.Primitives.PipelinePolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="options"> The <see cref="T:System.ClientModel.Primitives.ClientPipelineOptions" /> to use to
            construct the <see cref="T:System.ClientModel.Primitives.ClientPipeline" />.</param>
        <param name="perCallPolicies">A collection of <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />
            instances to add to the default pipeline before the pipeline's retry
            policy.</param>
        <param name="perTryPolicies">A collection of <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />
            instances to add to the default pipeline after the pipeline's retry
            policy.</param>
        <param name="beforeTransportPolicies">A collection of
            <see cref="T:System.ClientModel.Primitives.PipelinePolicy" /> instances to add to the default pipeline
            before the pipeline's transport.</param>
        <summary>
            Create an instance of a <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> from the provided
            <see cref="T:System.ClientModel.Primitives.ClientPipelineOptions" /> and <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />
            collections.
            </summary>
        <returns>The created <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> instance.</returns>
        <remarks>Policies provided in <paramref name="options" /> are intended
            to come from the end-user of a client who has passed the
            <see cref="T:System.ClientModel.Primitives.ClientPipelineOptions" /> instance to the client's
            constructor. The client constructor implementation is intended to pass
            client-specific policies using the <paramref name="perCallPolicies" />,
            <paramref name="perTryPolicies" />, and
            <paramref name="beforeTransportPolicies" /> parameters and should not
            modify the <see cref="T:System.ClientModel.Primitives.ClientPipelineOptions" /> provided by the client
            user.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public System.ClientModel.Primitives.PipelineMessage CreateMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ClientModel.Primitives.PipelineMessage CreateMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ClientPipeline.CreateMessage" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMessage () As PipelineMessage" />
      <MemberSignature Language="F#" Value="member this.CreateMessage : unit -&gt; System.ClientModel.Primitives.PipelineMessage" Usage="clientPipeline.CreateMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.PipelineMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> that can be sent using this
            pipeline instance.
            </summary>
        <returns>The created <see cref="T:System.ClientModel.Primitives.PipelineMessage" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ClientPipeline.Send(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As PipelineMessage)" />
      <MemberSignature Language="F#" Value="member this.Send : System.ClientModel.Primitives.PipelineMessage -&gt; unit" Usage="clientPipeline.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> to send.</param>
        <summary>
            Send the provided <see cref="T:System.ClientModel.Primitives.PipelineMessage" />.
            </summary>
        <remarks>
            All necessary values on <see cref="P:System.ClientModel.Primitives.PipelineMessage.Request" /> should be
            set prior to calling <see cref="M:System.ClientModel.Primitives.ClientPipeline.Send(System.ClientModel.Primitives.PipelineMessage)" />.  After the
            method returns, <see cref="P:System.ClientModel.Primitives.PipelineMessage.Response" /> will be populated
            with the details of the service response.
            </remarks>
        <exception cref="T:System.ClientModel.ClientResultException">Thrown if an error other than
            the service responding with an error response occurred while sending
            the HTTP request.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask SendAsync (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask SendAsync(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ClientPipeline.SendAsync(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (message As PipelineMessage) As ValueTask" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.ClientModel.Primitives.PipelineMessage -&gt; System.Threading.Tasks.ValueTask" Usage="clientPipeline.SendAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> to send.</param>
        <summary>
            Send the provided <see cref="T:System.ClientModel.Primitives.PipelineMessage" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            All necessary values on <see cref="P:System.ClientModel.Primitives.PipelineMessage.Request" /> should be
            set prior to calling <see cref="M:System.ClientModel.Primitives.ClientPipeline.Send(System.ClientModel.Primitives.PipelineMessage)" />.  After the
            method returns, <see cref="P:System.ClientModel.Primitives.PipelineMessage.Response" /> will be populated
            with the details of the service response.
            </remarks>
        <exception cref="T:System.ClientModel.ClientResultException">Thrown if an error other than
            the service responding with an error response occurred while sending
            the HTTP request.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
