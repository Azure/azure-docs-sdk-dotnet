<Type Name="ApiKeyAuthenticationPolicy" FullName="System.ClientModel.Primitives.ApiKeyAuthenticationPolicy">
  <TypeSignature Language="C#" Value="public class ApiKeyAuthenticationPolicy : System.ClientModel.Primitives.PipelinePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApiKeyAuthenticationPolicy extends System.ClientModel.Primitives.PipelinePolicy" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class ApiKeyAuthenticationPolicy&#xA;Inherits PipelinePolicy" />
  <TypeSignature Language="F#" Value="type ApiKeyAuthenticationPolicy = class&#xA;    inherit PipelinePolicy" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ClientModel.Primitives.PipelinePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:System.ClientModel.Primitives.PipelinePolicy" /> that uses an <see cref="T:System.ClientModel.ApiKeyCredential" />
            to set a value on a <see cref="T:System.ClientModel.Primitives.PipelineRequest" /> to authenticate with the
            cloud service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateBasicAuthorizationPolicy">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.ApiKeyAuthenticationPolicy CreateBasicAuthorizationPolicy (System.ClientModel.ApiKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.ApiKeyAuthenticationPolicy CreateBasicAuthorizationPolicy(class System.ClientModel.ApiKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.CreateBasicAuthorizationPolicy(System.ClientModel.ApiKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBasicAuthorizationPolicy (credential As ApiKeyCredential) As ApiKeyAuthenticationPolicy" />
      <MemberSignature Language="F#" Value="static member CreateBasicAuthorizationPolicy : System.ClientModel.ApiKeyCredential -&gt; System.ClientModel.Primitives.ApiKeyAuthenticationPolicy" Usage="System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.CreateBasicAuthorizationPolicy credential" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ApiKeyAuthenticationPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.ClientModel.ApiKeyCredential" />
      </Parameters>
      <Docs>
        <param name="credential">The <see cref="T:System.ClientModel.ApiKeyCredential" /> used to
            authenticate requests.</param>
        <summary>
            Create a new instance of the <see cref="T:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy" />
            class, where the credential value will be set in the <c>Authorization</c>
            header on the <see cref="T:System.ClientModel.Primitives.PipelineRequest" /> with a <c>Basic</c> prefix.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBearerAuthorizationPolicy">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.ApiKeyAuthenticationPolicy CreateBearerAuthorizationPolicy (System.ClientModel.ApiKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.ApiKeyAuthenticationPolicy CreateBearerAuthorizationPolicy(class System.ClientModel.ApiKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.CreateBearerAuthorizationPolicy(System.ClientModel.ApiKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBearerAuthorizationPolicy (credential As ApiKeyCredential) As ApiKeyAuthenticationPolicy" />
      <MemberSignature Language="F#" Value="static member CreateBearerAuthorizationPolicy : System.ClientModel.ApiKeyCredential -&gt; System.ClientModel.Primitives.ApiKeyAuthenticationPolicy" Usage="System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.CreateBearerAuthorizationPolicy credential" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ApiKeyAuthenticationPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.ClientModel.ApiKeyCredential" />
      </Parameters>
      <Docs>
        <param name="credential">The <see cref="T:System.ClientModel.ApiKeyCredential" /> used to
            authenticate requests.</param>
        <summary>
            Create a new instance of the <see cref="T:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy" />
            class, where the credential value will be set in the <c>Authorization</c>
            header on the <see cref="T:System.ClientModel.Primitives.PipelineRequest" /> with a <c>Bearer</c> prefix.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHeaderApiKeyPolicy">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.ApiKeyAuthenticationPolicy CreateHeaderApiKeyPolicy (System.ClientModel.ApiKeyCredential credential, string headerName, string? keyPrefix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.ApiKeyAuthenticationPolicy CreateHeaderApiKeyPolicy(class System.ClientModel.ApiKeyCredential credential, string headerName, string keyPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.CreateHeaderApiKeyPolicy(System.ClientModel.ApiKeyCredential,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHeaderApiKeyPolicy (credential As ApiKeyCredential, headerName As String, Optional keyPrefix As String = Nothing) As ApiKeyAuthenticationPolicy" />
      <MemberSignature Language="F#" Value="static member CreateHeaderApiKeyPolicy : System.ClientModel.ApiKeyCredential * string * string -&gt; System.ClientModel.Primitives.ApiKeyAuthenticationPolicy" Usage="System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.CreateHeaderApiKeyPolicy (credential, headerName, keyPrefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ApiKeyAuthenticationPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.ClientModel.ApiKeyCredential" />
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="keyPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">The <see cref="T:System.ClientModel.ApiKeyCredential" /> used to
            authenticate requests.</param>
        <param name="headerName">The name of the request header used to send
            the key credential in the request.</param>
        <param name="keyPrefix">A prefix to prepend before the key credential in
            the header value.
            If provided, the prefix string will be followed by a space and then the
            credential string.  For example, setting <c>valuePrefix</c> to
            "SharedAccessKey" will result in the header value being set to
            "SharedAccessKey {credential.Key}".</param>
        <summary>
            Create a new instance of the <see cref="T:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy" />
            class, where the credential value will be specified in a request header.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public override sealed void Process (System.ClientModel.Primitives.PipelineMessage message, System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int currentIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Process(class System.ClientModel.Primitives.PipelineMessage message, class System.Collections.Generic.IReadOnlyList`1&lt;class System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int32 currentIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.Process(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Process (message As PipelineMessage, pipeline As IReadOnlyList(Of PipelinePolicy), currentIndex As Integer)" />
      <MemberSignature Language="F#" Value="override this.Process : System.ClientModel.Primitives.PipelineMessage * System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; * int -&gt; unit" Usage="apiKeyAuthenticationPolicy.Process (message, pipeline, currentIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt;" />
        <Parameter Name="currentIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> to process.</param>
        <param name="pipeline">The collection of <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />
            instances in the <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> instance whose
            <see cref="M:System.ClientModel.Primitives.ClientPipeline.Send(System.ClientModel.Primitives.PipelineMessage)" /> method was called to invoke
            this method.</param>
        <param name="currentIndex">The index of this policy in the
            <paramref name="pipeline" /> policy list. This value should be passed to
            <see cref="M:System.ClientModel.Primitives.PipelinePolicy.ProcessNext(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />
            to pass control to the next policy in the pipeline.</param>
        <summary>
            Process the provided <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> according to the
            intended purpose of this <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />instance.
            Derived types must pass control to the next
            <see cref="T:System.ClientModel.Primitives.PipelinePolicy" /> in the pipeline by calling
            <see cref="M:System.ClientModel.Primitives.PipelinePolicy.ProcessNext(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public override sealed System.Threading.Tasks.ValueTask ProcessAsync (System.ClientModel.Primitives.PipelineMessage message, System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int currentIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask ProcessAsync(class System.ClientModel.Primitives.PipelineMessage message, class System.Collections.Generic.IReadOnlyList`1&lt;class System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int32 currentIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.ApiKeyAuthenticationPolicy.ProcessAsync(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProcessAsync (message As PipelineMessage, pipeline As IReadOnlyList(Of PipelinePolicy), currentIndex As Integer) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.ProcessAsync : System.ClientModel.Primitives.PipelineMessage * System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; * int -&gt; System.Threading.Tasks.ValueTask" Usage="apiKeyAuthenticationPolicy.ProcessAsync (message, pipeline, currentIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt;" />
        <Parameter Name="currentIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> to process.</param>
        <param name="pipeline">The collection of <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />
            instances in the <see cref="T:System.ClientModel.Primitives.ClientPipeline" /> instance whose
            <see cref="M:System.ClientModel.Primitives.ClientPipeline.SendAsync(System.ClientModel.Primitives.PipelineMessage)" /> method was called to invoke
            this method.</param>
        <param name="currentIndex">The index of this policy in the
            <paramref name="pipeline" /> policy list. This value should be passed to
            <see cref="M:System.ClientModel.Primitives.PipelinePolicy.ProcessNextAsync(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />
            to pass control to the next policy in the pipeline.</param>
        <summary>
            Process the provided <see cref="T:System.ClientModel.Primitives.PipelineMessage" /> according to the
            intended purpose of this <see cref="T:System.ClientModel.Primitives.PipelinePolicy" />instance.
            Derived types must pass control to the next
            <see cref="T:System.ClientModel.Primitives.PipelinePolicy" /> in the pipeline by calling
            <see cref="M:System.ClientModel.Primitives.PipelinePolicy.ProcessNextAsync(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
