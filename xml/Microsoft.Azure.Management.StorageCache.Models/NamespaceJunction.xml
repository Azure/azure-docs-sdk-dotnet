<Type Name="NamespaceJunction" FullName="Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction">
  <TypeSignature Language="C#" Value="public class NamespaceJunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamespaceJunction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction" />
  <TypeSignature Language="VB.NET" Value="Public Class NamespaceJunction" />
  <TypeSignature Language="F#" Value="type NamespaceJunction = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A namespace junction.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamespaceJunction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NamespaceJunction class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamespaceJunction (string namespacePath = default, string targetPath = default, string nfsExport = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string namespacePath, string targetPath, string nfsExport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional namespacePath As String = Nothing, Optional targetPath As String = Nothing, Optional nfsExport As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction : string * string * string -&gt; Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction" Usage="new Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction (namespacePath, targetPath, nfsExport)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="namespacePath" Type="System.String" />
        <Parameter Name="targetPath" Type="System.String" />
        <Parameter Name="nfsExport" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespacePath">Namespace path on a Cache for a Storage
            Target.</param>
        <param name="targetPath">Path in Storage Target to which
            namespacePath points.</param>
        <param name="nfsExport">NFS export where targetPath exists.</param>
        <summary>
            Initializes a new instance of the NamespaceJunction class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespacePath">
      <MemberSignature Language="C#" Value="public string NamespacePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespacePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.NamespacePath" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespacePath As String" />
      <MemberSignature Language="F#" Value="member this.NamespacePath : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.NamespacePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="namespacePath")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="namespacePath")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets namespace path on a Cache for a Storage Target.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NfsExport">
      <MemberSignature Language="C#" Value="public string NfsExport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NfsExport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.NfsExport" />
      <MemberSignature Language="VB.NET" Value="Public Property NfsExport As String" />
      <MemberSignature Language="F#" Value="member this.NfsExport : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.NfsExport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="nfsExport")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="nfsExport")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets NFS export where targetPath exists.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPath">
      <MemberSignature Language="C#" Value="public string TargetPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.TargetPath" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetPath As String" />
      <MemberSignature Language="F#" Value="member this.TargetPath : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NamespaceJunction.TargetPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="targetPath")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="targetPath")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets path in Storage Target to which namespacePath points.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
