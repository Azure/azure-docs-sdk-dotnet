<Type Name="NodeSetup" FullName="Microsoft.Azure.Management.BatchAI.Models.NodeSetup">
  <TypeSignature Language="C#" Value="public class NodeSetup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeSetup extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.BatchAI.Models.NodeSetup" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeSetup" />
  <TypeSignature Language="F#" Value="type NodeSetup = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeSetup" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class NodeSetup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.BatchAI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Use this to prepare the VM. NOTE: The volumes specified in mountVolumes
            are mounted first and then the setupTask is run. Therefore the setup
            task can use local mountPaths in its execution.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeSetup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.BatchAI.Models.NodeSetup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeSetup();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; NodeSetup();" />
      <MemberSignature Language="C++ WINRT" Value=" NodeSetup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.BatchAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NodeSetup class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeSetup (Microsoft.Azure.Management.BatchAI.Models.SetupTask setupTask = null, Microsoft.Azure.Management.BatchAI.Models.MountVolumes mountVolumes = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Management.BatchAI.Models.SetupTask setupTask, class Microsoft.Azure.Management.BatchAI.Models.MountVolumes mountVolumes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.BatchAI.Models.NodeSetup.#ctor(Microsoft.Azure.Management.BatchAI.Models.SetupTask,Microsoft.Azure.Management.BatchAI.Models.MountVolumes)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.BatchAI.Models.NodeSetup : Microsoft.Azure.Management.BatchAI.Models.SetupTask * Microsoft.Azure.Management.BatchAI.Models.MountVolumes -&gt; Microsoft.Azure.Management.BatchAI.Models.NodeSetup" Usage="new Microsoft.Azure.Management.BatchAI.Models.NodeSetup (setupTask, mountVolumes)" />
      <MemberSignature Language="C++ WINRT" Value=" NodeSetup(Microsoft::Azure::Management::BatchAI::Models::SetupTask const &amp; setupTask = null, Microsoft::Azure::Management::BatchAI::Models::MountVolumes const &amp; mountVolumes = null);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.BatchAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="setupTask" Type="Microsoft.Azure.Management.BatchAI.Models.SetupTask" />
        <Parameter Name="mountVolumes" Type="Microsoft.Azure.Management.BatchAI.Models.MountVolumes" />
      </Parameters>
      <Docs>
        <param name="setupTask">Specifies a setup task which can be used to
            customize the compute nodes of the cluster. The NodeSetup task runs
            everytime a VM is rebooted. For that reason the task code needs to
            be idempotent. Generally it is used to either download static data
            that is required for all jobs that run on the cluster VMs or to
            download/install software.</param>
        <param name="mountVolumes">Information on shared volumes to be used
            by jobs.</param>
        <summary>
            Initializes a new instance of the NodeSetup class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MountVolumes">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.BatchAI.Models.MountVolumes MountVolumes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.BatchAI.Models.MountVolumes MountVolumes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.BatchAI.Models.NodeSetup.MountVolumes" />
      <MemberSignature Language="VB.NET" Value="Public Property MountVolumes As MountVolumes" />
      <MemberSignature Language="F#" Value="member this.MountVolumes : Microsoft.Azure.Management.BatchAI.Models.MountVolumes with get, set" Usage="Microsoft.Azure.Management.BatchAI.Models.NodeSetup.MountVolumes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::BatchAI::Models::MountVolumes ^ MountVolumes { Microsoft::Azure::Management::BatchAI::Models::MountVolumes ^ get(); void set(Microsoft::Azure::Management::BatchAI::Models::MountVolumes ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.BatchAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="mountVolumes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.BatchAI.Models.MountVolumes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets information on shared volumes to be used by jobs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupTask">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.BatchAI.Models.SetupTask SetupTask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.BatchAI.Models.SetupTask SetupTask" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.BatchAI.Models.NodeSetup.SetupTask" />
      <MemberSignature Language="VB.NET" Value="Public Property SetupTask As SetupTask" />
      <MemberSignature Language="F#" Value="member this.SetupTask : Microsoft.Azure.Management.BatchAI.Models.SetupTask with get, set" Usage="Microsoft.Azure.Management.BatchAI.Models.NodeSetup.SetupTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Azure::Management::BatchAI::Models::SetupTask ^ SetupTask { Microsoft::Azure::Management::BatchAI::Models::SetupTask ^ get(); void set(Microsoft::Azure::Management::BatchAI::Models::SetupTask ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.BatchAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="setupTask")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.BatchAI.Models.SetupTask</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets specifies a setup task which can be used to customize
            the compute nodes of the cluster. The NodeSetup task runs everytime
            a VM is rebooted. For that reason the task code needs to be
            idempotent. Generally it is used to either download static data
            that is required for all jobs that run on the cluster VMs or to
            download/install software.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.BatchAI.Models.NodeSetup.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="nodeSetup.Validate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Validate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.BatchAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>