<Type Name="ISearchServices" FullName="Microsoft.Azure.Management.Search.Fluent.ISearchServices">
  <TypeSignature Language="C#" Value="public interface ISearchServices : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.Search.Fluent.SearchService.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.Search.Fluent.IServicesOperations&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Search.Fluent.ISearchManager&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISearchServices implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation`1&lt;class Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.Search.Fluent.SearchService.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup`1&lt;class Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing`1&lt;class Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup`1&lt;class Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.Search.Fluent.IServicesOperations&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.Search.Fluent.ISearchManager&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Search.Fluent.ISearchServices" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISearchServices&#xA;Implements IBeta, IHasInner(Of IServicesOperations), IHasManager(Of ISearchManager), ISupportsBatchCreation(Of ISearchService), ISupportsCreating(Of IBlank), ISupportsDeletingById, ISupportsDeletingByResourceGroup, ISupportsGettingById(Of ISearchService), ISupportsGettingByResourceGroup(Of ISearchService), ISupportsListing(Of ISearchService), ISupportsListingByResourceGroup(Of ISearchService)" />
  <TypeSignature Language="F#" Value="type ISearchServices = interface&#xA;    interface IBeta&#xA;    interface ISupportsCreating&lt;IBlank&gt;&#xA;    interface ISupportsListing&lt;ISearchService&gt;&#xA;    interface ISupportsListingByResourceGroup&lt;ISearchService&gt;&#xA;    interface ISupportsGettingByResourceGroup&lt;ISearchService&gt;&#xA;    interface ISupportsGettingById&lt;ISearchService&gt;&#xA;    interface ISupportsDeletingById&#xA;    interface ISupportsDeletingByResourceGroup&#xA;    interface ISupportsBatchCreation&lt;ISearchService&gt;&#xA;    interface IHasManager&lt;ISearchManager&gt;&#xA;    interface IHasInner&lt;IServicesOperations&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.Search.Fluent.SearchService.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.Search.Fluent.ISearchService&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.Search.Fluent.IServicesOperations&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Search.Fluent.ISearchManager&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point to Search service management API in Azure.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailability">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult CheckNameAvailability (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult CheckNameAvailability(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.CheckNameAvailability(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNameAvailability (name As String) As ICheckNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailability : string -&gt; Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult" Usage="iSearchServices.CheckNameAvailability name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The Search service name to check.</param>
        <summary>
            Checks if the specified Search service name is valid and available.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>Whether the name is available and other info if not.</return>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult&gt; CheckNameAvailabilityAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult&gt; CheckNameAvailabilityAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.CheckNameAvailabilityAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNameAvailabilityAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ICheckNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult&gt;" Usage="iSearchServices.CheckNameAvailabilityAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.ICheckNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="name">The Search service name to check.</param>
        <summary>
            Checks if Search service name is valid and is not in use asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A representation of the deferred computation of this call, returning whether the name is available or other info if not.</return>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryKey">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Fluent.IQueryKey CreateQueryKey (string resourceGroupName, string searchServiceName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Search.Fluent.IQueryKey CreateQueryKey(string resourceGroupName, string searchServiceName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.CreateQueryKey(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryKey (resourceGroupName As String, searchServiceName As String, name As String) As IQueryKey" />
      <MemberSignature Language="F#" Value="abstract member CreateQueryKey : string * string * string -&gt; Microsoft.Azure.Management.Search.Fluent.IQueryKey" Usage="iSearchServices.CreateQueryKey (resourceGroupName, searchServiceName, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Search.Fluent.IQueryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <param name="name">The name of the new query API key.</param>
        <summary>
            Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <throws>CloudException thrown if the request is rejected by server.</throws>
        <throws>RuntimeException all other wrapped checked exceptions if the request fails to be sent.</throws>
        <return>The QueryKey object if successful.</return>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt; CreateQueryKeyAsync (string resourceGroupName, string searchServiceName, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt; CreateQueryKeyAsync(string resourceGroupName, string searchServiceName, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.CreateQueryKeyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryKeyAsync (resourceGroupName As String, searchServiceName As String, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IQueryKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateQueryKeyAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;" Usage="iSearchServices.CreateQueryKeyAsync (resourceGroupName, searchServiceName, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <param name="name">The name of the new query API key.</param>
        <summary>
            Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>A representation of the future computation of this call.</return>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueryKey">
      <MemberSignature Language="C#" Value="public void DeleteQueryKey (string resourceGroupName, string searchServiceName, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteQueryKey(string resourceGroupName, string searchServiceName, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.DeleteQueryKey(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteQueryKey (resourceGroupName As String, searchServiceName As String, key As String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteQueryKey : string * string * string -&gt; unit" Usage="iSearchServices.DeleteQueryKey (resourceGroupName, searchServiceName, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <param name="key">The query key to be deleted. Query keys are identified by value, not by name.</param>
        <summary>
            Deletes the specified query key. Unlike admin keys, query keys are not regenerated. The process for
            regenerating a query key is to delete and then recreate it.
            </summary>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <throws>CloudException thrown if the request is rejected by server.</throws>
        <throws>RuntimeException all other wrapped checked exceptions if the request fails to be sent.</throws>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueryKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteQueryKeyAsync (string resourceGroupName, string searchServiceName, string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteQueryKeyAsync(string resourceGroupName, string searchServiceName, string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.DeleteQueryKeyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteQueryKeyAsync (resourceGroupName As String, searchServiceName As String, key As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteQueryKeyAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iSearchServices.DeleteQueryKeyAsync (resourceGroupName, searchServiceName, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <param name="key">The query key to be deleted. Query keys are identified by value, not by name.</param>
        <summary>
            Deletes the specified query key. Unlike admin keys, query keys are not regenerated. The process for
            regenerating a query key is to delete and then recreate it.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>A representation of the future computation of this call.</return>
      </Docs>
    </Member>
    <Member MemberName="GetAdminKeys">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Fluent.IAdminKeys GetAdminKeys (string resourceGroupName, string searchServiceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Search.Fluent.IAdminKeys GetAdminKeys(string resourceGroupName, string searchServiceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.GetAdminKeys(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdminKeys (resourceGroupName As String, searchServiceName As String) As IAdminKeys" />
      <MemberSignature Language="F#" Value="abstract member GetAdminKeys : string * string -&gt; Microsoft.Azure.Management.Search.Fluent.IAdminKeys" Usage="iSearchServices.GetAdminKeys (resourceGroupName, searchServiceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Search.Fluent.IAdminKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The name of the resource group within the current subscription; you can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <summary>
            Gets the primary and secondary admin API keys for the specified Azure Search service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <throws>CloudException thrown if the request is rejected by server.</throws>
        <throws>RuntimeException all other wrapped checked exceptions if the request fails to be sent.</throws>
        <return>The AdminKeys object if successful.</return>
      </Docs>
    </Member>
    <Member MemberName="GetAdminKeysAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt; GetAdminKeysAsync (string resourceGroupName, string searchServiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt; GetAdminKeysAsync(string resourceGroupName, string searchServiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.GetAdminKeysAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdminKeysAsync (resourceGroupName As String, searchServiceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IAdminKeys)" />
      <MemberSignature Language="F#" Value="abstract member GetAdminKeysAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt;" Usage="iSearchServices.GetAdminKeysAsync (resourceGroupName, searchServiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the current subscription; you can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <summary>
            Gets the primary and secondary admin API keys for the specified Azure Search service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>A representation of the future computation of this call.</return>
      </Docs>
    </Member>
    <Member MemberName="ListQueryKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt; ListQueryKeys (string resourceGroupName, string searchServiceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt; ListQueryKeys(string resourceGroupName, string searchServiceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.ListQueryKeys(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListQueryKeys (resourceGroupName As String, searchServiceName As String) As IReadOnlyList(Of IQueryKey)" />
      <MemberSignature Language="F#" Value="abstract member ListQueryKeys : string * string -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;" Usage="iSearchServices.ListQueryKeys (resourceGroupName, searchServiceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The name of the resource group within the current subscription; you can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <summary>
            Returns the list of query API keys for the given Azure Search service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <throws>CloudException thrown if the request is rejected by server.</throws>
        <throws>RuntimeException all other wrapped checked exceptions if the request fails to be sent.</throws>
        <return>The List&lt;QueryKey&gt; object if successful.</return>
      </Docs>
    </Member>
    <Member MemberName="ListQueryKeysAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;&gt; ListQueryKeysAsync (string resourceGroupName, string searchServiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;&gt; ListQueryKeysAsync(string resourceGroupName, string searchServiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.ListQueryKeysAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListQueryKeysAsync (resourceGroupName As String, searchServiceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of IQueryKey))" />
      <MemberSignature Language="F#" Value="abstract member ListQueryKeysAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;&gt;" Usage="iSearchServices.ListQueryKeysAsync (resourceGroupName, searchServiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.Search.Fluent.IQueryKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <summary>
            Returns the list of query API keys for the given Azure Search service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>A representation of the future computation of this call.</return>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAdminKeys">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Fluent.IAdminKeys RegenerateAdminKeys (string resourceGroupName, string searchServiceName, Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind keyKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Search.Fluent.IAdminKeys RegenerateAdminKeys(string resourceGroupName, string searchServiceName, valuetype Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind keyKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.RegenerateAdminKeys(System.String,System.String,Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegenerateAdminKeys (resourceGroupName As String, searchServiceName As String, keyKind As AdminKeyKind) As IAdminKeys" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAdminKeys : string * string * Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind -&gt; Microsoft.Azure.Management.Search.Fluent.IAdminKeys" Usage="iSearchServices.RegenerateAdminKeys (resourceGroupName, searchServiceName, keyKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Search.Fluent.IAdminKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="keyKind" Type="Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <param name="keyKind">
            Specifies which key to regenerate. Valid values include 'primary' and 'secondary'.
            Possible values include: 'primary', 'secondary'.
            </param>
        <summary>
            Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <throws>CloudException thrown if the request is rejected by server.</throws>
        <throws>RuntimeException all other wrapped checked exceptions if the request fails to be sent.</throws>
        <return>The AdminKeys object if successful.</return>
      </Docs>
    </Member>
    <Member MemberName="RegenerateAdminKeysAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt; RegenerateAdminKeysAsync (string resourceGroupName, string searchServiceName, Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind keyKind, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt; RegenerateAdminKeysAsync(string resourceGroupName, string searchServiceName, valuetype Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind keyKind, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Fluent.ISearchServices.RegenerateAdminKeysAsync(System.String,System.String,Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegenerateAdminKeysAsync (resourceGroupName As String, searchServiceName As String, keyKind As AdminKeyKind, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IAdminKeys)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateAdminKeysAsync : string * string * Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt;" Usage="iSearchServices.RegenerateAdminKeysAsync (resourceGroupName, searchServiceName, keyKind, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Search.Fluent.IAdminKeys&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="searchServiceName" Type="System.String" />
        <Parameter Name="keyKind" Type="Microsoft.Azure.Management.Search.Fluent.Models.AdminKeyKind" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.</param>
        <param name="searchServiceName">The name of the Azure Search service associated with the specified resource group.</param>
        <param name="keyKind">
            Specifies which key to regenerate. Valid values include 'primary' and 'secondary'.
            Possible values include: 'primary', 'secondary'.
            </param>
        <summary>
            Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable to the AdminKeyResultInner object.</return>
      </Docs>
    </Member>
  </Members>
</Type>
