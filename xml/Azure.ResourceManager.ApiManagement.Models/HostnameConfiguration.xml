<Type Name="HostnameConfiguration" FullName="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration">
  <TypeSignature Language="C#" Value="public class HostnameConfiguration : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostnameConfiguration extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class HostnameConfiguration&#xA;Implements IJsonModel(Of HostnameConfiguration), IPersistableModel(Of HostnameConfiguration)" />
  <TypeSignature Language="F#" Value="type HostnameConfiguration = class&#xA;    interface IJsonModel&lt;HostnameConfiguration&gt;&#xA;    interface IPersistableModel&lt;HostnameConfiguration&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Custom hostname configuration. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostnameConfiguration (Azure.ResourceManager.ApiManagement.Models.HostnameType hostnameType, string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.ResourceManager.ApiManagement.Models.HostnameType hostnameType, string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.#ctor(Azure.ResourceManager.ApiManagement.Models.HostnameType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostnameType As HostnameType, hostName As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration : Azure.ResourceManager.ApiManagement.Models.HostnameType * string -&gt; Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration" Usage="new Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration (hostnameType, hostName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostnameType" Type="Azure.ResourceManager.ApiManagement.Models.HostnameType" />
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostnameType"> Hostname type. </param>
        <param name="hostName"> Hostname to configure on the Api Management service. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ApiManagement.Models.CertificateInformation Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ApiManagement.Models.CertificateInformation Certificate" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As CertificateInformation" />
      <MemberSignature Language="F#" Value="member this.Certificate : Azure.ResourceManager.ApiManagement.Models.CertificateInformation with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.Models.CertificateInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Certificate information. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificatePassword">
      <MemberSignature Language="C#" Value="public string CertificatePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificatePassword" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.CertificatePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificatePassword As String" />
      <MemberSignature Language="F#" Value="member this.CertificatePassword : string with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.CertificatePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Certificate Password. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateSource">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ApiManagement.Models.CertificateSource? CertificateSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.CertificateSource&gt; CertificateSource" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.CertificateSource" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateSource As Nullable(Of CertificateSource)" />
      <MemberSignature Language="F#" Value="member this.CertificateSource : Nullable&lt;Azure.ResourceManager.ApiManagement.Models.CertificateSource&gt; with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.CertificateSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.CertificateSource&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Certificate Source. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateStatus">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ApiManagement.Models.CertificateStatus? CertificateStatus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.CertificateStatus&gt; CertificateStatus" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.CertificateStatus" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateStatus As Nullable(Of CertificateStatus)" />
      <MemberSignature Language="F#" Value="member this.CertificateStatus : Nullable&lt;Azure.ResourceManager.ApiManagement.Models.CertificateStatus&gt; with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.CertificateStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.CertificateStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Certificate Status. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedCertificate">
      <MemberSignature Language="C#" Value="public string EncodedCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedCertificate" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.EncodedCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedCertificate As String" />
      <MemberSignature Language="F#" Value="member this.EncodedCertificate : string with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.EncodedCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Base64 Encoded certificate. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public string HostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.HostName" />
      <MemberSignature Language="VB.NET" Value="Public Property HostName As String" />
      <MemberSignature Language="F#" Value="member this.HostName : string with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Hostname to configure on the Api Management service. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostnameType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ApiManagement.Models.HostnameType HostnameType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.ApiManagement.Models.HostnameType HostnameType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.HostnameType" />
      <MemberSignature Language="VB.NET" Value="Public Property HostnameType As HostnameType" />
      <MemberSignature Language="F#" Value="member this.HostnameType : Azure.ResourceManager.ApiManagement.Models.HostnameType with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.HostnameType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.Models.HostnameType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Hostname type. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityClientId">
      <MemberSignature Language="C#" Value="public string IdentityClientId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IdentityClientId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.IdentityClientId" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentityClientId As String" />
      <MemberSignature Language="F#" Value="member this.IdentityClientId : string with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.IdentityClientId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientCertificateNegotiationEnabled">
      <MemberSignature Language="C#" Value="public bool? IsClientCertificateNegotiationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsClientCertificateNegotiationEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.IsClientCertificateNegotiationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsClientCertificateNegotiationEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsClientCertificateNegotiationEnabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.IsClientCertificateNegotiationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specify true to always negotiate client certificate on the hostname. Default Value is false. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultSslBindingEnabled">
      <MemberSignature Language="C#" Value="public bool? IsDefaultSslBindingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsDefaultSslBindingEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.IsDefaultSslBindingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefaultSslBindingEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsDefaultSslBindingEnabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.IsDefaultSslBindingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to gateway Hostname Type. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyVaultSecretUri">
      <MemberSignature Language="C#" Value="public Uri KeyVaultSecretUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri KeyVaultSecretUri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.KeyVaultSecretUri" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyVaultSecretUri As Uri" />
      <MemberSignature Language="F#" Value="member this.KeyVaultSecretUri : Uri with get, set" Usage="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.KeyVaultSecretUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with aka.ms/apimmsi. The secret should be of type *application/x-pkcs12*. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration IJsonModel&lt;HostnameConfiguration&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ApiManagement#Models#HostnameConfiguration&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As HostnameConfiguration Implements IJsonModel(Of HostnameConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration" Usage="hostnameConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;HostnameConfiguration&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ApiManagement#Models#HostnameConfiguration&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of HostnameConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="hostnameConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration IPersistableModel&lt;HostnameConfiguration&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#Models#HostnameConfiguration&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As HostnameConfiguration Implements IPersistableModel(Of HostnameConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration" Usage="hostnameConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;HostnameConfiguration&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#Models#HostnameConfiguration&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of HostnameConfiguration).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="hostnameConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;HostnameConfiguration&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#Models#HostnameConfiguration&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of HostnameConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="hostnameConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.Models.HostnameConfiguration&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
