<Type Name="MockableServiceFabricManagedClustersSubscriptionResource" FullName="Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableServiceFabricManagedClustersSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableServiceFabricManagedClustersSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableServiceFabricManagedClustersSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableServiceFabricManagedClustersSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableServiceFabricManagedClustersSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersion">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersion (Azure.Core.AzureLocation location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersion(valuetype Azure.Core.AzureLocation location, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersion(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersion (location As AzureLocation, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersion : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&#xA;override this.GetManagedClusterVersion : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersion (location, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric managed cluster code version.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionAsync (Azure.Core.AzureLocation location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionAsync(valuetype Azure.Core.AzureLocation location, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersionAsync (location As AzureLocation, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceFabricManagedClusterVersion))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;&#xA;override this.GetManagedClusterVersionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionAsync (location, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric managed cluster code version.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionByEnvironment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionByEnvironment (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionByEnvironment(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersionByEnvironment (location As AzureLocation, environment As ManagedClusterVersionEnvironment, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersionByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&#xA;override this.GetManagedClusterVersionByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionByEnvironment (location, environment, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_GetByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionByEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionByEnvironmentAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionByEnvironmentAsync(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionByEnvironmentAsync(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersionByEnvironmentAsync (location As AzureLocation, environment As ManagedClusterVersionEnvironment, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceFabricManagedClusterVersion))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersionByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;&#xA;override this.GetManagedClusterVersionByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionByEnvironmentAsync (location, environment, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_GetByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersions (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersions(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersions(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersions (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersions : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&#xA;override this.GetManagedClusterVersions : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersions (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersionsAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersionsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&#xA;override this.GetManagedClusterVersionsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionsByEnvironment">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironment (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironment(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersionsByEnvironment (location As AzureLocation, environment As ManagedClusterVersionEnvironment, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersionsByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&#xA;override this.GetManagedClusterVersionsByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsByEnvironment (location, environment, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_ListByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionsByEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironmentAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironmentAsync(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsByEnvironmentAsync(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterVersionsByEnvironmentAsync (location As AzureLocation, environment As ManagedClusterVersionEnvironment, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterVersionsByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&#xA;override this.GetManagedClusterVersionsByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsByEnvironmentAsync (location, environment, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_ListByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSize">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSize (Azure.Core.AzureLocation location, string vmSize, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSize(valuetype Azure.Core.AzureLocation location, string vmSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSize(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedUnsupportedVmSize (location As AzureLocation, vmSize As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceFabricManagedUnsupportedVmSize)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUnsupportedVmSize : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&#xA;override this.GetManagedUnsupportedVmSize : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSize (location, vmSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="vmSize"> VM Size name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get unsupported vm size for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vmSize" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vmSize" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt; GetManagedUnsupportedVmSizeAsync (Azure.Core.AzureLocation location, string vmSize, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt; GetManagedUnsupportedVmSizeAsync(valuetype Azure.Core.AzureLocation location, string vmSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizeAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedUnsupportedVmSizeAsync (location As AzureLocation, vmSize As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceFabricManagedUnsupportedVmSize))" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUnsupportedVmSizeAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt;&#xA;override this.GetManagedUnsupportedVmSizeAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizeAsync (location, vmSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="vmSize"> VM Size name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get unsupported vm size for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vmSize" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vmSize" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSizes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizes (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizes(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizes(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedUnsupportedVmSizes (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedUnsupportedVmSize)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUnsupportedVmSizes : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&#xA;override this.GetManagedUnsupportedVmSizes : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizes (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSizesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedUnsupportedVmSizesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedUnsupportedVmSize)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUnsupportedVmSizesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&#xA;override this.GetManagedUnsupportedVmSizesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClusters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClusters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetServiceFabricManagedClusters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceFabricManagedClusters (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceFabricManagedClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;&#xA;override this.GetServiceFabricManagedClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetServiceFabricManagedClusters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters</description></item><item><term>Operation Id</term><description>ManagedClusters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedClustersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClustersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClustersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetServiceFabricManagedClustersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceFabricManagedClustersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceFabricManagedClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;&#xA;override this.GetServiceFabricManagedClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;" Usage="mockableServiceFabricManagedClustersSubscriptionResource.GetServiceFabricManagedClustersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters</description></item><item><term>Operation Id</term><description>ManagedClusters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
