<Type Name="MockableContainerInstanceResourceGroupResource" FullName="Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableContainerInstanceResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableContainerInstanceResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableContainerInstanceResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableContainerInstanceResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableContainerInstanceResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubnetServiceAssociationLink">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation DeleteSubnetServiceAssociationLink (Azure.WaitUntil waitUntil, string virtualNetworkName, string subnetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation DeleteSubnetServiceAssociationLink(valuetype Azure.WaitUntil waitUntil, string virtualNetworkName, string subnetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource.DeleteSubnetServiceAssociationLink(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSubnetServiceAssociationLink (waitUntil As WaitUntil, virtualNetworkName As String, subnetName As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubnetServiceAssociationLink : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.DeleteSubnetServiceAssociationLink : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="mockableContainerInstanceResourceGroupResource.DeleteSubnetServiceAssociationLink (waitUntil, virtualNetworkName, subnetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="subnetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="virtualNetworkName"> The name of the virtual network. </param>
        <param name="subnetName"> The name of the subnet. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete container group virtual network association links. The operation does not delete other resources provided by the user.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/providers/Microsoft.ContainerInstance/serviceAssociationLinks/default</description></item><item><term>Operation Id</term><description>SubnetServiceAssociationLink_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> or <paramref name="subnetName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> or <paramref name="subnetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubnetServiceAssociationLinkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteSubnetServiceAssociationLinkAsync (Azure.WaitUntil waitUntil, string virtualNetworkName, string subnetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteSubnetServiceAssociationLinkAsync(valuetype Azure.WaitUntil waitUntil, string virtualNetworkName, string subnetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource.DeleteSubnetServiceAssociationLinkAsync(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSubnetServiceAssociationLinkAsync (waitUntil As WaitUntil, virtualNetworkName As String, subnetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubnetServiceAssociationLinkAsync : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteSubnetServiceAssociationLinkAsync : Azure.WaitUntil * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="mockableContainerInstanceResourceGroupResource.DeleteSubnetServiceAssociationLinkAsync (waitUntil, virtualNetworkName, subnetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="subnetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="virtualNetworkName"> The name of the virtual network. </param>
        <param name="subnetName"> The name of the subnet. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete container group virtual network association links. The operation does not delete other resources provided by the user.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/providers/Microsoft.ContainerInstance/serviceAssociationLinks/default</description></item><item><term>Operation Id</term><description>SubnetServiceAssociationLink_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> or <paramref name="subnetName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> or <paramref name="subnetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt; GetContainerGroup (string containerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt; GetContainerGroup(string containerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource.GetContainerGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerGroup (containerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContainerGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&#xA;override this.GetContainerGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;" Usage="mockableContainerInstanceResourceGroupResource.GetContainerGroup (containerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="containerGroupName"> The name of the container group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified container group in the specified subscription and resource group. The operation returns the properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}</description></item><item><term>Operation Id</term><description>ContainerGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="containerGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="containerGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&gt; GetContainerGroupAsync (string containerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&gt; GetContainerGroupAsync(string containerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource.GetContainerGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerGroupAsync (containerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContainerGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetContainerGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&gt;&#xA;override this.GetContainerGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&gt;" Usage="mockableContainerInstanceResourceGroupResource.GetContainerGroupAsync (containerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="containerGroupName"> The name of the container group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified container group in the specified subscription and resource group. The operation returns the properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}</description></item><item><term>Operation Id</term><description>ContainerGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="containerGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="containerGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerInstance.ContainerGroupCollection GetContainerGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerInstance.ContainerGroupCollection GetContainerGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceResourceGroupResource.GetContainerGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerGroups () As ContainerGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetContainerGroups : unit -&gt; Azure.ResourceManager.ContainerInstance.ContainerGroupCollection&#xA;override this.GetContainerGroups : unit -&gt; Azure.ResourceManager.ContainerInstance.ContainerGroupCollection" Usage="mockableContainerInstanceResourceGroupResource.GetContainerGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.ContainerGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ContainerGroupResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ContainerGroupResources and their operations over a ContainerGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
