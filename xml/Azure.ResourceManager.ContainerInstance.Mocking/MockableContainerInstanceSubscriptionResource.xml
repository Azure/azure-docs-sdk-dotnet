<Type Name="MockableContainerInstanceSubscriptionResource" FullName="Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableContainerInstanceSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableContainerInstanceSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableContainerInstanceSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableContainerInstanceSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableContainerInstanceSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedImagesWithLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt; GetCachedImagesWithLocation (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt; GetCachedImagesWithLocation(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetCachedImagesWithLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCachedImagesWithLocation (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CachedImages)" />
      <MemberSignature Language="F#" Value="abstract member GetCachedImagesWithLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt;&#xA;override this.GetCachedImagesWithLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetCachedImagesWithLocation (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The identifier for the physical azure location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of cached images on specific OS type for a subscription in a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/cachedImages</description></item><item><term>Operation Id</term><description>Location_ListCachedImages</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.CachedImages" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedImagesWithLocationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt; GetCachedImagesWithLocationAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt; GetCachedImagesWithLocationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetCachedImagesWithLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCachedImagesWithLocationAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CachedImages)" />
      <MemberSignature Language="F#" Value="abstract member GetCachedImagesWithLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt;&#xA;override this.GetCachedImagesWithLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetCachedImagesWithLocationAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.CachedImages&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The identifier for the physical azure location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of cached images on specific OS type for a subscription in a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/cachedImages</description></item><item><term>Operation Id</term><description>Location_ListCachedImages</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.CachedImages" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilitiesWithLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt; GetCapabilitiesWithLocation (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt; GetCapabilitiesWithLocation(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetCapabilitiesWithLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCapabilitiesWithLocation (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerCapabilities)" />
      <MemberSignature Language="F#" Value="abstract member GetCapabilitiesWithLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt;&#xA;override this.GetCapabilitiesWithLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetCapabilitiesWithLocation (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The identifier for the physical azure location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of CPU/memory/GPU capabilities of a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/capabilities</description></item><item><term>Operation Id</term><description>Location_ListCapabilities</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilitiesWithLocationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt; GetCapabilitiesWithLocationAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt; GetCapabilitiesWithLocationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetCapabilitiesWithLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCapabilitiesWithLocationAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerCapabilities)" />
      <MemberSignature Language="F#" Value="abstract member GetCapabilitiesWithLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt;&#xA;override this.GetCapabilitiesWithLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetCapabilitiesWithLocationAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The identifier for the physical azure location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the list of CPU/memory/GPU capabilities of a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/capabilities</description></item><item><term>Operation Id</term><description>Location_ListCapabilities</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt; GetContainerGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt; GetContainerGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetContainerGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&#xA;override this.GetContainerGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetContainerGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of container groups in the specified subscription. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups</description></item><item><term>Operation Id</term><description>ContainerGroups_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerInstance.ContainerGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt; GetContainerGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt; GetContainerGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetContainerGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;&#xA;override this.GetContainerGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetContainerGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.ContainerGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of container groups in the specified subscription. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups</description></item><item><term>Operation Id</term><description>ContainerGroups_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerInstance.ContainerGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesWithLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt; GetUsagesWithLocation (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt; GetUsagesWithLocation(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetUsagesWithLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesWithLocation (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerInstanceUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesWithLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt;&#xA;override this.GetUsagesWithLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetUsagesWithLocation (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The identifier for the physical azure location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the usage for a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Location_ListUsage</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesWithLocationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt; GetUsagesWithLocationAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt; GetUsagesWithLocationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Mocking.MockableContainerInstanceSubscriptionResource.GetUsagesWithLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesWithLocationAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerInstanceUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesWithLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt;&#xA;override this.GetUsagesWithLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt;" Usage="mockableContainerInstanceSubscriptionResource.GetUsagesWithLocationAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The identifier for the physical azure location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the usage for a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Location_ListUsage</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
