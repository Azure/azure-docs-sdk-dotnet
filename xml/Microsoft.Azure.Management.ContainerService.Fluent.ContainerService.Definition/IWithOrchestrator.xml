<Type Name="IWithOrchestrator" FullName="Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithOrchestrator">
  <TypeSignature Language="C#" Value="public interface IWithOrchestrator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithOrchestrator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithOrchestrator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithOrchestrator" />
  <TypeSignature Language="F#" Value="type IWithOrchestrator = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The stage of the container service definition allowing to specify orchestration type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithDcosOrchestration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux WithDcosOrchestration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux WithDcosOrchestration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithOrchestrator.WithDcosOrchestration" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDcosOrchestration () As IWithLinux" />
      <MemberSignature Language="F#" Value="abstract member WithDcosOrchestration : unit -&gt; Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux" Usage="iWithOrchestrator.WithDcosOrchestration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies the DCOS orchestration type for the container service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="WithKubernetesOrchestration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithServicePrincipalProfile WithKubernetesOrchestration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithServicePrincipalProfile WithKubernetesOrchestration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithOrchestrator.WithKubernetesOrchestration" />
      <MemberSignature Language="VB.NET" Value="Public Function WithKubernetesOrchestration () As IWithServicePrincipalProfile" />
      <MemberSignature Language="F#" Value="abstract member WithKubernetesOrchestration : unit -&gt; Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithServicePrincipalProfile" Usage="iWithOrchestrator.WithKubernetesOrchestration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithServicePrincipalProfile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies the Kubernetes orchestration type for the container service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="WithSwarmOrchestration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux WithSwarmOrchestration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux WithSwarmOrchestration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithOrchestrator.WithSwarmOrchestration" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSwarmOrchestration () As IWithLinux" />
      <MemberSignature Language="F#" Value="abstract member WithSwarmOrchestration : unit -&gt; Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux" Usage="iWithOrchestrator.WithSwarmOrchestration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ContainerService.Fluent.ContainerService.Definition.IWithLinux</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies the Swarm orchestration type for the container service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
  </Members>
</Type>