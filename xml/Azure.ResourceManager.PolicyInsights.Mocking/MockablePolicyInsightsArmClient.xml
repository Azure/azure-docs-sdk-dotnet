<Type Name="MockablePolicyInsightsArmClient" FullName="Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient">
  <TypeSignature Language="C#" Value="public class MockablePolicyInsightsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePolicyInsightsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePolicyInsightsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePolicyInsightsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePolicyInsightsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAttestation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt; GetPolicyAttestation (Azure.Core.ResourceIdentifier scope, string attestationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt; GetPolicyAttestation(class Azure.Core.ResourceIdentifier scope, string attestationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyAttestation(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAttestation (scope As ResourceIdentifier, attestationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PolicyAttestationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAttestation : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;&#xA;override this.GetPolicyAttestation : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyAttestation (scope, attestationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="attestationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="attestationName"> The name of the attestation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing attestation at resource scope.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}</description></item><item><term>Operation Id</term><description>Attestations_GetAtResource</description></item><item><term>Default Api Version</term><description>2022-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PolicyInsights.PolicyAttestationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="attestationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attestationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAttestationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;&gt; GetPolicyAttestationAsync (Azure.Core.ResourceIdentifier scope, string attestationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;&gt; GetPolicyAttestationAsync(class Azure.Core.ResourceIdentifier scope, string attestationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyAttestationAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAttestationAsync (scope As ResourceIdentifier, attestationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PolicyAttestationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAttestationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;&gt;&#xA;override this.GetPolicyAttestationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyAttestationAsync (scope, attestationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="attestationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="attestationName"> The name of the attestation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing attestation at resource scope.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}</description></item><item><term>Operation Id</term><description>Attestations_GetAtResource</description></item><item><term>Default Api Version</term><description>2022-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PolicyInsights.PolicyAttestationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="attestationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attestationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAttestationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PolicyInsights.PolicyAttestationResource GetPolicyAttestationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PolicyInsights.PolicyAttestationResource GetPolicyAttestationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyAttestationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAttestationResource (id As ResourceIdentifier) As PolicyAttestationResource" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAttestationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyAttestationResource&#xA;override this.GetPolicyAttestationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyAttestationResource" Usage="mockablePolicyInsightsArmClient.GetPolicyAttestationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PolicyInsights.PolicyAttestationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyAttestationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PolicyInsights.PolicyAttestationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyAttestationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyAttestationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAttestations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PolicyInsights.PolicyAttestationCollection GetPolicyAttestations (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PolicyInsights.PolicyAttestationCollection GetPolicyAttestations(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyAttestations(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAttestations (scope As ResourceIdentifier) As PolicyAttestationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAttestations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyAttestationCollection&#xA;override this.GetPolicyAttestations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyAttestationCollection" Usage="mockablePolicyInsightsArmClient.GetPolicyAttestations scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PolicyInsights.PolicyAttestationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of PolicyAttestationResources in the ArmClient. </summary>
        <returns> An object representing collection of PolicyAttestationResources and their operations over a PolicyAttestationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyEventQueryResults">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt; GetPolicyEventQueryResults (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyEventType policyEventType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt; GetPolicyEventQueryResults(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyEventType policyEventType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyEventQueryResults(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyEventType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyEventQueryResults (scope As ResourceIdentifier, policyEventType As PolicyEventType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PolicyEvent)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyEventQueryResults : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyEventType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt;&#xA;override this.GetPolicyEventQueryResults : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyEventType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyEventQueryResults (scope, policyEventType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyEventType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyEventType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyEventType"> The name of the virtual resource under PolicyEvents resource type; only "default" is allowed. </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Queries policy events for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults</description></item><item><term>Operation Id</term><description>PolicyEvents_ListQueryResultsForResource</description></item><item><term>Default Api Version</term><description>2019-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicyEvent" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyEventQueryResultsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt; GetPolicyEventQueryResultsAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyEventType policyEventType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt; GetPolicyEventQueryResultsAsync(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyEventType policyEventType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyEventQueryResultsAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyEventType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyEventQueryResultsAsync (scope As ResourceIdentifier, policyEventType As PolicyEventType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PolicyEvent)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyEventQueryResultsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyEventType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt;&#xA;override this.GetPolicyEventQueryResultsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyEventType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyEventQueryResultsAsync (scope, policyEventType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyEventType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyEventType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyEventType"> The name of the virtual resource under PolicyEvents resource type; only "default" is allowed. </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Queries policy events for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults</description></item><item><term>Operation Id</term><description>PolicyEvents_ListQueryResultsForResource</description></item><item><term>Default Api Version</term><description>2019-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicyEvent" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyMetadataResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PolicyInsights.PolicyMetadataResource GetPolicyMetadataResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PolicyInsights.PolicyMetadataResource GetPolicyMetadataResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyMetadataResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyMetadataResource (id As ResourceIdentifier) As PolicyMetadataResource" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyMetadataResource&#xA;override this.GetPolicyMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyMetadataResource" Usage="mockablePolicyInsightsArmClient.GetPolicyMetadataResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PolicyInsights.PolicyMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PolicyInsights.PolicyMetadataResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyRemediation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt; GetPolicyRemediation (Azure.Core.ResourceIdentifier scope, string remediationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt; GetPolicyRemediation(class Azure.Core.ResourceIdentifier scope, string remediationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyRemediation(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyRemediation (scope As ResourceIdentifier, remediationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PolicyRemediationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyRemediation : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;&#xA;override this.GetPolicyRemediation : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyRemediation (scope, remediationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="remediationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="remediationName"> The name of the remediation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing remediation at resource scope.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}</description></item><item><term>Operation Id</term><description>Remediations_GetAtResource</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PolicyInsights.PolicyRemediationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="remediationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="remediationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyRemediationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;&gt; GetPolicyRemediationAsync (Azure.Core.ResourceIdentifier scope, string remediationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;&gt; GetPolicyRemediationAsync(class Azure.Core.ResourceIdentifier scope, string remediationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyRemediationAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyRemediationAsync (scope As ResourceIdentifier, remediationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PolicyRemediationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyRemediationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;&gt;&#xA;override this.GetPolicyRemediationAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyRemediationAsync (scope, remediationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="remediationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="remediationName"> The name of the remediation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing remediation at resource scope.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}</description></item><item><term>Operation Id</term><description>Remediations_GetAtResource</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.PolicyInsights.PolicyRemediationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="remediationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="remediationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyRemediationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PolicyInsights.PolicyRemediationResource GetPolicyRemediationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PolicyInsights.PolicyRemediationResource GetPolicyRemediationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyRemediationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyRemediationResource (id As ResourceIdentifier) As PolicyRemediationResource" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyRemediationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyRemediationResource&#xA;override this.GetPolicyRemediationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyRemediationResource" Usage="mockablePolicyInsightsArmClient.GetPolicyRemediationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PolicyInsights.PolicyRemediationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyRemediationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.PolicyInsights.PolicyRemediationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyRemediationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.PolicyInsights.PolicyRemediationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyRemediations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.PolicyInsights.PolicyRemediationCollection GetPolicyRemediations (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.PolicyInsights.PolicyRemediationCollection GetPolicyRemediations(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyRemediations(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyRemediations (scope As ResourceIdentifier) As PolicyRemediationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyRemediations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyRemediationCollection&#xA;override this.GetPolicyRemediations : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.PolicyInsights.PolicyRemediationCollection" Usage="mockablePolicyInsightsArmClient.GetPolicyRemediations scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.PolicyInsights.PolicyRemediationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of PolicyRemediationResources in the ArmClient. </summary>
        <returns> An object representing collection of PolicyRemediationResources and their operations over a PolicyRemediationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyStateQueryResults">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt; GetPolicyStateQueryResults (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyStateType policyStateType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt; GetPolicyStateQueryResults(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyStateType policyStateType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyStateQueryResults(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyStateType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyStateQueryResults (scope As ResourceIdentifier, policyStateType As PolicyStateType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PolicyState)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyStateQueryResults : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt;&#xA;override this.GetPolicyStateQueryResults : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyStateQueryResults (scope, policyStateType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyStateType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyStateType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyStateType"> The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s). </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Queries policy states for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults</description></item><item><term>Operation Id</term><description>PolicyStates_ListQueryResultsForResource</description></item><item><term>Default Api Version</term><description>2019-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicyState" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyStateQueryResultsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt; GetPolicyStateQueryResultsAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyStateType policyStateType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt; GetPolicyStateQueryResultsAsync(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyStateType policyStateType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyStateQueryResultsAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyStateType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyStateQueryResultsAsync (scope As ResourceIdentifier, policyStateType As PolicyStateType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PolicyState)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyStateQueryResultsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt;&#xA;override this.GetPolicyStateQueryResultsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyStateQueryResultsAsync (scope, policyStateType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyStateType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyStateType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyStateType"> The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s). </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Queries policy states for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults</description></item><item><term>Operation Id</term><description>PolicyStates_ListQueryResultsForResource</description></item><item><term>Default Api Version</term><description>2019-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicyState" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyTrackedResourceQueryResults">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt; GetPolicyTrackedResourceQueryResults (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType policyTrackedResourceType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt; GetPolicyTrackedResourceQueryResults(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType policyTrackedResourceType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyTrackedResourceQueryResults(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyTrackedResourceQueryResults (scope As ResourceIdentifier, policyTrackedResourceType As PolicyTrackedResourceType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PolicyTrackedResourceRecord)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyTrackedResourceQueryResults : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt;&#xA;override this.GetPolicyTrackedResourceQueryResults : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyTrackedResourceQueryResults (scope, policyTrackedResourceType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyTrackedResourceType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyTrackedResourceType"> The name of the virtual resource under PolicyTrackedResources resource type; only "default" is allowed. </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Queries policy tracked resources under the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyTrackedResources/{policyTrackedResourcesResource}/queryResults</description></item><item><term>Operation Id</term><description>PolicyTrackedResources_ListQueryResultsForResource</description></item><item><term>Default Api Version</term><description>2018-07-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyTrackedResourceQueryResultsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt; GetPolicyTrackedResourceQueryResultsAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType policyTrackedResourceType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt; GetPolicyTrackedResourceQueryResultsAsync(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType policyTrackedResourceType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.GetPolicyTrackedResourceQueryResultsAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyTrackedResourceQueryResultsAsync (scope As ResourceIdentifier, policyTrackedResourceType As PolicyTrackedResourceType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PolicyTrackedResourceRecord)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyTrackedResourceQueryResultsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt;&#xA;override this.GetPolicyTrackedResourceQueryResultsAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt;" Usage="mockablePolicyInsightsArmClient.GetPolicyTrackedResourceQueryResultsAsync (scope, policyTrackedResourceType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyTrackedResourceType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyTrackedResourceType"> The name of the virtual resource under PolicyTrackedResources resource type; only "default" is allowed. </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Queries policy tracked resources under the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyTrackedResources/{policyTrackedResourcesResource}/queryResults</description></item><item><term>Operation Id</term><description>PolicyTrackedResources_ListQueryResultsForResource</description></item><item><term>Default Api Version</term><description>2018-07-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicyTrackedResourceRecord" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SummarizePolicyStates">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt; SummarizePolicyStates (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType policyStateSummaryType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt; SummarizePolicyStates(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType policyStateSummaryType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.SummarizePolicyStates(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SummarizePolicyStates (scope As ResourceIdentifier, policyStateSummaryType As PolicyStateSummaryType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PolicySummary)" />
      <MemberSignature Language="F#" Value="abstract member SummarizePolicyStates : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt;&#xA;override this.SummarizePolicyStates : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt;" Usage="mockablePolicyInsightsArmClient.SummarizePolicyStates (scope, policyStateSummaryType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyStateSummaryType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyStateSummaryType"> The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value. </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Summarizes policy states for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize</description></item><item><term>Operation Id</term><description>PolicyStates_SummarizeForResource</description></item><item><term>Default Api Version</term><description>2019-10-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicySummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SummarizePolicyStatesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt; SummarizePolicyStatesAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType policyStateSummaryType, Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt; SummarizePolicyStatesAsync(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType policyStateSummaryType, class Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings policyQuerySettings, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.PolicyInsights.Mocking.MockablePolicyInsightsArmClient.SummarizePolicyStatesAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType,Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SummarizePolicyStatesAsync (scope As ResourceIdentifier, policyStateSummaryType As PolicyStateSummaryType, Optional policyQuerySettings As PolicyQuerySettings = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PolicySummary)" />
      <MemberSignature Language="F#" Value="abstract member SummarizePolicyStatesAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt;&#xA;override this.SummarizePolicyStatesAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType * Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt;" Usage="mockablePolicyInsightsArmClient.SummarizePolicyStatesAsync (scope, policyStateSummaryType, policyQuerySettings, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.PolicyInsights</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.PolicyInsights.Models.PolicySummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="policyStateSummaryType" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyStateSummaryType" />
        <Parameter Name="policyQuerySettings" Type="Azure.ResourceManager.PolicyInsights.Models.PolicyQuerySettings" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="policyStateSummaryType"> The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value. </param>
        <param name="policyQuerySettings"> Parameter group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Summarizes policy states for the resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize</description></item><item><term>Operation Id</term><description>PolicyStates_SummarizeForResource</description></item><item><term>Default Api Version</term><description>2019-10-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.PolicyInsights.Models.PolicySummary" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
