<Type Name="WebPubSubServiceClient" FullName="Azure.Messaging.WebPubSub.WebPubSubServiceClient">
  <TypeSignature Language="C#" Value="public class WebPubSubServiceClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPubSubServiceClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.WebPubSub.WebPubSubServiceClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPubSubServiceClient" />
  <TypeSignature Language="F#" Value="type WebPubSubServiceClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The WebPubSubService service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPubSubServiceClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of WebPubSubServiceClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPubSubServiceClient (string connectionString, string hub);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string hub) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, hub As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.WebPubSub.WebPubSubServiceClient : string * string -&gt; Azure.Messaging.WebPubSub.WebPubSubServiceClient" Usage="new Azure.Messaging.WebPubSub.WebPubSubServiceClient (connectionString, hub)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="hub" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string contains Endpoint and AccessKey.</param>
        <param name="hub">Target hub name, which should start with alphabetic characters and only contain alpha-numeric characters or underscore.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Messaging.WebPubSub.WebPubSubServiceClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPubSubServiceClient (string connectionString, string hub, Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string hub, class Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.#ctor(System.String,System.String,Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, hub As String, options As WebPubSubServiceClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.WebPubSub.WebPubSubServiceClient : string * string * Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions -&gt; Azure.Messaging.WebPubSub.WebPubSubServiceClient" Usage="new Azure.Messaging.WebPubSub.WebPubSubServiceClient (connectionString, hub, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="hub" Type="System.String" />
        <Parameter Name="options" Type="Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string contains Endpoint and AccessKey.</param>
        <param name="hub">Target hub name, which should start with alphabetic characters and only contain alpha-numeric characters or underscore.</param>
        <param name="options" />
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Messaging.WebPubSub.WebPubSubServiceClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPubSubServiceClient (Uri endpoint, string hub, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string hub, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.#ctor(System.Uri,System.String,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, hub As String, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.WebPubSub.WebPubSubServiceClient : Uri * string * Azure.AzureKeyCredential -&gt; Azure.Messaging.WebPubSub.WebPubSubServiceClient" Usage="new Azure.Messaging.WebPubSub.WebPubSubServiceClient (endpoint, hub, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="hub" Type="System.String" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> server parameter. </param>
        <param name="hub"> Target hub name, which should start with alphabetic characters and only contain alpha-numeric characters or underscore. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of WebPubSubServiceClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPubSubServiceClient (Uri endpoint, string hub, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string hub, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, hub As String, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.WebPubSub.WebPubSubServiceClient : Uri * string * Azure.Core.TokenCredential -&gt; Azure.Messaging.WebPubSub.WebPubSubServiceClient" Usage="new Azure.Messaging.WebPubSub.WebPubSubServiceClient (endpoint, hub, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="hub" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> server parameter. </param>
        <param name="hub"> Target hub name, which should start with alphabetic characters and only contain alpha-numeric characters or underscore. </param>
        <param name="credential"> A token credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of WebPubSubServiceClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPubSubServiceClient (Uri endpoint, string hub, Azure.AzureKeyCredential credential, Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string hub, class Azure.AzureKeyCredential credential, class Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.#ctor(System.Uri,System.String,Azure.AzureKeyCredential,Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, hub As String, credential As AzureKeyCredential, options As WebPubSubServiceClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.WebPubSub.WebPubSubServiceClient : Uri * string * Azure.AzureKeyCredential * Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions -&gt; Azure.Messaging.WebPubSub.WebPubSubServiceClient" Usage="new Azure.Messaging.WebPubSub.WebPubSubServiceClient (endpoint, hub, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="hub" Type="System.String" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> server parameter. </param>
        <param name="hub"> Target hub name, which should start with alphabetic characters and only contain alpha-numeric characters or underscore. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of WebPubSubServiceClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPubSubServiceClient (Uri endpoint, string hub, Azure.Core.TokenCredential credential, Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string hub, class Azure.Core.TokenCredential credential, class Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, hub As String, credential As TokenCredential, options As WebPubSubServiceClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.WebPubSub.WebPubSubServiceClient : Uri * string * Azure.Core.TokenCredential * Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions -&gt; Azure.Messaging.WebPubSub.WebPubSubServiceClient" Usage="new Azure.Messaging.WebPubSub.WebPubSubServiceClient (endpoint, hub, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="hub" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Messaging.WebPubSub.WebPubSubServiceClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> server parameter. </param>
        <param name="hub"> Target hub name, which should start with alphabetic characters and only contain alpha-numeric characters or underscore. </param>
        <param name="credential"> A token credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of WebPubSubServiceClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnectionToGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AddConnectionToGroup (string group, string connectionId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AddConnectionToGroup(string group, string connectionId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.AddConnectionToGroup(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddConnectionToGroup (group As String, connectionId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AddConnectionToGroup : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.AddConnectionToGroup : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.AddConnectionToGroup (group, connectionId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="context"> The request context. </param>
        <summary> Add a connection to the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="connectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddConnectionToGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AddConnectionToGroupAsync (string group, string connectionId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AddConnectionToGroupAsync(string group, string connectionId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.AddConnectionToGroupAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddConnectionToGroupAsync (group As String, connectionId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AddConnectionToGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AddConnectionToGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.AddConnectionToGroupAsync (group, connectionId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="context"> The request context. </param>
        <summary> Add a connection to the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="connectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddUserToGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AddUserToGroup (string group, string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AddUserToGroup(string group, string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.AddUserToGroup(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddUserToGroup (group As String, userId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AddUserToGroup : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.AddUserToGroup : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.AddUserToGroup (group, userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="userId"> Target user Id. </param>
        <param name="context"> The request context. </param>
        <summary> Add a user to the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddUserToGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AddUserToGroupAsync (string group, string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AddUserToGroupAsync(string group, string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.AddUserToGroupAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddUserToGroupAsync (group As String, userId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AddUserToGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AddUserToGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.AddUserToGroupAsync (group, userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="userId"> Target user Id. </param>
        <param name="context"> The request context. </param>
        <summary> Add a user to the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPermission">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; CheckPermission (Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; CheckPermission(valuetype Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CheckPermission(Azure.Messaging.WebPubSub.WebPubSubPermission,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPermission (permission As WebPubSubPermission, connectionId As String, Optional targetName As String = Nothing, Optional context As RequestContext = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CheckPermission : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;&#xA;override this.CheckPermission : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;" Usage="webPubSubServiceClient.CheckPermission (permission, connectionId, targetName, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="Azure.Messaging.WebPubSub.WebPubSubPermission" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="permission"> The permission: current supported actions are joinLeaveGroup and sendToGroup. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="targetName"> Optional. If not set, get the permission for all targets. If set, get the permission for the specific target. The meaning of the target depends on the specific permission. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if a connection has permission to the specified action. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPermissionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; CheckPermissionAsync (Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; CheckPermissionAsync(valuetype Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CheckPermissionAsync(Azure.Messaging.WebPubSub.WebPubSubPermission,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPermissionAsync (permission As WebPubSubPermission, connectionId As String, Optional targetName As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member CheckPermissionAsync : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.CheckPermissionAsync : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="webPubSubServiceClient.CheckPermissionAsync (permission, connectionId, targetName, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="Azure.Messaging.WebPubSub.WebPubSubPermission" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="permission"> The permission: current supported actions are joinLeaveGroup and sendToGroup. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="targetName"> Optional. If not set, get the permission for all targets. If set, get the permission for the specific target. The meaning of the target depends on the specific permission. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if a connection has permission to the specified action. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CloseAllConnections (System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CloseAllConnections(class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseAllConnections(System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAllConnections (Optional excluded As IEnumerable(Of String) = Nothing, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CloseAllConnections : seq&lt;string&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CloseAllConnections : seq&lt;string&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.CloseAllConnections (excluded, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="excluded"> Exclude these connectionIds when closing the connections in the hub. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close the connections in the hub. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllConnectionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CloseAllConnectionsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CloseAllConnectionsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseAllConnectionsAsync(System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAllConnectionsAsync (Optional excluded As IEnumerable(Of String) = Nothing, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CloseAllConnectionsAsync : seq&lt;string&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CloseAllConnectionsAsync : seq&lt;string&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.CloseAllConnectionsAsync (excluded, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="excluded"> Exclude these connectionIds when closing the connections in the hub. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close the connections in the hub. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CloseConnection (string connectionId, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CloseConnection(string connectionId, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnection(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseConnection (connectionId As String, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CloseConnection : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CloseConnection : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.CloseConnection (connectionId, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="connectionId"> Target connection Id. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close the client connection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CloseConnectionAsync (string connectionId, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CloseConnectionAsync(string connectionId, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseConnectionAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseConnectionAsync (connectionId As String, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CloseConnectionAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CloseConnectionAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.CloseConnectionAsync (connectionId, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="connectionId"> Target connection Id. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close the client connection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseGroupConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CloseGroupConnections (string group, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CloseGroupConnections(string group, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseGroupConnections(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseGroupConnections (group As String, Optional excluded As IEnumerable(Of String) = Nothing, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CloseGroupConnections : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CloseGroupConnections : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.CloseGroupConnections (group, excluded, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="excluded"> Exclude these connectionIds when closing the connections in the group. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close connections in the specific group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseGroupConnectionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CloseGroupConnectionsAsync (string group, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CloseGroupConnectionsAsync(string group, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseGroupConnectionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseGroupConnectionsAsync (group As String, Optional excluded As IEnumerable(Of String) = Nothing, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CloseGroupConnectionsAsync : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CloseGroupConnectionsAsync : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.CloseGroupConnectionsAsync (group, excluded, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="excluded"> Exclude these connectionIds when closing the connections in the group. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close connections in the specific group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseUserConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CloseUserConnections (string userId, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CloseUserConnections(string userId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseUserConnections(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseUserConnections (userId As String, Optional excluded As IEnumerable(Of String) = Nothing, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CloseUserConnections : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CloseUserConnections : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.CloseUserConnections (userId, excluded, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> The user Id. </param>
        <param name="excluded"> Exclude these connectionIds when closing the connections for the user. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close connections for the specific user. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseUserConnectionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CloseUserConnectionsAsync (string userId, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, string reason = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CloseUserConnectionsAsync(string userId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, string reason, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.CloseUserConnectionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseUserConnectionsAsync (userId As String, Optional excluded As IEnumerable(Of String) = Nothing, Optional reason As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CloseUserConnectionsAsync : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CloseUserConnectionsAsync : string * seq&lt;string&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.CloseUserConnectionsAsync (userId, excluded, reason, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> The user Id. </param>
        <param name="excluded"> Exclude these connectionIds when closing the connections for the user. </param>
        <param name="reason"> The reason closing the client connection. </param>
        <param name="context"> The request context. </param>
        <summary> Close connections for the specific user. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; ConnectionExists (string connectionId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; ConnectionExists(string connectionId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExists(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionExists (connectionId As String, Optional context As RequestContext = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionExists : string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;&#xA;override this.ConnectionExists : string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;" Usage="webPubSubServiceClient.ConnectionExists (connectionId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="connectionId"> The connection Id. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if the connection with the given connectionId exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ConnectionExistsAsync (string connectionId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ConnectionExistsAsync(string connectionId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.ConnectionExistsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionExistsAsync (connectionId As String, Optional context As RequestContext = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ConnectionExistsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ConnectionExistsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="webPubSubServiceClient.ConnectionExistsAsync (connectionId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="connectionId"> The connection Id. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if the connection with the given connectionId exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.WebPubSub.WebPubSubServiceClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Messaging.WebPubSub.WebPubSubServiceClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The service endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientAccessUri">
      <MemberSignature Language="C#" Value="public virtual Uri GetClientAccessUri (DateTimeOffset expiresAt, string userId = default, System.Collections.Generic.IEnumerable&lt;string&gt; roles = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetClientAccessUri(valuetype System.DateTimeOffset expiresAt, string userId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; roles, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUri(System.DateTimeOffset,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientAccessUri (expiresAt As DateTimeOffset, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Uri" />
      <MemberSignature Language="F#" Value="abstract member GetClientAccessUri : DateTimeOffset * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Uri&#xA;override this.GetClientAccessUri : DateTimeOffset * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Uri" Usage="webPubSubServiceClient.GetClientAccessUri (expiresAt, userId, roles, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expiresAt" Type="System.DateTimeOffset" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="roles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expiresAt">UTC time when the token expires.</param>
        <param name="userId">User Id.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <param name="roles">Roles that the connection with the generated token will have.</param>
        <summary>
            Creates a URI with authentication token.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientAccessUri">
      <MemberSignature Language="C#" Value="public virtual Uri GetClientAccessUri (TimeSpan expiresAfter = default, string userId = default, System.Collections.Generic.IEnumerable&lt;string&gt; roles = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetClientAccessUri(valuetype System.TimeSpan expiresAfter, string userId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; roles, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUri(System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientAccessUri (Optional expiresAfter As TimeSpan = Nothing, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Uri" />
      <MemberSignature Language="F#" Value="abstract member GetClientAccessUri : TimeSpan * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Uri&#xA;override this.GetClientAccessUri : TimeSpan * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Uri" Usage="webPubSubServiceClient.GetClientAccessUri (expiresAfter, userId, roles, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expiresAfter" Type="System.TimeSpan" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="roles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expiresAfter">Defaults to one hour, if not specified. Must be greater or equal zero.</param>
        <param name="userId">User Id.</param>
        <param name="roles">Roles that the connection with the generated token will have.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Creates a URI with authentication token.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientAccessUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Uri&gt; GetClientAccessUriAsync (DateTimeOffset expiresAt, string userId = default, System.Collections.Generic.IEnumerable&lt;string&gt; roles = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Uri&gt; GetClientAccessUriAsync(valuetype System.DateTimeOffset expiresAt, string userId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; roles, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.DateTimeOffset,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientAccessUriAsync (expiresAt As DateTimeOffset, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Uri)" />
      <MemberSignature Language="F#" Value="abstract member GetClientAccessUriAsync : DateTimeOffset * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Uri&gt;&#xA;override this.GetClientAccessUriAsync : DateTimeOffset * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Uri&gt;" Usage="webPubSubServiceClient.GetClientAccessUriAsync (expiresAt, userId, roles, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expiresAt" Type="System.DateTimeOffset" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="roles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expiresAt">UTC time when the token expires.</param>
        <param name="userId">User Id.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <param name="roles">Roles that the connection with the generated token will have.</param>
        <summary>
            Creates a URI with authentication token.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientAccessUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Uri&gt; GetClientAccessUriAsync (TimeSpan expiresAfter = default, string userId = default, System.Collections.Generic.IEnumerable&lt;string&gt; roles = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Uri&gt; GetClientAccessUriAsync(valuetype System.TimeSpan expiresAfter, string userId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; roles, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GetClientAccessUriAsync(System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientAccessUriAsync (Optional expiresAfter As TimeSpan = Nothing, Optional userId As String = Nothing, Optional roles As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Uri)" />
      <MemberSignature Language="F#" Value="abstract member GetClientAccessUriAsync : TimeSpan * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Uri&gt;&#xA;override this.GetClientAccessUriAsync : TimeSpan * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Uri&gt;" Usage="webPubSubServiceClient.GetClientAccessUriAsync (expiresAfter, userId, roles, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expiresAfter" Type="System.TimeSpan" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="roles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expiresAfter">Defaults to one hour, if not specified. Must be greater or equal zero.</param>
        <param name="userId">User Id.</param>
        <param name="roles">Roles that the connection with the generated token will have.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Creates a URI with authentication token.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantPermission">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GrantPermission (Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GrantPermission(valuetype Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GrantPermission(Azure.Messaging.WebPubSub.WebPubSubPermission,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GrantPermission (permission As WebPubSubPermission, connectionId As String, Optional targetName As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GrantPermission : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GrantPermission : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.GrantPermission (permission, connectionId, targetName, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="Azure.Messaging.WebPubSub.WebPubSubPermission" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="permission"> The permission: current supported actions are joinLeaveGroup and sendToGroup. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="targetName"> Optional. If not set, grant the permission to all the targets. If set, grant the permission to the specific target. The meaning of the target depends on the specific permission. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Grant permission to the connection. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantPermissionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GrantPermissionAsync (Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GrantPermissionAsync(valuetype Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GrantPermissionAsync(Azure.Messaging.WebPubSub.WebPubSubPermission,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GrantPermissionAsync (permission As WebPubSubPermission, connectionId As String, Optional targetName As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GrantPermissionAsync : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GrantPermissionAsync : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.GrantPermissionAsync (permission, connectionId, targetName, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="Azure.Messaging.WebPubSub.WebPubSubPermission" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="permission"> The permission: current supported actions are joinLeaveGroup and sendToGroup. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="targetName"> Optional. If not set, grant the permission to all the targets. If set, grant the permission to the specific target. The meaning of the target depends on the specific permission. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Grant permission to the connection. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; GroupExists (string group, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; GroupExists(string group, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GroupExists(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupExists (group As String, Optional context As RequestContext = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GroupExists : string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;&#xA;override this.GroupExists : string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;" Usage="webPubSubServiceClient.GroupExists (group, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if there are any client connections inside the given group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; GroupExistsAsync (string group, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; GroupExistsAsync(string group, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.GroupExistsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupExistsAsync (group As String, Optional context As RequestContext = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member GroupExistsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.GroupExistsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="webPubSubServiceClient.GroupExistsAsync (group, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if there are any client connections inside the given group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hub">
      <MemberSignature Language="C#" Value="public virtual string Hub { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Hub" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.WebPubSub.WebPubSubServiceClient.Hub" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Hub As String" />
      <MemberSignature Language="F#" Value="member this.Hub : string" Usage="Azure.Messaging.WebPubSub.WebPubSubServiceClient.Hub" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The hub.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.WebPubSub.WebPubSubServiceClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Messaging.WebPubSub.WebPubSubServiceClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveConnectionFromGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RemoveConnectionFromGroup (string group, string connectionId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RemoveConnectionFromGroup(string group, string connectionId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RemoveConnectionFromGroup(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveConnectionFromGroup (group As String, connectionId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RemoveConnectionFromGroup : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.RemoveConnectionFromGroup : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.RemoveConnectionFromGroup (group, connectionId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="context"> The request context. </param>
        <summary> Remove a connection from the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="connectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveConnectionFromGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveConnectionFromGroupAsync (string group, string connectionId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveConnectionFromGroupAsync(string group, string connectionId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RemoveConnectionFromGroupAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveConnectionFromGroupAsync (group As String, connectionId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RemoveConnectionFromGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RemoveConnectionFromGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.RemoveConnectionFromGroupAsync (group, connectionId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="context"> The request context. </param>
        <summary> Remove a connection from the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="connectionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromAllGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RemoveUserFromAllGroups (string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RemoveUserFromAllGroups(string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RemoveUserFromAllGroups(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveUserFromAllGroups (userId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RemoveUserFromAllGroups : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.RemoveUserFromAllGroups : string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.RemoveUserFromAllGroups (userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> Target user Id. </param>
        <param name="context"> The request context. </param>
        <summary> Remove a user from all groups. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromAllGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveUserFromAllGroupsAsync (string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveUserFromAllGroupsAsync(string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RemoveUserFromAllGroupsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveUserFromAllGroupsAsync (userId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RemoveUserFromAllGroupsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RemoveUserFromAllGroupsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.RemoveUserFromAllGroupsAsync (userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> Target user Id. </param>
        <param name="context"> The request context. </param>
        <summary> Remove a user from all groups. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RemoveUserFromGroup (string group, string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RemoveUserFromGroup(string group, string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RemoveUserFromGroup(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveUserFromGroup (group As String, userId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RemoveUserFromGroup : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.RemoveUserFromGroup : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.RemoveUserFromGroup (group, userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="userId"> Target user Id. </param>
        <param name="context"> The request context. </param>
        <summary> Remove a user from the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveUserFromGroupAsync (string group, string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveUserFromGroupAsync(string group, string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RemoveUserFromGroupAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveUserFromGroupAsync (group As String, userId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RemoveUserFromGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RemoveUserFromGroupAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.RemoveUserFromGroupAsync (group, userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="userId"> Target user Id. </param>
        <param name="context"> The request context. </param>
        <summary> Remove a user from the target group. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RevokePermission">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RevokePermission (Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RevokePermission(valuetype Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RevokePermission(Azure.Messaging.WebPubSub.WebPubSubPermission,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RevokePermission (permission As WebPubSubPermission, connectionId As String, Optional targetName As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RevokePermission : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.RevokePermission : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.RevokePermission (permission, connectionId, targetName, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="Azure.Messaging.WebPubSub.WebPubSubPermission" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="permission"> The permission: current supported actions are joinLeaveGroup and sendToGroup. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="targetName"> Optional. If not set, revoke the permission for all targets. If set, revoke the permission for the specific target. The meaning of the target depends on the specific permission. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Revoke permission for the connection. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokePermissionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RevokePermissionAsync (Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RevokePermissionAsync(valuetype Azure.Messaging.WebPubSub.WebPubSubPermission permission, string connectionId, string targetName, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.RevokePermissionAsync(Azure.Messaging.WebPubSub.WebPubSubPermission,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RevokePermissionAsync (permission As WebPubSubPermission, connectionId As String, Optional targetName As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RevokePermissionAsync : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RevokePermissionAsync : Azure.Messaging.WebPubSub.WebPubSubPermission * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.RevokePermissionAsync (permission, connectionId, targetName, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="Azure.Messaging.WebPubSub.WebPubSubPermission" />
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="permission"> The permission: current supported actions are joinLeaveGroup and sendToGroup. </param>
        <param name="connectionId"> Target connection Id. </param>
        <param name="targetName"> Optional. If not set, revoke the permission for all targets. If set, revoke the permission for the specific target. The meaning of the target depends on the specific permission. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Revoke permission for the connection. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToAll (string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToAll(string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToAll(System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToAll (content As String, Optional contentType As ContentType = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToAll : string * Azure.Core.ContentType -&gt; Azure.Response&#xA;override this.SendToAll : string * Azure.Core.ContentType -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToAll (content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>Broadcast message to all the connected client connections.</summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToAll (Azure.Core.RequestContent content, Azure.Core.ContentType contentType, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToAll(class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToAll(Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToAll (content As RequestContent, contentType As ContentType, Optional excluded As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToAll : Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.SendToAll : Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToAll (content, contentType, excluded, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="excluded"> Excluded connection Ids. </param>
        <param name="context"> The request context. </param>
        <summary> Broadcast content inside request body to all the connected client connections. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SendToAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToAllAsync (string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToAllAsync(string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToAllAsync(System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToAllAsync (content As String, Optional contentType As ContentType = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToAllAsync : string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToAllAsync : string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToAllAsync (content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>Broadcast message to all the connected client connections.</summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToAllAsync (Azure.Core.RequestContent content, Azure.Core.ContentType contentType, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToAllAsync(class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToAllAsync(Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToAllAsync (content As RequestContent, contentType As ContentType, Optional excluded As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToAllAsync : Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToAllAsync : Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToAllAsync (content, contentType, excluded, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="excluded"> Excluded connection Ids. </param>
        <param name="context"> The request context. </param>
        <summary> Broadcast content inside request body to all the connected client connections. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SendToConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToConnection (string connectionId, string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToConnection(string connectionId, string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToConnection(System.String,System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToConnection (connectionId As String, content As String, Optional contentType As ContentType = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToConnection : string * string * Azure.Core.ContentType -&gt; Azure.Response&#xA;override this.SendToConnection : string * string * Azure.Core.ContentType -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToConnection (connectionId, content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="connectionId">The connection Id.</param>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>
            Send message to the specific connection.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToConnection (string connectionId, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToConnection(string connectionId, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToConnection(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToConnection (connectionId As String, content As RequestContent, contentType As ContentType, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToConnection : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; Azure.Response&#xA;override this.SendToConnection : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToConnection (connectionId, content, contentType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="connectionId"> The connection Id. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="context"> The request context. </param>
        <summary> Send content inside request body to the specific connection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SendToConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToConnectionAsync (string connectionId, string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToConnectionAsync(string connectionId, string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToConnectionAsync(System.String,System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToConnectionAsync (connectionId As String, content As String, Optional contentType As ContentType = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToConnectionAsync : string * string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToConnectionAsync : string * string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToConnectionAsync (connectionId, content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="connectionId">The connection Id.</param>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>
            Send message to the specific connection.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToConnectionAsync (string connectionId, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToConnectionAsync(string connectionId, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToConnectionAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToConnectionAsync (connectionId As String, content As RequestContent, contentType As ContentType, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToConnectionAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToConnectionAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToConnectionAsync (connectionId, content, contentType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="connectionId"> The connection Id. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="context"> The request context. </param>
        <summary> Send content inside request body to the specific connection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SendToGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToGroup (string group, string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToGroup(string group, string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroup(System.String,System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToGroup (group As String, content As String, Optional contentType As ContentType = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToGroup : string * string * Azure.Core.ContentType -&gt; Azure.Response&#xA;override this.SendToGroup : string * string * Azure.Core.ContentType -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToGroup (group, content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="group">Target group name, which length should be greater than 0 and less than 1025.</param>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>
            Send message to a group of connections.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToGroup (string group, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToGroup(string group, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroup(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToGroup (group As String, content As RequestContent, contentType As ContentType, Optional excluded As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToGroup : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.SendToGroup : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToGroup (group, content, contentType, excluded, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="excluded"> Excluded connection Ids. </param>
        <param name="context"> The request context. </param>
        <summary> Send content inside request body to a group of connections. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SendToGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToGroupAsync (string group, string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToGroupAsync(string group, string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToGroupAsync (group As String, content As String, Optional contentType As ContentType = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToGroupAsync : string * string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToGroupAsync : string * string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToGroupAsync (group, content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="group">Target group name, which length should be greater than 0 and less than 1025.</param>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>
            Send message to a group of connections.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToGroupAsync (string group, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, System.Collections.Generic.IEnumerable&lt;string&gt; excluded = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToGroupAsync(string group, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excluded, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToGroupAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToGroupAsync (group As String, content As RequestContent, contentType As ContentType, Optional excluded As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToGroupAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToGroupAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToGroupAsync (group, content, contentType, excluded, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="excluded" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="group"> Target group name, which length should be greater than 0 and less than 1025. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="excluded"> Excluded connection Ids. </param>
        <param name="context"> The request context. </param>
        <summary> Send content inside request body to a group of connections. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="group" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SendToUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToUser (string userId, string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToUser(string userId, string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToUser(System.String,System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToUser (userId As String, content As String, Optional contentType As ContentType = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToUser : string * string * Azure.Core.ContentType -&gt; Azure.Response&#xA;override this.SendToUser : string * string * Azure.Core.ContentType -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToUser (userId, content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="userId">The user Id.</param>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>
            Send message to the specific user.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendToUser (string userId, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendToUser(string userId, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToUser(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToUser (userId As String, content As RequestContent, contentType As ContentType, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendToUser : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; Azure.Response&#xA;override this.SendToUser : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; Azure.Response" Usage="webPubSubServiceClient.SendToUser (userId, content, contentType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> The user Id. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="context"> The request context. </param>
        <summary> Send content inside request body to the specific user. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SendToUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToUserAsync (string userId, string content, Azure.Core.ContentType contentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToUserAsync(string userId, string content, valuetype Azure.Core.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToUserAsync(System.String,System.String,Azure.Core.ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToUserAsync (userId As String, content As String, Optional contentType As ContentType = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToUserAsync : string * string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToUserAsync : string * string * Azure.Core.ContentType -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToUserAsync (userId, content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
      </Parameters>
      <Docs>
        <param name="userId">The user Id.</param>
        <param name="content" />
        <param name="contentType">Defaults to ContentType.PlainText.</param>
        <summary>
            Send message to the specific user.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> if successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendToUserAsync (string userId, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendToUserAsync(string userId, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.SendToUserAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendToUserAsync (userId As String, content As RequestContent, contentType As ContentType, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendToUserAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendToUserAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="webPubSubServiceClient.SendToUserAsync (userId, content, contentType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> The user Id. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="contentType"> Upload file type. Allowed values: "application/json" | "application/octet-stream". </param>
        <param name="context"> The request context. </param>
        <summary> Send content inside request body to the specific user. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              code: string,
              message: string,
              target: string,
              details: [ErrorDetail],
              inner: {
                code: string,
                inner: InnerError
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UserExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; UserExists (string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; UserExists(string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.UserExists(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UserExists (userId As String, Optional context As RequestContext = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member UserExists : string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;&#xA;override this.UserExists : string * Azure.RequestContext -&gt; Azure.Response&lt;bool&gt;" Usage="webPubSubServiceClient.UserExists (userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> Target user Id. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if there are any client connections connected for the given user. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; UserExistsAsync (string userId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; UserExistsAsync(string userId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.WebPubSub.WebPubSubServiceClient.UserExistsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UserExistsAsync (userId As String, Optional context As RequestContext = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member UserExistsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.UserExistsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="webPubSubServiceClient.UserExistsAsync (userId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.WebPubSub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="userId"> Target user Id. </param>
        <param name="context">Options specifying the cancellation token, controlling error reporting, etc.</param>
        <summary> Check if there are any client connections connected for the given user. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
