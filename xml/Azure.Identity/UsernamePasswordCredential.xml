<Type Name="UsernamePasswordCredential" FullName="Azure.Identity.UsernamePasswordCredential">
  <TypeSignature Language="C#" Value="public class UsernamePasswordCredential : Azure.Core.TokenCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UsernamePasswordCredential extends Azure.Core.TokenCredential" />
  <TypeSignature Language="DocId" Value="T:Azure.Identity.UsernamePasswordCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class UsernamePasswordCredential&#xA;Inherits TokenCredential" />
  <TypeSignature Language="F#" Value="type UsernamePasswordCredential = class&#xA;    inherit TokenCredential" />
  <AssemblyInfo>
    <AssemblyName>Azure.Identity</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.TokenCredential</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Enables authentication to Azure Active Directory using a user's username and password. If the user has MFA enabled this
             credential will fail to get a token throwing an <see cref="T:Azure.Identity.AuthenticationFailedException" />. Also, this credential requires a high degree of
             trust and is not recommended outside of prototyping when more secure credentials can be used.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UsernamePasswordCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor for mocking
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsernamePasswordCredential (string username, string password, string tenantId, string clientId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string username, string password, string tenantId, string clientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (username As String, password As String, tenantId As String, clientId As String)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.UsernamePasswordCredential : string * string * string * string -&gt; Azure.Identity.UsernamePasswordCredential" Usage="new Azure.Identity.UsernamePasswordCredential (username, password, tenantId, clientId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="clientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user account's username, also known as UPN.</param>
        <param name="password">The user account's password.</param>
        <param name="tenantId">The Azure Active Directory tenant (directory) ID or name.</param>
        <param name="clientId">The client (application) ID of an App Registration in the tenant.</param>
        <summary>
            Creates an instance of the <see cref="T:Azure.Identity.UsernamePasswordCredential" /> with the details needed to authenticate against Azure Active Directory with a simple username
            and password.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsernamePasswordCredential (string username, string password, string tenantId, string clientId, Azure.Identity.TokenCredentialOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string username, string password, string tenantId, string clientId, class Azure.Identity.TokenCredentialOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.#ctor(System.String,System.String,System.String,System.String,Azure.Identity.TokenCredentialOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (username As String, password As String, tenantId As String, clientId As String, options As TokenCredentialOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.UsernamePasswordCredential : string * string * string * string * Azure.Identity.TokenCredentialOptions -&gt; Azure.Identity.UsernamePasswordCredential" Usage="new Azure.Identity.UsernamePasswordCredential (username, password, tenantId, clientId, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="options" Type="Azure.Identity.TokenCredentialOptions" />
      </Parameters>
      <Docs>
        <param name="username">The user account's user name, UPN.</param>
        <param name="password">The user account's password.</param>
        <param name="tenantId">The Azure Active Directory tenant (directory) ID or name.</param>
        <param name="clientId">The client (application) ID of an App Registration in the tenant.</param>
        <param name="options">The client options for the newly created UsernamePasswordCredential</param>
        <summary>
            Creates an instance of the <see cref="T:Azure.Identity.UsernamePasswordCredential" /> with the details needed to authenticate against Azure Active Directory with a simple username
            and password.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public override Azure.Core.AccessToken GetToken (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Azure.Core.AccessToken GetToken(valuetype Azure.Core.TokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetToken (requestContext As TokenRequestContext, Optional cancellationToken As CancellationToken = Nothing) As AccessToken" />
      <MemberSignature Language="F#" Value="override this.GetToken : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -&gt; Azure.Core.AccessToken" Usage="usernamePasswordCredential.GetToken (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.AccessToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.TokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The details of the authentication request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains a token for a user account, authenticating them using the given username and password.  Note: This will fail with
            an <see cref="T:Azure.Identity.AuthenticationFailedException" /> if the specified user account has MFA enabled. This method is called by Azure SDK clients. It isn't intended for use in application code.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt; GetTokenAsync (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Azure.Core.AccessToken&gt; GetTokenAsync(valuetype Azure.Core.TokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenAsync (requestContext As TokenRequestContext, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of AccessToken)" />
      <MemberSignature Language="F#" Value="override this.GetTokenAsync : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;" Usage="usernamePasswordCredential.GetTokenAsync (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.TokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The details of the authentication request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains a token for a user account, authenticating them using the given username and password.  Note: This will fail with
            an <see cref="T:Azure.Identity.AuthenticationFailedException" /> if the specified user account has MFA enabled. This method is called by Azure SDK clients. It isn't intended for use in application code.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
