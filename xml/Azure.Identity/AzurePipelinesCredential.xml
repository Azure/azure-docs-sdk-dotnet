<Type Name="AzurePipelinesCredential" FullName="Azure.Identity.AzurePipelinesCredential">
  <TypeSignature Language="C#" Value="public class AzurePipelinesCredential : Azure.Core.TokenCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzurePipelinesCredential extends Azure.Core.TokenCredential" />
  <TypeSignature Language="DocId" Value="T:Azure.Identity.AzurePipelinesCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class AzurePipelinesCredential&#xA;Inherits TokenCredential" />
  <TypeSignature Language="F#" Value="type AzurePipelinesCredential = class&#xA;    inherit TokenCredential" />
  <AssemblyInfo>
    <AssemblyName>Azure.Identity</AssemblyName>
    <AssemblyVersion>1.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.TokenCredential</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Credential which authenticates using an Azure Pipelines service connection.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AzurePipelinesCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzurePipelinesCredential.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor for <see href="https://aka.ms/azsdk/net/mocking">mocking</see>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzurePipelinesCredential (string tenantId, string clientId, string serviceConnectionId, string systemAccessToken, Azure.Identity.AzurePipelinesCredentialOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tenantId, string clientId, string serviceConnectionId, string systemAccessToken, class Azure.Identity.AzurePipelinesCredentialOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzurePipelinesCredential.#ctor(System.String,System.String,System.String,System.String,Azure.Identity.AzurePipelinesCredentialOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tenantId As String, clientId As String, serviceConnectionId As String, systemAccessToken As String, Optional options As AzurePipelinesCredentialOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.AzurePipelinesCredential : string * string * string * string * Azure.Identity.AzurePipelinesCredentialOptions -&gt; Azure.Identity.AzurePipelinesCredential" Usage="new Azure.Identity.AzurePipelinesCredential (tenantId, clientId, serviceConnectionId, systemAccessToken, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="serviceConnectionId" Type="System.String" />
        <Parameter Name="systemAccessToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.Identity.AzurePipelinesCredentialOptions" />
      </Parameters>
      <Docs>
        <param name="tenantId">The tenant ID for the service connection.</param>
        <param name="clientId">The client ID for the service connection.</param>
        <param name="serviceConnectionId">The service connection Id for the service connection associated with the pipeline.</param>
        <param name="systemAccessToken">The pipeline's <see href="https://learn.microsoft.com/azure/devops/pipelines/build/variables?view=azure-devops%26tabs=yaml#systemaccesstoken">System.AccessToken</see> value.</param>
        <param name="options">An instance of <see cref="T:Azure.Identity.AzurePipelinesCredentialOptions" />.</param>
        <summary>
            Creates a new instance of the <see cref="T:Azure.Identity.AzurePipelinesCredential" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="systemAccessToken" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public override Azure.Core.AccessToken GetToken (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Azure.Core.AccessToken GetToken(valuetype Azure.Core.TokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzurePipelinesCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetToken (requestContext As TokenRequestContext, cancellationToken As CancellationToken) As AccessToken" />
      <MemberSignature Language="F#" Value="override this.GetToken : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -&gt; Azure.Core.AccessToken" Usage="azurePipelinesCredential.GetToken (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.AccessToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.TokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The <see cref="T:Azure.Core.TokenRequestContext" /> with authentication information.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            Gets an <see cref="T:Azure.Core.AccessToken" /> for the specified set of scopes.
            </summary>
        <returns>A valid <see cref="T:Azure.Core.AccessToken" />.</returns>
        <remarks>Caching and management of the lifespan for the <see cref="T:Azure.Core.AccessToken" /> is considered the responsibility of the caller: each call should request a fresh token being requested.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt; GetTokenAsync (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Azure.Core.AccessToken&gt; GetTokenAsync(valuetype Azure.Core.TokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzurePipelinesCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenAsync (requestContext As TokenRequestContext, cancellationToken As CancellationToken) As ValueTask(Of AccessToken)" />
      <MemberSignature Language="F#" Value="override this.GetTokenAsync : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;" Usage="azurePipelinesCredential.GetTokenAsync (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.TokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The <see cref="T:Azure.Core.TokenRequestContext" /> with authentication information.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            Gets an <see cref="T:Azure.Core.AccessToken" /> for the specified set of scopes.
            </summary>
        <returns>A valid <see cref="T:Azure.Core.AccessToken" />.</returns>
        <remarks>Caching and management of the lifespan for the <see cref="T:Azure.Core.AccessToken" /> is considered the responsibility of the caller: each call should request a fresh token being requested.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
