<Type Name="ProcessSessionMessageEventArgs" FullName="Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs">
  <TypeSignature Language="C#" Value="public class ProcessSessionMessageEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProcessSessionMessageEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ProcessSessionMessageEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="F#" Value="type ProcessSessionMessageEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
    <AssemblyVersion>7.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs" /> contain event args that
            are specific to the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> and session that
            is being processed.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessSessionMessageEventArgs (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, Azure.Messaging.ServiceBus.ServiceBusSessionReceiver receiver, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class Azure.Messaging.ServiceBus.ServiceBusSessionReceiver receiver, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.#ctor(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,Azure.Messaging.ServiceBus.ServiceBusSessionReceiver,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As ServiceBusReceivedMessage, receiver As ServiceBusSessionReceiver, cancellationToken As CancellationToken)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * Azure.Messaging.ServiceBus.ServiceBusSessionReceiver * System.Threading.CancellationToken -&gt; Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs" Usage="new Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs (message, receiver, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="receiver" Type="Azure.Messaging.ServiceBus.ServiceBusSessionReceiver" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The current <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />.</param>
        <param name="receiver">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusSessionReceiver" /> that will be used for all settlement methods
             for the args.</param>
        <param name="cancellationToken">The processor's <see cref="T:System.Threading.CancellationToken" /> instance which will be cancelled in the event that <see cref="M:Azure.Messaging.ServiceBus.ServiceBusProcessor.StopProcessingAsync(System.Threading.CancellationToken)" /> is called.</param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AbandonMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AbandonMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.AbandonMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbandonMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processSessionMessageEventArgs.AbandonMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to abandon.</param>
        <param name="propertiesToModify">The properties of the message to modify while abandoning the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Abandons a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />.This will make the message available again for immediate processing as the lock on the message held by the receiver will be released.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             Abandoning a message will increase the delivery count on the message.
             This operation can only be performed on messages that were received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Threading.CancellationToken" /> instance which
            will be cancelled when <see cref="M:Azure.Messaging.ServiceBus.ServiceBusSessionProcessor.StopProcessingAsync(System.Threading.CancellationToken)" />
            is called, or when the session lock has been lost.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CompleteMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CompleteMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.CompleteMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteMessageAsync (message As ServiceBusReceivedMessage, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processSessionMessageEventArgs.CompleteMessageAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to complete.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Completes a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />. This will delete the message from the service.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             This operation can only be performed on a message that was received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processSessionMessageEventArgs.DeadLetterMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to dead-letter.</param>
        <param name="propertiesToModify">The properties of the message to modify while moving to subqueue.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the dead-letter subqueue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             In order to receive a message from the dead-letter queue or transfer dead-letter queue,
             set the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue" /> property to <see cref="F:Azure.Messaging.ServiceBus.SubQueue.DeadLetter" />
             or <see cref="F:Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter" /> when calling
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" /> or
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />.
             This operation can only be performed when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, deadLetterReason As String, Optional deadLetterErrorDescription As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processSessionMessageEventArgs.DeadLetterMessageAsync (message, deadLetterReason, deadLetterErrorDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="deadLetterReason" Type="System.String" />
        <Parameter Name="deadLetterErrorDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to dead-letter.</param>
        <param name="deadLetterReason">The reason for dead-lettering the message.</param>
        <param name="deadLetterErrorDescription">The error description for dead-lettering the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the dead-letter subqueue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             A lock token can be found in <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.LockToken" />,
             only when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             In order to receive a message from the dead-letter queue, you will need a new <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" />, with the corresponding path.
             You can use EntityNameHelper.FormatDeadLetterPath(string) to help with this.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeferMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeferMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.DeferMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeferMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processSessionMessageEventArgs.DeferMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to defer.</param>
        <param name="propertiesToModify">The properties of the message to modify while deferring the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary> Indicates that the receiver wants to defer the processing for the message.</summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             A lock token can be found in <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.LockToken" />,
             only when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             In order to receive this message again in the future, you will need to save the
             <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />
             and receive it using <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveDeferredMessageAsync(System.Int64,System.Threading.CancellationToken)" />.
             Deferring messages does not impact message's expiration, meaning that deferred messages can still expire.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;BinaryData&gt; GetSessionStateAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.BinaryData&gt; GetSessionStateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.GetSessionStateAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSessionStateAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetSessionStateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;BinaryData&gt;&#xA;override this.GetSessionStateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;BinaryData&gt;" Usage="processSessionMessageEventArgs.GetSessionStateAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Gets the session state.
             </summary>
        <returns>The session state as <see cref="T:System.BinaryData" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public Azure.Messaging.ServiceBus.ServiceBusReceivedMessage Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage Message" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As ServiceBusReceivedMessage" />
      <MemberSignature Language="F#" Value="member this.Message : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" Usage="Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.ServiceBus.ServiceBusReceivedMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to be processed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Session Id associated with the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionLockedUntil">
      <MemberSignature Language="C#" Value="public DateTimeOffset SessionLockedUntil { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset SessionLockedUntil" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.SessionLockedUntil" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionLockedUntil As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.SessionLockedUntil : DateTimeOffset" Usage="Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.SessionLockedUntil" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the DateTime that the session corresponding to
            the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> is locked until.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetSessionStateAsync (BinaryData sessionState, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetSessionStateAsync(class System.BinaryData sessionState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessSessionMessageEventArgs.SetSessionStateAsync(System.BinaryData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetSessionStateAsync (sessionState As BinaryData, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SetSessionStateAsync : BinaryData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetSessionStateAsync : BinaryData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processSessionMessageEventArgs.SetSessionStateAsync (sessionState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionState" Type="System.BinaryData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionState">A <see cref="T:System.BinaryData" /> of session state</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Set a custom state on the session which can be later retrieved using <see cref="M:Azure.Messaging.ServiceBus.ServiceBusSessionReceiver.GetSessionStateAsync(System.Threading.CancellationToken)" /></summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>This state is stored on Service Bus forever unless you set an empty state on it.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
