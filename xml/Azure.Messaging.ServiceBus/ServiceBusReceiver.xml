<Type Name="ServiceBusReceiver" FullName="Azure.Messaging.ServiceBus.ServiceBusReceiver">
  <TypeSignature Language="C#" Value="public class ServiceBusReceiver : IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBusReceiver extends System.Object implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBusReceiver&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type ServiceBusReceiver = class&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" /> is responsible for receiving
            <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> and settling messages from Queues and Subscriptions.
            It is constructed by calling <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceBusReceiver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" /> class for mocking.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AbandonMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AbandonMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.AbandonMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbandonMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.AbandonMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to abandon.</param>
        <param name="propertiesToModify">The properties of the message to modify while abandoning the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Abandons a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />.This will make the message available again for immediate processing as the lock on the message held by the receiver will be released.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             Abandoning a message will increase the delivery count on the message.
             This operation can only be performed on messages that were received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AbandonMessageAsync (string lockToken, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AbandonMessageAsync(string lockToken, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.AbandonMessageAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbandonMessageAsync (lockToken As String, Optional propertiesToModify As IDictionary(Of String, Object) = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member AbandonMessageAsync : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AbandonMessageAsync : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.AbandonMessageAsync (lockToken, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockToken" Type="System.String" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockToken">The lock token <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to abandon.</param>
        <param name="propertiesToModify">The properties of the message to modify while abandoning the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Abandons a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />. This will make the message available again for processing.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             Abandoning a message will increase the delivery count on the message.
             This operation can only be performed on messages that were received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CompleteMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CompleteMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.CompleteMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteMessageAsync (message As ServiceBusReceivedMessage, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.CompleteMessageAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to complete.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Completes a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />. This will delete the message from the service.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             This operation can only be performed on a message that was received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CompleteMessageAsync (string lockToken, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CompleteMessageAsync(string lockToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.CompleteMessageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteMessageAsync (lockToken As String, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member CompleteMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CompleteMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.CompleteMessageAsync (lockToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockToken">The lock token of the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> message to complete.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Completes a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />. This will delete the message from the service.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             This operation can only be performed on a message that was received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.DeadLetterMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to deadletter.</param>
        <param name="propertiesToModify">The properties of the message to modify while moving to sub-queue.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the deadletter sub-queue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             In order to receive a message from the deadletter queue, you can call
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateDeadLetterReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />
             or <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateDeadLetterReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />
             to create a receiver for the queue or subscription.
             This operation can only be performed when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (string lockToken, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(string lockToken, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeadLetterMessageAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (lockToken As String, Optional propertiesToModify As IDictionary(Of String, Object) = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.DeadLetterMessageAsync (lockToken, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockToken" Type="System.String" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockToken">The lock token of the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to deadletter.</param>
        <param name="propertiesToModify">The properties of the message to modify while moving to sub-queue.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the deadletter sub-queue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             In order to receive a message from the deadletter queue, you can call
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateDeadLetterReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />
             or <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateDeadLetterReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />
             to create a receiver for the queue or subscription.
             This operation can only be performed when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, deadLetterReason As String, Optional deadLetterErrorDescription As String = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.DeadLetterMessageAsync (message, deadLetterReason, deadLetterErrorDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="deadLetterReason" Type="System.String" />
        <Parameter Name="deadLetterErrorDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to deadletter.</param>
        <param name="deadLetterReason">The reason for deadlettering the message.</param>
        <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the deadletter sub-queue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             A lock token can be found in <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.LockToken" />,
             only when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             In order to receive a message from the deadletter queue, you will need a new <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" />, with the corresponding path.
             You can use EntityNameHelper.FormatDeadLetterPath(string) to help with this.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (string lockToken, string deadLetterReason, string deadLetterErrorDescription = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(string lockToken, string deadLetterReason, string deadLetterErrorDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeadLetterMessageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (lockToken As String, deadLetterReason As String, Optional deadLetterErrorDescription As String = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.DeadLetterMessageAsync (lockToken, deadLetterReason, deadLetterErrorDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockToken" Type="System.String" />
        <Parameter Name="deadLetterReason" Type="System.String" />
        <Parameter Name="deadLetterErrorDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockToken">The lock token of the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to deadletter.</param>
        <param name="deadLetterReason">The reason for deadlettering the message.</param>
        <param name="deadLetterErrorDescription">The error description for deadlettering the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the deadletter sub-queue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             A lock token can be found in <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.LockToken" />,
             only when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             In order to receive a message from the deadletter queue, you will need a new <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" />, with the corresponding path.
             You can use EntityNameHelper.FormatDeadLetterPath(string) to help with this.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeferMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeferMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeferMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.DeferMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to defer.</param>
        <param name="propertiesToModify">The properties of the message to modify while deferring the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary> Indicates that the receiver wants to defer the processing for the message.</summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             A lock token can be found in <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.LockToken" />,
             only when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             In order to receive this message again in the future, you will need to save the
             <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />
             and receive it using <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveDeferredMessageAsync(System.Int64,System.Threading.CancellationToken)" />.
             Deferring messages does not impact message's expiration, meaning that deferred messages can still expire.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeferMessageAsync (string lockToken, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeferMessageAsync(string lockToken, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferMessageAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeferMessageAsync (lockToken As String, Optional propertiesToModify As IDictionary(Of String, Object) = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeferMessageAsync : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeferMessageAsync : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.DeferMessageAsync (lockToken, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockToken" Type="System.String" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockToken">The lockToken of the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to defer.</param>
        <param name="propertiesToModify">The properties of the message to modify while deferring the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary> Indicates that the receiver wants to defer the processing for the message.</summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             A lock token can be found in <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.LockToken" />,
             only when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" />.
             In order to receive this message again in the future, you will need to save the
             <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />
             and receive it using <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveDeferredMessageAsync(System.Int64,System.Threading.CancellationToken)" />.
             Deferring messages does not impact message's expiration, meaning that deferred messages can still expire.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="serviceBusReceiver.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" />.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityPath">
      <MemberSignature Language="C#" Value="public string EntityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityPath" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.EntityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityPath As String" />
      <MemberSignature Language="F#" Value="member this.EntityPath : string" Usage="Azure.Messaging.ServiceBus.ServiceBusReceiver.EntityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path of the Service Bus entity that the receiver is connected to, specific to the
            Service Bus namespace that contains it.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="serviceBusReceiver.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
        <summary>
             Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedNamespace">
      <MemberSignature Language="C#" Value="public string FullyQualifiedNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedNamespace" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.FullyQualifiedNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifiedNamespace As String" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedNamespace : string" Usage="Azure.Messaging.ServiceBus.ServiceBusReceiver.FullyQualifiedNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fully qualified Service Bus namespace that the receiver is associated with.  This is likely
            to be similar to <c>{yournamespace}.servicebus.windows.net</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="serviceBusReceiver.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Returns a hash code for this instance.
             </summary>
        <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="Azure.Messaging.ServiceBus.ServiceBusReceiver.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               Indicates whether or not this <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceiver" /> has been disposed.
             </summary>
        <value>
          <c>true</c> if the client is disposed; otherwise, <c>false</c>.
             </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; PeekMessageAsync (long? fromSequenceNumber = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; PeekMessageAsync(valuetype System.Nullable`1&lt;int64&gt; fromSequenceNumber, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekMessageAsync (Optional fromSequenceNumber As Nullable(Of Long) = null, Optional cancellationToken As CancellationToken = null) As Task(Of ServiceBusReceivedMessage)" />
      <MemberSignature Language="F#" Value="abstract member PeekMessageAsync : Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&#xA;override this.PeekMessageAsync : Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;" Usage="serviceBusReceiver.PeekMessageAsync (fromSequenceNumber, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromSequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fromSequenceNumber">An optional sequence number from where to peek the
             message. This corresponds to the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the
             operation.</param>
        <summary>
             Fetches the next active <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> without changing the state of the receiver or the message source.
             </summary>
        <returns>The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> that represents the next message to be read. Returns null when nothing to peek.</returns>
        <remarks>
             The first call to <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessageAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)" /> fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity.
             Unlike a received message, a peeked message will not have a lock token associated with it, and hence it cannot be Completed/Abandoned/Deferred/Deadlettered/Renewed.
             Also, unlike <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />, this method will fetch even Deferred messages (but not Deadlettered message).
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt; PeekMessagesAsync (int maxMessages, long? fromSequenceNumber = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt; PeekMessagesAsync(int32 maxMessages, valuetype System.Nullable`1&lt;int64&gt; fromSequenceNumber, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.PeekMessagesAsync(System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekMessagesAsync (maxMessages As Integer, Optional fromSequenceNumber As Nullable(Of Long) = null, Optional cancellationToken As CancellationToken = null) As Task(Of IReadOnlyList(Of ServiceBusReceivedMessage))" />
      <MemberSignature Language="F#" Value="abstract member PeekMessagesAsync : int * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;&#xA;override this.PeekMessagesAsync : int * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;" Usage="serviceBusReceiver.PeekMessagesAsync (maxMessages, fromSequenceNumber, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Int32" />
        <Parameter Name="fromSequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">The maximum number of messages that will be fetched.</param>
        <param name="fromSequenceNumber">An optional sequence number from where to peek the
             message. This corresponds to the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel
             the operation.</param>
        <summary>To be added.</summary>
        <returns>An <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> of messages that were peeked.</returns>
        <remarks>
             Unlike a received message, a peeked message will not have a lock token associated with it, and hence it cannot be
             Completed/Abandoned/Deferred/Deadlettered/Renewed.
             Also, unlike <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />, this method will fetch even Deferred messages (but not Deadlettered messages).
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchCount">
      <MemberSignature Language="C#" Value="public int PrefetchCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrefetchCount" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.PrefetchCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefetchCount As Integer" />
      <MemberSignature Language="F#" Value="member this.PrefetchCount : int" Usage="Azure.Messaging.ServiceBus.ServiceBusReceiver.PrefetchCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of messages that will be eagerly requested from Queues or Subscriptions and queued locally without regard to
            whether a processing is currently active, intended to help maximize throughput by allowing the receiver to receive
            from a local cache rather than waiting on a service request.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveDeferredMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; ReceiveDeferredMessageAsync (long sequenceNumber, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; ReceiveDeferredMessageAsync(int64 sequenceNumber, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveDeferredMessageAsync(System.Int64,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveDeferredMessageAsync (sequenceNumber As Long, Optional cancellationToken As CancellationToken = null) As Task(Of ServiceBusReceivedMessage)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveDeferredMessageAsync : int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&#xA;override this.ReceiveDeferredMessageAsync : int64 * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;" Usage="serviceBusReceiver.ReceiveDeferredMessageAsync (sequenceNumber, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.Int64" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">The sequence number of the message to receive. This corresponds to
             the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Receives a deferred message identified by <paramref name="sequenceNumber" />.
             </summary>
        <returns>The deferred message identified by the specified sequence number. Returns null if no message is found.
             Throws if the message has not been deferred.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferMessageAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveDeferredMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt; ReceiveDeferredMessagesAsync (System.Collections.Generic.IEnumerable&lt;long&gt; sequenceNumbers, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt; ReceiveDeferredMessagesAsync(class System.Collections.Generic.IEnumerable`1&lt;int64&gt; sequenceNumbers, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveDeferredMessagesAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveDeferredMessagesAsync (sequenceNumbers As IEnumerable(Of Long), Optional cancellationToken As CancellationToken = null) As Task(Of IReadOnlyList(Of ServiceBusReceivedMessage))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveDeferredMessagesAsync : seq&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;&#xA;override this.ReceiveDeferredMessagesAsync : seq&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;" Usage="serviceBusReceiver.ReceiveDeferredMessagesAsync (sequenceNumbers, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumbers" Type="System.Collections.Generic.IEnumerable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <param name="sequenceNumbers">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the sequence numbers to receive.</param>
        <summary>
             Receives a <see cref="T:System.Collections.Generic.IList`1" /> of deferred messages identified by <paramref name="sequenceNumbers" />.
             </summary>
        <returns>Messages identified by sequence number are returned. Returns null if no messages are found.
             Throws if the messages have not been deferred.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferMessageAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; ReceiveMessageAsync (TimeSpan? maxWaitTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; ReceiveMessageAsync(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; maxWaitTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessageAsync (Optional maxWaitTime As Nullable(Of TimeSpan) = null, Optional cancellationToken As CancellationToken = null) As Task(Of ServiceBusReceivedMessage)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessageAsync : Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&#xA;override this.ReceiveMessageAsync : Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;" Usage="serviceBusReceiver.ReceiveMessageAsync (maxWaitTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxWaitTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxWaitTime">An optional <see cref="T:System.TimeSpan" /> specifying the maximum time to wait for a message before returning
             null if no messages are available.
             If not specified, the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusRetryOptions.TryTimeout" /> will be used.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the
             operation.</param>
        <summary>
             Receives a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> from the entity using <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> mode.
             <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> defaults to PeekLock mode.
             </summary>
        <returns>The message received. Returns null if no message is found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; ReceiveMessagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt; ReceiveMessagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMessagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessagesAsync (Optional cancellationToken As CancellationToken = null) As IAsyncEnumerable(Of ServiceBusReceivedMessage)" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&#xA;override this.ReceiveMessagesAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;" Usage="serviceBusReceiver.ReceiveMessagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Azure.Messaging.ServiceBus.ServiceBusReceiver/&lt;ReceiveMessagesAsync&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.EnumeratorCancellation</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the
            request to cancel the operation.</param>
        <summary>
            Receives messages as an asynchronous enumerable from the entity using <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> mode.
            <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> defaults to PeekLock mode. Messages will be received from the entity as
            the IAsyncEnumerable is iterated. If no messages are available, this method will continue polling
            until messages are available, i.e. it will never return null.
            </summary>
        <returns>The message received.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt; ReceiveMessagesAsync (int maxMessages, TimeSpan? maxWaitTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt; ReceiveMessagesAsync(int32 maxMessages, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; maxWaitTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReceiveMessagesAsync (maxMessages As Integer, Optional maxWaitTime As Nullable(Of TimeSpan) = null, Optional cancellationToken As CancellationToken = null) As Task(Of IReadOnlyList(Of ServiceBusReceivedMessage))" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMessagesAsync : int * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;&#xA;override this.ReceiveMessagesAsync : int * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;" Usage="serviceBusReceiver.ReceiveMessagesAsync (maxMessages, maxWaitTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Messaging.ServiceBus.ServiceBusReceivedMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMessages" Type="System.Int32" />
        <Parameter Name="maxWaitTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxMessages">The maximum number of messages that will be received.</param>
        <param name="maxWaitTime">An optional <see cref="T:System.TimeSpan" /> specifying the maximum time to wait for the first message before returning an empty list if no messages are available.
             If not specified, the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusRetryOptions.TryTimeout" /> will be used.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Receives a list of <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> from the entity using <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> mode.
             <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> defaults to PeekLock mode.
             This method doesn't guarantee to return exact `maxMessages` messages,
             even if there are `maxMessages` messages available in the queue or topic.
             </summary>
        <returns>List of messages received. Returns an empty list if no message is found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMode">
      <MemberSignature Language="C#" Value="public Azure.Messaging.ServiceBus.ReceiveMode ReceiveMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Messaging.ServiceBus.ReceiveMode ReceiveMode" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveMode As ReceiveMode" />
      <MemberSignature Language="F#" Value="member this.ReceiveMode : Azure.Messaging.ServiceBus.ReceiveMode" Usage="Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.ServiceBus.ReceiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> used to specify how messages are received. Defaults to PeekLock mode.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewMessageLockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RenewMessageLockAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RenewMessageLockAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.RenewMessageLockAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenewMessageLockAsync (message As ServiceBusReceivedMessage, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member RenewMessageLockAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RenewMessageLockAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusReceiver.RenewMessageLockAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to renew the lock for.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Renews the lock on the message. The lock will be renewed based on the setting specified on the queue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             When a message is received in <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" /> mode, the message is locked on the server for this
             receiver instance for a duration as specified during the Queue/Subscription creation (LockDuration).
             If processing of the message requires longer than this duration, the lock needs to be renewed.
             For each renewal, it resets the time the message is locked by the LockDuration set on the Entity.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewMessageLockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;DateTimeOffset&gt; RenewMessageLockAsync (string lockToken, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.DateTimeOffset&gt; RenewMessageLockAsync(string lockToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.RenewMessageLockAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenewMessageLockAsync (lockToken As String, Optional cancellationToken As CancellationToken = null) As Task(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="abstract member RenewMessageLockAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;DateTimeOffset&gt;&#xA;override this.RenewMessageLockAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;DateTimeOffset&gt;" Usage="serviceBusReceiver.RenewMessageLockAsync (lockToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="lockToken">The lockToken of the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to renew the lock for.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Renews the lock on the message. The lock will be renewed based on the setting specified on the queue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             When a message is received in <see cref="F:Azure.Messaging.ServiceBus.ReceiveMode.PeekLock" /> mode, the message is locked on the server for this
             receiver instance for a duration as specified during the Queue/Subscription creation (LockDuration).
             If processing of the message requires longer than this duration, the lock needs to be renewed.
             For each renewal, it resets the time the message is locked by the LockDuration set on the Entity.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="serviceBusReceiver.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Converts the instance to string representation.
             </summary>
        <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
