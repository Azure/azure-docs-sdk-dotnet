<Type Name="ProcessMessageEventArgs" FullName="Azure.Messaging.ServiceBus.ProcessMessageEventArgs">
  <TypeSignature Language="C#" Value="public class ProcessMessageEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProcessMessageEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.ServiceBus.ProcessMessageEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ProcessMessageEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="F#" Value="type ProcessMessageEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
    <AssemblyVersion>7.1.2.0</AssemblyVersion>
    <AssemblyVersion>7.2.0.0</AssemblyVersion>
    <AssemblyVersion>7.2.1.0</AssemblyVersion>
    <AssemblyVersion>7.3.0.0</AssemblyVersion>
    <AssemblyVersion>7.4.0.0</AssemblyVersion>
    <AssemblyVersion>7.5.0.0</AssemblyVersion>
    <AssemblyVersion>7.5.1.0</AssemblyVersion>
    <AssemblyVersion>7.6.0.0</AssemblyVersion>
    <AssemblyVersion>7.7.0.0</AssemblyVersion>
    <AssemblyVersion>7.8.0.0</AssemblyVersion>
    <AssemblyVersion>7.8.1.0</AssemblyVersion>
    <AssemblyVersion>7.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Messaging.ServiceBus.ProcessMessageEventArgs" /> contain event args that are specific
            to the <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> that is being processed.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessMessageEventArgs (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, Azure.Messaging.ServiceBus.ServiceBusReceiver receiver, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class Azure.Messaging.ServiceBus.ServiceBusReceiver receiver, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.#ctor(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,Azure.Messaging.ServiceBus.ServiceBusReceiver,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As ServiceBusReceivedMessage, receiver As ServiceBusReceiver, cancellationToken As CancellationToken)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.ServiceBus.ProcessMessageEventArgs : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * Azure.Messaging.ServiceBus.ServiceBusReceiver * System.Threading.CancellationToken -&gt; Azure.Messaging.ServiceBus.ProcessMessageEventArgs" Usage="new Azure.Messaging.ServiceBus.ProcessMessageEventArgs (message, receiver, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="receiver" Type="Azure.Messaging.ServiceBus.ServiceBusReceiver" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to be processed.</param>
        <param name="receiver">The receiver instance that can be used to perform message settlement.</param>
        <param name="cancellationToken">The processor's <see cref="T:System.Threading.CancellationToken" /> instance which will be cancelled
             in the event that <see cref="M:Azure.Messaging.ServiceBus.ServiceBusProcessor.StopProcessingAsync(System.Threading.CancellationToken)" /> is called.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Messaging.ServiceBus.ProcessMessageEventArgs" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AbandonMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AbandonMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.AbandonMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbandonMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processMessageEventArgs.AbandonMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to abandon.</param>
        <param name="propertiesToModify">The properties of the message to modify while abandoning the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Abandons a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />.This will make the message available again for immediate processing as the lock on the message held by the receiver will be released.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             Abandoning a message will increase the delivery count on the message.
             This operation can only be performed on messages that were received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <inheritdoc cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.AbandonMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
          <list type="bullet">
            <item>
              <description>
                     The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost" /> in this case.
                   </description>
            </item>
            <item>
              <description>
                     The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
                   </description>
            </item>
          </list>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="Azure.Messaging.ServiceBus.ProcessMessageEventArgs.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The processor's <see cref="T:System.Threading.CancellationToken" /> instance which will be
            cancelled when <see cref="M:Azure.Messaging.ServiceBus.ServiceBusProcessor.StopProcessingAsync(System.Threading.CancellationToken)" /> is called.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CompleteMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CompleteMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.CompleteMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteMessageAsync (message As ServiceBusReceivedMessage, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processMessageEventArgs.CompleteMessageAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to complete.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Completes a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />. This will delete the message from the service.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             This operation can only be performed on a message that was received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <inheritdoc cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.CompleteMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
          <list type="bullet">
            <item>
              <description>
                     The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost" /> in this case.
                   </description>
            </item>
            <item>
              <description>
                     The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
                   </description>
            </item>
          </list>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processMessageEventArgs.DeadLetterMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to dead-letter.</param>
        <param name="propertiesToModify">The properties of the message to modify while moving to subqueue.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the dead-letter subqueue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             In order to receive a message from the dead-letter queue or transfer dead-letter queue,
             set the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue" /> property to <see cref="F:Azure.Messaging.ServiceBus.SubQueue.DeadLetter" />
             or <see cref="F:Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter" /> when calling
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" /> or
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />.
             This operation can only be performed when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <inheritdoc cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
          <list type="bullet">
            <item>
              <description>
                     The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost" /> in this case.
                   </description>
            </item>
            <item>
              <description>
                     The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
                   </description>
            </item>
          </list>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, deadLetterReason As String, Optional deadLetterErrorDescription As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processMessageEventArgs.DeadLetterMessageAsync (message, deadLetterReason, deadLetterErrorDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="deadLetterReason" Type="System.String" />
        <Parameter Name="deadLetterErrorDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to dead-letter.</param>
        <param name="deadLetterReason">The reason for dead-lettering the message.</param>
        <param name="deadLetterErrorDescription">The error description for dead-lettering the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the dead-letter subqueue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             In order to receive a message from the dead-letter queue or transfer dead-letter queue,
             set the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue" /> property to <see cref="F:Azure.Messaging.ServiceBus.SubQueue.DeadLetter" />
             or <see cref="F:Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter" /> when calling
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" /> or
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />.
             This operation can only be performed when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <inheritdoc cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.String,System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
          <list type="bullet">
            <item>
              <description>
                     The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost" /> in this case.
                   </description>
            </item>
            <item>
              <description>
                     The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
                   </description>
            </item>
          </list>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeferMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeferMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeferMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.DeferMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeferMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processMessageEventArgs.DeferMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to defer.</param>
        <param name="propertiesToModify">The properties of the message to modify while deferring the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary> Indicates that the receiver wants to defer the processing for the message.</summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             In order to receive this message again in the future, you will need to save the
             <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />
             and receive it using <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveDeferredMessageAsync(System.Int64,System.Threading.CancellationToken)" />.
             Deferring messages does not impact message's expiration, meaning that deferred messages can still expire.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
        <inheritdoc cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.DeferMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
          <list type="bullet">
            <item>
              <description>
                     The lock for the message has expired or the message has already been completed. This does not apply for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost" /> in this case.
                   </description>
            </item>
            <item>
              <description>
                     The lock for the session has expired or the message has already been completed. This only applies for session-enabled entities.
                     The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
                   </description>
            </item>
          </list>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReceiveActions">
      <MemberSignature Language="C#" Value="public virtual Azure.Messaging.ServiceBus.ProcessorReceiveActions GetReceiveActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Messaging.ServiceBus.ProcessorReceiveActions GetReceiveActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.GetReceiveActions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReceiveActions () As ProcessorReceiveActions" />
      <MemberSignature Language="F#" Value="abstract member GetReceiveActions : unit -&gt; Azure.Messaging.ServiceBus.ProcessorReceiveActions&#xA;override this.GetReceiveActions : unit -&gt; Azure.Messaging.ServiceBus.ProcessorReceiveActions" Usage="processMessageEventArgs.GetReceiveActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.ServiceBus.ProcessorReceiveActions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a <see cref="T:Azure.Messaging.ServiceBus.ProcessorReceiveActions" /> instance which enables receiving additional messages within the scope of the current event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public Azure.Messaging.ServiceBus.ServiceBusReceivedMessage Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage Message" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As ServiceBusReceivedMessage" />
      <MemberSignature Language="F#" Value="member this.Message : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" Usage="Azure.Messaging.ServiceBus.ProcessMessageEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.1.2.0</AssemblyVersion>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
        <AssemblyVersion>7.3.0.0</AssemblyVersion>
        <AssemblyVersion>7.4.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.0.0</AssemblyVersion>
        <AssemblyVersion>7.5.1.0</AssemblyVersion>
        <AssemblyVersion>7.6.0.0</AssemblyVersion>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.ServiceBus.ServiceBusReceivedMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The received message to be processed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewMessageLockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RenewMessageLockAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RenewMessageLockAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ProcessMessageEventArgs.RenewMessageLockAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenewMessageLockAsync (message As ServiceBusReceivedMessage, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member RenewMessageLockAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RenewMessageLockAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="processMessageEventArgs.RenewMessageLockAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.7.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.0.0</AssemblyVersion>
        <AssemblyVersion>7.8.1.0</AssemblyVersion>
        <AssemblyVersion>7.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to renew the lock for.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Renews the lock on the message. The lock will be renewed based on the setting specified on the queue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             When a message is received in <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" /> mode, the message is locked on the server for this
             receiver instance for a duration as specified during the Queue/Subscription creation (LockDuration).
             If processing of the message requires longer than this duration, the lock needs to be renewed.
             For each renewal, it resets the time the message is locked by the LockDuration set on the Entity.
             </remarks>
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
               The lock for the message has expired or the message has already been completed.
               The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.MessageLockLost" /> in this case.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
