<Type Name="MockableDataBoxEdgeArmClient" FullName="Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient">
  <TypeSignature Language="C#" Value="public class MockableDataBoxEdgeArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataBoxEdgeArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataBoxEdgeArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataBoxEdgeArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataBoxEdgeArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBandwidthScheduleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource GetBandwidthScheduleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource GetBandwidthScheduleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetBandwidthScheduleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBandwidthScheduleResource (id As ResourceIdentifier) As BandwidthScheduleResource" />
      <MemberSignature Language="F#" Value="abstract member GetBandwidthScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource&#xA;override this.GetBandwidthScheduleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource" Usage="mockableDataBoxEdgeArmClient.GetBandwidthScheduleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.BandwidthScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeAlertResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource GetDataBoxEdgeAlertResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource GetDataBoxEdgeAlertResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeAlertResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeAlertResource (id As ResourceIdentifier) As DataBoxEdgeAlertResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource&#xA;override this.GetDataBoxEdgeAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeAlertResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeDeviceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource GetDataBoxEdgeDeviceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource GetDataBoxEdgeDeviceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeDeviceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeDeviceResource (id As ResourceIdentifier) As DataBoxEdgeDeviceResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource&#xA;override this.GetDataBoxEdgeDeviceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeDeviceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeDeviceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeJobResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource GetDataBoxEdgeJobResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource GetDataBoxEdgeJobResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeJobResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeJobResource (id As ResourceIdentifier) As DataBoxEdgeJobResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource&#xA;override this.GetDataBoxEdgeJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeJobResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeJobResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeOrderResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource GetDataBoxEdgeOrderResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource GetDataBoxEdgeOrderResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeOrderResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeOrderResource (id As ResourceIdentifier) As DataBoxEdgeOrderResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeOrderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource&#xA;override this.GetDataBoxEdgeOrderResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeOrderResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeOrderResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeRoleAddonResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource GetDataBoxEdgeRoleAddonResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource GetDataBoxEdgeRoleAddonResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeRoleAddonResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeRoleAddonResource (id As ResourceIdentifier) As DataBoxEdgeRoleAddonResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeRoleAddonResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource&#xA;override this.GetDataBoxEdgeRoleAddonResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeRoleAddonResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleAddonResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeRoleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource GetDataBoxEdgeRoleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource GetDataBoxEdgeRoleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeRoleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeRoleResource (id As ResourceIdentifier) As DataBoxEdgeRoleResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeRoleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource&#xA;override this.GetDataBoxEdgeRoleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeRoleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeRoleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeShareResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource GetDataBoxEdgeShareResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource GetDataBoxEdgeShareResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeShareResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeShareResource (id As ResourceIdentifier) As DataBoxEdgeShareResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeShareResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource&#xA;override this.GetDataBoxEdgeShareResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeShareResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeShareResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccountCredentialResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource GetDataBoxEdgeStorageAccountCredentialResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource GetDataBoxEdgeStorageAccountCredentialResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeStorageAccountCredentialResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccountCredentialResource (id As ResourceIdentifier) As DataBoxEdgeStorageAccountCredentialResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccountCredentialResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource&#xA;override this.GetDataBoxEdgeStorageAccountCredentialResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeStorageAccountCredentialResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountCredentialResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource GetDataBoxEdgeStorageAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource GetDataBoxEdgeStorageAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeStorageAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageAccountResource (id As ResourceIdentifier) As DataBoxEdgeStorageAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource&#xA;override this.GetDataBoxEdgeStorageAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeStorageAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeStorageContainerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource GetDataBoxEdgeStorageContainerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource GetDataBoxEdgeStorageContainerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeStorageContainerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeStorageContainerResource (id As ResourceIdentifier) As DataBoxEdgeStorageContainerResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource&#xA;override this.GetDataBoxEdgeStorageContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeStorageContainerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeStorageContainerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeTriggerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource GetDataBoxEdgeTriggerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource GetDataBoxEdgeTriggerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeTriggerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeTriggerResource (id As ResourceIdentifier) As DataBoxEdgeTriggerResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeTriggerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource&#xA;override this.GetDataBoxEdgeTriggerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeTriggerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeTriggerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataBoxEdgeUserResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource GetDataBoxEdgeUserResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource GetDataBoxEdgeUserResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDataBoxEdgeUserResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataBoxEdgeUserResource (id As ResourceIdentifier) As DataBoxEdgeUserResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataBoxEdgeUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource&#xA;override this.GetDataBoxEdgeUserResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource" Usage="mockableDataBoxEdgeArmClient.GetDataBoxEdgeUserResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DataBoxEdgeUserResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticProactiveLogCollectionSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource GetDiagnosticProactiveLogCollectionSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource GetDiagnosticProactiveLogCollectionSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDiagnosticProactiveLogCollectionSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticProactiveLogCollectionSettingResource (id As ResourceIdentifier) As DiagnosticProactiveLogCollectionSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticProactiveLogCollectionSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource&#xA;override this.GetDiagnosticProactiveLogCollectionSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource" Usage="mockableDataBoxEdgeArmClient.GetDiagnosticProactiveLogCollectionSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticProactiveLogCollectionSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticRemoteSupportSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource GetDiagnosticRemoteSupportSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource GetDiagnosticRemoteSupportSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetDiagnosticRemoteSupportSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiagnosticRemoteSupportSettingResource (id As ResourceIdentifier) As DiagnosticRemoteSupportSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiagnosticRemoteSupportSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource&#xA;override this.GetDiagnosticRemoteSupportSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource" Usage="mockableDataBoxEdgeArmClient.GetDiagnosticRemoteSupportSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.DiagnosticRemoteSupportSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitoringMetricConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource GetMonitoringMetricConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource GetMonitoringMetricConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataBoxEdge.Mocking.MockableDataBoxEdgeArmClient.GetMonitoringMetricConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitoringMetricConfigurationResource (id As ResourceIdentifier) As MonitoringMetricConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetMonitoringMetricConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource&#xA;override this.GetMonitoringMetricConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource" Usage="mockableDataBoxEdgeArmClient.GetMonitoringMetricConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataBoxEdge</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataBoxEdge.MonitoringMetricConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
