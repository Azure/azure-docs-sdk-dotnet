<Type Name="MockableReservationsSubscriptionResource" FullName="Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableReservationsSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableReservationsSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableReservationsSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableReservationsSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableReservationsSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllReservationQuota">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Reservations.ReservationQuotaCollection GetAllReservationQuota (string providerId, Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Reservations.ReservationQuotaCollection GetAllReservationQuota(string providerId, valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetAllReservationQuota(System.String,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllReservationQuota (providerId As String, location As AzureLocation) As ReservationQuotaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllReservationQuota : string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.ReservationQuotaCollection&#xA;override this.GetAllReservationQuota : string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.ReservationQuotaCollection" Usage="mockableReservationsSubscriptionResource.GetAllReservationQuota (providerId, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationQuotaCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <summary> Gets a collection of ReservationQuotaResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ReservationQuotaResources and their operations over a ReservationQuotaResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedReservations">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt; GetAppliedReservations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt; GetAppliedReservations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetAppliedReservations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppliedReservations (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppliedReservationData)" />
      <MemberSignature Language="F#" Value="abstract member GetAppliedReservations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&#xA;override this.GetAppliedReservations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;" Usage="mockableReservationsSubscriptionResource.GetAppliedReservations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations</description></item><item><term>Operation Id</term><description>GetAppliedReservationList</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedReservationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt; GetAppliedReservationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt; GetAppliedReservationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetAppliedReservationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppliedReservationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppliedReservationData))" />
      <MemberSignature Language="F#" Value="abstract member GetAppliedReservationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt;&#xA;override this.GetAppliedReservationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt;" Usage="mockableReservationsSubscriptionResource.GetAppliedReservationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservationData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations</description></item><item><term>Operation Id</term><description>GetAppliedReservationList</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCatalog">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog (Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog(class Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetCatalog(Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCatalog (options As SubscriptionResourceGetCatalogOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="abstract member GetCatalog : Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;&#xA;override this.GetCatalog : Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="mockableReservationsSubscriptionResource.GetCatalog (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCatalog">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog (string reservedResourceType = default, Azure.Core.AzureLocation? location = default, string publisherId = default, string offerId = default, string planId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog(string reservedResourceType, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetCatalog(System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCatalog (Optional reservedResourceType As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional publisherId As String = Nothing, Optional offerId As String = Nothing, Optional planId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="abstract member GetCatalog : string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;&#xA;override this.GetCatalog : string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="mockableReservationsSubscriptionResource.GetCatalog (reservedResourceType, location, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservedResourceType" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservedResourceType"> The type of the resource for which the skus should be provided. </param>
        <param name="location"> Filters the skus based on the location specified in this parameter. This can be an azure region or global. </param>
        <param name="publisherId"> Publisher id used to get the third party products. </param>
        <param name="offerId"> Offer id used to get the third party products. </param>
        <param name="planId"> Plan id used to get the third party products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCatalogAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync (Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync(class Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetCatalogAsync(Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCatalogAsync (options As SubscriptionResourceGetCatalogOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="abstract member GetCatalogAsync : Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;&#xA;override this.GetCatalogAsync : Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="mockableReservationsSubscriptionResource.GetCatalogAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.SubscriptionResourceGetCatalogOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCatalogAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync (string reservedResourceType = default, Azure.Core.AzureLocation? location = default, string publisherId = default, string offerId = default, string planId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync(string reservedResourceType, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetCatalogAsync(System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCatalogAsync (Optional reservedResourceType As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional publisherId As String = Nothing, Optional offerId As String = Nothing, Optional planId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="abstract member GetCatalogAsync : string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;&#xA;override this.GetCatalogAsync : string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="mockableReservationsSubscriptionResource.GetCatalogAsync (reservedResourceType, location, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservedResourceType" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservedResourceType"> The type of the resource for which the skus should be provided. </param>
        <param name="location"> Filters the skus based on the location specified in this parameter. This can be an azure region or global. </param>
        <param name="publisherId"> Publisher id used to get the third party products. </param>
        <param name="offerId"> Offer id used to get the third party products. </param>
        <param name="planId"> Plan id used to get the third party products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs</description></item><item><term>Operation Id</term><description>GetCatalog</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetail">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt; GetQuotaRequestDetail (string providerId, Azure.Core.AzureLocation location, Guid id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt; GetQuotaRequestDetail(string providerId, valuetype Azure.Core.AzureLocation location, valuetype System.Guid id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetQuotaRequestDetail(System.String,Azure.Core.AzureLocation,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaRequestDetail (providerId As String, location As AzureLocation, id As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaRequestDetailResource)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaRequestDetail : string * Azure.Core.AzureLocation * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&#xA;override this.GetQuotaRequestDetail : string * Azure.Core.AzureLocation * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;" Usage="mockableReservationsSubscriptionResource.GetQuotaRequestDetail (providerId, location, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="id"> Quota Request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}</description></item><item><term>Operation Id</term><description>QuotaRequestStatus_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetailAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt; GetQuotaRequestDetailAsync (string providerId, Azure.Core.AzureLocation location, Guid id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt; GetQuotaRequestDetailAsync(string providerId, valuetype Azure.Core.AzureLocation location, valuetype System.Guid id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetQuotaRequestDetailAsync(System.String,Azure.Core.AzureLocation,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaRequestDetailAsync (providerId As String, location As AzureLocation, id As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaRequestDetailResource))" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaRequestDetailAsync : string * Azure.Core.AzureLocation * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt;&#xA;override this.GetQuotaRequestDetailAsync : string * Azure.Core.AzureLocation * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt;" Usage="mockableReservationsSubscriptionResource.GetQuotaRequestDetailAsync (providerId, location, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="id"> Quota Request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}</description></item><item><term>Operation Id</term><description>QuotaRequestStatus_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Reservations.QuotaRequestDetailCollection GetQuotaRequestDetails (string providerId, Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Reservations.QuotaRequestDetailCollection GetQuotaRequestDetails(string providerId, valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetQuotaRequestDetails(System.String,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaRequestDetails (providerId As String, location As AzureLocation) As QuotaRequestDetailCollection" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaRequestDetails : string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.QuotaRequestDetailCollection&#xA;override this.GetQuotaRequestDetails : string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.QuotaRequestDetailCollection" Usage="mockableReservationsSubscriptionResource.GetQuotaRequestDetails (providerId, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.QuotaRequestDetailCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <summary> Gets a collection of QuotaRequestDetailResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of QuotaRequestDetailResources and their operations over a QuotaRequestDetailResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationQuota">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt; GetReservationQuota (string providerId, Azure.Core.AzureLocation location, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationQuotaResource&gt; GetReservationQuota(string providerId, valuetype Azure.Core.AzureLocation location, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetReservationQuota(System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationQuota (providerId As String, location As AzureLocation, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationQuotaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationQuota : string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&#xA;override this.GetReservationQuota : string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;" Usage="mockableReservationsSubscriptionResource.GetReservationQuota (providerId, location, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="resourceName"> The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current quota (service limit) and usage of a resource. You can use the response from the GET operation to submit quota update request.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}</description></item><item><term>Operation Id</term><description>Quota_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationQuotaResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationQuotaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt; GetReservationQuotaAsync (string providerId, Azure.Core.AzureLocation location, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt; GetReservationQuotaAsync(string providerId, valuetype Azure.Core.AzureLocation location, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsSubscriptionResource.GetReservationQuotaAsync(System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationQuotaAsync (providerId As String, location As AzureLocation, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationQuotaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetReservationQuotaAsync : string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt;&#xA;override this.GetReservationQuotaAsync : string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt;" Usage="mockableReservationsSubscriptionResource.GetReservationQuotaAsync (providerId, location, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationQuotaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="resourceName"> The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current quota (service limit) and usage of a resource. You can use the response from the GET operation to submit quota update request.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}</description></item><item><term>Operation Id</term><description>Quota_Get</description></item><item><term>Default Api Version</term><description>2020-10-25</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationQuotaResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
