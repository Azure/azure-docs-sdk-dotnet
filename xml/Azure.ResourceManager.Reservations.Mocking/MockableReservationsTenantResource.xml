<Type Name="MockableReservationsTenantResource" FullName="Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource">
  <TypeSignature Language="C#" Value="public class MockableReservationsTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableReservationsTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableReservationsTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableReservationsTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableReservationsTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationExchange">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt; CalculateReservationExchange (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt; CalculateReservationExchange(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationExchange(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateReservationExchange (waitUntil As WaitUntil, content As CalculateExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of CalculateExchangeResult)" />
      <MemberSignature Language="F#" Value="abstract member CalculateReservationExchange : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&#xA;override this.CalculateReservationExchange : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;" Usage="mockableReservationsTenantResource.CalculateReservationExchange (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.CalculateExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing purchases and refunds that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Calculates price for exchanging `Reservations` if there are no policy errors.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculateExchange</description></item><item><term>Operation Id</term><description>CalculateExchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationExchangeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt; CalculateReservationExchangeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt; CalculateReservationExchangeAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationExchangeAsync(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateReservationExchangeAsync (waitUntil As WaitUntil, content As CalculateExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of CalculateExchangeResult))" />
      <MemberSignature Language="F#" Value="abstract member CalculateReservationExchangeAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt;&#xA;override this.CalculateReservationExchangeAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt;" Usage="mockableReservationsTenantResource.CalculateReservationExchangeAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.CalculateExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing purchases and refunds that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Calculates price for exchanging `Reservations` if there are no policy errors.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculateExchange</description></item><item><term>Operation Id</term><description>CalculateExchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationOrder">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt; CalculateReservationOrder (Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt; CalculateReservationOrder(class Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationOrder(Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateReservationOrder (content As ReservationPurchaseContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CalculatePriceResult)" />
      <MemberSignature Language="F#" Value="abstract member CalculateReservationOrder : Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&#xA;override this.CalculateReservationOrder : Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;" Usage="mockableReservationsTenantResource.CalculateReservationOrder (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculate price for placing a `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculatePrice</description></item><item><term>Operation Id</term><description>ReservationOrder_Calculate</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationOrderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt; CalculateReservationOrderAsync (Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt; CalculateReservationOrderAsync(class Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.CalculateReservationOrderAsync(Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateReservationOrderAsync (content As ReservationPurchaseContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CalculatePriceResult))" />
      <MemberSignature Language="F#" Value="abstract member CalculateReservationOrderAsync : Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt;&#xA;override this.CalculateReservationOrderAsync : Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt;" Usage="mockableReservationsTenantResource.CalculateReservationOrderAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ReservationPurchaseContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculate price for placing a `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/calculatePrice</description></item><item><term>Operation Id</term><description>ReservationOrder_Calculate</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt; Exchange (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.ExchangeResult&gt; Exchange(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.Exchange(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exchange (waitUntil As WaitUntil, content As ExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ExchangeResult)" />
      <MemberSignature Language="F#" Value="abstract member Exchange : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&#xA;override this.Exchange : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;" Usage="mockableReservationsTenantResource.Exchange (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing the refunds and purchases that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/exchange</description></item><item><term>Operation Id</term><description>Exchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExchangeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt; ExchangeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt; ExchangeAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.ExchangeAsync(Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExchangeAsync (waitUntil As WaitUntil, content As ExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ExchangeResult))" />
      <MemberSignature Language="F#" Value="abstract member ExchangeAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt;&#xA;override this.ExchangeAsync : Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt;" Usage="mockableReservationsTenantResource.ExchangeAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing the refunds and purchases that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
             Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
            
             <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/exchange</description></item><item><term>Operation Id</term><description>Exchange_Post</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails (Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails(class Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationDetails(Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationDetails (options As TenantResourceGetReservationDetailsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationDetails : Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&#xA;override this.GetReservationDetails : Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="mockableReservationsTenantResource.GetReservationDetails (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails (string filter = default, string orderby = default, string refreshSummary = default, float? skiptoken = default, string selectedState = default, float? take = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetails(string filter, string orderby, string refreshSummary, valuetype System.Nullable`1&lt;float32&gt; skiptoken, string selectedState, valuetype System.Nullable`1&lt;float32&gt; take, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationDetails(System.String,System.String,System.String,System.Nullable{System.Single},System.String,System.Nullable{System.Single},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationDetails (Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional refreshSummary As String = Nothing, Optional skiptoken As Nullable(Of Single) = Nothing, Optional selectedState As String = Nothing, Optional take As Nullable(Of Single) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationDetails : string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&#xA;override this.GetReservationDetails : string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="mockableReservationsTenantResource.GetReservationDetails (filter, orderby, refreshSummary, skiptoken, selectedState, take, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="refreshSummary" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="selectedState" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}. </param>
        <param name="orderby"> May be used to sort order by reservation properties. </param>
        <param name="refreshSummary"> To indicate whether to refresh the roll up counts of the reservations group by provisioning states. </param>
        <param name="skiptoken"> The number of reservations to skip from the list before returning results. </param>
        <param name="selectedState"> The selected provisioning state. </param>
        <param name="take"> To number of reservations to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync (Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync(class Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationDetailsAsync(Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationDetailsAsync (options As TenantResourceGetReservationDetailsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationDetailsAsync : Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&#xA;override this.GetReservationDetailsAsync : Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="mockableReservationsTenantResource.GetReservationDetailsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Reservations.Models.TenantResourceGetReservationDetailsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync (string filter = default, string orderby = default, string refreshSummary = default, float? skiptoken = default, string selectedState = default, float? take = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.ReservationDetailResource&gt; GetReservationDetailsAsync(string filter, string orderby, string refreshSummary, valuetype System.Nullable`1&lt;float32&gt; skiptoken, string selectedState, valuetype System.Nullable`1&lt;float32&gt; take, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationDetailsAsync(System.String,System.String,System.String,System.Nullable{System.Single},System.String,System.Nullable{System.Single},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationDetailsAsync (Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional refreshSummary As String = Nothing, Optional skiptoken As Nullable(Of Single) = Nothing, Optional selectedState As String = Nothing, Optional take As Nullable(Of Single) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationDetailResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationDetailsAsync : string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;&#xA;override this.GetReservationDetailsAsync : string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;" Usage="mockableReservationsTenantResource.GetReservationDetailsAsync (filter, orderby, refreshSummary, skiptoken, selectedState, take, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="refreshSummary" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="selectedState" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}. </param>
        <param name="orderby"> May be used to sort order by reservation properties. </param>
        <param name="refreshSummary"> To indicate whether to refresh the roll up counts of the reservations group by provisioning states. </param>
        <param name="skiptoken"> The number of reservations to skip from the list before returning results. </param>
        <param name="selectedState"> The selected provisioning state. </param>
        <param name="take"> To number of reservations to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservations</description></item><item><term>Operation Id</term><description>Reservation_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationDetailResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrder">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt; GetReservationOrder (Guid reservationOrderId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt; GetReservationOrder(valuetype System.Guid reservationOrderId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationOrder(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationOrder (reservationOrderId As Guid, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationOrderResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReservationOrder : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&#xA;override this.GetReservationOrder : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;" Usage="mockableReservationsTenantResource.GetReservationOrder (reservationOrderId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservationOrderId" Type="System.Guid" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservationOrderId"> Order Id of the reservation. </param>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; GetReservationOrderAsync (Guid reservationOrderId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt; GetReservationOrderAsync(valuetype System.Guid reservationOrderId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationOrderAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationOrderAsync (reservationOrderId As Guid, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationOrderResource))" />
      <MemberSignature Language="F#" Value="abstract member GetReservationOrderAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;&#xA;override this.GetReservationOrderAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;" Usage="mockableReservationsTenantResource.GetReservationOrderAsync (reservationOrderId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reservationOrderId" Type="System.Guid" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reservationOrderId"> Order Id of the reservation. </param>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}</description></item><item><term>Operation Id</term><description>ReservationOrder_Get</description></item><item><term>Default Api Version</term><description>2022-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrders">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Reservations.ReservationOrderCollection GetReservationOrders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Reservations.ReservationOrderCollection GetReservationOrders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.Mocking.MockableReservationsTenantResource.GetReservationOrders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReservationOrders () As ReservationOrderCollection" />
      <MemberSignature Language="F#" Value="abstract member GetReservationOrders : unit -&gt; Azure.ResourceManager.Reservations.ReservationOrderCollection&#xA;override this.GetReservationOrders : unit -&gt; Azure.ResourceManager.Reservations.ReservationOrderCollection" Usage="mockableReservationsTenantResource.GetReservationOrders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ReservationOrderResources in the TenantResource. </summary>
        <returns> An object representing collection of ReservationOrderResources and their operations over a ReservationOrderResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
