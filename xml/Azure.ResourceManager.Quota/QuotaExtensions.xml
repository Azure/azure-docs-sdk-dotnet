<Type Name="QuotaExtensions" FullName="Azure.ResourceManager.Quota.QuotaExtensions">
  <TypeSignature Language="C#" Value="public static class QuotaExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit QuotaExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Quota.QuotaExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module QuotaExtensions" />
  <TypeSignature Language="F#" Value="type QuotaExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Quota. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrentQuotaLimitBase">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt; GetCurrentQuotaLimitBase (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt; GetCurrentQuotaLimitBase(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBase(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBase (client As ArmClient, scope As ResourceIdentifier, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CurrentQuotaLimitBaseResource)" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBase : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBase (client, scope, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="resourceName">
            Resource name for a given resource provider. For example:
            - SKU name for Microsoft.Compute
            - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
             For Microsoft.Network PublicIPAddresses.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Quota/quotas/{resourceName}</description></item><item><term>Operation Id</term><description>Quota_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentQuotaLimitBase(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentQuotaLimitBaseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt;&gt; GetCurrentQuotaLimitBaseAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt;&gt; GetCurrentQuotaLimitBaseAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBaseAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBaseAsync (client As ArmClient, scope As ResourceIdentifier, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CurrentQuotaLimitBaseResource))" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBaseAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt;&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBaseAsync (client, scope, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="resourceName">
            Resource name for a given resource provider. For example:
            - SKU name for Microsoft.Compute
            - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
             For Microsoft.Network PublicIPAddresses.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Quota/quotas/{resourceName}</description></item><item><term>Operation Id</term><description>Quota_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentQuotaLimitBaseAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentQuotaLimitBaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource GetCurrentQuotaLimitBaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource GetCurrentQuotaLimitBaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBaseResource (client As ArmClient, id As ResourceIdentifier) As CurrentQuotaLimitBaseResource" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentQuotaLimitBaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.CurrentQuotaLimitBaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentQuotaLimitBases">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.CurrentQuotaLimitBaseCollection GetCurrentQuotaLimitBases (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.CurrentQuotaLimitBaseCollection GetCurrentQuotaLimitBases(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBases(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBases (client As ArmClient, scope As ResourceIdentifier) As CurrentQuotaLimitBaseCollection" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBases : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.CurrentQuotaLimitBaseCollection" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentQuotaLimitBases (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.CurrentQuotaLimitBaseCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of CurrentQuotaLimitBaseResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentQuotaLimitBases(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of CurrentQuotaLimitBaseResources and their operations over a CurrentQuotaLimitBaseResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentUsagesBase">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt; GetCurrentUsagesBase (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt; GetCurrentUsagesBase(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBase(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentUsagesBase (client As ArmClient, scope As ResourceIdentifier, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CurrentUsagesBaseResource)" />
      <MemberSignature Language="F#" Value="static member GetCurrentUsagesBase : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBase (client, scope, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="resourceName">
            Resource name for a given resource provider. For example:
            - SKU name for Microsoft.Compute
            - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
             For Microsoft.Network PublicIPAddresses.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current usage of a resource.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Quota/usages/{resourceName}</description></item><item><term>Operation Id</term><description>Usages_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.CurrentUsagesBaseResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentUsagesBase(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentUsagesBaseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt;&gt; GetCurrentUsagesBaseAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt;&gt; GetCurrentUsagesBaseAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBaseAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentUsagesBaseAsync (client As ArmClient, scope As ResourceIdentifier, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CurrentUsagesBaseResource))" />
      <MemberSignature Language="F#" Value="static member GetCurrentUsagesBaseAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt;&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBaseAsync (client, scope, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.CurrentUsagesBaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="resourceName">
            Resource name for a given resource provider. For example:
            - SKU name for Microsoft.Compute
            - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
             For Microsoft.Network PublicIPAddresses.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current usage of a resource.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Quota/usages/{resourceName}</description></item><item><term>Operation Id</term><description>Usages_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.CurrentUsagesBaseResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentUsagesBaseAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentUsagesBaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.CurrentUsagesBaseResource GetCurrentUsagesBaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.CurrentUsagesBaseResource GetCurrentUsagesBaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentUsagesBaseResource (client As ArmClient, id As ResourceIdentifier) As CurrentUsagesBaseResource" />
      <MemberSignature Language="F#" Value="static member GetCurrentUsagesBaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.CurrentUsagesBaseResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.CurrentUsagesBaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.CurrentUsagesBaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.CurrentUsagesBaseResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.CurrentUsagesBaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentUsagesBaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.CurrentUsagesBaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentUsagesBases">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.CurrentUsagesBaseCollection GetCurrentUsagesBases (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.CurrentUsagesBaseCollection GetCurrentUsagesBases(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBases(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentUsagesBases (client As ArmClient, scope As ResourceIdentifier) As CurrentUsagesBaseCollection" />
      <MemberSignature Language="F#" Value="static member GetCurrentUsagesBases : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.CurrentUsagesBaseCollection" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetCurrentUsagesBases (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.CurrentUsagesBaseCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of CurrentUsagesBaseResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetCurrentUsagesBases(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of CurrentUsagesBaseResources and their operations over a CurrentUsagesBaseResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaEntities">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.GroupQuotaEntityCollection GetGroupQuotaEntities (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.GroupQuotaEntityCollection GetGroupQuotaEntities(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntities(Azure.ResourceManager.ManagementGroups.ManagementGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaEntities (managementGroupResource As ManagementGroupResource) As GroupQuotaEntityCollection" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaEntities : Azure.ResourceManager.ManagementGroups.ManagementGroupResource -&gt; Azure.ResourceManager.Quota.GroupQuotaEntityCollection" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntities managementGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.GroupQuotaEntityCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of GroupQuotaEntityResources in the ManagementGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetGroupQuotaEntities" /> instead.</description></item></summary>
        <returns> An object representing collection of GroupQuotaEntityResources and their operations over a GroupQuotaEntityResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaEntity">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt; GetGroupQuotaEntity (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string groupQuotaName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt; GetGroupQuotaEntity(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string groupQuotaName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntity(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaEntity (managementGroupResource As ManagementGroupResource, groupQuotaName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GroupQuotaEntityResource)" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaEntity : Azure.ResourceManager.ManagementGroups.ManagementGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntity (managementGroupResource, groupQuotaName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="groupQuotaName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <param name="groupQuotaName"> The GroupQuota name. The name should be unique for the provided context tenantId/MgId. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the GroupQuotas for the name passed. It will return the GroupQuotas properties only. The details on group quota can be access from the group quota APIs.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}</description></item><item><term>Operation Id</term><description>GroupQuotas_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.GroupQuotaEntityResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetGroupQuotaEntity(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" /> or <paramref name="groupQuotaName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupQuotaName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaEntityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt;&gt; GetGroupQuotaEntityAsync (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string groupQuotaName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt;&gt; GetGroupQuotaEntityAsync(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string groupQuotaName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntityAsync(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaEntityAsync (managementGroupResource As ManagementGroupResource, groupQuotaName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GroupQuotaEntityResource))" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaEntityAsync : Azure.ResourceManager.ManagementGroups.ManagementGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt;&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntityAsync (managementGroupResource, groupQuotaName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.GroupQuotaEntityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="groupQuotaName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <param name="groupQuotaName"> The GroupQuota name. The name should be unique for the provided context tenantId/MgId. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the GroupQuotas for the name passed. It will return the GroupQuotas properties only. The details on group quota can be access from the group quota APIs.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}</description></item><item><term>Operation Id</term><description>GroupQuotas_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.GroupQuotaEntityResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetGroupQuotaEntityAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" /> or <paramref name="groupQuotaName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupQuotaName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaEntityResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.GroupQuotaEntityResource GetGroupQuotaEntityResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.GroupQuotaEntityResource GetGroupQuotaEntityResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntityResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaEntityResource (client As ArmClient, id As ResourceIdentifier) As GroupQuotaEntityResource" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaEntityResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.GroupQuotaEntityResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaEntityResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.GroupQuotaEntityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaEntityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.GroupQuotaEntityResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaEntityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetGroupQuotaEntityResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaEntityResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaLimitListResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.GroupQuotaLimitListResource GetGroupQuotaLimitListResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.GroupQuotaLimitListResource GetGroupQuotaLimitListResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaLimitListResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaLimitListResource (client As ArmClient, id As ResourceIdentifier) As GroupQuotaLimitListResource" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaLimitListResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.GroupQuotaLimitListResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaLimitListResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.GroupQuotaLimitListResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaLimitListResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.GroupQuotaLimitListResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.Core.AzureLocation)" /> to create a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaLimitListResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetGroupQuotaLimitListResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaLimitListResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaRequestStatusResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource GetGroupQuotaRequestStatusResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource GetGroupQuotaRequestStatusResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaRequestStatusResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaRequestStatusResource (client As ArmClient, id As ResourceIdentifier) As GroupQuotaRequestStatusResource" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaRequestStatusResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaRequestStatusResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetGroupQuotaRequestStatusResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaRequestStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaSubscriptionRequestStatusResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource GetGroupQuotaSubscriptionRequestStatusResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource GetGroupQuotaSubscriptionRequestStatusResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaSubscriptionRequestStatusResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaSubscriptionRequestStatusResource (client As ArmClient, id As ResourceIdentifier) As GroupQuotaSubscriptionRequestStatusResource" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaSubscriptionRequestStatusResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaSubscriptionRequestStatusResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetGroupQuotaSubscriptionRequestStatusResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaSubscriptionRequestStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGroupQuotaSubscriptionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource GetGroupQuotaSubscriptionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource GetGroupQuotaSubscriptionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaSubscriptionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGroupQuotaSubscriptionResource (client As ArmClient, id As ResourceIdentifier) As GroupQuotaSubscriptionResource" />
      <MemberSignature Language="F#" Value="static member GetGroupQuotaSubscriptionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetGroupQuotaSubscriptionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetGroupQuotaSubscriptionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.GroupQuotaSubscriptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaAllocationRequestStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt; GetQuotaAllocationRequestStatus (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, string allocationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt; GetQuotaAllocationRequestStatus(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, string allocationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatus(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaAllocationRequestStatus (managementGroupResource As ManagementGroupResource, subscriptionId As String, groupQuotaName As String, resourceProviderName As String, allocationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaAllocationRequestStatusResource)" />
      <MemberSignature Language="F#" Value="static member GetQuotaAllocationRequestStatus : Azure.ResourceManager.ManagementGroups.ManagementGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatus (managementGroupResource, subscriptionId, groupQuotaName, resourceProviderName, allocationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="subscriptionId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="groupQuotaName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceProviderName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="allocationId" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
        <param name="groupQuotaName"> The GroupQuota name. The name should be unique for the provided context tenantId/MgId. </param>
        <param name="resourceProviderName"> The resource provider name, such as - Microsoft.Compute. Currently only Microsoft.Compute resource provider supports this API. </param>
        <param name="allocationId"> Request Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota allocation request status for the subscriptionId by allocationId.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocationRequests/{allocationId}</description></item><item><term>Operation Id</term><description>GroupQuotaSubscriptionAllocationRequest_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetQuotaAllocationRequestStatus(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" />, <paramref name="subscriptionId" />, <paramref name="groupQuotaName" />, <paramref name="resourceProviderName" /> or <paramref name="allocationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" />, <paramref name="groupQuotaName" />, <paramref name="resourceProviderName" /> or <paramref name="allocationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaAllocationRequestStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt;&gt; GetQuotaAllocationRequestStatusAsync (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, string allocationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt;&gt; GetQuotaAllocationRequestStatusAsync(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, string allocationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatusAsync(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaAllocationRequestStatusAsync (managementGroupResource As ManagementGroupResource, subscriptionId As String, groupQuotaName As String, resourceProviderName As String, allocationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaAllocationRequestStatusResource))" />
      <MemberSignature Language="F#" Value="static member GetQuotaAllocationRequestStatusAsync : Azure.ResourceManager.ManagementGroups.ManagementGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt;&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatusAsync (managementGroupResource, subscriptionId, groupQuotaName, resourceProviderName, allocationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="subscriptionId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="groupQuotaName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceProviderName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="allocationId" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
        <param name="groupQuotaName"> The GroupQuota name. The name should be unique for the provided context tenantId/MgId. </param>
        <param name="resourceProviderName"> The resource provider name, such as - Microsoft.Compute. Currently only Microsoft.Compute resource provider supports this API. </param>
        <param name="allocationId"> Request Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota allocation request status for the subscriptionId by allocationId.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocationRequests/{allocationId}</description></item><item><term>Operation Id</term><description>GroupQuotaSubscriptionAllocationRequest_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetQuotaAllocationRequestStatusAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" />, <paramref name="subscriptionId" />, <paramref name="groupQuotaName" />, <paramref name="resourceProviderName" /> or <paramref name="allocationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" />, <paramref name="groupQuotaName" />, <paramref name="resourceProviderName" /> or <paramref name="allocationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaAllocationRequestStatuses">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.QuotaAllocationRequestStatusCollection GetQuotaAllocationRequestStatuses (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.QuotaAllocationRequestStatusCollection GetQuotaAllocationRequestStatuses(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatuses(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaAllocationRequestStatuses (managementGroupResource As ManagementGroupResource, subscriptionId As String, groupQuotaName As String, resourceProviderName As String) As QuotaAllocationRequestStatusCollection" />
      <MemberSignature Language="F#" Value="static member GetQuotaAllocationRequestStatuses : Azure.ResourceManager.ManagementGroups.ManagementGroupResource * string * string * string -&gt; Azure.ResourceManager.Quota.QuotaAllocationRequestStatusCollection" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatuses (managementGroupResource, subscriptionId, groupQuotaName, resourceProviderName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.QuotaAllocationRequestStatusCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="subscriptionId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="groupQuotaName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceProviderName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
        <param name="groupQuotaName"> The GroupQuota name. The name should be unique for the provided context tenantId/MgId. </param>
        <param name="resourceProviderName"> The resource provider name, such as - Microsoft.Compute. Currently only Microsoft.Compute resource provider supports this API. </param>
        <summary>
            Gets a collection of QuotaAllocationRequestStatusResources in the ManagementGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetQuotaAllocationRequestStatuses(System.String,System.String,System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of QuotaAllocationRequestStatusResources and their operations over a QuotaAllocationRequestStatusResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" />, <paramref name="subscriptionId" />, <paramref name="groupQuotaName" /> or <paramref name="resourceProviderName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" />, <paramref name="groupQuotaName" /> or <paramref name="resourceProviderName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaAllocationRequestStatusResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource GetQuotaAllocationRequestStatusResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource GetQuotaAllocationRequestStatusResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatusResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaAllocationRequestStatusResource (client As ArmClient, id As ResourceIdentifier) As QuotaAllocationRequestStatusResource" />
      <MemberSignature Language="F#" Value="static member GetQuotaAllocationRequestStatusResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaAllocationRequestStatusResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetQuotaAllocationRequestStatusResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.QuotaAllocationRequestStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaOperations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt; GetQuotaOperations (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt; GetQuotaOperations(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaOperations(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaOperations (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of QuotaOperationResult)" />
      <MemberSignature Language="F#" Value="static member GetQuotaOperations : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaOperations (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the operations supported by the Microsoft.Quota resource provider.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Quota/operations</description></item><item><term>Operation Id</term><description>QuotaOperation_List</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaTenantResource.GetQuotaOperations(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Quota.Models.QuotaOperationResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaOperationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt; GetQuotaOperationsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt; GetQuotaOperationsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaOperationsAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaOperationsAsync (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of QuotaOperationResult)" />
      <MemberSignature Language="F#" Value="static member GetQuotaOperationsAsync : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaOperationsAsync (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Quota.Models.QuotaOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the operations supported by the Microsoft.Quota resource provider.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Quota/operations</description></item><item><term>Operation Id</term><description>QuotaOperation_List</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaTenantResource.GetQuotaOperations(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Quota.Models.QuotaOperationResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetail">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt; GetQuotaRequestDetail (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt; GetQuotaRequestDetail(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetail(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetail (client As ArmClient, scope As ResourceIdentifier, id As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaRequestDetailResource)" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetail : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetail (client, scope, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="id"> Quota request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location. The quota request ID **id** is returned in the response of the PUT operation.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Quota/quotaRequests/{id}</description></item><item><term>Operation Id</term><description>QuotaRequestStatus_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.QuotaRequestDetailResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetQuotaRequestDetail(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="id" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="id" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetailAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt;&gt; GetQuotaRequestDetailAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt;&gt; GetQuotaRequestDetailAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetailAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetailAsync (client As ArmClient, scope As ResourceIdentifier, id As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaRequestDetailResource))" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetailAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt;&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetailAsync (client, scope, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.QuotaRequestDetailResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="id"> Quota request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location. The quota request ID **id** is returned in the response of the PUT operation.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Quota/quotaRequests/{id}</description></item><item><term>Operation Id</term><description>QuotaRequestStatus_Get</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.QuotaRequestDetailResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetQuotaRequestDetailAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="id" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="id" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetailResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.QuotaRequestDetailResource GetQuotaRequestDetailResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.QuotaRequestDetailResource GetQuotaRequestDetailResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetailResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetailResource (client As ArmClient, id As ResourceIdentifier) As QuotaRequestDetailResource" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetailResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.QuotaRequestDetailResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetailResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.QuotaRequestDetailResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.QuotaRequestDetailResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.QuotaRequestDetailResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Quota.QuotaRequestDetailResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetQuotaRequestDetailResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.QuotaRequestDetailResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.QuotaRequestDetailCollection GetQuotaRequestDetails (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.QuotaRequestDetailCollection GetQuotaRequestDetails(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetails(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetails (client As ArmClient, scope As ResourceIdentifier) As QuotaRequestDetailCollection" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetails : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.QuotaRequestDetailCollection" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetQuotaRequestDetails (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.QuotaRequestDetailCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of QuotaRequestDetailResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetQuotaRequestDetails(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of QuotaRequestDetailResources and their operations over a QuotaRequestDetailResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionQuotaAllocationsList">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt; GetSubscriptionQuotaAllocationsList (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt; GetSubscriptionQuotaAllocationsList(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsList(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.String,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionQuotaAllocationsList (managementGroupResource As ManagementGroupResource, subscriptionId As String, groupQuotaName As String, resourceProviderName As String, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionQuotaAllocationsListResource)" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionQuotaAllocationsList : Azure.ResourceManager.ManagementGroups.ManagementGroupResource * string * string * string * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsList (managementGroupResource, subscriptionId, groupQuotaName, resourceProviderName, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="subscriptionId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="groupQuotaName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceProviderName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
        <param name="groupQuotaName"> The GroupQuota name. The name should be unique for the provided context tenantId/MgId. </param>
        <param name="resourceProviderName"> The resource provider name, such as - Microsoft.Compute. Currently only Microsoft.Compute resource provider supports this API. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the quota allocated to a subscription for the specified resource provider and location for resource names passed in $filter=resourceName eq {SKU}. This will include the GroupQuota and total quota allocated to the subscription. Only the Group quota allocated to the subscription can be allocated back to the MG Group Quota.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocations/{location}</description></item><item><term>Operation Id</term><description>GroupQuotaSubscriptionAllocation_List</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetSubscriptionQuotaAllocationsList(System.String,System.String,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" />, <paramref name="subscriptionId" />, <paramref name="groupQuotaName" /> or <paramref name="resourceProviderName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" />, <paramref name="groupQuotaName" /> or <paramref name="resourceProviderName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionQuotaAllocationsListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt;&gt; GetSubscriptionQuotaAllocationsListAsync (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt;&gt; GetSubscriptionQuotaAllocationsListAsync(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource, string subscriptionId, string groupQuotaName, string resourceProviderName, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsListAsync(Azure.ResourceManager.ManagementGroups.ManagementGroupResource,System.String,System.String,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionQuotaAllocationsListAsync (managementGroupResource As ManagementGroupResource, subscriptionId As String, groupQuotaName As String, resourceProviderName As String, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionQuotaAllocationsListResource))" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionQuotaAllocationsListAsync : Azure.ResourceManager.ManagementGroups.ManagementGroupResource * string * string * string * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt;&gt;" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsListAsync (managementGroupResource, subscriptionId, groupQuotaName, resourceProviderName, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="subscriptionId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="groupQuotaName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceProviderName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
        <param name="groupQuotaName"> The GroupQuota name. The name should be unique for the provided context tenantId/MgId. </param>
        <param name="resourceProviderName"> The resource provider name, such as - Microsoft.Compute. Currently only Microsoft.Compute resource provider supports this API. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all the quota allocated to a subscription for the specified resource provider and location for resource names passed in $filter=resourceName eq {SKU}. This will include the GroupQuota and total quota allocated to the subscription. Only the Group quota allocated to the subscription can be allocated back to the MG Group Quota.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocations/{location}</description></item><item><term>Operation Id</term><description>GroupQuotaSubscriptionAllocation_List</description></item><item><term>Default Api Version</term><description>2024-12-18-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetSubscriptionQuotaAllocationsListAsync(System.String,System.String,System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" />, <paramref name="subscriptionId" />, <paramref name="groupQuotaName" /> or <paramref name="resourceProviderName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" />, <paramref name="groupQuotaName" /> or <paramref name="resourceProviderName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionQuotaAllocationsListResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource GetSubscriptionQuotaAllocationsListResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource GetSubscriptionQuotaAllocationsListResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsListResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionQuotaAllocationsListResource (client As ArmClient, id As ResourceIdentifier) As SubscriptionQuotaAllocationsListResource" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionQuotaAllocationsListResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsListResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.Core.AzureLocation)" /> to create a <see cref="T:Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaArmClient.GetSubscriptionQuotaAllocationsListResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionQuotaAllocationsLists">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListCollection GetSubscriptionQuotaAllocationsLists (this Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListCollection GetSubscriptionQuotaAllocationsLists(class Azure.ResourceManager.ManagementGroups.ManagementGroupResource managementGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsLists(Azure.ResourceManager.ManagementGroups.ManagementGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionQuotaAllocationsLists (managementGroupResource As ManagementGroupResource) As SubscriptionQuotaAllocationsListCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionQuotaAllocationsLists : Azure.ResourceManager.ManagementGroups.ManagementGroupResource -&gt; Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListCollection" Usage="Azure.ResourceManager.Quota.QuotaExtensions.GetSubscriptionQuotaAllocationsLists managementGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quota</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Quota.SubscriptionQuotaAllocationsListCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managementGroupResource" Type="Azure.ResourceManager.ManagementGroups.ManagementGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="managementGroupResource"> The <see cref="T:Azure.ResourceManager.ManagementGroups.ManagementGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of SubscriptionQuotaAllocationsListResources in the ManagementGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Quota.Mocking.MockableQuotaManagementGroupResource.GetSubscriptionQuotaAllocationsLists" /> instead.</description></item></summary>
        <returns> An object representing collection of SubscriptionQuotaAllocationsListResources and their operations over a SubscriptionQuotaAllocationsListResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="managementGroupResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
