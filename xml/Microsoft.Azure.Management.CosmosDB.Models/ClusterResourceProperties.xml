<Type Name="ClusterResourceProperties" FullName="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties">
  <TypeSignature Language="C#" Value="public class ClusterResourceProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClusterResourceProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class ClusterResourceProperties" />
  <TypeSignature Language="F#" Value="type ClusterResourceProperties = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
    <AssemblyVersion>3.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Properties of a managed Cassandra cluster.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClusterResourceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ClusterResourceProperties class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClusterResourceProperties (string provisioningState = default, string restoreFromBackupId = default, string delegatedManagementSubnetId = default, string cassandraVersion = default, string clusterNameOverride = default, string authenticationMethod = default, string initialCassandraAdminPassword = default, Microsoft.Azure.Management.CosmosDB.Models.SeedNode prometheusEndpoint = default, bool? repairEnabled = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; clientCertificates = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; externalGossipCertificates = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; gossipCertificates = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; externalSeedNodes = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; seedNodes = default, int? hoursBetweenBackups = default, bool? deallocated = default, bool? cassandraAuditLoggingEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string provisioningState, string restoreFromBackupId, string delegatedManagementSubnetId, string cassandraVersion, string clusterNameOverride, string authenticationMethod, string initialCassandraAdminPassword, class Microsoft.Azure.Management.CosmosDB.Models.SeedNode prometheusEndpoint, valuetype System.Nullable`1&lt;bool&gt; repairEnabled, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; clientCertificates, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; externalGossipCertificates, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; gossipCertificates, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; externalSeedNodes, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; seedNodes, valuetype System.Nullable`1&lt;int32&gt; hoursBetweenBackups, valuetype System.Nullable`1&lt;bool&gt; deallocated, valuetype System.Nullable`1&lt;bool&gt; cassandraAuditLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.CosmosDB.Models.SeedNode,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.CosmosDB.Models.Certificate},System.Collections.Generic.IList{Microsoft.Azure.Management.CosmosDB.Models.Certificate},System.Collections.Generic.IList{Microsoft.Azure.Management.CosmosDB.Models.Certificate},System.Collections.Generic.IList{Microsoft.Azure.Management.CosmosDB.Models.SeedNode},System.Collections.Generic.IList{Microsoft.Azure.Management.CosmosDB.Models.SeedNode},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional provisioningState As String = Nothing, Optional restoreFromBackupId As String = Nothing, Optional delegatedManagementSubnetId As String = Nothing, Optional cassandraVersion As String = Nothing, Optional clusterNameOverride As String = Nothing, Optional authenticationMethod As String = Nothing, Optional initialCassandraAdminPassword As String = Nothing, Optional prometheusEndpoint As SeedNode = Nothing, Optional repairEnabled As Nullable(Of Boolean) = Nothing, Optional clientCertificates As IList(Of Certificate) = Nothing, Optional externalGossipCertificates As IList(Of Certificate) = Nothing, Optional gossipCertificates As IList(Of Certificate) = Nothing, Optional externalSeedNodes As IList(Of SeedNode) = Nothing, Optional seedNodes As IList(Of SeedNode) = Nothing, Optional hoursBetweenBackups As Nullable(Of Integer) = Nothing, Optional deallocated As Nullable(Of Boolean) = Nothing, Optional cassandraAuditLoggingEnabled As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties : string * string * string * string * string * string * string * Microsoft.Azure.Management.CosmosDB.Models.SeedNode * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties" Usage="new Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties (provisioningState, restoreFromBackupId, delegatedManagementSubnetId, cassandraVersion, clusterNameOverride, authenticationMethod, initialCassandraAdminPassword, prometheusEndpoint, repairEnabled, clientCertificates, externalGossipCertificates, gossipCertificates, externalSeedNodes, seedNodes, hoursBetweenBackups, deallocated, cassandraAuditLoggingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="restoreFromBackupId" Type="System.String" />
        <Parameter Name="delegatedManagementSubnetId" Type="System.String" />
        <Parameter Name="cassandraVersion" Type="System.String" />
        <Parameter Name="clusterNameOverride" Type="System.String" />
        <Parameter Name="authenticationMethod" Type="System.String" />
        <Parameter Name="initialCassandraAdminPassword" Type="System.String" />
        <Parameter Name="prometheusEndpoint" Type="Microsoft.Azure.Management.CosmosDB.Models.SeedNode" />
        <Parameter Name="repairEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="clientCertificates" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt;" />
        <Parameter Name="externalGossipCertificates" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt;" />
        <Parameter Name="gossipCertificates" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt;" />
        <Parameter Name="externalSeedNodes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt;" />
        <Parameter Name="seedNodes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt;" />
        <Parameter Name="hoursBetweenBackups" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="deallocated" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cassandraAuditLoggingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="provisioningState">Possible values include:
            'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed',
            'Canceled'</param>
        <param name="restoreFromBackupId">To create an empty cluster, omit
            this field or set it to null. To restore a backup into a new
            cluster, set this field to the resource id of the backup.</param>
        <param name="delegatedManagementSubnetId">Resource id of a subnet
            that this cluster's management service should have its network
            interface attached to. The subnet must be routable to all subnets
            that will be delegated to data centers. The resource id must be of
            the form '/subscriptions/&lt;subscription
            id&gt;/resourceGroups/&lt;resource
            group&gt;/providers/Microsoft.Network/virtualNetworks/&lt;virtual
            network&gt;/subnets/&lt;subnet&gt;'</param>
        <param name="cassandraVersion">Which version of Cassandra should
            this cluster converge to running (e.g., 3.11). When updated, the
            cluster may take some time to migrate to the new version.</param>
        <param name="clusterNameOverride">If you need to set the
            clusterName property in cassandra.yaml to something besides the
            resource name of the cluster, set the value to use on this
            property.</param>
        <param name="authenticationMethod">Which authentication method
            Cassandra should use to authenticate clients. 'None' turns off
            authentication, so should not be used except in emergencies.
            'Cassandra' is the default password based authentication. The
            default is 'Cassandra'. Possible values include: 'None',
            'Cassandra'</param>
        <param name="initialCassandraAdminPassword">Initial password for
            clients connecting as admin to the cluster. Should be changed after
            cluster creation. Returns null on GET. This field only applies when
            the authenticationMethod field is 'Cassandra'.</param>
        <param name="prometheusEndpoint">Hostname or IP address where the
            Prometheus endpoint containing data about the managed Cassandra
            nodes can be reached.</param>
        <param name="repairEnabled">Should automatic repairs run on this
            cluster? If omitted, this is true, and should stay true unless you
            are running a hybrid cluster where you are already doing your own
            repairs.</param>
        <param name="clientCertificates">List of TLS certificates used to
            authorize clients connecting to the cluster. All connections are
            TLS encrypted whether clientCertificates is set or not, but if
            clientCertificates is set, the managed Cassandra cluster will
            reject all connections not bearing a TLS client certificate that
            can be validated from one or more of the public certificates in
            this property.</param>
        <param name="externalGossipCertificates">List of TLS certificates
            used to authorize gossip from unmanaged data centers. The TLS
            certificates of all nodes in unmanaged data centers must be
            verifiable using one of the certificates provided in this
            property.</param>
        <param name="gossipCertificates">List of TLS certificates that
            unmanaged nodes must trust for gossip with managed nodes. All
            managed nodes will present TLS client certificates that are
            verifiable using one of the certificates provided in this
            property.</param>
        <param name="externalSeedNodes">List of IP addresses of seed nodes
            in unmanaged data centers. These will be added to the seed node
            lists of all managed nodes.</param>
        <param name="seedNodes">List of IP addresses of seed nodes in the
            managed data centers. These should be added to the seed node lists
            of all unmanaged nodes.</param>
        <param name="hoursBetweenBackups">Number of hours to wait between
            taking a backup of the cluster. To disable backups, set this
            property to 0.</param>
        <param name="deallocated">Whether the cluster and associated data
            centers has been deallocated.</param>
        <param name="cassandraAuditLoggingEnabled">Whether Cassandra audit
            logging is enabled</param>
        <summary>
            Initializes a new instance of the ClusterResourceProperties class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationMethod">
      <MemberSignature Language="C#" Value="public string AuthenticationMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.AuthenticationMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationMethod As String" />
      <MemberSignature Language="F#" Value="member this.AuthenticationMethod : string with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.AuthenticationMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="authenticationMethod")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="authenticationMethod")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets which authentication method Cassandra should use to
            authenticate clients. 'None' turns off authentication, so should
            not be used except in emergencies. 'Cassandra' is the default
            password based authentication. The default is 'Cassandra'. Possible
            values include: 'None', 'Cassandra'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CassandraAuditLoggingEnabled">
      <MemberSignature Language="C#" Value="public bool? CassandraAuditLoggingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; CassandraAuditLoggingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.CassandraAuditLoggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property CassandraAuditLoggingEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.CassandraAuditLoggingEnabled : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.CassandraAuditLoggingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="cassandraAuditLoggingEnabled")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="cassandraAuditLoggingEnabled")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether Cassandra audit logging is enabled
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CassandraVersion">
      <MemberSignature Language="C#" Value="public string CassandraVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CassandraVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.CassandraVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property CassandraVersion As String" />
      <MemberSignature Language="F#" Value="member this.CassandraVersion : string with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.CassandraVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="cassandraVersion")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="cassandraVersion")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets which version of Cassandra should this cluster
            converge to running (e.g., 3.11). When updated, the cluster may
            take some time to migrate to the new version.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As IList(Of Certificate)" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="clientCertificates")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="clientCertificates")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of TLS certificates used to authorize clients
            connecting to the cluster. All connections are TLS encrypted
            whether clientCertificates is set or not, but if clientCertificates
            is set, the managed Cassandra cluster will reject all connections
            not bearing a TLS client certificate that can be validated from one
            or more of the public certificates in this property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterNameOverride">
      <MemberSignature Language="C#" Value="public string ClusterNameOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterNameOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ClusterNameOverride" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterNameOverride As String" />
      <MemberSignature Language="F#" Value="member this.ClusterNameOverride : string with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ClusterNameOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="clusterNameOverride")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="clusterNameOverride")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets if you need to set the clusterName property in
            cassandra.yaml to something besides the resource name of the
            cluster, set the value to use on this property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deallocated">
      <MemberSignature Language="C#" Value="public bool? Deallocated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Deallocated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.Deallocated" />
      <MemberSignature Language="VB.NET" Value="Public Property Deallocated As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Deallocated : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.Deallocated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="deallocated")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="deallocated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the cluster and associated data centers has
            been deallocated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegatedManagementSubnetId">
      <MemberSignature Language="C#" Value="public string DelegatedManagementSubnetId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DelegatedManagementSubnetId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.DelegatedManagementSubnetId" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegatedManagementSubnetId As String" />
      <MemberSignature Language="F#" Value="member this.DelegatedManagementSubnetId : string with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.DelegatedManagementSubnetId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="delegatedManagementSubnetId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="delegatedManagementSubnetId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets resource id of a subnet that this cluster's management
            service should have its network interface attached to. The subnet
            must be routable to all subnets that will be delegated to data
            centers. The resource id must be of the form
            '/subscriptions/&amp;lt;subscription
            id&amp;gt;/resourceGroups/&amp;lt;resource
            group&amp;gt;/providers/Microsoft.Network/virtualNetworks/&amp;lt;virtual
            network&amp;gt;/subnets/&amp;lt;subnet&amp;gt;'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalGossipCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; ExternalGossipCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; ExternalGossipCertificates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ExternalGossipCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalGossipCertificates As IList(Of Certificate)" />
      <MemberSignature Language="F#" Value="member this.ExternalGossipCertificates : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ExternalGossipCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="externalGossipCertificates")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="externalGossipCertificates")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of TLS certificates used to authorize gossip from
            unmanaged data centers. The TLS certificates of all nodes in
            unmanaged data centers must be verifiable using one of the
            certificates provided in this property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalSeedNodes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; ExternalSeedNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; ExternalSeedNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ExternalSeedNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalSeedNodes As IList(Of SeedNode)" />
      <MemberSignature Language="F#" Value="member this.ExternalSeedNodes : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ExternalSeedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="externalSeedNodes")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="externalSeedNodes")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of IP addresses of seed nodes in unmanaged data
            centers. These will be added to the seed node lists of all managed
            nodes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GossipCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; GossipCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt; GossipCertificates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.GossipCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GossipCertificates As IList(Of Certificate)" />
      <MemberSignature Language="F#" Value="member this.GossipCertificates : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt;" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.GossipCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="gossipCertificates")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="gossipCertificates")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets list of TLS certificates that unmanaged nodes must trust for
            gossip with managed nodes. All managed nodes will present TLS
            client certificates that are verifiable using one of the
            certificates provided in this property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HoursBetweenBackups">
      <MemberSignature Language="C#" Value="public int? HoursBetweenBackups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; HoursBetweenBackups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.HoursBetweenBackups" />
      <MemberSignature Language="VB.NET" Value="Public Property HoursBetweenBackups As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.HoursBetweenBackups : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.HoursBetweenBackups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="hoursBetweenBackups")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="hoursBetweenBackups")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets number of hours to wait between taking a backup of the
            cluster. To disable backups, set this property to 0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialCassandraAdminPassword">
      <MemberSignature Language="C#" Value="public string InitialCassandraAdminPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialCassandraAdminPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.InitialCassandraAdminPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialCassandraAdminPassword As String" />
      <MemberSignature Language="F#" Value="member this.InitialCassandraAdminPassword : string with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.InitialCassandraAdminPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="initialCassandraAdminPassword")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="initialCassandraAdminPassword")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets initial password for clients connecting as admin to
            the cluster. Should be changed after cluster creation. Returns null
            on GET. This field only applies when the authenticationMethod field
            is 'Cassandra'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrometheusEndpoint">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.CosmosDB.Models.SeedNode PrometheusEndpoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.CosmosDB.Models.SeedNode PrometheusEndpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.PrometheusEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property PrometheusEndpoint As SeedNode" />
      <MemberSignature Language="F#" Value="member this.PrometheusEndpoint : Microsoft.Azure.Management.CosmosDB.Models.SeedNode with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.PrometheusEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="prometheusEndpoint")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="prometheusEndpoint")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.CosmosDB.Models.SeedNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets hostname or IP address where the Prometheus endpoint
            containing data about the managed Cassandra nodes can be reached.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets possible values include: 'Creating', 'Updating',
            'Deleting', 'Succeeded', 'Failed', 'Canceled'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairEnabled">
      <MemberSignature Language="C#" Value="public bool? RepairEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RepairEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.RepairEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property RepairEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RepairEnabled : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.RepairEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="repairEnabled")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="repairEnabled")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets should automatic repairs run on this cluster? If
            omitted, this is true, and should stay true unless you are running
            a hybrid cluster where you are already doing your own repairs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFromBackupId">
      <MemberSignature Language="C#" Value="public string RestoreFromBackupId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RestoreFromBackupId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.RestoreFromBackupId" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoreFromBackupId As String" />
      <MemberSignature Language="F#" Value="member this.RestoreFromBackupId : string with get, set" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.RestoreFromBackupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="restoreFromBackupId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="restoreFromBackupId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets to create an empty cluster, omit this field or set it
            to null. To restore a backup into a new cluster, set this field to
            the resource id of the backup.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedNodes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; SeedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt; SeedNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.SeedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SeedNodes As IList(Of SeedNode)" />
      <MemberSignature Language="F#" Value="member this.SeedNodes : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt;" Usage="Microsoft.Azure.Management.CosmosDB.Models.ClusterResourceProperties.SeedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.CosmosDB</AssemblyName>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="seedNodes")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="seedNodes")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.CosmosDB.Models.SeedNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets list of IP addresses of seed nodes in the managed data
            centers. These should be added to the seed node lists of all
            unmanaged nodes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
