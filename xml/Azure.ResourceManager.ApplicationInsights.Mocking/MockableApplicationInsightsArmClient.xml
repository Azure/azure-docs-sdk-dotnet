<Type Name="MockableApplicationInsightsArmClient" FullName="Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient">
  <TypeSignature Language="C#" Value="public class MockableApplicationInsightsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableApplicationInsightsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableApplicationInsightsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableApplicationInsightsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableApplicationInsightsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInsightsComponentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource GetApplicationInsightsComponentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource GetApplicationInsightsComponentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetApplicationInsightsComponentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationInsightsComponentResource (id As ResourceIdentifier) As ApplicationInsightsComponentResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationInsightsComponentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource&#xA;override this.GetApplicationInsightsComponentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource" Usage="mockableApplicationInsightsArmClient.GetApplicationInsightsComponentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsComponentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInsightsWebTestResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource GetApplicationInsightsWebTestResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource GetApplicationInsightsWebTestResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetApplicationInsightsWebTestResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationInsightsWebTestResource (id As ResourceIdentifier) As ApplicationInsightsWebTestResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationInsightsWebTestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource&#xA;override this.GetApplicationInsightsWebTestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource" Usage="mockableApplicationInsightsArmClient.GetApplicationInsightsWebTestResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWebTestResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInsightsWorkbookResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource GetApplicationInsightsWorkbookResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource GetApplicationInsightsWorkbookResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetApplicationInsightsWorkbookResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationInsightsWorkbookResource (id As ResourceIdentifier) As ApplicationInsightsWorkbookResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationInsightsWorkbookResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource&#xA;override this.GetApplicationInsightsWorkbookResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource" Usage="mockableApplicationInsightsArmClient.GetApplicationInsightsWorkbookResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInsightsWorkbookRevisionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource GetApplicationInsightsWorkbookRevisionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource GetApplicationInsightsWorkbookRevisionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetApplicationInsightsWorkbookRevisionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationInsightsWorkbookRevisionResource (id As ResourceIdentifier) As ApplicationInsightsWorkbookRevisionResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationInsightsWorkbookRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource&#xA;override this.GetApplicationInsightsWorkbookRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource" Usage="mockableApplicationInsightsArmClient.GetApplicationInsightsWorkbookRevisionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookRevisionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInsightsWorkbookTemplateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource GetApplicationInsightsWorkbookTemplateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource GetApplicationInsightsWorkbookTemplateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetApplicationInsightsWorkbookTemplateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationInsightsWorkbookTemplateResource (id As ResourceIdentifier) As ApplicationInsightsWorkbookTemplateResource" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationInsightsWorkbookTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource&#xA;override this.GetApplicationInsightsWorkbookTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource" Usage="mockableApplicationInsightsArmClient.GetApplicationInsightsWorkbookTemplateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.ApplicationInsightsWorkbookTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentLinkedStorageAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource GetComponentLinkedStorageAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource GetComponentLinkedStorageAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetComponentLinkedStorageAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComponentLinkedStorageAccountResource (id As ResourceIdentifier) As ComponentLinkedStorageAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetComponentLinkedStorageAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&#xA;override this.GetComponentLinkedStorageAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource" Usage="mockableApplicationInsightsArmClient.GetComponentLinkedStorageAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.ApplicationInsights.Models.StorageType)" /> to create a <see cref="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLiveToken">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt; GetLiveToken (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt; GetLiveToken(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetLiveToken(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLiveToken (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LiveTokenResult)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetLiveToken : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;&#xA;override this.GetLiveToken : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;" Usage="mockableApplicationInsightsArmClient.GetLiveToken (scope, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt; GetLiveToken (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt; GetLiveToken(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLiveToken (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LiveTokenResponse)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetLiveToken : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;&#xA;override this.GetLiveToken : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;" Usage="mockableApplicationInsightsArmClient.GetLiveToken (scope, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Gets an access token for live metrics stream data.**
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/generatelivetoken</description></item><item><term>Operation Id</term><description>LiveToken_Get</description></item><item><term>Default Api Version</term><description>2021-10-14</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLiveTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;&gt; GetLiveTokenAsync (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;&gt; GetLiveTokenAsync(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetLiveTokenAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLiveTokenAsync (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LiveTokenResult))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetLiveTokenAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;&gt;&#xA;override this.GetLiveTokenAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;&gt;" Usage="mockableApplicationInsightsArmClient.GetLiveTokenAsync (scope, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;&gt; GetLiveTokenAsync (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;&gt; GetLiveTokenAsync(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLiveTokenAsync (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LiveTokenResponse))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetLiveTokenAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;&gt;&#xA;override this.GetLiveTokenAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;&gt;" Usage="mockableApplicationInsightsArmClient.GetLiveTokenAsync (scope, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.Models.LiveTokenResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            **Gets an access token for live metrics stream data.**
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Insights/generatelivetoken</description></item><item><term>Operation Id</term><description>LiveToken_Get</description></item><item><term>Default Api Version</term><description>2021-10-14</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMyWorkbookResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.MyWorkbookResource GetMyWorkbookResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.MyWorkbookResource GetMyWorkbookResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetMyWorkbookResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMyWorkbookResource (id As ResourceIdentifier) As MyWorkbookResource" />
      <MemberSignature Language="F#" Value="abstract member GetMyWorkbookResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.MyWorkbookResource&#xA;override this.GetMyWorkbookResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.MyWorkbookResource" Usage="mockableApplicationInsightsArmClient.GetMyWorkbookResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.MyWorkbookResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApplicationInsights.MyWorkbookResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.MyWorkbookResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApplicationInsights.MyWorkbookResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.MyWorkbookResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebTestResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.WebTestResource GetWebTestResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.WebTestResource GetWebTestResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetWebTestResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebTestResource (id As ResourceIdentifier) As WebTestResource" />
      <MemberSignature Language="F#" Value="abstract member GetWebTestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WebTestResource&#xA;override this.GetWebTestResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WebTestResource" Usage="mockableApplicationInsightsArmClient.GetWebTestResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.WebTestResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApplicationInsights.WebTestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.WebTestResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApplicationInsights.WebTestResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.WebTestResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkbookResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.WorkbookResource GetWorkbookResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.WorkbookResource GetWorkbookResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetWorkbookResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkbookResource (id As ResourceIdentifier) As WorkbookResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkbookResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WorkbookResource&#xA;override this.GetWorkbookResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WorkbookResource" Usage="mockableApplicationInsightsArmClient.GetWorkbookResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.WorkbookResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.WorkbookResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkbookRevisionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource GetWorkbookRevisionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource GetWorkbookRevisionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetWorkbookRevisionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkbookRevisionResource (id As ResourceIdentifier) As WorkbookRevisionResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkbookRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource&#xA;override this.GetWorkbookRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource" Usage="mockableApplicationInsightsArmClient.GetWorkbookRevisionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookRevisionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkbookTemplateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource GetWorkbookTemplateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource GetWorkbookTemplateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.Mocking.MockableApplicationInsightsArmClient.GetWorkbookTemplateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkbookTemplateResource (id As ResourceIdentifier) As WorkbookTemplateResource" />
      <MemberSignature Language="F#" Value="abstract member GetWorkbookTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource&#xA;override this.GetWorkbookTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource" Usage="mockableApplicationInsightsArmClient.GetWorkbookTemplateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApplicationInsights.WorkbookTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
