<Type Name="CosmosConflicts" FullName="Azure.Cosmos.CosmosConflicts">
  <TypeSignature Language="C#" Value="public abstract class CosmosConflicts" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CosmosConflicts extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Cosmos.CosmosConflicts" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CosmosConflicts" />
  <TypeSignature Language="F#" Value="type CosmosConflicts = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Cosmos</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Operations for reading/querying conflicts in a Azure Cosmos container.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CosmosConflicts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (Azure.Cosmos.ConflictProperties conflict, Azure.Cosmos.PartitionKey partitionKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(class Azure.Cosmos.ConflictProperties conflict, valuetype Azure.Cosmos.PartitionKey partitionKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.DeleteAsync(Azure.Cosmos.ConflictProperties,Azure.Cosmos.PartitionKey,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteAsync (conflict As ConflictProperties, partitionKey As PartitionKey, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.Cosmos.ConflictProperties * Azure.Cosmos.PartitionKey * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosConflicts.DeleteAsync (conflict, partitionKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflict" Type="Azure.Cosmos.ConflictProperties" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conflict">The conflict to delete.</param>
        <param name="partitionKey">The partition key for the conflict.</param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Delete a conflict from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>A Task representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:Azure.Cosmos.ConflictProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetConflictsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract Azure.AsyncPageable&lt;T&gt; GetConflictsAsync&lt;T&gt; (Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;!!T&gt; GetConflictsAsync&lt;T&gt;(class Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.GetConflictsAsync``1(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetConflictsAsync(Of T) (queryDefinition As QueryDefinition, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetConflictsAsync : Azure.Cosmos.QueryDefinition * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T&gt;" Usage="cosmosConflicts.GetConflictsAsync (queryDefinition, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryDefinition" Type="Azure.Cosmos.QueryDefinition" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="queryDefinition">The cosmos SQL query definition.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Obtains an iterator to go through the <see cref="T:Azure.Cosmos.ConflictProperties" /> on an Azure Cosmos container.
            </summary>
        <returns>An iterator to go through the conflicts.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code language="c#"><![CDATA[
            await foreach(ConflictProperties item in conflicts.GetConflictsAsync())
            {
            }
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetConflictsAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract Azure.AsyncPageable&lt;T&gt; GetConflictsAsync&lt;T&gt; (string queryText = default, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;!!T&gt; GetConflictsAsync&lt;T&gt;(string queryText, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.GetConflictsAsync``1(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetConflictsAsync(Of T) (Optional queryText As String = Nothing, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetConflictsAsync : string * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T&gt;" Usage="cosmosConflicts.GetConflictsAsync (queryText, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryText" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="queryText">The cosmos SQL query text.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Obtains an iterator to go through the <see cref="T:Azure.Cosmos.ConflictProperties" /> on an Azure Cosmos container.
            </summary>
        <returns>An iterator to go through the conflicts.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code language="c#"><![CDATA[
            await foreach(ConflictProperties item in conflicts.GetConflictsAsync())
            {
            }
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetConflictsStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt; GetConflictsStreamAsync (Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Response&gt; GetConflictsStreamAsync(class Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.GetConflictsStreamAsync(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetConflictsStreamAsync (queryDefinition As QueryDefinition, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetConflictsStreamAsync : Azure.Cosmos.QueryDefinition * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;" Usage="cosmosConflicts.GetConflictsStreamAsync (queryDefinition, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryDefinition" Type="Azure.Cosmos.QueryDefinition" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryDefinition">The cosmos SQL query definition.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Gets an iterator to go through all the conflicts for the container as the original ResponseMessage
            </summary>
        <returns>An iterator to go through the conflicts.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code language="c#"><![CDATA[
            await foreach(Response response in conflicts.GetConflictsStreamAsync())
            {
            }
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetConflictsStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt; GetConflictsStreamAsync (string queryText = default, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Response&gt; GetConflictsStreamAsync(string queryText, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.GetConflictsStreamAsync(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetConflictsStreamAsync (Optional queryText As String = Nothing, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetConflictsStreamAsync : string * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;" Usage="cosmosConflicts.GetConflictsStreamAsync (queryText, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryText" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryText">The cosmos SQL query text.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Gets an iterator to go through all the conflicts for the container as the original ResponseMessage
            </summary>
        <returns>An iterator to go through the conflicts.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code language="c#"><![CDATA[
            await foreach (Response response in conflicts.GetConflictsStreamAsync())
            {
            }
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReadConflictContent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T ReadConflictContent&lt;T&gt; (Azure.Cosmos.ConflictProperties conflict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T ReadConflictContent&lt;T&gt;(class Azure.Cosmos.ConflictProperties conflict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.ReadConflictContent``1(Azure.Cosmos.ConflictProperties)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadConflictContent(Of T) (conflict As ConflictProperties) As T" />
      <MemberSignature Language="F#" Value="abstract member ReadConflictContent : Azure.Cosmos.ConflictProperties -&gt; 'T" Usage="cosmosConflicts.ReadConflictContent conflict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="conflict" Type="Azure.Cosmos.ConflictProperties" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="conflict">The conflict for which we want to read the content of.</param>
        <summary>
            Reads the content of the Conflict resource in the Azure Cosmos DB service.
            </summary>
        <returns>The content of the conflict.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:Azure.Cosmos.ConflictProperties" />
        <example>
          <code language="c#"><![CDATA[
            await foreach(ConflictProperties item in conflicts.GetConflictsAsync())
            {
                MyClass intendedChanges = conflicts.ReadConflictContent<MyClass>(item);
                ItemResponse<MyClass> currentState = await conflicts.ReadCurrentAsync<MyClass>(intendedChanges.MyPartitionKey, item);
            }
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReadCurrentAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt; ReadCurrentAsync&lt;T&gt; (Azure.Cosmos.ConflictProperties conflict, Azure.Cosmos.PartitionKey partitionKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ItemResponse`1&lt;!!T&gt;&gt; ReadCurrentAsync&lt;T&gt;(class Azure.Cosmos.ConflictProperties conflict, valuetype Azure.Cosmos.PartitionKey partitionKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosConflicts.ReadCurrentAsync``1(Azure.Cosmos.ConflictProperties,Azure.Cosmos.PartitionKey,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadCurrentAsync(Of T) (conflict As ConflictProperties, partitionKey As PartitionKey, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ItemResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member ReadCurrentAsync : Azure.Cosmos.ConflictProperties * Azure.Cosmos.PartitionKey * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;'T&gt;&gt;" Usage="cosmosConflicts.ReadCurrentAsync (conflict, partitionKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="conflict" Type="Azure.Cosmos.ConflictProperties" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="conflict">The conflict for which we want to read the item.</param>
        <param name="partitionKey">The partition key for the item.</param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Reads the item that originated the conflict.
            </summary>
        <returns>The current state of the item associated with the conflict.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:Azure.Cosmos.ConflictProperties" />
        <example>
          <code language="c#"><![CDATA[
            await foreach(ConflictProperties item in conflicts.GetConflictsAsync())
            {
                MyClass intendedChanges = conflicts.ReadConflictContent<MyClass>(item);
                ItemResponse<MyClass> currentState = await conflicts.ReadCurrentAsync<MyClass>(intendedChanges.MyPartitionKey, item);
            }
            ]]></code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
