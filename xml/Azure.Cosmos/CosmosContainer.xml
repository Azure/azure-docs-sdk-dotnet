<Type Name="CosmosContainer" FullName="Azure.Cosmos.CosmosContainer">
  <TypeSignature Language="C#" Value="public abstract class CosmosContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CosmosContainer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Cosmos.CosmosContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CosmosContainer" />
  <TypeSignature Language="F#" Value="type CosmosContainer = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Cosmos</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Operations for reading, replacing, or deleting a specific, existing container or item in a container by id.
            There are two different types of operations.
            1. The object operations where it serializes and deserializes the item on request/response
            2. The stream response which takes a Stream containing a JSON serialized object and returns a response containing a Stream
            <see cref="T:Azure.Cosmos.CosmosDatabase" /> for creating new containers, and reading/querying all containers;
            </summary>
    <remarks>
             Note: all these operations make calls against a fixed budget.
             You should design your system such that these calls scale sub linearly with your application.
             For instance, do not call `container.readAsync()` before every single `item.read()` call, to ensure the cosmosContainer exists;
             do this once on application start up.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CosmosContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conflicts">
      <MemberSignature Language="C#" Value="public abstract Azure.Cosmos.CosmosConflicts Conflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Cosmos.CosmosConflicts Conflicts" />
      <MemberSignature Language="DocId" Value="P:Azure.Cosmos.CosmosContainer.Conflicts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Conflicts As CosmosConflicts" />
      <MemberSignature Language="F#" Value="member this.Conflicts : Azure.Cosmos.CosmosConflicts" Usage="Azure.Cosmos.CosmosContainer.Conflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Cosmos.CosmosConflicts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the conflicts
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt; CreateItemAsync&lt;T&gt; (T item, Azure.Cosmos.PartitionKey? partitionKey = default, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ItemResponse`1&lt;!!T&gt;&gt; CreateItemAsync&lt;T&gt;(!!T item, valuetype System.Nullable`1&lt;valuetype Azure.Cosmos.PartitionKey&gt; partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.CreateItemAsync``1(``0,System.Nullable{Azure.Cosmos.PartitionKey},Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateItemAsync(Of T) (item As T, Optional partitionKey As Nullable(Of PartitionKey) = Nothing, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ItemResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member CreateItemAsync : 'T * Nullable&lt;Azure.Cosmos.PartitionKey&gt; * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;'T&gt;&gt;" Usage="cosmosContainer.CreateItemAsync (item, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="partitionKey" Type="System.Nullable&lt;Azure.Cosmos.PartitionKey&gt;" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="item">A JSON serializable object that must contain an id property. <see cref="T:Azure.Cosmos.Serialization.CosmosSerializer" /> to implement a custom serializer</param>
        <param name="partitionKey">Partition key for the item. If not specified will be populated by extracting from {T}</param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             Creates a item as an asynchronous operation in the Azure Cosmos service.
             </summary>
        <returns>The <see cref="T:Azure.Response`1" /> that was created contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.AggregateException">Represents a consolidation of failures that occurred during async processing. Look within InnerExceptions to find the actual exception(s)</exception>
        <exception cref="T:Azure.Cosmos.CosmosException">This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property. Some common codes you may get when creating a Document are:
             <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>400</term><description>BadRequest - This means something was wrong with the document supplied. </description></item><item><term>403</term><description>Forbidden - This likely means the collection in to which you were trying to create the document is full.</description></item><item><term>409</term><description>Conflict - This means a item with an id matching the id field of <paramref name="item" /> already existed</description></item><item><term>413</term><description>RequestEntityTooLarge - This means the item exceeds the current max entity size. Consult documentation for limits and quotas.</description></item><item><term>429</term><description>TooManyRequests - This means you have exceeded the number of request units per second.</description></item></list></exception>
        <example>
          <code language="c#"><![CDATA[
             public class ToDoActivity{
                 public string id {get; set;}
                 public string status {get; set;}
             }
             
             ToDoActivity test = new ToDoActivity()
             {
                id = Guid.NewGuid().ToString(),
                status = "InProgress"
             };
            
             ItemResponse item = await this.container.CreateItemAsync<ToDoActivity>(tests, new PartitionKey(test.status));
             ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CreateItemStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateItemStreamAsync (System.IO.Stream streamPayload, Azure.Cosmos.PartitionKey partitionKey, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateItemStreamAsync(class System.IO.Stream streamPayload, valuetype Azure.Cosmos.PartitionKey partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.CreateItemStreamAsync(System.IO.Stream,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateItemStreamAsync (streamPayload As Stream, partitionKey As PartitionKey, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateItemStreamAsync : System.IO.Stream * Azure.Cosmos.PartitionKey * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.CreateItemStreamAsync (streamPayload, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamPayload" Type="System.IO.Stream" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="streamPayload">A <see cref="T:System.IO.Stream" /> containing the payload.</param>
        <param name="partitionKey">The partition key for the item. <see cref="T:Azure.Cosmos.PartitionKey" /></param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Creates a Item as an asynchronous operation in the Azure Cosmos service.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> that was created contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <example>
            This example creates an item in a Cosmos container.
            <code language="c#"><![CDATA[
            //Create the object in Cosmos
            using (Response response = await this.Container.CreateItemStreamAsync(partitionKey: new PartitionKey("streamPartitionKey"), streamPayload: stream))
            {
                
                using (Stream responseStream = await response.ContentStream)
                {
                    //Read or do other operations with the stream
                    using (StreamReader streamReader = new StreamReader(responseStream))
                    {
                        string responseContentAsString = await streamReader.ReadToEndAsync();
                    }
                }
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="DeleteContainerAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt; DeleteContainerAsync (Azure.Cosmos.ContainerRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ContainerResponse&gt; DeleteContainerAsync(class Azure.Cosmos.ContainerRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.DeleteContainerAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteContainerAsync (Optional requestOptions As ContainerRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ContainerResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteContainerAsync : Azure.Cosmos.ContainerRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt;" Usage="cosmosContainer.DeleteContainerAsync (requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ContainerRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestOptions">(Optional) The options for the container request <see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Delete a <see cref="T:Azure.Cosmos.ContainerProperties" /> from the Azure Cosmos DB service as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.Cosmos.CosmosException">This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property. Some common codes you may get when creating a Document are:
            <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>404</term><description>NotFound - This means the resource you tried to delete did not exist.</description></item></list></exception>
        <example>
          <code language="c#"><![CDATA[
            Container container = this.database.GetContainer("containerId");
            ContainerResponse response = await container.DeleteContainerAsync();
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteContainerStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteContainerStreamAsync (Azure.Cosmos.ContainerRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteContainerStreamAsync(class Azure.Cosmos.ContainerRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.DeleteContainerStreamAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteContainerStreamAsync (Optional requestOptions As ContainerRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteContainerStreamAsync : Azure.Cosmos.ContainerRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.DeleteContainerStreamAsync (requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ContainerRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestOptions">(Optional) The options for the container request <see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Delete a <see cref="T:Azure.Cosmos.ContainerProperties" /> from the Azure Cosmos DB service as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code language="c#"><![CDATA[
            Container container = this.database.GetContainer("containerId");
            Response response = await container.DeleteContainerStreamAsync();
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteItemAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt; DeleteItemAsync&lt;T&gt; (string id, Azure.Cosmos.PartitionKey partitionKey, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ItemResponse`1&lt;!!T&gt;&gt; DeleteItemAsync&lt;T&gt;(string id, valuetype Azure.Cosmos.PartitionKey partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.DeleteItemAsync``1(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteItemAsync(Of T) (id As String, partitionKey As PartitionKey, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ItemResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member DeleteItemAsync : string * Azure.Cosmos.PartitionKey * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;'T&gt;&gt;" Usage="cosmosContainer.DeleteItemAsync (id, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">The cosmos item id</param>
        <param name="partitionKey">The partition key for the item. <see cref="T:Azure.Cosmos.PartitionKey" /></param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Delete a item from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response`1" /> which will contain information about the request issued.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.Cosmos.CosmosException">
            This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property. Some common codes you may get when creating a Document are:
            <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>429</term><description>TooManyRequests - This means you have exceeded the number of request units per second.</description></item></list></exception>
        <example>
          <code language="c#"><![CDATA[
            public class ToDoActivity{
                public string id {get; set;}
                public string status {get; set;}
            }
            
            ItemResponse item = await this.container.DeleteItemAsync<ToDoActivity>("partitionKey", "id");
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteItemStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteItemStreamAsync (string id, Azure.Cosmos.PartitionKey partitionKey, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteItemStreamAsync(string id, valuetype Azure.Cosmos.PartitionKey partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.DeleteItemStreamAsync(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteItemStreamAsync (id As String, partitionKey As PartitionKey, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteItemStreamAsync : string * Azure.Cosmos.PartitionKey * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.DeleteItemStreamAsync (id, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">The cosmos item id</param>
        <param name="partitionKey">The partition key for the item. <see cref="T:Azure.Cosmos.PartitionKey" /></param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Delete a item from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which wraps a <see cref="T:System.IO.Stream" /> containing the delete resource record.
            </returns>
        <remarks>To be added.</remarks>
        <example>
            Delete an item from Cosmos
            <code language="c#"><![CDATA[
            using(Response response = await this.container.DeleteItemStreamAsync("itemId", new PartitionKey("itemPartitionKey")))
            {
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetItemQueryIterator&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract Azure.AsyncPageable&lt;T&gt; GetItemQueryIterator&lt;T&gt; (Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;!!T&gt; GetItemQueryIterator&lt;T&gt;(class Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.GetItemQueryIterator``1(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemQueryIterator(Of T) (queryDefinition As QueryDefinition, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetItemQueryIterator : Azure.Cosmos.QueryDefinition * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T&gt;" Usage="cosmosContainer.GetItemQueryIterator (queryDefinition, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryDefinition" Type="Azure.Cosmos.QueryDefinition" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="queryDefinition">The cosmos SQL query definition.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             This method creates a query for items under a container in an Azure Cosmos database using a SQL statement with parameterized values. It returns a FeedIterator.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Azure.Cosmos.QueryDefinition" />.
            </summary>
        <returns>An iterator to go through the items.</returns>
        <remarks>To be added.</remarks>
        <example>
            Create a query to get all the ToDoActivity that have a cost greater than 9000
            <code language="c#"><![CDATA[
            public class ToDoActivity{
                public string id {get; set;}
                public string status {get; set;}
                public int cost {get; set;}
            }
            
            QueryDefinition queryDefinition = new QueryDefinition("select * from ToDos t where t.cost > @expensive")
                .WithParameter("@expensive", 9000);
            await foreach(ToDoActivity item in this.Container.GetItemQueryIterator<ToDoActivity>(
                queryDefinition,
                null,
                new QueryRequestOptions() { PartitionKey = new PartitionKey("Error")}))
            {
                    Console.WriteLine(item.cost);
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetItemQueryIterator&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract Azure.AsyncPageable&lt;T&gt; GetItemQueryIterator&lt;T&gt; (string queryText = default, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;!!T&gt; GetItemQueryIterator&lt;T&gt;(string queryText, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.GetItemQueryIterator``1(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemQueryIterator(Of T) (Optional queryText As String = Nothing, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetItemQueryIterator : string * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T&gt;" Usage="cosmosContainer.GetItemQueryIterator (queryText, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryText" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="queryText">The cosmos SQL query text.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
              This method creates a query for items under a container in an Azure Cosmos database using a SQL statement with parameterized values. It returns a FeedIterator.
              For more information on preparing SQL statements with parameterized values, please see <see cref="T:Azure.Cosmos.QueryDefinition" />.
             </summary>
        <returns>An iterator to go through the items.</returns>
        <remarks>To be added.</remarks>
        <example>
             1. Create a query to get all the ToDoActivity that have a cost greater than 9000
             <code language="c#"><![CDATA[
             public class ToDoActivity{
                 public string id {get; set;}
                 public string status {get; set;}
                 public int cost {get; set;}
             }
             
             await foreach(ToDoActivity item in this.Container.GetItemQueryIterator<ToDoActivity>(
                 "select * from ToDos t where t.cost > 9000",
                 null,
                 new QueryRequestOptions() { PartitionKey = new PartitionKey("Error")}))
             {
                     Console.WriteLine(item.cost);
             }
             ]]></code></example>
        <example>
             2. Create a FeedIterator to get all the ToDoActivity.
             <code language="c#"><![CDATA[
             public class ToDoActivity{
                 public string id {get; set;}
                 public string status {get; set;}
                 public int cost {get; set;}
             }
            
             await foreach(ToDoActivity item in this.Container.GetItemQueryIterator<ToDoActivity>(
                 null,
                 null,
                 new QueryRequestOptions() { PartitionKey = new PartitionKey("Error")}))
             {
                     Console.WriteLine(item.cost);
             }
             ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetItemQueryStreamIterator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt; GetItemQueryStreamIterator (Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Response&gt; GetItemQueryStreamIterator(class Azure.Cosmos.QueryDefinition queryDefinition, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.GetItemQueryStreamIterator(Azure.Cosmos.QueryDefinition,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemQueryStreamIterator (queryDefinition As QueryDefinition, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetItemQueryStreamIterator : Azure.Cosmos.QueryDefinition * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;" Usage="cosmosContainer.GetItemQueryStreamIterator (queryDefinition, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryDefinition" Type="Azure.Cosmos.QueryDefinition" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryDefinition">The cosmos SQL query definition.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             This method creates a query for items under a container in an Azure Cosmos database using a SQL statement with parameterized values. It returns a FeedIterator.
             For more information on preparing SQL statements with parameterized values, please see <see cref="T:Azure.Cosmos.QueryDefinition" />.
            </summary>
        <returns>An iterator to go through the items.</returns>
        <remarks>
            Query as a stream only supports single partition queries 
            </remarks>
        <example>
            Create a query to get all the ToDoActivity that have a cost greater than 9000 for the specified partition
            <code language="c#"><![CDATA[
            public class ToDoActivity{
                public string id {get; set;}
                public string status {get; set;}
                public int cost {get; set;}
            }
            
            QueryDefinition queryDefinition = new QueryDefinition("select * from ToDos t where t.cost > @expensive")
                .WithParameter("@expensive", 9000);
            await foreach(Response response in this.Container.GetItemQueryStreamIterator(
                                                            queryDefinition,
                                                            null,
                                                            new QueryRequestOptions() { PartitionKey = new PartitionKey("Error")}))
                {
                    using (StreamReader sr = new StreamReader(response.Content))
                    using (JsonTextReader jtr = new JsonTextReader(sr))
                    {
                        JObject result = JObject.Load(jtr);
                    }
                }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetItemQueryStreamIterator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt; GetItemQueryStreamIterator (string queryText = default, string continuationToken = default, Azure.Cosmos.QueryRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.Response&gt; GetItemQueryStreamIterator(string queryText, string continuationToken, class Azure.Cosmos.QueryRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.GetItemQueryStreamIterator(System.String,System.String,Azure.Cosmos.QueryRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemQueryStreamIterator (Optional queryText As String = Nothing, Optional continuationToken As String = Nothing, Optional requestOptions As QueryRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetItemQueryStreamIterator : string * string * Azure.Cosmos.QueryRequestOptions * System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;" Usage="cosmosContainer.GetItemQueryStreamIterator (queryText, continuationToken, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryText" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.QueryRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queryText">The cosmos SQL query text.</param>
        <param name="continuationToken">(Optional) The continuation token in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) The options for the item query request <see cref="T:Azure.Cosmos.QueryRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
              This method creates a query for items under a container in an Azure Cosmos database using a SQL statement with parameterized values. It returns a FeedIterator.
              For more information on preparing SQL statements with parameterized values, please see <see cref="T:Azure.Cosmos.QueryDefinition" />.
             </summary>
        <returns>An iterator to go through the items.</returns>
        <remarks>
             Query as a stream only supports single partition queries 
             </remarks>
        <example>
             1. Create a query to get all the ToDoActivity that have a cost greater than 9000 for the specified partition
             <code language="c#"><![CDATA[
             public class ToDoActivity{
                 public string id {get; set;}
                 public string status {get; set;}
                 public int cost {get; set;}
             }
             
             await foreach(Response response in this.Container.GetItemQueryStreamIterator(
                 "select * from ToDos t where t.cost > 9000",
                 null,
                 new QueryRequestOptions() { PartitionKey = new PartitionKey("Error")}))
             {
                     using (StreamReader sr = new StreamReader(response.Content))
                     using (JsonTextReader jtr = new JsonTextReader(sr))
                     {
                         JObject result = JObject.Load(jtr);
                     }
             }
            
             ]]></code></example>
        <example>
             2. Creates a FeedIterator to get all the ToDoActivity.
             <code language="c#"><![CDATA[
             public class ToDoActivity{
                 public string id {get; set;}
                 public string status {get; set;}
                 public int cost {get; set;}
             }
            
             await foreach(Response response in this.Container.GetItemQueryStreamIterator(
                 null,
                 null,
                 new QueryRequestOptions() { PartitionKey = new PartitionKey("Error")}))
             {
                     using (StreamReader sr = new StreamReader(response.Content))
                     using (JsonTextReader jtr = new JsonTextReader(sr))
                     {
                         JObject result = JObject.Load(jtr);
                     }
             }
             ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.Cosmos.CosmosContainer.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.Cosmos.CosmosContainer.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Id of the Cosmos container
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContainerAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt; ReadContainerAsync (Azure.Cosmos.ContainerRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ContainerResponse&gt; ReadContainerAsync(class Azure.Cosmos.ContainerRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReadContainerAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadContainerAsync (Optional requestOptions As ContainerRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ContainerResponse)" />
      <MemberSignature Language="F#" Value="abstract member ReadContainerAsync : Azure.Cosmos.ContainerRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt;" Usage="cosmosContainer.ReadContainerAsync (requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ContainerRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestOptions">(Optional) The options for the container request <see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Reads a <see cref="T:Azure.Cosmos.ContainerProperties" /> from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which wraps a <see cref="T:Azure.Cosmos.ContainerProperties" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.Cosmos.CosmosException">This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property. Some common codes you may get when creating a Document are:
            <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>404</term><description>NotFound - This means the resource you tried to read did not exist.</description></item><item><term>429</term><description>TooManyRequests - This means you have exceeded the number of request units per second. Consult the DocumentClientException.RetryAfter value to see how long you should wait before retrying this operation.</description></item></list></exception>
        <example>
          <code language="c#"><![CDATA[
            Container container = this.database.GetContainer("containerId");
            ContainerProperties containerProperties = await container.ReadContainerAsync();
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReadContainerStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadContainerStreamAsync (Azure.Cosmos.ContainerRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReadContainerStreamAsync(class Azure.Cosmos.ContainerRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReadContainerStreamAsync(Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadContainerStreamAsync (Optional requestOptions As ContainerRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ReadContainerStreamAsync : Azure.Cosmos.ContainerRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.ReadContainerStreamAsync (requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ContainerRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestOptions">(Optional) The options for the container request <see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Reads a <see cref="T:Azure.Cosmos.ContainerProperties" /> from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
        <example>
          <code language="c#"><![CDATA[
            Container container = this.database.GetContainer("containerId");
            Response response = await container.ReadContainerStreamAsync();
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReadItemAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt; ReadItemAsync&lt;T&gt; (string id, Azure.Cosmos.PartitionKey partitionKey, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ItemResponse`1&lt;!!T&gt;&gt; ReadItemAsync&lt;T&gt;(string id, valuetype Azure.Cosmos.PartitionKey partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReadItemAsync``1(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadItemAsync(Of T) (id As String, partitionKey As PartitionKey, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ItemResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member ReadItemAsync : string * Azure.Cosmos.PartitionKey * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;'T&gt;&gt;" Usage="cosmosContainer.ReadItemAsync (id, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">The cosmos item id</param>
        <param name="partitionKey">The partition key for the item. <see cref="T:Azure.Cosmos.PartitionKey" /></param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Reads a item from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response`1" /> which wraps the read resource record.
            </returns>
        <remarks>
            Items contain meta data that can be obtained by mapping these meta data attributes to properties in <typeparamref name="T" />.
            * "_ts": Gets the last modified time stamp associated with the item from the Azure Cosmos DB service.
            * "_etag": Gets the entity tag associated with the item from the Azure Cosmos DB service.
            * "ttl": Gets the time to live in seconds of the item in the Azure Cosmos DB service.
            </remarks>
        <exception cref="T:Azure.Cosmos.CosmosException">This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property. Some common codes you may get when creating a Document are:
            <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>429</term><description>TooManyRequests - This means you have exceeded the number of request units per second.</description></item></list></exception>
        <example>
          <code language="c#"><![CDATA[
            public class ToDoActivity{
                public string id {get; set;}
                public string status {get; set;}
            }
            
            ToDoActivity toDoActivity = await this.container.ReadItemAsync<ToDoActivity>("id", new PartitionKey("partitionKey"));
            
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReadItemStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadItemStreamAsync (string id, Azure.Cosmos.PartitionKey partitionKey, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReadItemStreamAsync(string id, valuetype Azure.Cosmos.PartitionKey partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReadItemStreamAsync(System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadItemStreamAsync (id As String, partitionKey As PartitionKey, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ReadItemStreamAsync : string * Azure.Cosmos.PartitionKey * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.ReadItemStreamAsync (id, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">The cosmos item id</param>
        <param name="partitionKey">The partition key for the item. <see cref="T:Azure.Cosmos.PartitionKey" /></param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Reads a item from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which wraps a <see cref="T:System.IO.Stream" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
        <example>
            Read a response as a stream.
            <code language="c#"><![CDATA[
            using(Response response = await this.container.ReadItemStreamAsync("id", new PartitionKey("partitionKey")))
            {
                using(Stream stream = response.ContentStream)
                {
                    //Read or do other operations with the stream
                    using (StreamReader streamReader = new StreamReader(stream))
                    {
                        string content =  streamReader.ReadToEndAsync();
                    }
                }
            }
            
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="ReadThroughputAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Nullable&lt;int&gt;&gt; ReadThroughputAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; ReadThroughputAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReadThroughputAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadThroughputAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member ReadThroughputAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Nullable&lt;int&gt;&gt;" Usage="cosmosContainer.ReadThroughputAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Nullable&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Gets container throughput in measurement of request units per second in the Azure Cosmos service.
            </summary>
        <returns>Provisioned throughput in request units per second</returns>
        <returns>
            The provisioned throughput for this container.
            </returns>
        <remarks>
          <para>
            Null value indicates a container with no throughput provisioned.
            </para>
        </remarks>
        <example>
            The following example shows how to get the throughput.
            <code language="c#"><![CDATA[
            int? throughput = await container.ReadThroughputAsync();
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="ReadThroughputAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ThroughputResponse&gt; ReadThroughputAsync (Azure.Cosmos.RequestOptions requestOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ThroughputResponse&gt; ReadThroughputAsync(class Azure.Cosmos.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReadThroughputAsync(Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadThroughputAsync (requestOptions As RequestOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ThroughputResponse)" />
      <MemberSignature Language="F#" Value="abstract member ReadThroughputAsync : Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ThroughputResponse&gt;" Usage="cosmosContainer.ReadThroughputAsync (requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ThroughputResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.Cosmos.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestOptions">The options for the throughput request.<see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Gets container throughput in measurement of request units per second in the Azure Cosmos service.
            </summary>
        <returns>The throughput response</returns>
        <returns>
            The provisioned throughput for this container.
            </returns>
        <remarks>
          <para>
            Refer to http://azure.microsoft.com/documentation/articles/documentdb-performance-levels/ for details on provision offer throughput.
            </para>
        </remarks>
        <example>
            The following example shows how to get the throughput
            <code language="c#"><![CDATA[
            RequestOptions requestOptions = new RequestOptions();
            ThroughputProperties throughputProperties = await container.ReadThroughputAsync(requestOptions);
            Console.WriteLine($"Throughput: {throughputProperties?.Throughput}");
            ]]></code></example>
        <example>
            The following example shows how to get throughput, MinThroughput and is replace in progress
            <code language="c#"><![CDATA[
            RequestOptions requestOptions = new RequestOptions();
            ThroughputResponse response = await container.ReadThroughputAsync(requestOptions);
            Console.WriteLine($"Throughput: {response.Resource?.Throughput}");
            Console.WriteLine($"MinThroughput: {response.MinThroughput}");
            Console.WriteLine($"IsReplacePending: {response.IsReplacePending}");
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="ReplaceContainerAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt; ReplaceContainerAsync (Azure.Cosmos.ContainerProperties containerProperties, Azure.Cosmos.ContainerRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ContainerResponse&gt; ReplaceContainerAsync(class Azure.Cosmos.ContainerProperties containerProperties, class Azure.Cosmos.ContainerRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReplaceContainerAsync(Azure.Cosmos.ContainerProperties,Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReplaceContainerAsync (containerProperties As ContainerProperties, Optional requestOptions As ContainerRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ContainerResponse)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceContainerAsync : Azure.Cosmos.ContainerProperties * Azure.Cosmos.ContainerRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt;" Usage="cosmosContainer.ReplaceContainerAsync (containerProperties, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ContainerResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerProperties" Type="Azure.Cosmos.ContainerProperties" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ContainerRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="containerProperties">The <see cref="T:Azure.Cosmos.ContainerProperties" /> object.</param>
        <param name="requestOptions">(Optional) The options for the container request <see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Replace a <see cref="T:Azure.Cosmos.ContainerProperties" /> from the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which wraps a <see cref="T:Azure.Cosmos.ContainerProperties" /> containing the replace resource record.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.Cosmos.CosmosException">This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property. Some common codes you may get when creating a Document are:
            <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>404</term><description>NotFound - This means the resource you tried to read did not exist.</description></item><item><term>429</term><description>TooManyRequests - This means you have exceeded the number of request units per second. Consult the DocumentClientException.RetryAfter value to see how long you should wait before retrying this operation.</description></item></list></exception>
        <example>
            Update the container to disable automatic indexing
            <code language="c#"><![CDATA[
            ContainerProperties containerProperties = containerReadResponse;
            containerProperties.IndexingPolicy.Automatic = false;
            ContainerResponse response = await container.ReplaceContainerAsync(containerProperties);
            ContainerProperties replacedProperties = response;
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="ReplaceContainerStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; ReplaceContainerStreamAsync (Azure.Cosmos.ContainerProperties containerProperties, Azure.Cosmos.ContainerRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReplaceContainerStreamAsync(class Azure.Cosmos.ContainerProperties containerProperties, class Azure.Cosmos.ContainerRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReplaceContainerStreamAsync(Azure.Cosmos.ContainerProperties,Azure.Cosmos.ContainerRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReplaceContainerStreamAsync (containerProperties As ContainerProperties, Optional requestOptions As ContainerRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceContainerStreamAsync : Azure.Cosmos.ContainerProperties * Azure.Cosmos.ContainerRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.ReplaceContainerStreamAsync (containerProperties, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerProperties" Type="Azure.Cosmos.ContainerProperties" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ContainerRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="containerProperties">The <see cref="T:Azure.Cosmos.ContainerProperties" />.</param>
        <param name="requestOptions">(Optional) The options for the container request <see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             Replace a <see cref="T:Azure.Cosmos.ContainerProperties" /> from the Azure Cosmos service as an asynchronous operation.
             </summary>
        <returns>
             A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> containing the replace resource record.
             </returns>
        <remarks>To be added.</remarks>
        <example>
          <code language="c#"><![CDATA[
             ContainerProperties containerProperties = containerReadResponse;
             containerProperties.IndexingPolicy.Automatic = false;
             Response response = await container.ReplaceContainerStreamAsync(containerProperties);
             ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReplaceItemAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt; ReplaceItemAsync&lt;T&gt; (T item, string id, Azure.Cosmos.PartitionKey? partitionKey = default, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ItemResponse`1&lt;!!T&gt;&gt; ReplaceItemAsync&lt;T&gt;(!!T item, string id, valuetype System.Nullable`1&lt;valuetype Azure.Cosmos.PartitionKey&gt; partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReplaceItemAsync``1(``0,System.String,System.Nullable{Azure.Cosmos.PartitionKey},Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReplaceItemAsync(Of T) (item As T, id As String, Optional partitionKey As Nullable(Of PartitionKey) = Nothing, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ItemResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member ReplaceItemAsync : 'T * string * Nullable&lt;Azure.Cosmos.PartitionKey&gt; * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;'T&gt;&gt;" Usage="cosmosContainer.ReplaceItemAsync (item, id, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="partitionKey" Type="System.Nullable&lt;Azure.Cosmos.PartitionKey&gt;" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="item">A JSON serializable object that must contain an id property. <see cref="T:Azure.Cosmos.Serialization.CosmosSerializer" /> to implement a custom serializer.</param>
        <param name="id">The cosmos item id, which is expected to match the value within T.</param>
        <param name="partitionKey">Partition key for the item. If not specified will be populated by extracting from {T}</param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             Replaces a item in the Azure Cosmos service as an asynchronous operation.
             </summary>
        <returns>
             A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response`1" /> which wraps the updated resource record.
             </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If either <paramref name="item" /> is not set.</exception>
        <exception cref="T:Azure.Cosmos.CosmosException">
             This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property.
             <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>400</term><description>BadRequest - This means something was wrong with the document supplied. </description></item><item><term>403</term><description>Forbidden - This likely means the collection in to which you were trying to create the document is full.</description></item><item><term>413</term><description>RequestEntityTooLarge - This means the item exceeds the current max entity size. Consult documentation for limits and quotas.</description></item><item><term>429</term><description>TooManyRequests - This means you have exceeded the number of request units per second.</description></item></list></exception>
        <example>
          <code language="c#"><![CDATA[
             public class ToDoActivity{
                 public string id {get; set;}
                 public string status {get; set;}
             }
             
             ToDoActivity test = new ToDoActivity()
             {
                id = Guid.NewGuid().ToString(),
                status = "InProgress"
             };
            
             ItemResponse<ToDoActivity> item = await this.container.ReplaceItemAsync<ToDoActivity>(test, test.id, new PartitionKey(test.status));
             ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReplaceItemStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; ReplaceItemStreamAsync (System.IO.Stream streamPayload, string id, Azure.Cosmos.PartitionKey partitionKey, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReplaceItemStreamAsync(class System.IO.Stream streamPayload, string id, valuetype Azure.Cosmos.PartitionKey partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReplaceItemStreamAsync(System.IO.Stream,System.String,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReplaceItemStreamAsync (streamPayload As Stream, id As String, partitionKey As PartitionKey, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceItemStreamAsync : System.IO.Stream * string * Azure.Cosmos.PartitionKey * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.ReplaceItemStreamAsync (streamPayload, id, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamPayload" Type="System.IO.Stream" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="streamPayload">A <see cref="T:System.IO.Stream" /> containing the payload.</param>
        <param name="id">The cosmos item id</param>
        <param name="partitionKey">The partition key for the item. <see cref="T:Azure.Cosmos.PartitionKey" /></param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Replaces a item in the Azure Cosmos service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which wraps a <see cref="T:System.IO.Stream" /> containing the replace resource record.
            </returns>
        <remarks>To be added.</remarks>
        <example>
            Replace an item in Cosmos
            <code language="c#"><![CDATA[
            using(Response response = await this.container.ReplaceItemStreamAsync(stream, "itemId", new PartitionKey("itemPartitionKey"))
            {
                
                using(Stream stream = response.ContentStream)
                {
                    //Read or do other operations with the stream
                    using (StreamReader streamReader = new StreamReader(stream))
                    {
                        string content =  streamReader.ReadToEndAsync();
                    }
                }
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="ReplaceThroughputAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ThroughputResponse&gt; ReplaceThroughputAsync (int throughput, Azure.Cosmos.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ThroughputResponse&gt; ReplaceThroughputAsync(int32 throughput, class Azure.Cosmos.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.ReplaceThroughputAsync(System.Int32,Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReplaceThroughputAsync (throughput As Integer, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ThroughputResponse)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceThroughputAsync : int * Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ThroughputResponse&gt;" Usage="cosmosContainer.ReplaceThroughputAsync (throughput, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ThroughputResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throughput" Type="System.Int32" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="throughput">The cosmos container throughput, expressed in Request Units per second.</param>
        <param name="requestOptions">(Optional) The options for the throughput request.<see cref="T:Azure.Cosmos.RequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Sets throughput provisioned for a container in measurement of request units per second in the Azure Cosmos service.
            </summary>
        <returns>The throughput response.</returns>
        <returns>
            The provisioned throughput for this container.
            </returns>
        <remarks>
          <seealso href="https://docs.microsoft.com/azure/cosmos-db/request-units" /> for details on provision throughput.
            </remarks>
        <example>
            The following example shows how to get the throughput.
            <code language="c#"><![CDATA[
            ThroughputResponse throughput = await this.cosmosContainer.ReplaceThroughputAsync(400);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public abstract Azure.Cosmos.Scripts.CosmosScripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Cosmos.Scripts.CosmosScripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Azure.Cosmos.CosmosContainer.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Scripts As CosmosScripts" />
      <MemberSignature Language="F#" Value="member this.Scripts : Azure.Cosmos.Scripts.CosmosScripts" Usage="Azure.Cosmos.CosmosContainer.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Cosmos.Scripts.CosmosScripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the scripts
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertItemAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt; UpsertItemAsync&lt;T&gt; (T item, Azure.Cosmos.PartitionKey? partitionKey = default, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Cosmos.ItemResponse`1&lt;!!T&gt;&gt; UpsertItemAsync&lt;T&gt;(!!T item, valuetype System.Nullable`1&lt;valuetype Azure.Cosmos.PartitionKey&gt; partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.UpsertItemAsync``1(``0,System.Nullable{Azure.Cosmos.PartitionKey},Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function UpsertItemAsync(Of T) (item As T, Optional partitionKey As Nullable(Of PartitionKey) = Nothing, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ItemResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member UpsertItemAsync : 'T * Nullable&lt;Azure.Cosmos.PartitionKey&gt; * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;'T&gt;&gt;" Usage="cosmosContainer.UpsertItemAsync (item, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Cosmos.ItemResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="partitionKey" Type="System.Nullable&lt;Azure.Cosmos.PartitionKey&gt;" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="item">A JSON serializable object that must contain an id property. <see cref="T:Azure.Cosmos.Serialization.CosmosSerializer" /> to implement a custom serializer</param>
        <param name="partitionKey">Partition key for the item. If not specified will be populated by extracting from {T}</param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             Upserts an item as an asynchronous operation in the Azure Cosmos service.
             </summary>
        <returns>The <see cref="T:Azure.Response`1" /> that was upserted contained within a <see cref="T:System.Threading.Tasks.Task" /> object representing the service response for the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.AggregateException">Represents a consolidation of failures that occurred during async processing. Look within InnerExceptions to find the actual exception(s)</exception>
        <exception cref="T:Azure.Cosmos.CosmosException">This exception can encapsulate many different types of errors. To determine the specific error always look at the StatusCode property. Some common codes you may get when creating a Document are:
             <list type="table"><listheader><term>StatusCode</term><description>Reason for exception</description></listheader><item><term>400</term><description>BadRequest - This means something was wrong with the document supplied.</description></item><item><term>403</term><description>Forbidden - This likely means the collection in to which you were trying to upsert the document is full.</description></item><item><term>413</term><description>RequestEntityTooLarge - This means the item exceeds the current max entity size. Consult documentation for limits and quotas.</description></item><item><term>429</term><description>TooManyRequests - This means you have exceeded the number of request units per second. Consult the DocumentClientException.RetryAfter value to see how long you should wait before retrying this operation.</description></item></list></exception>
        <example>
          <code language="c#"><![CDATA[
             public class ToDoActivity{
                 public string id {get; set;}
                 public string status {get; set;}
             }
             
             ToDoActivity test = new ToDoActivity()
             {
                id = Guid.NewGuid().ToString(),
                status = "InProgress"
             };
            
             ItemResponse<ToDoActivity> item = await this.container.UpsertItemAsync<ToDoActivity>(test, new PartitionKey(test.status));
             ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="UpsertItemStreamAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Azure.Response&gt; UpsertItemStreamAsync (System.IO.Stream streamPayload, Azure.Cosmos.PartitionKey partitionKey, Azure.Cosmos.ItemRequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpsertItemStreamAsync(class System.IO.Stream streamPayload, valuetype Azure.Cosmos.PartitionKey partitionKey, class Azure.Cosmos.ItemRequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Cosmos.CosmosContainer.UpsertItemStreamAsync(System.IO.Stream,Azure.Cosmos.PartitionKey,Azure.Cosmos.ItemRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function UpsertItemStreamAsync (streamPayload As Stream, partitionKey As PartitionKey, Optional requestOptions As ItemRequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpsertItemStreamAsync : System.IO.Stream * Azure.Cosmos.PartitionKey * Azure.Cosmos.ItemRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="cosmosContainer.UpsertItemStreamAsync (streamPayload, partitionKey, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Cosmos</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamPayload" Type="System.IO.Stream" />
        <Parameter Name="partitionKey" Type="Azure.Cosmos.PartitionKey" />
        <Parameter Name="requestOptions" Type="Azure.Cosmos.ItemRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="streamPayload">A <see cref="T:System.IO.Stream" /> containing the payload.</param>
        <param name="partitionKey">The partition key for the item. <see cref="T:Azure.Cosmos.PartitionKey" /></param>
        <param name="requestOptions">(Optional) The options for the item request <see cref="T:Azure.Cosmos.ItemRequestOptions" /></param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
            Upserts an item stream as an asynchronous operation in the Azure Cosmos service.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Azure.Response" /> which wraps a <see cref="T:System.IO.Stream" /> containing the read resource record.
            </returns>
        <remarks>To be added.</remarks>
        <example>
            Upsert a Stream containing the item to Cosmos
            <code language="c#"><![CDATA[
            using(Response response = await this.container.UpsertItemStreamAsync(stream, new PartitionKey("itemPartitionKey")))
            {
                
                using(Stream stream = response.ContentStream)
                {
                    //Read or do other operations with the stream
                    using (StreamReader  streamReader = new StreamReader(stream))
                    {
                        string content =  streamReader.ReadToEndAsync();
                    }
                }
            }
            ]]></code></example>
      </Docs>
    </Member>
  </Members>
</Type>
