<Type Name="IGenericResources" FullName="Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResources">
  <TypeSignature Language="C#" Value="public interface IGenericResources : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ResourceManager.Fluent.GenericResource.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByGroup&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByGroup&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IResourcesOperations&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IResourceManager&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGenericResources implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.GenericResource.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByGroup`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByGroup`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.IResourcesOperations&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.IResourceManager&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResources" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ResourceManager.Fluent.GenericResource.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByGroup&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByGroup&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IResourcesOperations&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ResourceManager.Fluent.IResourceManager&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point to generic resources management API.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckExistence">
      <MemberSignature Language="C#" Value="public bool CheckExistence (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckExistence(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResources.CheckExistence(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">resourceGroupName the resource group's name</param>
        <param name="resourceProviderNamespace">resourceProviderNamespace the resource provider's namespace</param>
        <param name="parentResourcePath">parentResourcePath the parent's resource path</param>
        <param name="resourceType">resourceType the type of the resource</param>
        <param name="resourceName">resourceName the name of the resource</param>
        <param name="apiVersion">apiVersion the API version</param>
        <summary>
            Checks if a resource exists in a resource group.
            </summary>
        <returns>true if the resource exists; false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResources.Delete(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">resourceGroupName The name of the resource group. The name is case insensitive.</param>
        <param name="resourceProviderNamespace">resourceProviderNamespace Resource identity.</param>
        <param name="parentResourcePath">parentResourcePath Resource identity.</param>
        <param name="resourceType">resourceType Resource identity.</param>
        <param name="resourceName">resourceName Resource identity.</param>
        <param name="apiVersion">apiVersion the String value</param>
        <summary>
            Delete resource and all of its child resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource Get (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource Get(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResources.Get(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">resourceGroupName The name of the resource group. The name is case insensitive.</param>
        <param name="resourceProviderNamespace">resourceProviderNamespace Resource identity.</param>
        <param name="parentResourcePath">parentResourcePath Resource identity.</param>
        <param name="resourceType">resourceType Resource identity.</param>
        <param name="resourceName">resourceName Resource identity.</param>
        <param name="apiVersion">apiVersion the String value</param>
        <summary>
            Returns a resource belonging to a resource group.
            </summary>
        <returns>the generic resource</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveResources">
      <MemberSignature Language="C#" Value="public void MoveResources (string sourceResourceGroupName, Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup targetResourceGroup, System.Collections.Generic.IList&lt;string&gt; resources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveResources(string sourceResourceGroupName, class Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup targetResourceGroup, class System.Collections.Generic.IList`1&lt;string&gt; resources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.IGenericResources.MoveResources(System.String,Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup,System.Collections.Generic.IList{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResourceGroupName" Type="System.String" />
        <Parameter Name="targetResourceGroup" Type="Microsoft.Azure.Management.ResourceManager.Fluent.IResourceGroup" />
        <Parameter Name="resources" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceResourceGroupName">sourceResourceGroupName Source resource group name</param>
        <param name="targetResourceGroup">targetResourceGroup target resource group, can be in a different subscription</param>
        <param name="resources">resources the list of IDs of the resources to move</param>
        <summary>
            Move resources from one resource group to another.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>