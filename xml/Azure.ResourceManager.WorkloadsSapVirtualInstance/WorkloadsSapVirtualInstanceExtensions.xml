<Type Name="WorkloadsSapVirtualInstanceExtensions" FullName="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions">
  <TypeSignature Language="C#" Value="public static class WorkloadsSapVirtualInstanceExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WorkloadsSapVirtualInstanceExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WorkloadsSapVirtualInstanceExtensions" />
  <TypeSignature Language="F#" Value="type WorkloadsSapVirtualInstanceExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.WorkloadsSapVirtualInstance. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAvailabilityZoneDetailsSapVirtualInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt; GetAvailabilityZoneDetailsSapVirtualInstance (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt; GetAvailabilityZoneDetailsSapVirtualInstance(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetAvailabilityZoneDetailsSapVirtualInstance(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityZoneDetailsSapVirtualInstance (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapAvailabilityZoneDetailsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SapAvailabilityZoneDetailsResult)" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityZoneDetailsSapVirtualInstance : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetAvailabilityZoneDetailsSapVirtualInstance (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the recommended SAP Availability Zone Pair Details for your region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getAvailabilityZoneDetails</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetAvailabilityZoneDetails</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetAvailabilityZoneDetailsSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityZoneDetailsSapVirtualInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt;&gt; GetAvailabilityZoneDetailsSapVirtualInstanceAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt;&gt; GetAvailabilityZoneDetailsSapVirtualInstanceAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetAvailabilityZoneDetailsSapVirtualInstanceAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityZoneDetailsSapVirtualInstanceAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapAvailabilityZoneDetailsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SapAvailabilityZoneDetailsResult))" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityZoneDetailsSapVirtualInstanceAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt;&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetAvailabilityZoneDetailsSapVirtualInstanceAsync (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the recommended SAP Availability Zone Pair Details for your region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getAvailabilityZoneDetails</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetAvailabilityZoneDetails</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetAvailabilityZoneDetailsSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapAvailabilityZoneDetailsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiskConfigurationsSapVirtualInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt; GetDiskConfigurationsSapVirtualInstance (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt; GetDiskConfigurationsSapVirtualInstance(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetDiskConfigurationsSapVirtualInstance(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiskConfigurationsSapVirtualInstance (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapDiskConfigurationsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SapDiskConfigurationsResult)" />
      <MemberSignature Language="F#" Value="static member GetDiskConfigurationsSapVirtualInstance : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetDiskConfigurationsSapVirtualInstance (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the SAP Disk Configuration Layout prod/non-prod SAP System.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getDiskConfigurations</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetDiskConfigurations</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetDiskConfigurationsSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiskConfigurationsSapVirtualInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt;&gt; GetDiskConfigurationsSapVirtualInstanceAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt;&gt; GetDiskConfigurationsSapVirtualInstanceAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetDiskConfigurationsSapVirtualInstanceAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDiskConfigurationsSapVirtualInstanceAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapDiskConfigurationsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SapDiskConfigurationsResult))" />
      <MemberSignature Language="F#" Value="static member GetDiskConfigurationsSapVirtualInstanceAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt;&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetDiskConfigurationsSapVirtualInstanceAsync (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the SAP Disk Configuration Layout prod/non-prod SAP System.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getDiskConfigurations</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetDiskConfigurations</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetDiskConfigurationsSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapDiskConfigurationsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapApplicationServerInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource GetSapApplicationServerInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource GetSapApplicationServerInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapApplicationServerInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapApplicationServerInstanceResource (client As ArmClient, id As ResourceIdentifier) As SapApplicationServerInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetSapApplicationServerInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapApplicationServerInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceArmClient.GetSapApplicationServerInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapApplicationServerInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapCentralServerInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource GetSapCentralServerInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource GetSapCentralServerInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapCentralServerInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapCentralServerInstanceResource (client As ArmClient, id As ResourceIdentifier) As SapCentralServerInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetSapCentralServerInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapCentralServerInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceArmClient.GetSapCentralServerInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapCentralServerInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapDatabaseInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource GetSapDatabaseInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource GetSapDatabaseInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapDatabaseInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapDatabaseInstanceResource (client As ArmClient, id As ResourceIdentifier) As SapDatabaseInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetSapDatabaseInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapDatabaseInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceArmClient.GetSapDatabaseInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapDatabaseInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapSupportedSkuSapVirtualInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt; GetSapSupportedSkuSapVirtualInstance (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt; GetSapSupportedSkuSapVirtualInstance(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapSupportedSkuSapVirtualInstance(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapSupportedSkuSapVirtualInstance (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapSupportedSkusContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SapSupportedResourceSkusResult)" />
      <MemberSignature Language="F#" Value="static member GetSapSupportedSkuSapVirtualInstance : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapSupportedSkuSapVirtualInstance (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of SAP supported SKUs for ASCS, Application and Database tier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getSapSupportedSku</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetSapSupportedSku</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetSapSupportedSkuSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapSupportedSkuSapVirtualInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt;&gt; GetSapSupportedSkuSapVirtualInstanceAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt;&gt; GetSapSupportedSkuSapVirtualInstanceAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapSupportedSkuSapVirtualInstanceAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapSupportedSkuSapVirtualInstanceAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapSupportedSkusContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SapSupportedResourceSkusResult))" />
      <MemberSignature Language="F#" Value="static member GetSapSupportedSkuSapVirtualInstanceAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt;&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapSupportedSkuSapVirtualInstanceAsync (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedResourceSkusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of SAP supported SKUs for ASCS, Application and Database tier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getSapSupportedSku</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetSapSupportedSku</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetSapSupportedSkuSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSupportedSkusContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt; GetSapVirtualInstance (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string sapVirtualInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt; GetSapVirtualInstance(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string sapVirtualInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstance(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapVirtualInstance (resourceGroupResource As ResourceGroupResource, sapVirtualInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SapVirtualInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetSapVirtualInstance : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstance (resourceGroupResource, sapVirtualInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="sapVirtualInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="sapVirtualInstanceName"> The name of the Virtual Instances for SAP solutions resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Virtual Instance for SAP solutions resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}</description></item><item><term>Operation Id</term><description>SAPVirtualInstance_Get</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceResourceGroupResource.GetSapVirtualInstance(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="sapVirtualInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sapVirtualInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;&gt; GetSapVirtualInstanceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string sapVirtualInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;&gt; GetSapVirtualInstanceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string sapVirtualInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstanceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapVirtualInstanceAsync (resourceGroupResource As ResourceGroupResource, sapVirtualInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SapVirtualInstanceResource))" />
      <MemberSignature Language="F#" Value="static member GetSapVirtualInstanceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstanceAsync (resourceGroupResource, sapVirtualInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="sapVirtualInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="sapVirtualInstanceName"> The name of the Virtual Instances for SAP solutions resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Virtual Instance for SAP solutions resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}</description></item><item><term>Operation Id</term><description>SAPVirtualInstance_Get</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceResourceGroupResource.GetSapVirtualInstanceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="sapVirtualInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sapVirtualInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource GetSapVirtualInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource GetSapVirtualInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapVirtualInstanceResource (client As ArmClient, id As ResourceIdentifier) As SapVirtualInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetSapVirtualInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceArmClient.GetSapVirtualInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstances">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceCollection GetSapVirtualInstances (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceCollection GetSapVirtualInstances(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstances(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapVirtualInstances (resourceGroupResource As ResourceGroupResource) As SapVirtualInstanceCollection" />
      <MemberSignature Language="F#" Value="static member GetSapVirtualInstances : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceCollection" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstances resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of SapVirtualInstanceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceResourceGroupResource.GetSapVirtualInstances" /> instead.</description></item></summary>
        <returns> An object representing collection of SapVirtualInstanceResources and their operations over a SapVirtualInstanceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstances">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt; GetSapVirtualInstances (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt; GetSapVirtualInstances(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstances(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapVirtualInstances (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SapVirtualInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetSapVirtualInstances : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstances (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Virtual Instances for SAP solutions resources in a Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/sapVirtualInstances</description></item><item><term>Operation Id</term><description>SAPVirtualInstance_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetSapVirtualInstances(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSapVirtualInstancesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt; GetSapVirtualInstancesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt; GetSapVirtualInstancesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstancesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSapVirtualInstancesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SapVirtualInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetSapVirtualInstancesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSapVirtualInstancesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Virtual Instances for SAP solutions resources in a Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/sapVirtualInstances</description></item><item><term>Operation Id</term><description>SAPVirtualInstance_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetSapVirtualInstances(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSizingRecommendationsSapVirtualInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt; GetSizingRecommendationsSapVirtualInstance (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt; GetSizingRecommendationsSapVirtualInstance(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSizingRecommendationsSapVirtualInstance(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSizingRecommendationsSapVirtualInstance (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapSizingRecommendationContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SapSizingRecommendationResult)" />
      <MemberSignature Language="F#" Value="static member GetSizingRecommendationsSapVirtualInstance : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSizingRecommendationsSapVirtualInstance (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sizing recommendations.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getSizingRecommendations</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetSizingRecommendations</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetSizingRecommendationsSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSizingRecommendationsSapVirtualInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt;&gt; GetSizingRecommendationsSapVirtualInstanceAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt;&gt; GetSizingRecommendationsSapVirtualInstanceAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSizingRecommendationsSapVirtualInstanceAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSizingRecommendationsSapVirtualInstanceAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, content As SapSizingRecommendationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SapSizingRecommendationResult))" />
      <MemberSignature Language="F#" Value="static member GetSizingRecommendationsSapVirtualInstanceAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt;&gt;" Usage="Azure.ResourceManager.WorkloadsSapVirtualInstance.WorkloadsSapVirtualInstanceExtensions.GetSizingRecommendationsSapVirtualInstanceAsync (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.WorkloadsSapVirtualInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sizing recommendations.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Workloads/locations/{location}/sapVirtualInstanceMetadata/default/getSizingRecommendations</description></item><item><term>Operation Id</term><description>SAPVirtualInstances_GetSizingRecommendations</description></item><item><term>Default Api Version</term><description>2024-09-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.WorkloadsSapVirtualInstance.SapVirtualInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadsSapVirtualInstance.Mocking.MockableWorkloadsSapVirtualInstanceSubscriptionResource.GetSizingRecommendationsSapVirtualInstance(Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadsSapVirtualInstance.Models.SapSizingRecommendationContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
